cset: moving following pidspec: 18608
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 2.069320715 seconds)
loading group "string"... done (took 0.616128198 seconds)
loading group "linalg"... done (took 9.725829003 seconds)
loading group "parallel"... done (took 0.185137208 seconds)
loading group "find"... done (took 1.558640796 seconds)
loading group "tuple"... done (took 2.21138155 seconds)
loading group "dates"... done (took 1.534084695 seconds)
loading group "micro"... done (took 0.24108263 seconds)
loading group "io"... done (took 0.592152135 seconds)
loading group "scalar"... done (took 48.550308604 seconds)
loading group "sparse"... done (took 14.497371519 seconds)
loading group "broadcast"... done (took 1.272571668 seconds)
loading group "union"... done (took 13.70959661 seconds)
loading group "simd"... done (took 2.72496138 seconds)
loading group "random"... done (took 10.999260734 seconds)
loading group "problem"... done (took 1834.274636715 seconds)
loading group "array"... done (took 27.487157903 seconds)
loading group "misc"... done (took 1.202282146 seconds)
loading group "sort"... done (took 3.966767249 seconds)
loading group "collection"... done (took 20.073307242 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.755502741 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.143060539 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.215215579 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.374813496 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.24178126 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.162746373 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.17152442 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.58239331 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.005282679 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.284456922 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.152388909 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.599124118 seconds)
done (took 6.397213815 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.31567687 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.389447844 seconds)
    (2/2) benchmarking "String"...
    done (took 0.176978893 seconds)
  done (took 1.229858116 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.073576864 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.185961268 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.114058249 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.112054516 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.098923788 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.111392557 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.111628261 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.112810645 seconds)
  done (took 1.501227848 seconds)
done (took 3.78261557 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.551566308 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.944159552 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.575529444 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.176302954 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.201579193 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.179891371 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.319517821 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.158483584 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.11037718 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.107933261 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.220675925 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.395048086 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.502120945 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.077122272 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.09002635 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.126513732 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.095823252 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.757957685 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.082365023 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.139067771 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.59715358 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.114795975 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.113516644 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.125580962 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.20570884 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.133399117 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.164827056 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.091653598 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.758517892 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.106059331 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.232824709 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.084492697 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.18068937 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.257700401 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.079981893 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.106516474 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.758715896 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.182768379 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.116401022 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.099617225 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.752977278 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083813773 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.246724213 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.106806197 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.109884171 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.197213418 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.104170244 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.099387439 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.101570015 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.084086828 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.183642252 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.500156679 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.10523741 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.171167651 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.106881325 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.779772945 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.099214369 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.160163828 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.137593497 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.109436866 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.082840717 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.109174096 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.167214302 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.112594402 seconds)
  done (took 20.79189131 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.160420211 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.167766716 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.092345744 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140882269 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.145684928 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.095827344 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.097038537 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.077862108 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.127444037 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.237487702 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.141638815 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.184508928 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.075467042 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.10127475 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.143256361 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.253502413 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.109179162 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.122022303 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.099305833 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.090255598 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.141951924 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.11151743 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107961792 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094388278 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.184424153 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.206835399 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.106583041 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122214402 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.101521715 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.118495316 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.139713494 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.151709608 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.091596775 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082168252 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.20495252 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.105577087 seconds)
  done (took 5.408524512 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.228283498 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.117141468 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.240696211 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.180509299 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.148640083 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.182630435 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.143496131 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.304863583 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.313591843 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.184910292 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127841869 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.111445165 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077274751 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.095295068 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.093662936 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.717771227 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.182139137 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.15073952 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.150389431 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104157948 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.096098884 seconds)
    (22/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.135740643 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102144993 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.080794327 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.105103376 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.14074291 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.676430082 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.2243901 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103584974 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.378965066 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.119136714 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089771636 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133373075 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.218612147 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.135215266 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.14273951 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085394003 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.097903019 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.222049714 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.173751781 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.091827443 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.094763923 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.127584004 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131425269 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.121098262 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.103077245 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.112612493 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.246193034 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.087681437 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.121947224 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.095694929 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.155635903 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.202364617 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.140971104 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.081349153 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.393570151 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097206021 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.104488 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.097999072 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.325566717 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.141005976 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.080958711 seconds)
    (63/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.098659772 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.077945194 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101746339 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.09396882 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.794237689 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.108144713 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.249200782 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.097598324 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.171065755 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102066224 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.107054884 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100758828 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086469397 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.117345943 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.078636076 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.094935116 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.094031177 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.078456737 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.099572887 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.117561422 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.085223485 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.094400237 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.146682682 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.120843517 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.117713306 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.123517459 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.084737092 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.094278316 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12731869 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081658165 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.098945139 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.173609951 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.104285746 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.104687628 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100110944 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141045693 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.095245643 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.226195999 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.093806748 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.122601516 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099026993 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11143096 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.125398171 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096106857 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098554831 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.076731247 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.096455443 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.146516386 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.096862332 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.080031562 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.103300789 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.11317861 seconds)
  done (took 25.734136468 seconds)
done (took 52.588292439 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.524259307 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.12412642 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.12196963 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.122258204 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.11931146 seconds)
  done (took 1.749380578 seconds)
done (took 2.457296137 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.388393882 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.190634764 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.121464954 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.188346051 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.107505309 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.212838868 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.177347235 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.118809947 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.209797412 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.100493714 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.187122655 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.100823294 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.105603474 seconds)
  done (took 2.9473633 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.098936712 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.125396222 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08414259 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114835858 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078824348 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.114176511 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.111886695 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119310877 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113806695 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.106411777 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.079579513 seconds)
  done (took 1.852437472 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095700674 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.118926891 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08481971 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113215516 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078190379 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113293883 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.110807979 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104836087 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112821321 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090058095 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.096745097 seconds)
  done (took 1.828609545 seconds)
done (took 7.328019935 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.233484493 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 9.87820648 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.154222501 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.207777308 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.403315116 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.256115741 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.654446269 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.17047464 seconds)
  done (took 13.882457622 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.178331641 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.102201102 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.086972443 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.102556515 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.084774296 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.102728662 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.087084961 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.100874768 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.099029138 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.086023253 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.100923941 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.087239036 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.10085131 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.085339981 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.100616902 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.100519462 seconds)
  done (took 2.387243059 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.140558181 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.139665357 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.09283557 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.114348938 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.107161207 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.090851081 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.10932418 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.106882827 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.090473111 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.105224476 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.112046987 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.095889007 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.11103795 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.102845968 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.093882551 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.113291324 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.103356335 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.094335761 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.108763493 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.108777601 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.097706719 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.106530175 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.109988998 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.09596676 seconds)
  done (took 3.358895382 seconds)
done (took 20.339366701 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.183170558 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.100408022 seconds)
  done (took 0.998430474 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.151643012 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.154122654 seconds)
  done (took 1.026759289 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.115393849 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.098857093 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.143705373 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.120580205 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.098931501 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.084306919 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.13808154 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.100325476 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.08443519 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.100473977 seconds)
  done (took 1.809840802 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.089793627 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.10450494 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.113640767 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.151092801 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.097305094 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.104932381 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.104980204 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.088794093 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.106218906 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.100546403 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.094181681 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.124856566 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.107910822 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.246128668 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.090639102 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.108923233 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.11484822 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.106725189 seconds)
  done (took 2.781056934 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.084411603 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.10181508 seconds)
  done (took 0.909318358 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.09090531 seconds)
    (2/7) benchmarking "second"...
    done (took 0.100444154 seconds)
    (3/7) benchmarking "month"...
    done (took 0.088973252 seconds)
    (4/7) benchmarking "year"...
    done (took 0.105241404 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.100293421 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.084686923 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.099825119 seconds)
  done (took 1.392870671 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.556689191 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.280611852 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.383414162 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.123011162 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.146023795 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.404191407 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.14839162 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.116795742 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.118415682 seconds)
  done (took 3.044077344 seconds)
done (took 12.684994513 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.090554826 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.236017144 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.606566292 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.124039241 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.083412478 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.157588462 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.333389657 seconds)
done (took 2.358555542 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.36715536 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.157371102 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.09244812 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.09744524 seconds)
  done (took 1.438695715 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.078255762 seconds)
    (2/2) benchmarking "read"...
    done (took 0.107810956 seconds)
  done (took 0.917024737 seconds)
done (took 3.093898407 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08230225 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.096653911 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.117290239 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.099357713 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.097427149 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.082073362 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.097914423 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.0826853 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.096114524 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.081840873 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.097117234 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080695244 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09595838 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081725797 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096209298 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.081234989 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.096665792 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081778174 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096217757 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.080759097 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096057052 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.095871595 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.081855386 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.096191055 seconds)
  done (took 2.961717838 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.108956345 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.101422652 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.104455861 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.089225776 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.107220328 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.104821428 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.089252374 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.100473574 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.104081468 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.084591982 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106010272 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.10512633 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.085216341 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.106667365 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100090519 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.090073216 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.105781171 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100188931 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085859128 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.106262479 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.104742445 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086809279 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.106940826 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104034231 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.091009853 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106792652 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.084820803 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.101281442 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104706699 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.091071106 seconds)
  done (took 3.702124496 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.091390039 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094290466 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.08263964 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.107625446 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078768934 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.099672085 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.0784014 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095926693 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.098140543 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.082597197 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.099918027 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.081789208 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.094726965 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.084757207 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.101355778 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.08740405 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.116239507 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.095435378 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.079211289 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.099010662 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.086157965 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.095090311 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.082653753 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.098181742 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.082232098 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.095802344 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.082789934 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.097965613 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.083949221 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.097703278 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.100460262 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.087369741 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.097253293 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.09383497 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.103046413 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.083286172 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.104762827 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.0948808 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.084437024 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094759702 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.07965745 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.097592488 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079585211 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.107944339 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.082512523 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.100141931 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.081123976 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.100166548 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.099788833 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.088667537 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.094937261 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.08098097 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.102002516 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.08511809 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.103013033 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.079981777 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.10073228 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.080803233 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.101623312 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.099348412 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.080160852 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.095180561 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.088335557 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.101078152 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.105946322 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.108498777 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094886433 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.085423171 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.100209101 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.089058259 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.10233918 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.115572035 seconds)
  done (took 7.44980923 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.099716089 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.112416005 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084213057 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100467304 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099582948 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.084270446 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.107448808 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082857865 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10111582 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.108312151 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084252656 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.100304936 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085596831 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100858962 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084768273 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.101296111 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.109709972 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083947714 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.100107468 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085675497 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101501262 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.107674596 seconds)
  done (took 2.866483845 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.266838336 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090660365 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.154529867 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.118256608 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.123979548 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.1192726 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.087625767 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.105776065 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10355656 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095055881 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111679009 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105600245 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.121671125 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095271427 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111765749 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.112926539 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088198168 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.112023836 seconds)
  done (took 2.867483552 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.100939999 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.104236086 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.126131933 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.087113977 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.103194457 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.086155411 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.11322005 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.119295701 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.101965439 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.088465999 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.117281242 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104406406 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.089599822 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107250447 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08950498 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.105845915 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.104868385 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087995317 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11479695 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.111096231 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.094881799 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113558171 seconds)
  done (took 3.018770909 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10422299 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102694315 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.141411659 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.090748689 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.101584269 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.100260897 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.09286632 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.104840326 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.094768389 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.102536531 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101932511 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084819109 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.112206901 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.102848209 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.094022202 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.104630876 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.087672857 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.103977198 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101043704 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.085874422 seconds)
  done (took 2.761651932 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.182880332 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10247521 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.118376638 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.133151535 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117855785 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.102714539 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.13281961 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.119745955 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104747877 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.13734094 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.119107348 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.117201404 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.13239936 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111931473 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.118915676 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.134018445 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.132183994 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.133031528 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104671402 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11760883 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.137202088 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.100979645 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.132607593 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.118546272 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.117637839 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101831127 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118553102 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.127796028 seconds)
  done (took 4.179548615 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084316656 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098052605 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.083936657 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.09932923 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.083685619 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.100708323 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.083448431 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.098724073 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082347896 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098727804 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.084470705 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.099371018 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.084039881 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.099139803 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083099081 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.098900329 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082258641 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.09865034 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098383164 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083446608 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.099285494 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083129374 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.09776538 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084475466 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09919032 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.084160548 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0996381 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083297692 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099263237 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084754036 seconds)
  done (took 3.489946947 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.097492053 seconds)
    (2/2) benchmarking "in"...
    done (took 0.12736363 seconds)
  done (took 0.979234496 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.093557437 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.122054287 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.082737583 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.101300965 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.113721171 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.08577931 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.114325542 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.111618778 seconds)
  done (took 1.579650903 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.15285192 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.153185004 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.090530848 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.11526585 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.153124228 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.145486238 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.171807317 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.107619686 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.088070519 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.097845606 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.150219145 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.079737465 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.107911776 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103677989 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090947937 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.113923535 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.101420819 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.096971133 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.110548219 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.086434079 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.107621921 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116176882 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093379765 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.112964544 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.100237598 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093906562 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.113291705 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.114680973 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08632777 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.112358625 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088566531 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.102483055 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.107208214 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.090159799 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.102252628 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.152698763 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117393175 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086569581 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.108773768 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09155921 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.113588297 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.102643987 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.092776233 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.106056074 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110229022 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.091299266 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.108221902 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.085511142 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.098580623 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084326574 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.103060178 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101528295 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.084615395 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108235068 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.091424115 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.119031391 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.103717981 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.084754735 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.102997822 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.100831875 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088937035 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.103077811 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091721484 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.115679165 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108587748 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.090592296 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107172833 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.102761493 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.088053824 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.102944523 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.091790483 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.12516236 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.112185856 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.091115004 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108233522 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.102538215 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087094709 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.109662426 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08926553 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.110198775 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.106863663 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.09422437 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110731297 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102260553 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.085715497 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.109600564 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.086595578 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.105726504 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.081405619 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121386971 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.104650879 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.085928945 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.098435218 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.110370698 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085925215 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.105500491 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081593579 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109007243 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.099798442 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.091544782 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108776263 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087835731 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.112953662 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.109753046 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.092239442 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.109313498 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.148286628 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104285758 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.084529217 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.105544583 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.091286575 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.103090779 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092646657 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.10210067 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105058069 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.086985582 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.110178688 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.110414004 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.086591727 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.107701537 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093372732 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.112599928 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.104827347 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.084892353 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.103434241 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.089779063 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.113735284 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.112095577 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.087601144 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.10360149 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.086005596 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.108789754 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.107943913 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.089292824 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108860936 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.086944735 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.103132328 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.104449339 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.090985461 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.112153384 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.08623694 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.105875057 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.110143856 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.089080218 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.105963614 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.110232363 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.084210875 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.098506999 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.091765167 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.103749083 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.103818435 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.096101673 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.104406736 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.087181823 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.105335233 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.114182071 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.08607052 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.109658628 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087106623 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.109504737 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.11133945 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.080964665 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104961999 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.08779366 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.113183706 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.103721955 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.086957974 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.102712225 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.092106537 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.100340696 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.107067789 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.081159376 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.104240558 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.092418663 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.104554995 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.088809297 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.103511701 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.121327141 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100128412 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.110481284 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.108296551 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.094429303 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.107917902 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.105810158 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.0893419 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110748412 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.091198155 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.110462589 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.107763 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091754581 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.105183083 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.090770599 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106333855 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110967911 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.082771351 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.104255306 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.081190912 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.109108909 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.094456466 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.107721726 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.110496511 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087627908 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.107638411 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.113932398 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.086466609 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.108710573 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081554131 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.109414849 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.096472088 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.109768276 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110425223 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095699553 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106076265 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.086237781 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.11459168 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.106006898 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.090792766 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.105299751 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.082696033 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.101116376 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.110107291 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.089771865 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.103148628 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.084870887 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110587081 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.111812654 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.088438343 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.101258504 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.091494396 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115996763 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.102256095 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091775603 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.105789909 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.109104424 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.102593383 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.101355978 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.08707537 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.113012292 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.109323991 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.085508444 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.109873773 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.088671068 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.110160978 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.106221507 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.088285207 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106256882 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.093289607 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.10741389 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.103064196 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.086266159 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.107025924 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.082824768 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.106225408 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.093100827 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.106056668 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.105665776 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098386011 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111236677 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.110999496 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089705754 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.109280707 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.092675625 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.110606172 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106567262 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.092022154 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.10396337 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.082177097 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.106735746 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.10075569 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.086906435 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.104115836 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.091683762 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.10689858 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107369303 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.089953772 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.112719192 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.088999966 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.109831192 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.129233481 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.101940995 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.083665513 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107186344 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089840591 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.104264457 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.104454952 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.086504453 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112780006 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.090887119 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.11144767 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.10495961 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.084743376 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.111479366 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.086988785 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.113196294 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.11104124 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.093746489 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.104739342 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.090700857 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.105526759 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115264147 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.083960831 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.113649648 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108557682 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089431367 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.105263028 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.08955753 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.104912786 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.1005823 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.089270217 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.111416256 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.089384755 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.109173254 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.108422444 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.088201053 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.105396292 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085521588 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.111325436 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.106147222 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.094166588 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.104529019 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.082477984 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.102048405 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.09215669 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112149645 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.110954296 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.085891437 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.108248829 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.094384132 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.107690603 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.103936848 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.09644444 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.114314076 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.09214793 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115816754 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.102069882 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.087763345 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119581266 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.103812883 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.089384859 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.106776346 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.083572014 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.11312139 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.093106085 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.11334437 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.107123882 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.082854189 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.105923193 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.092471491 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.106791316 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.108007806 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.087544744 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.109344228 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.085085603 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.109391663 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.09196284 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.108527083 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.111826247 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092180838 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.109292651 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.106281724 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.09315907 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.104190137 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.083296101 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.101955109 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.087128225 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.111964007 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.10259128 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.090997212 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.109780049 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.088032985 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.107207226 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.089490177 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.106036494 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.11246468 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.091330504 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.106784446 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.116590382 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.0866973 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.107309323 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.09094494 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.111036289 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.083239671 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.108099172 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108046234 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.094453452 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.112282967 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.110254471 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09132442 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109961231 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.088337732 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.111009604 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.092237175 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.112070632 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.101525919 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.094655292 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114277447 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.087853528 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.106811758 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107453985 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.085618558 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.109248833 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.094158684 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.108483441 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.115212494 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.093719152 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.107137216 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.11076115 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.093187577 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109131822 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.09374078 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.105639527 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113637403 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.084177823 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.115283232 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.088385343 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.112659493 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.105017477 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.084228281 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.11018197 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.092067494 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.109999523 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.112992535 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.093329212 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.102152147 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.083728552 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.106899437 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.107822422 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099186574 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.114387076 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.088172621 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108252532 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.10921363 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.087285898 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.114742966 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.083927884 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.106077152 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.110290963 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092998277 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.108852077 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.085240586 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.109337609 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.113781421 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093487809 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.109947307 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.083494502 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.109139625 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.113158935 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.087428088 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.104340441 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.105913916 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.094480896 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.110254046 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.087176324 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.103295166 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.117824531 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.09418905 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.113865194 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.106427987 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.092307031 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.106630141 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.089921446 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.113133675 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.089738489 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109514913 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.107616639 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.091160051 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119880732 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.102885982 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.087464549 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.120612928 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.090568567 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.114608314 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.10802738 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.091171946 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.113838279 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.113227066 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.089185417 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.103661644 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.084993053 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.107753463 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.084647586 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.107425008 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11933011 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.09535981 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.10821325 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.091027612 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.108839574 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.107396694 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.089024008 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.10348939 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.09447499 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.106704165 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.117272436 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.08364991 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.104338686 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.089212648 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.112219524 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089918244 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.110483084 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.107307224 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.089369916 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.104223093 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.089035676 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.116548257 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.109273775 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.093061142 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109815389 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.08862536 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.108350854 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.119144914 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.087367344 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.109968132 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121602652 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.09453611 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.111047719 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.092832858 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114978186 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.114299574 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.089200131 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.11361718 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.108357354 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.090082196 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.114196035 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.095407338 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.126362116 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108926076 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.08416182 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.110761782 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.088006545 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.103817288 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.116306871 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.096801971 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.113290683 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.110821926 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.086844382 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.114099159 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095659071 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.1119683 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.108609481 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.090116825 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.111467111 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088414652 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.11000018 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.105946852 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.094459048 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.113698912 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.092239036 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.114601521 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.104399226 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101799931 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.116079418 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.114609728 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.086724205 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.103601939 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.085029503 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.109066192 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.09458657 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.113279864 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.089289369 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.109501364 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.110241731 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.091607251 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110487065 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.089679795 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.113743037 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.112106952 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.086683799 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.11296432 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.089418253 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.112949982 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.106236171 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.093295764 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.114250642 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.09343439 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.117975596 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.114344607 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.089988957 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.107171432 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092357924 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.109247 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.111044554 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.09146443 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.107601901 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.085473608 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.11180808 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.114357986 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091317141 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.113852834 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.0968272 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.108563848 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.113648324 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.097525455 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.111360231 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.087980903 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.113443788 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.108964932 seconds)
  done (took 61.556632181 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.167536225 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.097301373 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110264574 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.088894141 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.138605273 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109936684 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.108166401 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.091690526 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.110876703 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.103185001 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.10972177 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.1090071 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.133235311 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140847575 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.137508238 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.105623291 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108936169 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.110774305 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.089868383 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110562372 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.132453918 seconds)
  done (took 3.215923689 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.115061586 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.128314527 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.128042045 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.131919195 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.119887476 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.106817028 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.128076711 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.126032425 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.131696353 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.122738525 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.130073568 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.12606638 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.103011578 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.121927948 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.123089164 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.122747175 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.110846775 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.119012291 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.127800629 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.128126673 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.122317065 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.108296777 seconds)
  done (took 3.483167452 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.098093521 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.112127778 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.094341093 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.108511316 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.091793822 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.108892405 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.117717397 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.088263545 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.117963876 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.090099816 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.105950209 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.088479664 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.113820336 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.107844866 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.086967842 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.109178667 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.098949487 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.112624264 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.094157618 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.108552026 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.133320895 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.107873106 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.089085838 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.106334328 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.102151693 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.114330141 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.093016107 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.112125275 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.104474472 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.091805512 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.107926461 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.091613714 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.111958742 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.085360367 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.105563688 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.111212543 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.092996397 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.10830027 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.089015935 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.112909622 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.088866925 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.113676395 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.117172173 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.088332756 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.109048834 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.090084155 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.111780367 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.108215595 seconds)
  done (took 5.760443108 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.154162903 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.171287742 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.119647157 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.15948068 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.13634989 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.105120165 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.115285599 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.16174869 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.116418933 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.09450347 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.137534469 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.135467492 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.122284945 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.125511383 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.099789571 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.117294461 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.120391696 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.098356031 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.126379713 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.115643653 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.123810412 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.105722639 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.135807177 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.134111039 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.120180606 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.095523711 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.120436707 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.125967872 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.133363767 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.105220209 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.12296483 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.126104917 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.134160617 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.122234991 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.095748471 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.122079904 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.139126906 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.117874203 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.098317 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.114941307 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.101731299 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.126705543 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.119221609 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.136407734 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.119209842 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.10276533 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.116855143 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.112991897 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.115958757 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.122756405 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.129279706 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.136707351 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.120077437 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.098813344 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.126355352 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.139757963 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.118934946 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.095602467 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.119300431 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.135885152 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.09570422 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.119712836 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.137991968 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.121282748 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.107317015 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.134945971 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.12092789 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.119925508 seconds)
  done (took 9.218487331 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.12696661 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.121244147 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.135604905 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.135510611 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.120685363 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.101504178 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.120948083 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.119794721 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.100452088 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.129876341 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121650851 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.209349818 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.11659487 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.128441298 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.101836418 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.122221637 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.121309258 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.120337755 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.100663422 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121647759 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.121063023 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.134373849 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.100858507 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.135929957 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.136714157 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.116871434 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.100954606 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.121901836 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.136181909 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120979552 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.13883123 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.100948862 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.120488287 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.136166022 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.138252514 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.12202125 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.093265204 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121917396 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.120541151 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.100009464 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.117311861 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.135164156 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.120455983 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.097008137 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120112249 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.121274573 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.136072314 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.14045339 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.108966965 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.130534152 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.120992006 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.13536015 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12160226 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.10095102 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.13492566 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.146130104 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.135986638 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.135201186 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121679346 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.136218455 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.135814495 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.146729052 seconds)
  done (took 8.509186889 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089939146 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.109339448 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.090480682 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.109764706 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090481923 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110722742 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.09003608 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.110165645 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.091006535 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.110047846 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088884674 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109816007 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08941329 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110062813 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090023703 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110418978 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090010608 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.110735105 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108795164 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.089858337 seconds)
  done (took 2.816079412 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.102396313 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.134637299 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.11437761 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.10422346 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.115214056 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.123332549 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.092352603 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114703866 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.114079055 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093471948 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.127460914 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.126766709 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093766797 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.123996981 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.12653919 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.123230896 seconds)
  done (took 2.651108094 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.117811678 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.136343807 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.17189501 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.117128637 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.114581928 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.101007679 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.114745434 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.095373016 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.11338631 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.120417874 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.097188146 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.117319529 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.093011782 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.113945153 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.114945222 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.098101047 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.112037569 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.098317428 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.114934817 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.171249777 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.12276306 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.095985416 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.117713785 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.118202089 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.09755569 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.121307449 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.121885122 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.094665355 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.116212156 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.114958645 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.098113656 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.124776741 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.113860844 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.10158625 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.114104144 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.095662837 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.114391893 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.11469699 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.098150474 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.113552318 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.094697611 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.117851976 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.114362765 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.096722789 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.112691786 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.094267089 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.111878341 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.121446471 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.095981197 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.118431595 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.093461562 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.121157062 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.119483707 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.103701028 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.1257119 seconds)
  done (took 7.005702472 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107488677 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.116889171 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.129785197 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.091166852 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.116590848 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.095541765 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.116187904 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.116887698 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095787737 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.110472183 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096571432 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.115560437 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.11715503 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.095867849 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.117246361 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095921682 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.111427715 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.116374024 seconds)
  done (took 2.788817483 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.100387212 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.11466942 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.099151835 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.115445677 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.092666018 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.115757004 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.112657925 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.091176948 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112435039 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.093179392 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.114846432 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.092423895 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112924596 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.112649268 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.094345203 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.1136568 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.093295514 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11207122 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.114193114 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092577634 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.112839609 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091315656 seconds)
  done (took 3.129032455 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.106596619 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.171145146 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.12469792 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.181570041 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.114080267 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.112134655 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.10378472 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.114395731 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.131745228 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.091515415 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.110844918 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.090167295 seconds)
  done (took 2.281731724 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123522977 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.158424613 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.116151983 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093369736 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129819381 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121182997 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120482042 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10098404 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132590276 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.138175756 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121539332 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133449893 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111730687 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135515557 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126930875 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127894777 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121207255 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10070402 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115268286 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145820927 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120566938 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133921779 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100310198 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122035206 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121555439 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136054783 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113216254 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139250682 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121452373 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134395222 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128348576 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100443172 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135393909 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137579394 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114305754 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133641049 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100923729 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.167885966 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107477753 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135648063 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.113732536 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129177866 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113136218 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131404672 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134604118 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121086522 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130983928 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101307771 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120933781 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.154063279 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128544 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136220068 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129028081 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135207341 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134454631 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.154461826 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140045535 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137660587 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108018609 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139221945 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136827543 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129956786 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136494505 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139197953 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12995083 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139615024 seconds)
  done (took 9.219629086 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.164580836 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.096993588 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122922847 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.140136395 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137702575 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100999102 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121370378 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121439903 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10128963 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117727893 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.17623253 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120854114 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137588578 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136699032 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121538943 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101521618 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122364595 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13670716 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096483014 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.17427898 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100578314 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135894741 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136349835 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136952442 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138840557 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129648119 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100368663 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123111591 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121815298 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121352397 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109503412 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121605758 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135524786 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.116133933 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135340627 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101179043 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121751042 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130982283 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100764175 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129418113 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13705173 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.147718189 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122054949 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121870546 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140018442 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101846402 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122216922 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11783059 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101754927 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1168954 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141324308 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139048556 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139564081 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136080981 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101395449 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122044636 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122644404 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101551488 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122499084 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128851854 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136811236 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100594383 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.175840532 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101698829 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123463716 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137424734 seconds)
  done (took 9.092334055 seconds)
done (took 167.315749035 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.15640639 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.177146293 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.153512442 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.151089801 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.109123539 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.122505228 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.143707214 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.154689787 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.108539742 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.087567672 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.108627573 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.091632981 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.176258509 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.087626297 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.10893801 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.112113981 seconds)
  done (took 2.882709896 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.210361652 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.305100548 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.130374081 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.1139791 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097958022 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.112443954 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.091271681 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.115616964 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.110079183 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.103904875 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.111971398 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.090791961 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.125694783 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.112295371 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.089216323 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.111798782 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.124867925 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.090668621 seconds)
  done (took 3.085958667 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.116703724 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.164045627 seconds)
  done (took 1.124929915 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.129267904 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.218730834 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.297663316 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.172930206 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.141435551 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.137713836 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.173072961 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130678168 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.207008978 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.136033794 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.136325854 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.095122482 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.144512579 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.123782257 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.106445439 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.116633027 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.147115527 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.104907539 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.375550475 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.118610117 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.139309886 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.096766653 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.122853773 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.125082939 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.195976841 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.135439012 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.097166627 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.11761768 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.118130996 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.103295995 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.123560761 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.136406476 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.13490748 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.185383324 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.123611209 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.199741028 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.105355313 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.116641178 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.124846662 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.095434788 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.120591743 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.120772912 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.112931286 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.116257326 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.116907803 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.104827328 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.118245231 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.118361006 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.105416887 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.128056673 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.125881748 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.124334358 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.183066439 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.128746469 seconds)
  done (took 8.377804322 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.920695374 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.1598814 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094105091 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.0508942 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.148409085 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.132400903 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.928779484 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11820339 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.284227151 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.919564316 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.135152457 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.108259567 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.29067604 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.276518466 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.194089149 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.397076151 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.761575927 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.13128037 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.146820968 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.168262544 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12341438 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.148619166 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.115514896 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.475931759 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.096065465 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.116753643 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.121439972 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.108193625 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.204214118 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.092587415 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.119843213 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.226036109 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.286845365 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.233093344 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.117498532 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091906781 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113481003 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.188243669 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.303113104 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.272405941 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.188486937 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089002998 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.114132037 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.129018911 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116143507 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.11225858 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.206661294 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.198333499 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.218926587 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097888302 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.129552715 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.125530717 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.127862052 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.185534665 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.111732017 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.376444205 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.379804028 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113822901 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104483558 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.136812714 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.298014918 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.11497509 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.261563935 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.143596608 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.245411121 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112998166 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.818129672 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.18921571 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.113832098 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.102454746 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.125465753 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122141521 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.128084674 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.183146016 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.397040512 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.131702531 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.098455831 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11512104 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.2809381 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.092325506 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114377933 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.185041872 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117952318 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.124612301 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.110967891 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.131817228 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.213465998 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.272161746 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.131994699 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.125205744 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.098571552 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.131033652 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.118338448 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.237062074 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.25425251 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.202443844 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.255840364 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.107469194 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.207823039 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.187350232 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129598102 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.216147503 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.102582776 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.136273439 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131069719 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.253286275 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.157288452 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.115475504 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.099549956 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.12371357 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.160261436 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.117853207 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.123309683 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.191314743 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.515273534 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.188364526 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.113261142 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.096552594 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125909776 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.182486488 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123955078 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.295254957 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127267962 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.189009984 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.125538612 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.111370094 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.103478402 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.212011906 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.131528355 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125136759 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.10679815 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125632238 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.272325788 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.27631359 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.111289342 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.269396583 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.191833344 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.127206508 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.218668816 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.102676054 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.213875125 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126347122 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106951628 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118206457 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.815050293 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.130507067 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.124601067 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099943725 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.210072199 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.116461926 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.114611396 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.092143977 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.111139445 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.846697971 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.095025102 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.113572485 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.093415614 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.125671481 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.124037844 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.0993159 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.12167409 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.204519647 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.271181529 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.128913796 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102454326 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.11515817 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.181947678 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.117420416 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.115355675 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.092454453 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.115600449 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.102883527 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.12039643 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.116138779 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.196186955 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.202022441 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.25600185 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.578672796 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092674892 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.114597407 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.265465326 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115146855 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.34241552 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124747931 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.263446476 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.190014162 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.11203547 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.374470046 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.214453705 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.212655558 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.09583006 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.218250245 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088938436 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.122943205 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.210549965 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093327471 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124644233 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.18083026 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.134019171 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.132431488 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.199754937 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.114729106 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.249135817 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.112174787 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.192594809 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118338195 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.128622798 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.347911366 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.092211344 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138601537 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.205351989 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098640044 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.116094079 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.760524598 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.093265436 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.129034352 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.126742973 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.261536922 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.209296111 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.103114201 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125950211 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.128637927 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.183299505 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.256423826 seconds)
  done (took 48.407214632 seconds)
done (took 64.716136006 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.333806681 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.288048876 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.34413573 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.239272866 seconds)
  done (took 2.154307535 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.239522772 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.165375024 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.219542314 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.091223591 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.229604876 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.091227442 seconds)
  done (took 1.904018719 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.549275931 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.449290936 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.382107046 seconds)
  done (took 2.253917026 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.273026461 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.277326689 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.372719441 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.505993037 seconds)
  done (took 2.432388871 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.290647037 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.115828526 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.132231136 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.186741435 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.25903511 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.284330241 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.161769177 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.208558477 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.119531921 seconds)
  done (took 2.680227588 seconds)
done (took 12.296618079 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.184789386 seconds)
    (2/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.383944543 seconds)
    (3/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.257430646 seconds)
    (4/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.256911192 seconds)
    (5/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.171472643 seconds)
    (6/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.167111015 seconds)
    (7/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.134223205 seconds)
    (8/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.307925616 seconds)
    (9/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.133767843 seconds)
    (10/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.101652684 seconds)
    (11/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.124279935 seconds)
    (12/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.225336451 seconds)
    (13/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.274272302 seconds)
    (14/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.335063706 seconds)
    (15/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.169769911 seconds)
    (16/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.290067653 seconds)
    (17/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.265247571 seconds)
    (18/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.134170939 seconds)
    (19/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.088550971 seconds)
    (20/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.229845317 seconds)
    (21/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.124511715 seconds)
    (22/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.283477837 seconds)
    (23/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.235212296 seconds)
    (24/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.111753814 seconds)
    (25/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.098251119 seconds)
    (26/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.10675527 seconds)
    (27/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.097673695 seconds)
    (28/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.106961587 seconds)
    (29/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.195042724 seconds)
    (30/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.233437871 seconds)
    (31/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.152541342 seconds)
    (32/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.139647801 seconds)
    (33/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.206106777 seconds)
    (34/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.15792875 seconds)
    (35/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.155404316 seconds)
    (36/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.082779562 seconds)
    (37/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.171013853 seconds)
    (38/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.31804291 seconds)
    (39/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.091149735 seconds)
    (40/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.125922553 seconds)
    (41/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.097956695 seconds)
    (42/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.183164409 seconds)
    (43/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.226452554 seconds)
    (44/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.137206026 seconds)
    (45/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.15356871 seconds)
    (46/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.161060525 seconds)
    (47/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.143512546 seconds)
    (48/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.13138644 seconds)
    (49/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.317462304 seconds)
    (50/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.184660191 seconds)
    (51/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.225742373 seconds)
    (52/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.151879032 seconds)
    (53/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.170967523 seconds)
    (54/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.107100542 seconds)
    (55/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.214677613 seconds)
    (56/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.20286778 seconds)
    (57/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.189912591 seconds)
    (58/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.216820941 seconds)
    (59/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.240909036 seconds)
    (60/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.169407573 seconds)
    (61/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.124624216 seconds)
    (62/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.232435936 seconds)
    (63/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.106903348 seconds)
    (64/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.11215762 seconds)
    (65/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.155895163 seconds)
    (66/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.134413295 seconds)
    (67/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.234279079 seconds)
    (68/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.15888119 seconds)
    (69/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.134579017 seconds)
    (70/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.214221786 seconds)
    (71/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.109549461 seconds)
    (72/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.213902335 seconds)
    (73/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.105282625 seconds)
    (74/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.098707386 seconds)
    (75/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.123788491 seconds)
    (76/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.131746286 seconds)
    (77/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.177581615 seconds)
    (78/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.123150962 seconds)
    (79/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.114598842 seconds)
    (80/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.098317459 seconds)
    (81/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.111546162 seconds)
    (82/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.202445802 seconds)
    (83/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.099776978 seconds)
    (84/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.136112256 seconds)
    (85/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.227599988 seconds)
    (86/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.112113834 seconds)
    (87/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.112068896 seconds)
    (88/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.128915273 seconds)
    (89/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.205117114 seconds)
    (90/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.173990275 seconds)
    (91/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.1272196 seconds)
    (92/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.084242353 seconds)
    (93/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.108284847 seconds)
    (94/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.142782408 seconds)
    (95/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.08363448 seconds)
    (96/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.201185851 seconds)
    (97/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.209942786 seconds)
    (98/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.099556245 seconds)
    (99/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.1930758 seconds)
    (100/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.135497288 seconds)
    (101/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.170037666 seconds)
    (102/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.085159211 seconds)
    (103/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.122873408 seconds)
    (104/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.098735813 seconds)
    (105/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.154560179 seconds)
    (106/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.138414268 seconds)
    (107/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.147084832 seconds)
    (108/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.197273026 seconds)
    (109/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.123377613 seconds)
    (110/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.083873135 seconds)
    (111/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.081141783 seconds)
    (112/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.137358926 seconds)
    (113/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.121885222 seconds)
    (114/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.090632893 seconds)
    (115/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.124124144 seconds)
    (116/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.083973241 seconds)
    (117/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.126252945 seconds)
    (118/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.083385218 seconds)
    (119/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.105642715 seconds)
    (120/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.109568629 seconds)
    (121/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.169673138 seconds)
    (122/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.124465419 seconds)
    (123/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.209557716 seconds)
    (124/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.083900586 seconds)
    (125/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.123353202 seconds)
    (126/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.197827333 seconds)
    (127/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.137807384 seconds)
    (128/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.10587705 seconds)
    (129/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.08286878 seconds)
    (130/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.120494601 seconds)
    (131/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.083955082 seconds)
    (132/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.126339067 seconds)
    (133/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.084998221 seconds)
    (134/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.168676403 seconds)
    (135/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.084055492 seconds)
    (136/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.123477387 seconds)
    (137/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.148227774 seconds)
    (138/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.099937324 seconds)
    (139/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.122814462 seconds)
    (140/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.09429105 seconds)
    (141/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.108463592 seconds)
    (142/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.083178419 seconds)
    (143/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.106142744 seconds)
    (144/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.109134301 seconds)
    (145/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.124481068 seconds)
    (146/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.12426316 seconds)
    (147/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.099473097 seconds)
    (148/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.119672287 seconds)
    (149/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.100926885 seconds)
    (150/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.121361484 seconds)
    (151/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.084285014 seconds)
    (152/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.124049051 seconds)
    (153/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.083716453 seconds)
    (154/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.107122288 seconds)
    (155/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.084819036 seconds)
    (156/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.132833971 seconds)
    (157/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.155891335 seconds)
    (158/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.113279946 seconds)
    (159/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.106338516 seconds)
    (160/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.113738452 seconds)
    (161/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.126596498 seconds)
    (162/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.106676342 seconds)
    (163/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.110219889 seconds)
    (164/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.125295368 seconds)
    (165/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.099115208 seconds)
    (166/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.200081157 seconds)
    (167/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.108172618 seconds)
    (168/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.103941025 seconds)
    (169/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.107457253 seconds)
    (170/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.083524268 seconds)
    (171/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.107874636 seconds)
    (172/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.107760665 seconds)
    (173/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.13823484 seconds)
    (174/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.134305594 seconds)
    (175/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.09881518 seconds)
    (176/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.106199939 seconds)
    (177/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.139476902 seconds)
    (178/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.116334025 seconds)
    (179/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.090241163 seconds)
    (180/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.114261891 seconds)
    (181/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.083151936 seconds)
    (182/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.089183036 seconds)
    (183/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.116237479 seconds)
    (184/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.133893839 seconds)
    (185/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.083136303 seconds)
    (186/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.115379165 seconds)
    (187/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.099568165 seconds)
    (188/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.10768916 seconds)
    (189/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.10137183 seconds)
    (190/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.123584577 seconds)
    (191/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.089324858 seconds)
    (192/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.137496219 seconds)
    (193/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.107638857 seconds)
    (194/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.084108954 seconds)
    (195/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.121103268 seconds)
    (196/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.099196758 seconds)
    (197/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.123472503 seconds)
    (198/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.082994537 seconds)
    (199/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.128706312 seconds)
    (200/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.146349884 seconds)
    (201/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.142359438 seconds)
    (202/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.123716554 seconds)
    (203/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.083270198 seconds)
    (204/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.109288222 seconds)
    (205/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.090911373 seconds)
    (206/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.108135237 seconds)
    (207/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.082995475 seconds)
    (208/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.152189475 seconds)
    (209/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.137377409 seconds)
    (210/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.099288081 seconds)
    (211/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.108370841 seconds)
    (212/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.10018937 seconds)
    (213/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.158909415 seconds)
    (214/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.123474236 seconds)
    (215/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.082879925 seconds)
    (216/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.134099428 seconds)
    (217/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.107762679 seconds)
    (218/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.124242944 seconds)
    (219/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.115254849 seconds)
    (220/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.084775752 seconds)
    (221/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.083742027 seconds)
    (222/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.108644948 seconds)
    (223/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.084626967 seconds)
    (224/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.106401944 seconds)
  done (took 32.330277149 seconds)
done (took 33.213044557 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.511796712 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.133626636 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.103303239 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.127624302 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.185391125 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.130624244 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.112624389 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.132556264 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.132719489 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.099980468 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.117063368 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.10838715 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.127973726 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.186796828 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.132080071 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.096190613 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.121033843 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.133148394 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.111471158 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.137218322 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.183282468 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.122670899 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.108959383 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.121136442 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.186009931 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.12196432 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.103768356 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.128667332 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.133161135 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.10125213 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.127696094 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.095988926 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.136706385 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.136245199 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092760769 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.125553854 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093501036 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.115857294 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.126824951 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.102719627 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.134307391 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.102033155 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.130337062 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.12185134 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.101111187 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.125762294 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092827223 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.132384188 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.118491723 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.103421945 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.120076297 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.13763144 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.100967515 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.117337162 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.093024598 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.120467748 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.133282379 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093309524 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.133455227 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093030976 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.12127859 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117955278 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.102772759 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117707839 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.099809373 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.119744219 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.123922653 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.103883088 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.124607536 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09645238 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.118346417 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.12338372 seconds)
done (took 10.002530044 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.099837362 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.181296592 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.187311244 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.194053971 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.152906598 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.138334794 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.140826296 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.151117271 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.111832292 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143598391 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.158629268 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.150629113 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.193280548 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.133579752 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112000267 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.127221573 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.133933949 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.107388012 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.193217239 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.147959637 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.15635292 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.134618209 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.158328882 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.118160763 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.12645863 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.150443753 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.128625065 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.10349836 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.127340106 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.142907613 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.120986427 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.127842866 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.12838633 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.123090738 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.138322748 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.13176788 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.112699918 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.127371226 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.124779786 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.100491938 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.140891841 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.14400085 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.099348763 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.137477428 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.127400081 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.108000504 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.134588315 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.134168898 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.103663849 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.12914789 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127642896 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.132080037 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.134461715 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.133872305 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.133663206 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.107167698 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.133249911 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.10747884 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.129968237 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.132338157 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.100354663 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.126734822 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.128238419 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.153707619 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.103302493 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.134595713 seconds)
  done (took 9.738468569 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.121180428 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.160705139 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.136042729 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.136896759 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.108973219 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.115827614 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.090581139 seconds)
  done (took 1.800922719 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.09389281 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.187553406 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.186607862 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.188151814 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.208161601 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.19796337 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.140430615 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.093322167 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.158036286 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.130175174 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.188583691 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.221118581 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.127492392 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.111921267 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.217186219 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.09268298 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.190735966 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.119211765 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.132157939 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.187457346 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.110952045 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.151082915 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.133736282 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.117417883 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.183145094 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.095019011 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.269761623 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.110358423 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.125739884 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.102967161 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.133384566 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.204098583 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.182053022 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.13740758 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.122787633 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.185362876 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.183740137 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.132574095 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.200084843 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.097829421 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.1821314 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.132025648 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.13210944 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.107831164 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.132352998 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.168364594 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.137145847 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.107787982 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.129917157 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.188417307 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.132448076 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.184692454 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.102231247 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.132844365 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.130974197 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.108645586 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.138931576 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.132053907 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.191710311 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.135421459 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.183900103 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.183883139 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.183643283 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.183616644 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.142315154 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.186470336 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.182605128 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.129356915 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.10214067 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.132355388 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.185375339 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.1314782 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.107499468 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.170760233 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.135820101 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.18329844 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.184148238 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.129042424 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.108626787 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.124551824 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.12842379 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.095035497 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.17088077 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.135271392 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.102860364 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.140510582 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.134321911 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.106170366 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.125119989 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.146459386 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.130397623 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.108044294 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.137144231 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.130842466 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.112293754 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.212150414 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.108121881 seconds)
  done (took 15.194995904 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.096539154 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.119814486 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.100851815 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.121854063 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.096293947 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.121582426 seconds)
  done (took 1.610639909 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.128681878 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.134263386 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.14406583 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.108427263 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.190996509 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.217904802 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.195074538 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.133228574 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.12435585 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.14353689 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.191694345 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.195758195 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.216492801 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.110168925 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.19399919 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.136979494 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.194908483 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.133087547 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.14306076 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.104043355 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.140537139 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.136252701 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.104738096 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.182929838 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.137564033 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.136285454 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.134142503 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.117083847 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.141945632 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.132032476 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.110399684 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.136832122 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.129079401 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.13246486 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.195473741 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.104140993 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.130602916 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.141049485 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.110902591 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.137594992 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.194619547 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.131727726 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.141866788 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.140475094 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.107767625 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.129489658 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.141081858 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.107004333 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.221273597 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.114021224 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.1406613 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.134745067 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.111211292 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.141286628 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.129863617 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.132136555 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.114439439 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.223234769 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.111557762 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.129382416 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.13576458 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.111723689 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.132984048 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.141853356 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.139130248 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.113837187 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.131742128 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.135321277 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.105024056 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.136277978 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.140455643 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.109188006 seconds)
  done (took 11.117207606 seconds)
done (took 40.384940465 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.153957876 seconds)
  done (took 2.102857591 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.982874 seconds)
  done (took 1.933743862 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.742547224 seconds)
  done (took 18.731243184 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.577754655 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.657031652 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.004974654 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.150345401 seconds)
  done (took 3.339485792 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.020201539 seconds)
  done (took 1.994458466 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.331606565 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.287483381 seconds)
  done (took 1.575142381 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.878079201 seconds)
  done (took 1.843069165 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.493955458 seconds)
  done (took 3.459624365 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.386541281 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.20070921 seconds)
  done (took 1.557935245 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.679010309 seconds)
  done (took 1.644808954 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 36.997925731 seconds)
  done (took 37.9639563 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.250079562 seconds)
  done (took 1.230202714 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.315987841 seconds)
  done (took 1.285443419 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.716218645 seconds)
  done (took 4.689029835 seconds)
done (took 84.312056535 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.106077152 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.134573335 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.108669675 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.131942239 seconds)
  done (took 1.451359989 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.116757003 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.133251037 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.137276845 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.107607362 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.144510721 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.107103865 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.133334559 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.14021613 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.1067517 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.134874474 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.131862081 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.106947263 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.135526724 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.130303042 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.10569588 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.135000298 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.110830026 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.134378932 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.133517907 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.108335902 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.131924631 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.133370773 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.110727128 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.133922051 seconds)
  done (took 3.983185608 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.10587317 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.125075149 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.102995943 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.124880091 seconds)
  done (took 1.439222382 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.115980918 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.148791401 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.148284228 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.114392964 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.150127483 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.147833747 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.102442396 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.128730927 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.10351799 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.141410007 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.130685024 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.152806268 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.122065415 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.134113948 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.141899291 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.100054692 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.134366413 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.123906686 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.141118725 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.142299233 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.101923866 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.140693514 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.129562113 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.121153513 seconds)
  done (took 4.099038259 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.21803198 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.119251668 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.157442664 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.185735474 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.159032479 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.104079731 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.160619 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.137166777 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.139546789 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.109279298 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.136386674 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.19482033 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.134688312 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.112262003 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.134686738 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.138766181 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.111544977 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.13698669 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.138060866 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.120379414 seconds)
  done (took 3.836568765 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.108559188 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.125164892 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.093978737 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.124849247 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.131330245 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.102197725 seconds)
  done (took 1.674996054 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.095617864 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.118013763 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.095055451 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.119359653 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.098284188 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.118910101 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.092189525 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.118611721 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.093923627 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.119513497 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.092357026 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.118756839 seconds)
  done (took 2.268964844 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.309868987 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.097921201 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.127647758 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.123721826 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.103309874 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.124495251 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.140181494 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.097073257 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.262676497 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.124408307 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115643173 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.202776089 seconds)
  done (took 2.816026014 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233126803 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107442865 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.292720635 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.401598868 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177259146 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183779789 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.310317708 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186085171 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.236717103 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127484242 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244761964 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172697506 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143751138 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226004696 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127211432 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.20664482 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221770005 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224286554 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16537259 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229981311 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183428586 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186946273 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200606708 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169262075 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152155496 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176725595 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.132613453 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11400084 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218157203 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189955335 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196073596 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164027809 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155954855 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22343341 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272328987 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200159277 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.335606907 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149266737 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.210789553 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.201800308 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.286232826 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156515915 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244643776 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142859175 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144197382 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201163476 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173845596 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.229718673 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.12050992 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154885237 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20636681 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221932217 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.20674386 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153041708 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.320006006 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164467678 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.163043492 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194297592 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211330994 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239218231 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184035552 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.107602683 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.227521701 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204033755 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202468972 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.163765388 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.191163289 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140874843 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196906882 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.217731174 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200907822 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212445639 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.205582278 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148405855 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181537183 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189108018 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170267263 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198358057 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177866392 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.13231441 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138959974 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151872342 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140308697 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.203203554 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107848335 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.254708291 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147687786 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.2068045 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225478629 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175229668 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.180229836 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181151475 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185749012 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161603985 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.133031049 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160364657 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.179312218 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173037122 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116133315 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173008192 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160405226 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.143417322 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168707464 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.106845725 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175102258 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.150863728 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184881528 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181234927 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.14560697 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182026542 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165180353 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.177719873 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190577241 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206120439 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144792228 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117799796 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242192358 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173694778 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.125602005 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.220607514 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.212427268 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.184204884 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152359404 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189294273 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218408208 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157477653 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210738332 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158172039 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148005852 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.169089402 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175529003 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1741023 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.143933416 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142405206 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.170993826 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214579588 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.140565158 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150701936 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192508839 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141002132 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113571973 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157893737 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1503219 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.155977285 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.16796476 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.127630109 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171473677 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177101644 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168809747 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175598231 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157618131 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247170767 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11810189 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.17641715 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163569432 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.132109277 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.204033196 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205802837 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142342043 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205947729 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.190823024 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24238523 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181533523 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14234034 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201953731 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11525489 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.134743888 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185536555 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.181178675 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179923704 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.205667984 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237172946 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.18930177 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.170557333 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164761343 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186091139 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.194309935 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176540319 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.160596239 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179164234 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187861904 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.134354904 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.109391337 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.14329994 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155712907 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143079585 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117286421 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232404972 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182978281 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204253336 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178751846 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154575622 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.202973572 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.141723989 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183087042 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.19428122 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153666523 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.20912076 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201567323 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184298852 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157241621 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191154739 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.1349794 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135919678 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.12318194 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.186689822 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146214421 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147100784 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159707438 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.204367742 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194512793 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165206345 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248498911 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189177775 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.215008129 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.136087151 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.152009946 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216720085 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147425698 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.202828222 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144974714 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.17953811 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197297765 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160300498 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21526923 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181195043 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186609939 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251465206 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.173603746 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143476232 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137072911 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214025003 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126367494 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.183147912 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162411296 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149314282 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170784741 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.15302645 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114412035 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232992305 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156673097 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20440963 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.174405232 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194032274 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139532511 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158594663 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178970111 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159933532 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.10299357 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189001971 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237591582 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160781701 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174591463 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195482093 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115486091 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.329039719 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238625868 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205483462 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152667277 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158546896 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180400503 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177364013 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184097089 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.202785833 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159729254 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201245667 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176601155 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.158049351 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11977559 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162334486 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166941045 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.171410912 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.151461706 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.173715911 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.155574903 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207232413 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160573586 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176223768 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183155227 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.16283789 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.143493025 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155377454 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224460002 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17473024 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224710341 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.171324215 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.189446295 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209321327 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107169149 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142170123 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.142154999 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.203870953 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145324631 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147900804 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.227573403 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216064207 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175669128 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187568245 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154556824 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.1382252 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177379147 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16497219 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216102683 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15772617 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.154291582 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213069729 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.167837452 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144379204 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18151572 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.298986608 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160068067 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194501103 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.104382682 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.317070654 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111876267 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147130924 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177323251 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18982656 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.164906566 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.196830392 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185055867 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130880178 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178309903 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153603122 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.233819616 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228796607 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192366548 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195937586 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.160325331 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176324016 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181090712 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196293733 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159297686 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.16312757 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179894005 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2041151 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.210543052 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.149807855 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180457276 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18118935 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177755749 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224622661 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119096553 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206492214 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145587915 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186714823 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155211847 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139059575 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174934994 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.198454856 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146713861 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19670884 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176717623 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143999163 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113084311 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168852653 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175606397 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160692256 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.14189602 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201128361 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.139296957 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151390123 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199196963 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144210895 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175120272 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161722261 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147001743 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159516599 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131970149 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149312074 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.184789217 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204303886 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.14698024 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196806852 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193310147 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183346786 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175986819 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15913792 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.680905933 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.113296355 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231424563 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133294712 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24031821 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16450345 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184740654 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177475151 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135625675 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217127084 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166353916 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.211368799 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214589462 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.179581265 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116382313 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160185333 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161602761 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.146836161 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167557346 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180543764 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126065224 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.154847248 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.176855364 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162055039 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.160861857 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152290581 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205306518 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162130743 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20691606 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204147247 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15390669 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185603058 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199149797 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144028494 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.183199828 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191804331 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15675009 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169521503 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.119391588 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.15096319 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199301889 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.136080932 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17904717 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178094472 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178370211 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18040886 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.122586313 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17853935 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157356808 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178787698 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142880163 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.176793121 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173793694 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147267761 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.114143684 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172980986 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17845836 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.175025447 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144623618 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.160645921 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226910338 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.107391247 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146931439 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.30101281 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176240297 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214004888 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.170875595 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149917229 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158336441 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174210982 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.174724551 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176842717 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.115629887 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146399845 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.149217661 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.197614016 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.172842805 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173918329 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198983126 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178946371 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210124345 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.160484557 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.284233831 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125656602 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173387826 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.145973059 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.146481961 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126905311 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151056386 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162901336 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.20902771 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197345124 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.167904098 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.159950427 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143083209 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.107012627 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147315614 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180340631 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172417941 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176313545 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161520705 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.102504741 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158955704 seconds)
  done (took 86.25601678 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.166042535 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.169897136 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.172919549 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.227473804 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.194833103 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.284502479 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.235363009 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.252920314 seconds)
  done (took 2.775427187 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.134706792 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.119317392 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.153968178 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.134845686 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.135179055 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.446857388 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.145339979 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.10746997 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.197339078 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.173957421 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.105411535 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.684697238 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.131187558 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.133621773 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.124818318 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.132469078 seconds)
  done (took 4.129801754 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.562704882 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.567855949 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.151671573 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.267480158 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.247073379 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.193132458 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.781825769 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.206436761 seconds)
  done (took 13.046203964 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.138533582 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.152831951 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.352795742 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.223212482 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.172607367 seconds)
  done (took 2.118928325 seconds)
done (took 130.866309906 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.111040012 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.156344691 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.110213791 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.156380326 seconds)
  done (took 1.599992162 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.156712666 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.122995266 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.095764817 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.121230808 seconds)
  done (took 1.575326447 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.542055096 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.091214344 seconds)
  done (took 1.741325136 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.136044371 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.158838465 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.154958788 seconds)
  done (took 1.536392562 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.117876066 seconds)
  done (took 1.194462801 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.110001769 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.14095113 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.194016139 seconds)
  done (took 1.527561029 seconds)
done (took 10.254146281 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.132860411 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.441632297 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.423597871 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.11691732 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.751088911 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.414804929 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.064429373 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.16651765 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.148204198 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.126679356 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.148378267 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.695192555 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.048081246 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.379247957 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.00388662 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.379737636 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.682316823 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.129651769 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.133731673 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.101450989 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.038694032 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096864623 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.129341636 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.12713378 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.678260199 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.432467205 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098414661 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.395334778 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.125807123 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.104597105 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.417414014 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097508336 seconds)
  done (took 17.302818201 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.145212084 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.194930768 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.138349976 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.099754139 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.13274103 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.127467664 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.109412777 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.142797784 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.193916091 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.127222288 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.120565859 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.128133558 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104184762 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.128583517 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.150186694 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.098162042 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.130793826 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.100267723 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.136005005 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.129965313 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.119598048 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.127964898 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.10091474 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.130463042 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.126067568 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.113090176 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.127784557 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.140903033 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.099638687 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.13291715 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.105141373 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.128622964 seconds)
  done (took 5.177889432 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.151679147 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.203285075 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.137585883 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.16296978 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.18443545 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.100555562 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.221471286 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.169416884 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.195856577 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.128665441 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.149210949 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.099812456 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.16895869 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.098532164 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.151249984 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.127362102 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.102838523 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.130321269 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.134900569 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.102304899 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.148681522 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.098580999 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.130868982 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.128916844 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.099278937 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.14241961 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.099245838 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.142887078 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.127824202 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.104810816 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.135386436 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.098936398 seconds)
  done (took 5.461979253 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.112575557 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.143427625 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.121117296 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.151773883 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.137454264 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.112650919 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.141743501 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.104816051 seconds)
  done (took 2.115631883 seconds)
done (took 31.141664681 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.124900021 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.147254643 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.119292324 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.142339965 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.203431297 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.100483717 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.146428212 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.130680284 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.113747349 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.150408901 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.098622617 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.134115033 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.118052286 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.13783346 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.186364341 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.140835144 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.191357234 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.187374781 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.105766767 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.142493923 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.10506016 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.193368992 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.14075132 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.104345764 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.197408245 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.134722215 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.183656686 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.13753158 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.109084397 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.130269532 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.186490791 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.110547644 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.135208049 seconds)
  done (took 5.767370909 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.204522078 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.216187753 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.104132019 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.134473786 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.214906335 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.104035827 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.232488555 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.104579404 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.133517039 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.104500402 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.132597414 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.205260157 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.21185201 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.225707281 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.244133445 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.212905004 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.201794298 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.21135738 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.197280525 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.215744147 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.202485443 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.134146463 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.214801924 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.216908013 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.101910622 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.133953502 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.237829595 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.211221689 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.239694701 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.200282168 seconds)
  done (took 6.597085599 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.113975017 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.147265701 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.125003745 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.203025155 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.176380294 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.144138692 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.111692024 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.154712448 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.154858779 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.100344284 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.139728711 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.138083288 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.147961897 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.139529079 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.107262595 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.150809323 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.154435666 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.102529102 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.136804071 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.120982031 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.14950477 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.147803883 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.115495584 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.14021062 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.099750202 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.14063895 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.134395453 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.113520693 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.137038235 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.10882581 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.134474705 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.134313818 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.103133665 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.14011817 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.104683199 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.143306966 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.157922541 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.108915052 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.143124003 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.166656451 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.109351202 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.135229545 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.151986194 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.147477956 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.132503618 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.140952954 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.114156938 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.139929725 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.099043883 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.151809957 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.143112072 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.101883637 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.153401212 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.099193711 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.129583189 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137408157 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.101997289 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.133315601 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.109794691 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.135243419 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.156138535 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.109204603 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.137474368 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.102658245 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.136669537 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.098863003 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.131831688 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.137010011 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.124163295 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.136986225 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.162610279 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.101507999 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.14097534 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.108508299 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.136540646 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.139340272 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.100854971 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136479675 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.109038926 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.136812843 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.109524686 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.134215088 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.134085439 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.120472475 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.153934173 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.143319829 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.11089551 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.143198903 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.103039213 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.132130542 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.1442074 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.102318105 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.134872039 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.109623447 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.13268232 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.133831597 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.113447324 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.139897125 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.099143029 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.150546079 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.136500374 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.100755182 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.147993233 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.101211349 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.135933487 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.110600648 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.145175615 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.130764109 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.11052229 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.142974646 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.099277814 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.136394955 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.134127507 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.101836263 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.149340936 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.11262275 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.136831882 seconds)
  done (took 16.291265528 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.30562174 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.317277829 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.211681126 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.406144374 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.126230061 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.232582034 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.280521009 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.232874628 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.132121175 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.175383509 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.192382936 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.272062216 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.099836601 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.166535952 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.312917362 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.381486756 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.165699674 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.177154945 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.175799024 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.125601702 seconds)
  done (took 5.602857837 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.124879517 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.174298123 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.16451363 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.166244295 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.107494989 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.146609724 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.129329378 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.127717676 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.140682828 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.138175713 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.100431377 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.14615377 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.109238791 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.141746412 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.149935983 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.149740097 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.136355967 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.137364887 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.123981529 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.138783546 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.14310893 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.161103093 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.1131942 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.161559585 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.147802765 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.115925579 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.131015939 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.13785737 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.10387581 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.136766284 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.107759453 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.152729882 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.138941583 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.107348971 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.14190874 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.112967276 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.133305521 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.131709996 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.103448963 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.134033594 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.118433603 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.141306074 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.104788082 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.12847426 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.114659054 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.134914314 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.142492432 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.11303832 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.144955612 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.115992301 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.144470753 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.143676032 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.108247551 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.15156533 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.103397265 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.146787497 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.144640052 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.142151664 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.110151138 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.129880286 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.099287622 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.136214095 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.106082172 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.145147185 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.140936463 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.124561489 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.147788078 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.133279793 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.108140461 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.136486492 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.10415604 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.151533432 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.160182279 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.136498004 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.10554042 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.154227982 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.10490972 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.124049579 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.111251633 seconds)
  done (took 11.513401462 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.132436319 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.137419078 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.121732487 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.169757472 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.153662965 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.10701241 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.138176277 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.121246954 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.14459339 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.146033803 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.11549018 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.146035117 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.157230438 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.114956144 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.136374411 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.146428256 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.11185545 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.178005585 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.151847933 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.137048076 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.150123749 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.136139618 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.116010703 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.14530428 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.16758142 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.113503863 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.166152937 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.140717941 seconds)
  done (took 5.033291571 seconds)
done (took 51.894739278 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.245317117 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.418167806 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.192314783 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.191981723 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.260328395 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.228290394 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.197049408 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.384433544 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.009580827 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.198453261 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.191014529 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.190419645 seconds)
done (took 27.824183852 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.336544731 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.790027171 seconds)
    (2/2) benchmarking "String"...
    done (took 1.518520202 seconds)
  done (took 4.433202943 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.187167139 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.187054463 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.433079634 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.185774196 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.205704868 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.205674643 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.189814261 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.193496802 seconds)
  done (took 15.713915967 seconds)
done (took 25.784601047 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.233924005 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.528948455 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.492600324 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.205691489 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.206939533 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.187482438 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.198279407 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.262415834 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.197607657 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.188398344 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.18929258 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.495039434 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.190362428 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.625910215 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.181763098 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.214554147 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.206765451 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.568207469 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.19122063 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.258657599 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.180137271 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.202477549 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.19971263 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.212032996 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.199314781 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.194245359 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.199564583 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.181455976 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.513784664 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.21468032 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.238817602 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.194296011 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.218579722 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.208989847 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.304107722 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.219982882 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.503756757 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.197526379 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.1871463 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.196617173 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.503116207 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.60713228 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.191216607 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.200873364 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.202929207 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.268442433 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.186770975 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.92898794 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.19112557 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.187685844 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.232473378 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.646451396 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.203117162 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.195325823 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.208411692 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.561227024 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.197496161 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.279220459 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.223899742 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.201274384 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.209178841 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.212603218 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.222405955 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.194543154 seconds)
  done (took 143.964517812 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.192443337 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.197424132 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.192111672 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.256485959 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.198697216 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.196590965 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.191315229 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.191357894 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.197095809 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.197758314 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.195898002 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.192152177 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.196988633 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.19856789 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.196423045 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.212779392 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.197271955 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.208866929 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.199253107 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.192879088 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.193971436 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.199539489 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.215542798 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.198360635 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.20184546 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.28088841 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.247225281 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.210588794 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.205631377 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.19306399 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.2023165 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.244134937 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.843822766 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.051473596 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.205205126 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.231470857 seconds)
  done (took 80.045818641 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.193151034 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.194854771 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.195107788 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.228025832 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.194284954 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.802592491 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.809607338 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.997115931 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.580173198 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.678621055 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.530666532 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.197814538 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.290602332 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.209911561 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.196014331 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.210773735 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.238664886 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.19620517 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.19502375 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.806194787 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.212323496 seconds)
    (22/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.195496894 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.375810797 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.21172391 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.229238173 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.600024642 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.714078604 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.201631105 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.230117721 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.534250612 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.246884548 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.196225914 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.642721829 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.70177494 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.310521238 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.197120656 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.228356333 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.196373613 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.481081967 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.196122871 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.19638359 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.197645793 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.199358154 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.935332182 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.200808203 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.805021658 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.20232044 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.191170383 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.197963589 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.197891461 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.197984792 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.48370996 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.892883877 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.214077496 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.196487335 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.201400682 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.198240439 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.196689066 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.232718998 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.648103538 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.31780577 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.214978224 seconds)
    (63/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.197953589 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.199492352 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.232628666 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.197234533 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.636406506 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.202257456 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.955587337 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.259233007 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.410226467 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.81077083 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.202498143 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.298777752 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.320346579 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.198040879 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.198988504 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.198407478 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.198190518 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.31069367 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.19842281 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.647546891 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.379536195 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.217335899 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.685894576 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.303177302 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.199663335 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.63565643 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.203500001 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.199650885 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.966222144 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.297900215 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.199404027 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.198851621 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.199205467 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.650449254 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.812593424 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.508058947 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.206132621 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.87020947 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.206367142 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.657094336 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.782989854 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.915336782 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.205931837 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.316362802 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.38188821 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.219141792 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.200984695 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.70954408 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.205142486 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.261436222 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.200391546 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.60145926 seconds)
  done (took 368.765291408 seconds)
done (took 593.888965215 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.952899371 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.89925572 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.043504015 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.927624367 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.893878273 seconds)
  done (took 10.843073802 seconds)
done (took 11.967048111 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.398490742 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.39779825 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.264918499 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.399885087 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.233716428 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.419169332 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.380040059 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.220573711 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.312644607 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.287800286 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.311087101 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.258262087 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.238734275 seconds)
  done (took 18.250211686 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.493374766 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.210211862 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.272055464 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.475368387 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.247757208 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.488285025 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.508454395 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.208403207 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.358214646 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.221969937 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.219441568 seconds)
  done (took 17.832592305 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.491606134 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.210014481 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.29298604 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.469451535 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.249513346 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.482932255 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.518988169 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.210387217 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.346673553 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.220808211 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.220676684 seconds)
  done (took 17.840968259 seconds)
done (took 55.048147454 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.248318594 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.378942315 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.233362376 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.22238486 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.215707131 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.216429075 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.223480253 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.216267379 seconds)
  done (took 11.082921389 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.215770063 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.215243144 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.21665403 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.216392088 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.214673312 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.215671182 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.21557009 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.21618955 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.216263728 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.21617336 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.214356641 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.216609046 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.216916582 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.216103166 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.216000515 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.216853546 seconds)
  done (took 20.583775425 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.218772437 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.218029025 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.215319207 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.216567413 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.216527705 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.217080225 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.218343759 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.216135362 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.21796261 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.217771275 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.218457341 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.216957933 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.21561602 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.217066307 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.216337985 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.217620348 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.2160893 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.216519727 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.221468053 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.21708838 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.217239158 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.21800341 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.216534006 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.216785577 seconds)
  done (took 30.345333386 seconds)
done (took 63.137915033 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.21443905 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.21099699 seconds)
  done (took 5.555351719 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.278097692 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.276117464 seconds)
  done (took 3.687220339 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.218211715 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.218195919 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.217433717 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.218261011 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.218082766 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.216763723 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.218901986 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.217881542 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.217397678 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.218594384 seconds)
  done (took 13.310387131 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.218866297 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.218942199 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.218389255 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.218759574 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.219606974 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.217751091 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.218157123 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.218080965 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.220684085 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.218879779 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.220138282 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.218806693 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.219729702 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.218317087 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.21878455 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.218520958 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.21933639 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.218923443 seconds)
  done (took 23.073030304 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.231548889 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.240381878 seconds)
  done (took 3.602760158 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.361095508 seconds)
    (2/7) benchmarking "second"...
    done (took 1.261867472 seconds)
    (3/7) benchmarking "month"...
    done (took 1.336781454 seconds)
    (4/7) benchmarking "year"...
    done (took 1.326009558 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.260647612 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.241647494 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.262438971 seconds)
  done (took 10.182527946 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.220775824 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.414091055 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.529484658 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.780099962 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.221121786 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.26523282 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.052222804 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.26548787 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.254419753 seconds)
  done (took 14.135931849 seconds)
done (took 74.676495459 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.208482417 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.230890956 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.261834591 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.23149155 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.559160034 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.248402758 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.213052995 seconds)
done (took 16.086161113 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.208211673 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.206250626 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.232417934 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.220045301 seconds)
  done (took 9.999659696 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.215733395 seconds)
    (2/2) benchmarking "read"...
    done (took 1.570557433 seconds)
  done (took 4.919888338 seconds)
done (took 16.053026448 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.22264091 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.223531692 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.222615134 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.22142472 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.2210052 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.221975134 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.221236331 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.220722441 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.222185388 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.220883265 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.222232366 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222985344 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.2215122 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.221852756 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223458281 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.223028734 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.221609522 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222795284 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.223188563 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.223142677 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.222610955 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.222420324 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.222814701 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.222570461 seconds)
  done (took 30.469009545 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.225372957 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.222668833 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.22237974 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.222996456 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.223886421 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.222042731 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.223671107 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.223312878 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.223413593 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.223614526 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.22330244 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.22329452 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.223147456 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.222262492 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222055942 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.224025401 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.2240794 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.223658536 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222860099 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.223886581 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.223905444 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223615157 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.223767094 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.222541623 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.223864092 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.223534741 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.225068493 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.224694526 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.224743093 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.225136729 seconds)
  done (took 37.843185858 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.229381051 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.233704629 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.22370344 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.223783536 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.225120916 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.225134322 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.225166138 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.226163398 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.225887523 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.22468259 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.225142413 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.225711368 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.225638103 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.226834765 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.226398064 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.226139195 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.225736344 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.226155546 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.225694962 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.225479839 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.225725785 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.225541853 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.225903532 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.225513571 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.225517908 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.22834682 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.226071771 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.226698674 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.225971552 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.22613369 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.226276724 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.226712566 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.227488862 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.227591681 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.227835062 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.226548989 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.232304508 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.235618125 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.227052396 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.228203959 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.227480193 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.227896542 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.227101648 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.226424452 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.226594858 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.226910634 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.226805159 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.226636574 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.228203544 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.226826547 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.228202104 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.227416668 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.227535103 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.227749301 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.227961849 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.228245861 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.226800895 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.227850462 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.228769925 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.22650363 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.228113199 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.226826262 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.229006412 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.228885065 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.228891908 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.228992091 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.228277321 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.229096311 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.228187134 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.22765755 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.228423785 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.229027348 seconds)
  done (took 89.499018854 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.229839521 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.228511873 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.228132728 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.228232742 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.229529438 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.229706159 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.230895524 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.228829607 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229596551 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.228077845 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231308148 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.228639064 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229775862 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.23072901 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.229987933 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.231586096 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.230105926 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.230022783 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.229937322 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.229633627 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.230327848 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.230699005 seconds)
  done (took 28.195760552 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.230753298 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.231597959 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.23080284 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.232715486 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.232509974 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.23096718 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.230278186 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.231894077 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231447758 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.230666952 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.230802213 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230736957 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.232030578 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.231993328 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.232438715 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.233438708 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.231412569 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.232271571 seconds)
  done (took 23.310473667 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.2318156 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.230878176 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.232965307 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.232215529 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.230920649 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.232368633 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.230367624 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.231947367 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.231544324 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.23158438 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.232233947 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232417113 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.23290728 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.231514128 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.232105262 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.232478076 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.232160043 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232077911 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.232437512 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.232816198 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.232098145 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.234362484 seconds)
  done (took 28.249676468 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.234009168 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.232924978 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.231719552 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.233442144 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.233441244 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.232775437 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.233190578 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.232222507 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.23436556 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.232012508 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.232159318 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.232924574 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.234519968 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.234105463 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.233211264 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.233069937 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.233236711 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.233666829 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.233258081 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.233399226 seconds)
  done (took 25.806827293 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.234084424 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.235500119 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.234483959 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.235226563 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.234503831 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.236782214 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.235368344 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.235490712 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.235344686 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.236223978 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.235664627 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.234876058 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.234483605 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.235003225 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.235445516 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.235009 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.23470406 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.235300079 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.235866939 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.235426751 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.236102699 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.235541879 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.234751014 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.235857188 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.23475104 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.236653253 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.236323479 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.236355291 seconds)
  done (took 35.737183801 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.23702949 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.236960125 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.236314592 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.235559445 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.237434085 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.237239752 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.236478707 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.236132383 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.236731137 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.236452222 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.237099884 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.236977438 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.237200077 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.23681121 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.237291199 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.236803989 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.236218494 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.238325036 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.237807432 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.236726615 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.2377997 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.237441841 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.235529092 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.23901133 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.236091745 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.23750134 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.236938367 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.236638716 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.237203139 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.237923555 seconds)
  done (took 38.258668156 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.285365116 seconds)
    (2/2) benchmarking "in"...
    done (took 1.278206618 seconds)
  done (took 3.71090129 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.2388155 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.238178325 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.238846674 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.239441717 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.238801013 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.238600607 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.238839223 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.238576231 seconds)
  done (took 11.058737996 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.233176493 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.239694707 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.23897333 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.238498302 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.236879151 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.234851788 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.239954737 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.260212565 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.23329679 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.236001574 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.241272692 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.242043002 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.236216138 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.232956961 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.234894312 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.235602345 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.239933405 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.239771052 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.239972101 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.240970846 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.239272602 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.237227925 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.236990957 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.242059181 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.237522083 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.24594234 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.258987753 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.243464866 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.234751594 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.238674086 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.236669104 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.240029141 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.240310928 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.240059673 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.243248894 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.239364779 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.243371254 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.257318117 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.24190726 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.259889121 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.243448352 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.242910841 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.235759831 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.236694304 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.23739123 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.24035473 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.244268293 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.242064943 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.236427661 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.240372464 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.251203156 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.236008635 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.24261685 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.240318121 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.238825321 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.243393083 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.261188318 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.240369187 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.2477798 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.248059583 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.26849488 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.263735171 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.23982507 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.240639265 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.247729475 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.263386127 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.243926252 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.263548001 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.24490734 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.243918733 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.245614327 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.270230869 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.266493616 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.243033534 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.242525942 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.244986387 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.23987879 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.245411082 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.245639109 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.262279124 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.242708224 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.242015763 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.249218086 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.262748187 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.23953678 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.242869499 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.243877547 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.243109875 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.240402666 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.249754925 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.263411644 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.246028898 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.23843162 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.239372117 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.241292472 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.244140116 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.239416248 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.240208177 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.245970981 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.247087095 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.243481757 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.243933575 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.249425097 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.243626528 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.244695918 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.246582353 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.266426438 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.23981316 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.245538027 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.247938185 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.24401555 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.242841782 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.246857392 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.246425697 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.2441164 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.25053342 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.243623214 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.242123829 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.243812566 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.247001598 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.251208079 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.268753108 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.247211388 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.247054422 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.245566526 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.257504956 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.246448415 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.244003707 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.247400258 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.247397225 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.248066304 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.243249338 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.247893388 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.242575666 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.245856494 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.243120213 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.248968838 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.2477656 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.245804975 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.243376607 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.243332333 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.242924259 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.242863166 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.244265883 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.246600402 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.242790316 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.248561352 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.263538833 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.244061649 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.243722622 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.247985005 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.249451866 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.243864265 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.247757266 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.244729839 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.247771004 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.243566631 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.247750685 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.249092234 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.249013857 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.249102747 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.243344739 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.247700228 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.247945271 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.247892243 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.244695192 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.249553736 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.249973951 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.25017906 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.243794143 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.249707032 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.242068917 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.247724241 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.257595383 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.249966029 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.249342491 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.247556042 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.247872621 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.249152477 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.249070441 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.24906709 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.252600282 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.248447153 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.251790683 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.269544132 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.247537271 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.250740432 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.24546207 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.244769524 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.249976042 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.24892088 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.259585311 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.25776248 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.272243192 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.246340252 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.255964061 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.247356895 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.25425606 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.249536305 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.249536379 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.251673651 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.250797972 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.247248299 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.251310268 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.248448381 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.249798028 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.246733757 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.252880576 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.254150812 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.250372134 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.252786883 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.248003307 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.248054851 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.253093228 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.253145155 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.252490785 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.247380847 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.253202543 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.246827163 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.247849902 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.251914069 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.252434879 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.25474502 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.253741172 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.249607703 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.249312667 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.248684552 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.247529824 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.25387099 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.249861541 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.248841569 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.255875816 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.269711444 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.24953753 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.255530745 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.268917386 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.247795109 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.250543068 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.253664593 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.254471436 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.251484397 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.262900165 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.256489643 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.253058793 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.253607847 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.249230118 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.256134995 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.254848652 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.27554243 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.249082993 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.254532075 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.250147633 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.255294684 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.250730407 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.251470585 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.251097665 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.251343176 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.255701746 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.255254339 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.251820181 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.254147109 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.255133386 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.254921209 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.253164515 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.263536066 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.257619256 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.251577052 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.252855591 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.251847779 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.259983588 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.249861907 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.255287282 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.251594961 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.262661312 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.282764156 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.258310108 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.274105457 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.256200616 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.25604336 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.272614247 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.256203119 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.252961168 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.258580571 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.252309056 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.252402034 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.258571543 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.252564027 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.258939656 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.253086245 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.253258538 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.262940128 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.257465141 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.251930622 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.257035663 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.256918222 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.258614517 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.252453647 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.260036164 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.253933662 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.255375281 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.252121964 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.766613756 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.259510304 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.274512003 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.25254044 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.25404183 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.253934309 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.253946387 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.255033822 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.255724273 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.256625879 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.265584717 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.254923914 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.262093683 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.254883169 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.262639785 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.257949102 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.257117173 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.267023885 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.259745485 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.25360073 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.255686836 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.258019568 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.261435684 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.279783231 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.255978255 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.263022199 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.259478593 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.258979637 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.260196741 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.259076538 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.261571998 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.260634693 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.263374675 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.276910014 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.260697078 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.25712964 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.260281314 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.259298387 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.260732122 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.255081682 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.258339006 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.260543418 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.256350239 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.255454034 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.256260222 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.261490848 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.25964851 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.262086384 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.262717211 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.262187017 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.263363732 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.279981758 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.264991193 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.262582663 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.264512496 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.281739705 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.265214994 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.283780293 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.257969093 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.261281605 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.26298494 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.257730825 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.257216705 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.257702242 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.263013855 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.258071522 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.269246952 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.260835818 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.260339839 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.258740349 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.261975023 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.257811195 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.267679852 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.285772035 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.259698244 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.269304961 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.264494602 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.25933099 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.266956508 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.261848969 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.257584909 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.261385755 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.268310223 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.27337417 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.259291577 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.262848865 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.258497021 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.262257697 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.265328389 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.265023401 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.262747004 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.264419271 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.259022512 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.263472424 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.261692909 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.265079288 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.260953438 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.258900039 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.260534627 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.270986741 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.284357631 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.26099813 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.265136944 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.266704105 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.260826761 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.260092508 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.265128957 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.261040042 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.264971159 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.262341307 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.267789053 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.268114349 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.263747857 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.260069249 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.263289888 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.260857271 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.26182647 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.264947651 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.264219065 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.264723297 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.262821752 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.26486119 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.261593049 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.261394261 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.267767571 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.26240068 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.266452746 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.264920863 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.271615393 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.262780304 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.266852324 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.267779576 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.26907163 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.261031541 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.262149597 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.269990092 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.2866341 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.27387244 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.271325464 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.270882769 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.262256569 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.264919389 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.270490936 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.261677623 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.263384273 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.266776879 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.262154173 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.264377227 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.266613888 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.266763527 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.26982764 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.283691232 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.262299073 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.272063642 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.284658577 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.266170278 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.264860196 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.267834411 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.263327725 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.269594119 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.268050459 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.263067565 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.269765102 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.286318031 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.268483849 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.266783198 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.263176406 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.266700881 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.273363631 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.269736419 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.265842871 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.269897642 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.26545328 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.268474516 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.269082064 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.271105038 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.262656245 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.265405131 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.267767794 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.271995302 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.270382057 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.266330083 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.264021142 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.26611184 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.269485261 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.269838523 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.27031838 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.270572551 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.264751084 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.269825908 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.265732596 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.268105637 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.264311834 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.266883082 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.275312974 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.269309949 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.269138756 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.276152207 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.28053355 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.272353174 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.267126778 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.267967644 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.269481611 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.27088229 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.269277057 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.266590923 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.268278226 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.271248077 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.270711382 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.271632896 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.270233362 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.282903996 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.293565692 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.266477832 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.267678139 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.270466554 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.272712192 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.272428981 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.272337445 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.269182098 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.270493633 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.280060577 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.270902319 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.273620835 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.288595559 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.268788559 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.27857397 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.2722276 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.277045752 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.271152174 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.272524755 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.272392443 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.272469555 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.286485697 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.275254652 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.278715447 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.300301493 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.290646277 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.270595239 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.273976411 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.267379445 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.272176273 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.271286813 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.273315375 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.275045283 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.275761488 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.272275931 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.271028939 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.275221469 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.271332753 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.278353495 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.274701474 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.269461432 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.270267891 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.275855577 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.274050582 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.275297784 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.273881049 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.273441058 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.274662651 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.270602575 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.283363988 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.299451061 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.275546162 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.273555796 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.275738552 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.273763403 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.272779689 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.282014358 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.284877795 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.274541603 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.27425234 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.271749653 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.274492752 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.278604246 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.270337005 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.271807968 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.272043884 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.277020815 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.28455277 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.302086749 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.276560648 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.270988232 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.276393689 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.276234251 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.271818771 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.275106953 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.275050601 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.27259026 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.273867666 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.279563994 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.279658852 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.278041026 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.275420279 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.285336596 seconds)
  done (took 751.738792821 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.27821514 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.279190285 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.277913094 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.278550747 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.27950388 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.279314767 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.278314262 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.278930211 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.278838257 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.278247375 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.27909054 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.278447472 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.278802885 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.278694965 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.278855172 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.280141245 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.278999475 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.278499919 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.279970809 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.278937068 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.280153012 seconds)
  done (took 28.041919667 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.279446245 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.279387233 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.279387903 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.280886223 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.280446313 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.279256229 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.280752412 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.279641145 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.279520712 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.280667157 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.278882193 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.280075254 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.279723127 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.280626648 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.280517593 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.280838906 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.280681817 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.279415294 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.27989845 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.281434267 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.28118598 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.28049732 seconds)
  done (took 29.349326807 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.278859584 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.279619716 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.274451357 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.280924044 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.280495788 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.281425785 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.280182738 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.281626871 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.280156084 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.277104355 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.275729015 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.277036684 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.282173204 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.290871883 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.278965823 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.281926294 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.281071724 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.280767691 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.279765208 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.281481941 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.281928672 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.306128499 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.282667831 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.275153966 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.281275238 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.2821479 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.281193683 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.279611072 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.277430856 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.28466089 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.282101715 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.276281172 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.279264452 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.276382959 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.278193256 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.28810172 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.280984342 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.282759934 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.283801268 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.286897231 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.307793056 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.281007141 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.283948897 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.305436929 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.2834587 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.281695494 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.289126726 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.283720038 seconds)
  done (took 62.757158945 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.889728442 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.908530945 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.908543354 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.912816539 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.912781872 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.91317397 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.913507713 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.919732161 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.910958366 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.909386458 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.909396108 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.920981253 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.9186491 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.906997805 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.908216819 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.909001787 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.906247888 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.90909453 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.915186931 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.919030352 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.915299511 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.913259522 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.911240885 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.913218083 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.91958621 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.915963082 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.913576644 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.916624576 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.920985625 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.919646641 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.917766038 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.9187195 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.920358161 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.91066975 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.917578495 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.914875876 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.926338897 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.916544535 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.916542487 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.913267815 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.915275042 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.91668612 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.928290937 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.926554395 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.931679652 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.923970379 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.918827444 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.916206915 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.920178292 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.923052194 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.917632702 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.920779523 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.919114095 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.919398537 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.917705612 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.922835617 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.921700484 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.926758987 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.914453555 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.91405695 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.918106517 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.932360494 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.925400006 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.914117324 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.9144449 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.921986868 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.915985142 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.9161501 seconds)
  done (took 131.519841479 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.286064978 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.285739657 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.286068546 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.288176665 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.286575248 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.287122325 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.287828933 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.286709742 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.288220768 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.286817809 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.288296012 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.287935384 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.287923891 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.288461407 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.2872554 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.287941068 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.287822044 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.287795635 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.285833504 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.287916291 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.288033005 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.287551166 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.289181602 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.289156377 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.2882707 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.289022812 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.287977951 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.28835762 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.288032656 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.28793805 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.28900987 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.288182708 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.288915495 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.289186388 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.29013049 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.289660222 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.288976669 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.288243956 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.289375954 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.289354094 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.289077338 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.287668955 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.289067164 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.289543218 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.289605708 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.289780267 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.290060226 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.290056459 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.29079449 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.289588587 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.290444135 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.289609273 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.289871109 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.291757237 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.289395073 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.292067107 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.290612719 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.290385925 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.291926642 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.291136674 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.290231137 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.291928087 seconds)
  done (took 81.103365116 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.291261271 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.292118374 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.292904905 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.29304029 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.29280989 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.2930339 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.293899719 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.293100749 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.292729534 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.293409967 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.292718587 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.292642518 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.296304274 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.29353299 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.292185412 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294656172 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.293772993 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.293014423 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.292498267 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.292653128 seconds)
  done (took 27.05815048 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.292828958 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.292199534 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.293803958 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.294036276 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.293733119 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.293756134 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.293354007 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.293656184 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.293875244 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.293462085 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.294665074 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.294480504 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294692929 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.294563684 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.293946197 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.294871369 seconds)
  done (took 21.900414231 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.294971987 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.293715282 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.293850435 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.292329106 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.29417025 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.29593841 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.294889641 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.295781256 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.294644995 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.295833052 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.294897208 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.295955552 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.297320395 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.293501 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.295013013 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.295498053 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.294153828 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.296739095 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.297504442 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.298895273 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.298446784 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.299247412 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.297546812 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.295850013 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.295580797 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.298317765 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.294917812 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.295536518 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.295767184 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.295923032 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.295858135 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.295470995 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.294555689 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.295349445 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.294210143 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.296274234 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.296686592 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.297454163 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.297091153 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.296563681 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.296621797 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.298801425 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.297086769 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.296985443 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.297159066 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.297913732 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.295950083 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.297066873 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.296992864 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.298263274 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.297692645 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.296248165 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.297252056 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.297920268 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.297836005 seconds)
  done (took 72.493410633 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.298197582 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.298874325 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.29663755 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.298245477 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.297208169 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.30153526 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.301705834 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.304894744 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.304066475 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.300410375 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.300918697 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.301101958 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.297409119 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.299638413 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.299482173 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.298802304 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.299646943 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.300491898 seconds)
  done (took 24.601384248 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.299839288 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.298964539 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.299560683 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.300342989 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.301324172 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.301215609 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.298812423 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.29994816 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.298629118 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.301228502 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.299707226 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.301454775 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.299929045 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.301105853 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.300085399 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.300396783 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.299008867 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.300724365 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.299930146 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.301025906 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.300603108 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.299809137 seconds)
  done (took 29.807465187 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.294005353 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.293172774 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.294078586 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.310096111 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.317510164 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.293694724 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.295092629 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.294043576 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.316733781 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.370654846 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.363397076 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.317940122 seconds)
  done (took 16.964803337 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301886918 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301515052 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.300033173 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302155144 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300962088 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301664622 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301900162 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301306446 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302283493 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302281732 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301628011 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302092182 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301733587 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300574319 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301184727 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302048741 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301768779 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303268844 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302848286 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302772742 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301969453 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301657711 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302216113 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301995114 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302141451 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30360073 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303220301 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30216576 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303698559 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303511623 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30233339 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302832798 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30449431 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303687238 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303196666 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303933179 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303865128 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303711448 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303965086 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303236142 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.304656334 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303901049 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303388724 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305711037 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302870374 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304374152 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305318739 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303825401 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304927405 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304520927 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30433544 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305049032 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304438822 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30407071 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304616454 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306589321 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305058468 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305111676 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304169375 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306091095 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304186819 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305082214 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305245529 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306489121 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304888038 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305329875 seconds)
  done (took 87.231108443 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304480679 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.30467496 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305741503 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305017186 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305029333 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305549143 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304638996 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305296703 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306442739 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304941972 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305889762 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306135124 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30624611 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305450008 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307088565 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305844078 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30639532 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305099727 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305935364 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307696097 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306411615 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306166747 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30676707 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306580082 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307560099 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307002837 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306915536 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306315299 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307358605 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307754515 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307464608 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.3080187 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307760482 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.30729119 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307748886 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307348689 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307153327 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306421784 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307985314 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307883198 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308115937 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308314017 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307557038 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308499513 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308896908 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307783961 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308950992 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307987187 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308222457 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307983029 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308005144 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309973566 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309222376 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309352965 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308855668 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309730979 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308031135 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308303586 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309961862 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309473321 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309306006 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309496274 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310289342 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309442835 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309631342 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31053941 seconds)
  done (took 87.501787938 seconds)
done (took 1805.341815899 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.466547688 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.423563372 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.303419425 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.315689978 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.303419947 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.29899263 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.31428462 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.302644822 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.303358921 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.303535237 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.302628578 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.493908927 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.298640249 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.302553774 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.30238432 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.398864615 seconds)
  done (took 26.648312051 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.333588328 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.311830347 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.433778027 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.327409911 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.335132956 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.516952565 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.36658605 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.307711101 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.500732913 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.332081683 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.31126636 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.332986933 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.309356873 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.306036758 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.326731969 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.51957393 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.582028395 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.31264671 seconds)
  done (took 28.980067042 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.820232589 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.32711147 seconds)
  done (took 5.361805524 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.329620472 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.308976348 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.308906942 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.307880512 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.300853225 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.318277278 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.306371025 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.308018204 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.31870626 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.448761733 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.310462341 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.322591985 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.329160676 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.310468523 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.314286459 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.353517232 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.462624064 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.316316187 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.314417071 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.314983946 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.309730871 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.415587806 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.357622723 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.31667481 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.449944475 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.303375207 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.311843944 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.317600845 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.43824017 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.317153437 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.308960904 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.310389738 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.311643199 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.30406496 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.833014164 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.338705618 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.318649536 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.338894013 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.314175713 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.475461809 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.312873339 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.318214522 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.304549793 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.811405146 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.451358962 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.442162886 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.322177393 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.312450421 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.312446059 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.38098704 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.311947606 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.313346689 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.373257969 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.162047458 seconds)
  done (took 84.354033515 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.313414188 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.304112687 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.484846003 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.332581091 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.305676384 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.304094761 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.305598059 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.630294072 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.33004899 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.307305802 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.614282772 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.923529382 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.331932179 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.363964966 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.1712642 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.379269105 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.306470635 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.323718811 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.308619817 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.312019281 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.883748415 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.305963681 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.323173791 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.477830135 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.34647019 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.860894503 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.306441086 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.304977935 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.327803423 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.306458932 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.875289585 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.329899438 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.376184663 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.308175779 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.596415582 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.723377421 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.684456038 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.307787252 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.333346435 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.307782788 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.314494166 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.842799044 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.703859475 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.308726322 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.308157826 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.855485591 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.307965345 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.321158152 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.310212703 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.560735112 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.306743116 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.308729431 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.328502125 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.308410122 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.306826377 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.398958842 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.397701634 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.863550706 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.310185788 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.310400076 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.334321451 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.309666918 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.316734572 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.3128889 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.327439081 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.710688825 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.462951352 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.316364774 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.708435476 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.871010004 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.327618439 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.938200299 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.328062093 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.325465555 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.522273929 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.310375865 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.309517443 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.877274017 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.360411815 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.310524278 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.688570767 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.31265451 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.620102357 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.336377829 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.311537584 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.904888148 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.311992093 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.322767572 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.311704199 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.312006683 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.312830581 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.331902724 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.604863393 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.355614225 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.311669399 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.310956239 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.322147246 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.314038196 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.310432982 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.317076065 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.936338652 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.340692818 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.310944919 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.314143433 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.31099072 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.311602535 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.31398876 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.313388966 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.583205415 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.311979587 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.335856328 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.314457045 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.312001147 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.317286869 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.477670655 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.319808735 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.660327362 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.313886292 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.312521292 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.338633481 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.311636694 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.36453265 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.311028123 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.316903456 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.247276865 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.577068729 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.334406624 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.332990173 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.311908264 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.331980571 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.332558303 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.331507761 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.358647112 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.316992219 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.147906886 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.337497111 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.344968774 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.313003492 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.31923885 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.313077047 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.336886753 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.316293018 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.615377797 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.60762428 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.468570692 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.325194133 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.314474116 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.138383092 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.363394396 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.498551156 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.337641455 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.31503081 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.565447739 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.544370557 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.316536194 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.314542155 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.315968424 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.578807857 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.315542184 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.629417312 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.909717465 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.334903624 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.323590856 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.157017154 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.030070514 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.316951556 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.321019852 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.617546142 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.333443203 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.315619737 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.315957189 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.31553161 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.335166298 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.335843986 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.319924392 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.317645347 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.315504678 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.366345418 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.508778907 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.339224841 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.316758741 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.865407857 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.335652399 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.318923815 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.321372634 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.317845859 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.316703347 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.389610177 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.317461991 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.338227295 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.319099931 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.320084443 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.880862502 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.31785746 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.321435081 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.512207838 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.066682485 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.337414177 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.320538181 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.336248056 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.234676884 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.892467113 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.357926681 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.668712427 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.326057605 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.359506427 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.317757653 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.404080228 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.891638587 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.320051059 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.338328215 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.025194882 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.337153089 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.854072216 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.316627361 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.320875361 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.975414336 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.336967748 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.322307326 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.317410892 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.342260887 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.622364999 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.320321364 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.340223164 seconds)
  done (took 495.81989533 seconds)
done (took 642.374848068 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.318194973 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.32478717 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.316501748 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.322432098 seconds)
  done (took 10.512672291 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.333002499 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.324981202 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.329482042 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.324070734 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.331520148 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.324345685 seconds)
  done (took 9.198753473 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.320029992 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.324880943 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.324698133 seconds)
  done (took 8.200339314 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.551577627 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.341753646 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.691789846 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.353404753 seconds)
  done (took 9.171748723 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.329213758 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.330465707 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.330820478 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.331756245 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.334840958 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.336049783 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.33390639 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.331920457 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.33580994 seconds)
  done (took 13.22709306 seconds)
done (took 51.540734731 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.330878339 seconds)
    (2/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.441407132 seconds)
    (3/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.416706371 seconds)
    (4/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.701679583 seconds)
    (5/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.362530589 seconds)
    (6/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.382234107 seconds)
    (7/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.32304029 seconds)
    (8/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.400920241 seconds)
    (9/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.432742244 seconds)
    (10/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.356509865 seconds)
    (11/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.359036157 seconds)
    (12/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.362625133 seconds)
    (13/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.549536378 seconds)
    (14/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.29184428 seconds)
    (15/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.402992546 seconds)
    (16/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.457770509 seconds)
    (17/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.5773887 seconds)
    (18/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.360469015 seconds)
    (19/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.497533599 seconds)
    (20/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.015024811 seconds)
    (21/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.3808289 seconds)
    (22/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.039455915 seconds)
    (23/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.009332865 seconds)
    (24/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.388457737 seconds)
    (25/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.503590747 seconds)
    (26/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.598289038 seconds)
    (27/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.396990308 seconds)
    (28/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.543571005 seconds)
    (29/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.492056137 seconds)
    (30/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.048095271 seconds)
    (31/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.328077345 seconds)
    (32/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.343757531 seconds)
    (33/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.352014777 seconds)
    (34/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.401667147 seconds)
    (35/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.55352325 seconds)
    (36/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.44579075 seconds)
    (37/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.373006207 seconds)
    (38/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.330464013 seconds)
    (39/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.508979643 seconds)
    (40/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.359011149 seconds)
    (41/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.427604089 seconds)
    (42/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.37611947 seconds)
    (43/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.416593035 seconds)
    (44/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.679751052 seconds)
    (45/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.44346385 seconds)
    (46/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.361184473 seconds)
    (47/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.488893716 seconds)
    (48/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.523672353 seconds)
    (49/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.315683819 seconds)
    (50/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.479060374 seconds)
    (51/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.488519526 seconds)
    (52/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.414143909 seconds)
    (53/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.542256342 seconds)
    (54/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.456659332 seconds)
    (55/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.44716434 seconds)
    (56/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.247210308 seconds)
    (57/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.567032968 seconds)
    (58/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.131028417 seconds)
    (59/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.33571655 seconds)
    (60/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.542988324 seconds)
    (61/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.372908768 seconds)
    (62/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.498390303 seconds)
    (63/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.53991527 seconds)
    (64/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.498945471 seconds)
    (65/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.54438534 seconds)
    (66/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.469529432 seconds)
    (67/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.358198241 seconds)
    (68/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.336280362 seconds)
    (69/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.410185668 seconds)
    (70/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.989997228 seconds)
    (71/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.344391219 seconds)
    (72/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.497513321 seconds)
    (73/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.555348474 seconds)
    (74/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.480010765 seconds)
    (75/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.353443501 seconds)
    (76/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.411545226 seconds)
    (77/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.983909471 seconds)
    (78/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.335261022 seconds)
    (79/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.408882017 seconds)
    (80/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.420018631 seconds)
    (81/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.388252591 seconds)
    (82/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.323578572 seconds)
    (83/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.359060397 seconds)
    (84/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.403540276 seconds)
    (85/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.140314033 seconds)
    (86/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.38992821 seconds)
    (87/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.318140252 seconds)
    (88/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.402090938 seconds)
    (89/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.329915349 seconds)
    (90/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.484743312 seconds)
    (91/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.381213792 seconds)
    (92/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.142701838 seconds)
    (93/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.337243922 seconds)
    (94/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.560155457 seconds)
    (95/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.518177302 seconds)
    (96/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.126614475 seconds)
    (97/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.514548953 seconds)
    (98/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.420765157 seconds)
    (99/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.318846137 seconds)
    (100/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.423383032 seconds)
    (101/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.50751475 seconds)
    (102/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.013718771 seconds)
    (103/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.729824994 seconds)
    (104/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.459356936 seconds)
    (105/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.402999129 seconds)
    (106/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.383903522 seconds)
    (107/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.348059108 seconds)
    (108/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.028800515 seconds)
    (109/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.363038729 seconds)
    (110/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.446610626 seconds)
    (111/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.333413787 seconds)
    (112/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.327835085 seconds)
    (113/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.477266437 seconds)
    (114/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.447375112 seconds)
    (115/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.361889358 seconds)
    (116/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.292820767 seconds)
    (117/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.394470241 seconds)
    (118/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.40775238 seconds)
    (119/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.475985378 seconds)
    (120/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.386586089 seconds)
    (121/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.391263859 seconds)
    (122/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.373369799 seconds)
    (123/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.322207448 seconds)
    (124/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.486017922 seconds)
    (125/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.361716712 seconds)
    (126/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.164771028 seconds)
    (127/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.433619289 seconds)
    (128/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.368223406 seconds)
    (129/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.499331557 seconds)
    (130/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.358380259 seconds)
    (131/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.520761296 seconds)
    (132/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.545500124 seconds)
    (133/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.116717107 seconds)
    (134/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.397472672 seconds)
    (135/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.322778325 seconds)
    (136/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.561188257 seconds)
    (137/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.44509634 seconds)
    (138/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.368245725 seconds)
    (139/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.427696371 seconds)
    (140/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.258682126 seconds)
    (141/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.518491219 seconds)
    (142/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.733658985 seconds)
    (143/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.365673917 seconds)
    (144/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.433455998 seconds)
    (145/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.359078616 seconds)
    (146/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.362553983 seconds)
    (147/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.366288585 seconds)
    (148/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.321957247 seconds)
    (149/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.409317599 seconds)
    (150/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.427502072 seconds)
    (151/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.024558875 seconds)
    (152/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.351994081 seconds)
    (153/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.323959859 seconds)
    (154/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.47184895 seconds)
    (155/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.35441681 seconds)
    (156/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.447332254 seconds)
    (157/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.37849456 seconds)
    (158/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.409408991 seconds)
    (159/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.43478054 seconds)
    (160/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.480623768 seconds)
    (161/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.366974622 seconds)
    (162/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.083753124 seconds)
    (163/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.350148034 seconds)
    (164/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.365926426 seconds)
    (165/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.484488679 seconds)
    (166/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.107929185 seconds)
    (167/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.341788462 seconds)
    (168/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.569323358 seconds)
    (169/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.470454043 seconds)
    (170/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.487242987 seconds)
    (171/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.007140977 seconds)
    (172/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.556210233 seconds)
    (173/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.350556412 seconds)
    (174/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.351806366 seconds)
    (175/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.452029444 seconds)
    (176/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.322872597 seconds)
    (177/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.482142941 seconds)
    (178/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.452437838 seconds)
    (179/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.453082273 seconds)
    (180/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.526348399 seconds)
    (181/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.424178944 seconds)
    (182/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.638777982 seconds)
    (183/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.412613661 seconds)
    (184/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.373354023 seconds)
    (185/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.487213589 seconds)
    (186/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.464909772 seconds)
    (187/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.486399028 seconds)
    (188/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.334254667 seconds)
    (189/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.372942721 seconds)
    (190/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.369643636 seconds)
    (191/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.528477366 seconds)
    (192/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.439913771 seconds)
    (193/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.563473711 seconds)
    (194/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.173206723 seconds)
    (195/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.331910813 seconds)
    (196/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.569886053 seconds)
    (197/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.344692108 seconds)
    (198/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.11355473 seconds)
    (199/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.581491643 seconds)
    (200/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.56084275 seconds)
    (201/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.382465281 seconds)
    (202/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.559372394 seconds)
    (203/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.468052467 seconds)
    (204/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.345793822 seconds)
    (205/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.391940874 seconds)
    (206/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.505289023 seconds)
    (207/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.434994912 seconds)
    (208/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.40446234 seconds)
    (209/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.555509669 seconds)
    (210/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.443607447 seconds)
    (211/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.144030943 seconds)
    (212/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.385259851 seconds)
    (213/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.389601696 seconds)
    (214/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.452291156 seconds)
    (215/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.393427855 seconds)
    (216/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.372447439 seconds)
    (217/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.48517123 seconds)
    (218/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.456121162 seconds)
    (219/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.460016836 seconds)
    (220/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.090905665 seconds)
    (221/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.385071548 seconds)
    (222/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.459011118 seconds)
    (223/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.473195093 seconds)
    (224/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.427591328 seconds)
  done (took 373.762870266 seconds)
done (took 374.995276037 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.390285876 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.524420673 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.342731891 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.341854152 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.386790015 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.335326083 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.386821103 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.351840135 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.353468278 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.353392649 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.336370068 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.355154493 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.355700129 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.382318521 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.457113098 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.350179876 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.343291611 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.348882557 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.391015997 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.410823445 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.387167496 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.387346912 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.363041982 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.34321817 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.391150596 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.392225568 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.350329728 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.352355738 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.350209485 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.391349313 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.339623437 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.348769316 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.400739601 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.399039466 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.387927801 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.351152718 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.387643643 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.526702287 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.387904719 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.384414433 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.354766198 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.401495023 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.355872993 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.356121553 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.399945185 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.364046872 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.392933152 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.46912749 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.340813651 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.347835936 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.392379115 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.412145336 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.355598572 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.346964981 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.338336319 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.487953318 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.351335415 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.392595419 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.351984686 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.391005902 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.458652354 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.393031954 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.412364287 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.392415262 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.353692709 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.359127595 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.35162918 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.412270966 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.353124654 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.390086804 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.390460204 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.357550177 seconds)
done (took 108.598012491 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.469020157 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.344827049 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.484375311 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.353435075 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.510451257 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.492291436 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.351184006 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.354181899 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.350754218 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.137853746 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.352745267 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.3526803 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.347586214 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.389549478 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.472401706 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.352770392 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.351796317 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.039522316 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.351431256 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.484290966 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.345043224 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.35284848 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.352304673 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.138618803 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.348178301 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.34206153 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.486561847 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.353110111 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.039827068 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.343180946 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.34482586 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.039239948 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.487913977 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.372823211 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.363110262 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.363502135 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.511967557 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.374883172 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.466938168 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.469425066 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.487027607 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.388985963 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.343533494 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.3481139 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.356402337 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.353313351 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.353787791 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.383919931 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.349834068 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.354923718 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.040771179 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.365298445 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.354870824 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.355584884 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.355156862 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.382874541 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.35491416 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.353798158 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.48947345 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.354928156 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.472608042 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.140665729 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.142357228 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.356312814 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.347161297 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.356057289 seconds)
  done (took 109.435219054 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.41699063 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.425452573 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.470015334 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.369201764 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.401629598 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.473990305 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.370491595 seconds)
  done (took 11.181327711 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.356211049 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.3570355 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.402234567 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.399529276 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.35525097 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.50699479 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.356870164 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.362254038 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.355361887 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.403850284 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.356326822 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.35723258 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.367618887 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.35161678 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.400271479 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.363284473 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.465962334 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.3535844 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.356620458 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.503072965 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.357081145 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.366696003 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.40921346 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.364410867 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.357185416 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.357732419 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.122082766 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.356706667 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.357160505 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.357001473 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.358239263 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.405523912 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.35855367 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.353026057 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.358853465 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.46880825 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.357359509 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.35841445 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.358641615 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.354805414 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.358652987 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.359207375 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.359697046 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.359319183 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.35806095 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.376807842 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.357516858 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.359037033 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.35915205 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.359638216 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.404287746 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.359179751 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.360159971 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.359686726 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.40935531 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.36863963 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.357810204 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.358795274 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.360609907 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.359522457 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.50633416 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.402173453 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.35972551 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.40258431 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.360907169 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.360919099 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.360745115 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.359379949 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.446705283 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.360378195 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.402693966 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.360551754 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.536420992 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.37916606 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.362507893 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.357057854 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.357825065 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.358424983 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.352147806 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.360743509 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.360566339 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.35553306 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.362062207 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.360872883 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.362150832 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.512674382 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.464539328 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.361406579 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.368118161 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.362804703 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.360898887 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.409264946 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.360289207 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.361233358 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.408540398 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.472053019 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.419072756 seconds)
  done (took 139.842080133 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.369399082 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.369722983 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.361243455 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.384331615 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.357998532 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.357022008 seconds)
  done (took 9.458947332 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.358249665 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.366684218 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.361979801 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.362286823 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.361477826 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.362924132 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.361525518 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.359201142 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.366101467 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.363396716 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.363270012 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.363546019 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.363281445 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.361821913 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.363037756 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.3634083 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.362944013 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.364910561 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.36345936 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.362005795 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.357358228 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.363231035 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.362714243 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.360351863 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.36801516 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.364881234 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.37932785 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.364366204 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.366191567 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.365274505 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.386703856 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.364194319 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.360780105 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.366907011 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.369003417 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.362026834 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.370602281 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.366248265 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.365046822 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.366236134 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.367499793 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.364834837 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.365221567 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.367390292 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.362526789 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.367093031 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.373328011 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.380955036 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.364869112 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.366748971 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.367913621 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.366460567 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.366265474 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.367337142 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.363788445 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.387276971 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.371681872 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.367785442 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.365962037 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.363244269 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.373016612 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.366818433 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.362583824 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.370095219 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.368345753 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.368289526 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.363541702 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.371173434 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.366463606 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.369705232 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.368645215 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.368252024 seconds)
  done (took 100.634615624 seconds)
done (took 371.800078753 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.329875043 seconds)
  done (took 4.595458149 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.510154606 seconds)
  done (took 3.776143631 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.296562037 seconds)
  done (took 25.570734888 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.384182543 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.41802888 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.372158681 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.357808726 seconds)
  done (took 10.797650578 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.743721262 seconds)
  done (took 4.008752237 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.375016593 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.374091496 seconds)
  done (took 6.016073446 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.672028489 seconds)
  done (took 3.93727616 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.934951109 seconds)
  done (took 4.209368309 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.389774086 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.376696424 seconds)
  done (took 6.038010998 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.349085716 seconds)
  done (took 3.612852789 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 40.146713887 seconds)
  done (took 41.413927066 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.37551016 seconds)
  done (took 3.644710489 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.394627911 seconds)
  done (took 3.660023148 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.51791043 seconds)
  done (took 6.783493223 seconds)
done (took 129.327983979 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.358332378 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.365013589 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.365312505 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.365945235 seconds)
  done (took 10.721492053 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.422732171 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.421548601 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.42268291 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.423432055 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.422065404 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.422579014 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.396693012 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.396339842 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.422148602 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.42251223 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.42303408 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.422501283 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.424434787 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.397075476 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.422564894 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.423687253 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.424419553 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.423906945 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.397659123 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.423143827 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.372223724 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.423513622 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.423458738 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.371843119 seconds)
  done (took 35.215567743 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.862667992 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.440406456 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.521483402 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.421336812 seconds)
  done (took 7.513079811 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.448884515 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.449295874 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.464340964 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.500690267 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.514397316 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.461511169 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.396395354 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.393037658 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.380188203 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.448838189 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.500711131 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.440960901 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.529784104 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.371630067 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.579757204 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.372233494 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.372615121 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.450252389 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.501955043 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.51447671 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.372407746 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.450240342 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.453838138 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.441812286 seconds)
  done (took 36.078789223 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.381830136 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.388435508 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.375383392 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.390446454 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.375971619 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.375256944 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.375373194 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.3820084 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.374540494 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.374235373 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.377858761 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.390156718 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.379559138 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.376226144 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.384125967 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.376425553 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.383143419 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.380918075 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.376560243 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.38210221 seconds)
  done (took 28.871105934 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.361699474 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.363672752 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.714796317 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.619312314 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.364637713 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.369268787 seconds)
  done (took 14.064941445 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.452581315 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.626095475 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.368654733 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.78608192 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.869462207 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.370667874 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.372125831 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.65353939 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.031273661 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.022831032 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.4425746 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.448714588 seconds)
  done (took 20.717084331 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.381527998 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.369850258 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.375632151 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.384339241 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.433430193 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.393890621 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.377336046 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.36368304 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.438062091 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.456930707 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.393275142 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.435166171 seconds)
  done (took 22.076485705 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466568334 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.371106588 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.391434453 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37218496 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376126495 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.220704372 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.431617962 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.190629032 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.404517921 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.647164828 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388550477 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472509604 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.626624439 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377870971 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.376031937 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.357326799 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.630660461 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937898512 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378402583 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379312427 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412730068 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.377827433 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.377576548 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.625817575 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.395073598 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.372344378 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.634344167 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.37414367 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.705667842 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.39189406 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383282748 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.373083041 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.648714237 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.104292211 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.498470325 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.623701704 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410689797 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.37348459 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.394321751 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.38701326 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380081794 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.376050263 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382554782 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373368059 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.373009501 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380177449 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.199050116 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.407965809 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.373251534 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.374072945 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.684032311 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483977573 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.380924662 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.375065952 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.426511029 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380068276 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.380159291 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.505039165 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980182225 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392726437 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388879184 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.379040683 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.370147845 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387623409 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.094059662 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.40806589 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.380856445 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.380783581 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374504692 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.383828389 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.398450827 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375400269 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.401196506 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375360146 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.227197414 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.415629658 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377681745 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980799932 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387140613 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.379697715 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.608353097 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375412753 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374667825 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.376358468 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.376401058 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.194044063 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389776249 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.363626658 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.424947754 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.214105867 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.650932232 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41836667 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406452253 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.600373474 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.362658627 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376148445 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.386128623 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379329071 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398797292 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.182405777 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402998364 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.382322429 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.635843089 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.587409419 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388200467 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.367884357 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.969605834 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41672276 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.399048177 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.387373139 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.636240411 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.077875906 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.420023963 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386077471 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394619739 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.378710273 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.232245124 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39548208 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.487396349 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.378748232 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.679138795 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.2956245 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386067579 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444799324 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383267514 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.379831108 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391752607 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387151269 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.377959731 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.623551728 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.418019978 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.390691666 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.378388785 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379294926 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.392148934 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378671623 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.385181876 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.603258734 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380810163 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.656829117 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37871867 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378948571 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379450013 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.602074536 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.394675389 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.723802674 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.642582519 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383076556 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.396372172 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.394738306 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398918261 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484743224 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401961843 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.392003498 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.644391104 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.386800777 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.386061143 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397455648 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.389088772 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384400477 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.389639912 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378861552 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.076570492 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377758788 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.38832623 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.272146765 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.39725919 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449161933 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.390783922 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.63792445 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.416018979 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37524284 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.389556991 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.399312012 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.607294476 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.39245736 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.399075759 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.468935223 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.948671441 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.084750774 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.42512104 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.382126617 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.381544926 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.383087981 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383016852 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381647258 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.382956988 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.636626206 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.423001752 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.38263089 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.064753644 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411118671 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.40181572 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.397001513 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.395874079 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.393641952 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384514824 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.392382267 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398779342 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.407073454 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.399887497 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.525804862 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.399935806 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.384422772 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.902121589 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.392455644 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.385080709 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.383359161 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417941768 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.400042219 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.284693578 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.670197496 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401222244 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.696643606 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.406845932 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.407368087 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.385201879 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385739194 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406053388 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.393969485 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39819599 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.395949415 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.404323103 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394488969 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958111932 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.246655652 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.010164792 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412374015 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.427789942 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.385780945 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.20858841 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414789012 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386817081 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.650633156 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.229484814 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41416664 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.955887042 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.420815744 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.264754427 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.698945513 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.625299402 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408546783 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.393911266 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.704800902 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.605210808 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421857005 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.400725031 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38682115 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.373255169 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.048339544 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.415301037 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.475466436 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.215431297 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431396351 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.391977131 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.425479655 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.409457008 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875141051 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.415226889 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388844888 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.402799763 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.390486536 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374749892 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.423875186 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389655122 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.107903974 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.42428456 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.952290839 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416408094 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.641187618 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.425162102 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.392279843 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.403147197 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.405575293 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.648712734 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.70096197 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396215781 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.393027309 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.020813116 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.28914876 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.396496961 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390201443 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.24951464 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398228369 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.727540651 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.409382891 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.400691287 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39113847 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.388872551 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389280301 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.389634835 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.399552063 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357833601 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.96256793 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.397121319 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388044163 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.431710391 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390060981 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.647745295 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.406118131 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.07091831 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.645198904 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391826326 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412629221 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.395799435 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392958088 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.380510268 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.390760912 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.391788208 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.446080805 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.623145748 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.392791939 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.383895557 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.398160774 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.608960373 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.392809002 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.391168782 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.697733969 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.419977676 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.417219124 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.252262384 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444205453 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.391273989 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400019339 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.387637154 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457009909 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483873404 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.650086643 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.429464802 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.403713729 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876911004 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422500547 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400236287 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.40928746 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.494891515 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393364304 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.429655052 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.168132888 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.078678487 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.287409964 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.085706057 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.733624412 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.401543842 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402903824 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393965329 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.556225667 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393969003 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669107835 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394610862 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.438949613 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417788341 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394109143 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407288408 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.607683083 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.671300512 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39457259 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395612796 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395096177 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.394636371 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.404918107 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.604598035 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967837664 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014129456 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398740812 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.409296076 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.219369528 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.701091242 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396656242 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39536309 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396171816 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.396818351 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.417390271 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.435230432 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401678594 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.54085827 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.707884562 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.147912509 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.433069493 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.427326237 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.91568369 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395570912 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.678554806 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396685398 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.658438118 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.106017976 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.216132485 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.663644643 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466243997 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.649145317 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.419768255 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.559837162 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.402903008 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.397840221 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396948559 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396554769 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.398092346 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.406928052 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.069327967 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.685283053 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.403507229 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.401162246 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428349694 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.406296774 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.620314423 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.231713889 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.627438879 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.406488552 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.401519426 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.397505266 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.087928846 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.731661294 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400919835 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.403132922 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.671394655 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.421732784 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.421177299 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.917405735 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.399939268 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010237717 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.374555195 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420344054 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408509185 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.200781828 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.068970851 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.438544538 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.975786787 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.406911037 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41139799 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.679234515 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.405709583 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.402576702 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.683376699 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.404325479 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.404160975 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.659544951 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.086569075 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.308725857 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.409418205 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404386356 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.422516544 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400491939 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.446653762 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407579314 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400778999 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.901437066 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.428794064 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400099968 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.413153768 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.407100082 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406300687 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.406585767 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400995874 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.408677406 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.388058127 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.419870267 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.40908696 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.539355794 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.039033789 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425074103 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.079518527 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.728596814 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.658598554 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.406874998 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.393317711 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.406474915 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4027586 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401035959 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402329675 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.407732404 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014633079 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.408912827 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.418263903 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.40731826 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.402216649 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.612154304 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.401979213 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.667036918 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.435429272 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.422987321 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.388647878 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402541768 seconds)
  done (took 991.412265028 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.41967872 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.438278911 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.423102582 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.479950528 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.453138178 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.54580464 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.436312671 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.453668872 seconds)
  done (took 20.952218697 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.397337324 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.406548426 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.41311871 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.408566947 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.403937563 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.948401391 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.433525991 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.406690421 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.423969563 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.411292397 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.412124752 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.404977718 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.411480338 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.403111553 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.390035938 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.407829244 seconds)
  done (took 33.397052451 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.748494063 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.705172291 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.038111425 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.416279799 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.440278803 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.415961481 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.82702519 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.435943196 seconds)
  done (took 28.33104451 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.409540293 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.409319312 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.409242064 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.410423272 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.410751941 seconds)
  done (took 8.352495244 seconds)
done (took 1258.969474164 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.411285589 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.409471781 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.410418658 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.410672653 seconds)
  done (took 6.945167534 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.391513717 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.392591125 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.393092411 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.4055131 seconds)
  done (took 9.885659485 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.232268861 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.121256066 seconds)
  done (took 5.65716555 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.907176435 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.925156015 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.915023846 seconds)
  done (took 7.052000053 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.699617078 seconds)
  done (took 3.006859916 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.316140598 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.401975545 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.088208905 seconds)
  done (took 8.113746872 seconds)
done (took 41.962302198 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.417296008 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.653996116 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.560332825 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.400711998 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.586913866 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.560948015 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.185151146 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.413178169 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.411106273 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.407964915 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.400791944 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.567650728 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.163979302 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.654365841 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.165744938 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.654198395 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.567742328 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.405909199 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.409355693 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.40207665 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.198988165 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.406715891 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.40621433 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.408680412 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.568412857 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.551135697 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.41470629 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.662932821 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.412456078 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.418307659 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.551329399 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.403355824 seconds)
  done (took 83.700467393 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.401991133 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.417741344 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.404006286 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.422321102 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.429353665 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.403818763 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.433555493 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.403436079 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.410382052 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.403882879 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.402771771 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.430837353 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.421659493 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.402806163 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.40597388 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.425586673 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.403520787 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.405881561 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.403983317 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.423475445 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.420457611 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.403550063 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.409012531 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.403815495 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.403618826 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.426795955 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.424027746 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.414109006 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.404027375 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.405240074 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.405383498 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.426181967 seconds)
  done (took 78.511871101 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.404605667 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.405166809 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.421666368 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.404109893 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.424118377 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.442269159 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.407822878 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.413007478 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.404559274 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.405383516 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.405618434 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.425878687 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.425271848 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.422573573 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.407684993 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.424079353 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.405600146 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.429212691 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.405241565 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.411689157 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.409698407 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.415671415 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.417457793 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.417191946 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.406323101 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.433784402 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.406892603 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.406757905 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.427964807 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.405286676 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.414991797 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.406125132 seconds)
  done (took 78.573703547 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.692525887 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.418099566 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.421872955 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.412873506 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.421646698 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.418157846 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.414637771 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.699171485 seconds)
  done (took 15.209086756 seconds)
done (took 257.300497655 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.413522067 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.975110167 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.460464362 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.412531136 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.456197418 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.441006302 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.659191457 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.459962397 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.662641568 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.44471576 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.432517005 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.431913755 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.371854715 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.577787932 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.32500806 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.427251892 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.412063326 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.407672834 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.051644967 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.725050176 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.439631226 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.410211621 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.338576221 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.438455793 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.400100623 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.505108552 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.526052073 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.655042583 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.587277934 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.503311411 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.995312359 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.415258014 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.41607703 seconds)
  done (took 66.490671102 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.413675112 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.544072962 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.420963841 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.420688682 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.547784913 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.444407827 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.415270746 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.421167874 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.420916532 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.421317132 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.421369809 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.422226314 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.422520328 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.470422947 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.550828566 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.440018878 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.416767955 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.544012568 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.416771503 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.417156238 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.468202573 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.423489489 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.423563329 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.474293023 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.421886076 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.42352842 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.544394697 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.446147257 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.423991075 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.543076233 seconds)
  done (took 44.898981731 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.4229578 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.077365479 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.262346671 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.42588079 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.419388988 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.423544932 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.759265027 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.424740366 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.421995764 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.422628249 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.98371322 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.447578707 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.457704908 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.293740529 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.422493544 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.424757543 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.425075676 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.420176667 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.088990668 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.431082698 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.784582865 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.426195177 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.764434862 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.43077517 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.446060479 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.422170173 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.425271571 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.322960913 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.445438408 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.985319435 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.398500989 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.764228564 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.261222067 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.299322732 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.385964058 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.433671703 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.426867354 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.991630015 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.444524791 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.421920023 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.762249 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.421917063 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.275171772 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.140300752 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.444481548 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.426306198 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.341209884 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.011233086 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.730542338 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.428864654 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.30111819 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.424096007 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.428696387 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.423778706 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.710661358 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.423999922 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.422409601 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.374910835 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.451512569 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.763622912 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.427382312 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.424288531 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.084540648 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.423325307 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.085004039 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.424404997 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.431747876 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.446951834 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.279073496 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.426779731 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.161619378 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.444551822 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.428553985 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.987610135 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.104978078 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.406980837 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.425572522 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.093448912 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.291187746 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.786362677 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.428566832 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.29830666 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.790506991 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.426364435 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.431370412 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.431112914 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.428901864 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.51001219 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.763517249 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.095937388 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.157047433 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.393272166 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.792426284 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.43430936 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.425946628 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.375352121 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.454479415 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.430535544 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.275390099 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.160907286 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.44628403 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.433705053 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.17040038 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.449253224 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.771000823 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.431180328 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.288439608 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.427822173 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.510207241 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.430735303 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.432600025 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.452975126 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.767571192 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.429394394 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.431629433 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.142313542 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.026954635 seconds)
  done (took 202.896109234 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.422900539 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.42048099 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.420403656 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.421153279 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.419657413 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.428824 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.419720057 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.421105505 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.427596554 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.42125276 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.420841127 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.429674521 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.428151089 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.420634629 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.420497395 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.421747262 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.4217124 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.445938162 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.42256773 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.421915813 seconds)
  done (took 45.800073861 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.43449347 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.088722628 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.085241857 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.432155985 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.432663543 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.428287772 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.494097902 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.455013284 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.433166164 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.781839295 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.635410942 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.456508514 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.43500239 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.434387246 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.066493988 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.424846715 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.782935241 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.091751714 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.435825052 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.090907701 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.425667339 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.434943682 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.427763956 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.090996594 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.810090549 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.77114248 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.497580669 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.112222295 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.455401119 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.433464932 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.091086063 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.435712604 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.430167228 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.09210907 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.454679367 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.447745057 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.435496284 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.497593011 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.518218923 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.805653888 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.17951559 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.799679966 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.44729304 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.615408239 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.436482566 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.423793733 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.101457563 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.457496428 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.426710759 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.43758788 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.441858227 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.076601524 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.452117947 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.078560897 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.458646838 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.437596179 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.09461948 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.078930177 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.091448078 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.637032311 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.451083152 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.77437841 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.438353694 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.103008546 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.459366132 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.436734963 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.439070965 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.640401504 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.119022614 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.776161716 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.787901216 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.787681268 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.437829707 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.506796828 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.458993721 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.866480532 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.505463718 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.854744762 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.79099288 seconds)
  done (took 132.722103914 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.738249339 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.559460152 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.89655381 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.104442772 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.434988876 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.576015774 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.560706973 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.71781012 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.434104165 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.510539473 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.181043195 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.577290122 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.2938059 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.532417188 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.567314872 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.592694127 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.899820831 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.432775229 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.212353092 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.163257236 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.435758177 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.572284004 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.032845755 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.663256046 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.442664618 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.076333324 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.465308854 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.180322659 seconds)
  done (took 56.183768195 seconds)
done (took 550.300858497 seconds)
SAVING RESULT...
DONE!
