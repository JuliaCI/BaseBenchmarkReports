cset: moving following pidspec: 19846
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.396500355 seconds)
loading group "string"... done (took 0.557878271 seconds)
loading group "linalg"... done (took 7.264232696 seconds)
loading group "parallel"... done (took 0.159519004 seconds)
loading group "find"... done (took 1.168468138 seconds)
loading group "tuple"... done (took 1.775966922 seconds)
loading group "dates"... done (took 1.256809637 seconds)
loading group "micro"... done (took 0.223646757 seconds)
loading group "io"... done (took 1.020115231 seconds)
loading group "scalar"... done (took 39.116103226 seconds)
loading group "sparse"... done (took 12.217630152 seconds)
loading group "broadcast"... done (took 0.932163401 seconds)
loading group "union"... done (took 12.847890138 seconds)
loading group "simd"... done (took 4.489573813 seconds)
loading group "random"... done (took 9.255309843 seconds)
loading group "problem"... done (took 1.859843438 seconds)
loading group "array"... done (took 21.021129627 seconds)
loading group "misc"... done (took 1.693103478 seconds)
loading group "sort"... done (took 3.361545738 seconds)
loading group "collection"... done (took 17.36380928 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.519828351 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125460425 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.1187491 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.120237951 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.147583565 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.111965352 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.123936444 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084457454 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.784861281 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.150739359 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118995307 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.432301124 seconds)
done (took 5.145881163 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.176328347 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086325286 seconds)
    (2/2) benchmarking "String"...
    done (took 0.083614362 seconds)
  done (took 1.297652968 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065190852 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.125751291 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.068172997 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067775054 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066819093 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065939535 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066527963 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066015504 seconds)
  done (took 1.654663277 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075708426 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069090134 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068425971 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068371358 seconds)
  done (took 1.409634684 seconds)
done (took 5.742979722 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.801136111 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.204117718 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.188288173 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.412090646 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.13186739 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.159347227 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.636403203 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.329984258 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.192811789 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080135038 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104992298 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.328919249 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.110991187 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.631635494 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074288711 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090397827 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.138029772 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.408811853 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067057182 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081445596 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.08855048 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128344148 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.084632902 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.07431763 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.147325247 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067582095 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.137603763 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080223897 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066565246 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.214281638 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172473032 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.652566887 seconds)
  done (took 10.256740699 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.100063171 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.100177858 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070677611 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.124867898 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.096540121 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069880217 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070829835 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067113329 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.087254419 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.12869528 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089600676 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.10178535 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065359238 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068816313 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084610486 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204241732 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079773722 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.08213714 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070237949 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075954186 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.108442678 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078440367 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077570021 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077448037 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129210253 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.181537495 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099415446 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098646204 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.06664552 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080627384 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114797736 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125489855 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06520084 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066050702 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124650983 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094532317 seconds)
  done (took 4.593340809 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.007154296 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.145869492 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091568199 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.134824077 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064441534 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.109460015 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066448899 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080937969 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.209845682 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.448986389 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.592482798 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110962051 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104011939 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067080345 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067899205 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067308915 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.47967908 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.09693905 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.106597466 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081974488 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069632462 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068166561 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.363884768 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070305687 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065176295 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070032058 seconds)
    (26/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.113332908 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.058254237 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.126445212 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067230006 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.951751752 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.127630157 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066398682 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100903248 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.162034891 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08797848 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.277743431 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070198155 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065468599 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.15414726 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.069747208 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065983879 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.084198606 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103968203 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113353495 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.064982264 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067218861 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161472 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065026506 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079644331 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.6770815 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.151291845 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.07753043 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.06374625 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.256221478 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.088095245 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069543355 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065234503 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.182513264 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.135305381 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067466383 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066863982 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069077684 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069203579 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.385529728 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.06592477 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.185259853 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.068017575 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077109111 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069304022 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069709392 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072695864 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075444616 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.087749446 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066138125 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075139016 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065575127 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.0655167 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066927041 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083417821 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.378436852 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066980449 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067856806 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064694728 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.089222079 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097069393 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.067894431 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065642558 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100083506 seconds)
    (89/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.063879581 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067968803 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066345477 seconds)
    (92/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064341732 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.106852081 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066591199 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083358141 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069345878 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112879221 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.065854625 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.176748398 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067557951 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064554968 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096651036 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069810653 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099082528 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.081280587 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073030468 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.41856643 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065853839 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065130829 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068849505 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065269517 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067382605 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066253139 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079587644 seconds)
  done (took 21.45995036 seconds)
done (took 38.444707861 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.241121642 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.073866686 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074517929 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077144653 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074190123 seconds)
  done (took 1.761396281 seconds)
done (took 2.958733158 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.123071667 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.100069166 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063767947 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097962296 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06423459 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102387841 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.101661034 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082184714 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100630646 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064066645 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097568926 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064667423 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064320985 seconds)
  done (took 2.347899981 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.086857662 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085613208 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070739188 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084268626 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063648784 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083244861 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081670986 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.089932588 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081665947 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073068837 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064208723 seconds)
  done (took 2.058126544 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.086511423 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.087056873 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070217731 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08614695 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063976859 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082402637 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082033636 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.086169717 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082153004 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074189999 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063996904 seconds)
  done (took 2.053175618 seconds)
done (took 7.645065549 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.080531878 seconds)
  done (took 1.261121675 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.599714475 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.153911212 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081297489 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.112121296 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.18926232 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.118966382 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.275682957 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086415511 seconds)
  done (took 8.982652328 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.104205878 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068678022 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071231042 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069565037 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069249014 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071761966 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.07124101 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068223198 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069205093 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069113529 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070518847 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071371801 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.07173235 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067820063 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.07079635 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.0691725 seconds)
  done (took 2.408711683 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092257466 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091172729 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073035861 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074252922 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071909903 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071303976 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.07351463 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072746082 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070455047 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071810662 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074274927 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073033678 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071164283 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064306698 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073087942 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074939329 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070969584 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073640981 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074176527 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074548376 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073912307 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063912887 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.0713309 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073838308 seconds)
  done (took 3.062514359 seconds)
done (took 16.904203655 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.118796197 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071398806 seconds)
  done (took 1.376340114 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.085185934 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084324162 seconds)
  done (took 1.364720996 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085848961 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.066099552 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.09099596 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078259459 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066275595 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065730557 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.088703188 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065656263 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065291825 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065484509 seconds)
  done (took 1.932953921 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.071091195 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.080952349 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070372345 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081181854 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074031402 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063776718 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071987343 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067526549 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078393137 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062311904 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070844189 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082528402 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070862395 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084299949 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072708741 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068204176 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070587096 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067452305 seconds)
  done (took 2.5082429 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067550271 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.06772843 seconds)
  done (took 1.337918618 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068863476 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064585437 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066202556 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066393125 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063513 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062060867 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063302259 seconds)
  done (took 1.653924489 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.387460328 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.112652719 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.310369913 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070512386 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081524375 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.257313775 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065532938 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070010876 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070649948 seconds)
  done (took 2.667528416 seconds)
done (took 14.042587689 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.08221098 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.08788023 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.095487571 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.375691793 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091685818 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066007134 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113622534 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.189147911 seconds)
done (took 2.314006451 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.214918438 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.635929284 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.402302215 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.205481741 seconds)
  done (took 2.446911301 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.346612822 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.087761198 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058494374 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067034614 seconds)
  done (took 1.773360048 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06849816 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070679635 seconds)
  done (took 1.348431372 seconds)
done (took 6.993811376 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068567759 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.083589106 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066164638 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.064118269 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066158661 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063613352 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.063624831 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064032954 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.06641564 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065913807 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.068523681 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.065590242 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065884173 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065918844 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06307087 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063361279 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.066032483 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065732907 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064256505 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062941754 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063169126 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065976301 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064563435 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063690332 seconds)
  done (took 2.826265602 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.086854883 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067552898 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073350902 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.073954136 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070140667 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070950619 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071413241 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065770606 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071071878 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068066019 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069278405 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069404785 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067990441 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070057393 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067859976 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069561525 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071403221 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06589423 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068230252 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069477597 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071291114 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065997011 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069587149 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071384632 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070183404 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071085519 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068488482 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065916304 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071072496 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069802204 seconds)
  done (took 3.323079862 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.071889951 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065539378 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064280979 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.07102347 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063080908 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064726935 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063391474 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063823291 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064063393 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063406697 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064753232 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063249727 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.06338215 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064549745 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064269645 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067255194 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079452284 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064028446 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063850987 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064013668 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066445636 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.06347667 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063422485 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063487042 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063816642 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063270057 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063762359 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063464268 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.06399039 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062960366 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066623152 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066860763 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063326527 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070388403 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066924437 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062976861 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067250028 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063056917 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063596045 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062947718 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062526256 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062912155 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.0629643 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069946344 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063230713 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064578359 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063137376 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064061856 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.062967146 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065787844 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.177116787 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062812712 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065025861 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.06388972 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067691597 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062784993 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.06341178 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062616373 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064685262 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063125157 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062838338 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062810187 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065643039 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063584226 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077959039 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069725845 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062536744 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064311275 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.06373093 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065608853 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064647126 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076927334 seconds)
  done (took 6.023317345 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.094282237 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089440275 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065544062 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065054602 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061942659 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063728797 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069879109 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064222452 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065671608 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081950648 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063488577 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064649745 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065061425 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067174737 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063739205 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064736286 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071981614 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061410437 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063528576 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066959312 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063539898 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069551455 seconds)
  done (took 2.73806247 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.16081066 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070534551 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105414619 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075281644 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069994158 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075371528 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069766525 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.0694208 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069519805 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067100119 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066969889 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06985817 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069328144 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067188952 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067197708 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066994729 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069855618 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067466094 seconds)
  done (took 2.603040654 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079880501 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067543627 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.089372772 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067838934 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067247906 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069124801 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069609431 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073983759 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067803514 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06567695 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074183272 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067989486 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067490498 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065106739 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067774575 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065501485 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067542759 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065831586 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073644237 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069882371 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069458005 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073320099 seconds)
  done (took 2.771134802 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081673959 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069495795 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.084492629 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069185894 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062374151 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063933464 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.070244042 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065444851 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069697322 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067164495 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065465369 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063836145 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.06831893 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065285274 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.06876213 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065130115 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067127275 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065108439 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067511959 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061318978 seconds)
  done (took 2.588364345 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088418702 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069637057 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06908858 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077015235 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067411214 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067097278 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074789498 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066845933 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067346211 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087683194 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066892416 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067398284 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075329815 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071706797 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067102578 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075000777 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074872841 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074235047 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066977135 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066648286 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087980467 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.06757238 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074274381 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066858499 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066977813 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066828949 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06655846 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071726497 seconds)
  done (took 3.238772507 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06875211 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068367843 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.064434042 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064191144 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063238525 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063575319 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063179794 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062825544 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065340359 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063330131 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065539805 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065667291 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066111228 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065334954 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065745383 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065519366 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065984765 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063340982 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063549966 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062999953 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065695609 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065496945 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066204388 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062980076 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062763757 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066120184 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062857278 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063221035 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065527522 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063337432 seconds)
  done (took 3.172625951 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.078322493 seconds)
    (2/2) benchmarking "in"...
    done (took 0.075175326 seconds)
  done (took 1.386328251 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066026973 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080952878 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063667095 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070342216 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069189686 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06651152 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073080634 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069124851 seconds)
  done (took 1.786203375 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.084318081 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.08061241 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.069005988 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079924062 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076615139 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082655186 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.133903664 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066996674 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072792461 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063984867 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079186429 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065447787 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072424604 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066418939 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071274626 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072284877 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.06357489 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.07174643 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068622295 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.063962792 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067128655 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074943501 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068818147 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061384182 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067083453 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.088247924 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076856452 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.06529348 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.06859803 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073242104 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071975292 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059730504 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065821341 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066308039 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063517057 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075567995 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080816141 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068703673 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.07424905 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066547124 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076496235 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060818678 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070296905 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072268456 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076073032 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065944369 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.06641671 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061277398 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063484369 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068219241 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061267647 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068667922 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060328192 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072602311 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069330428 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076495829 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064402437 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067239324 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068714182 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069365857 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072703238 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067737163 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068496057 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065345968 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075364256 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070561 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074638002 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060904899 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060093874 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.0639613 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075187197 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.0887759 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071971813 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066704359 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066496856 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063464839 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068852811 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06670018 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.0726507 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072087644 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066229002 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070926711 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072924052 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066395755 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068745005 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073868635 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064071017 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068652942 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063980315 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082644277 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064650623 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063886132 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064175436 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076518561 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068993537 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065505005 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063630071 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073601143 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059849213 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066202688 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066400484 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066634192 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075583458 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069125827 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069782056 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073348285 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072462556 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065094029 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067679296 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061579587 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065599603 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064151023 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072156903 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059313233 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.06769586 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066013299 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.06569932 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.072840319 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.063221054 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.064712618 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.197477785 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073437235 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065109268 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063602839 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069506371 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.06664131 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070437759 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075233876 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065957634 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.06189589 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061322594 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069807321 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066650047 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070041389 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071460628 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069213184 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061363019 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064795259 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071886858 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075039394 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067396959 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.06834512 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072862564 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067760651 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066059269 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.07275589 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068722219 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065815249 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.07264508 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067330858 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061594428 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069833159 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.068667689 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065261368 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069465534 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068642421 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069026207 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.06731483 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065137567 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074408123 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066817739 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065272179 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066523003 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064801092 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076814137 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067859529 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.06201941 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062873622 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075802326 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063792843 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.06607614 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064915126 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068587802 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066383751 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064422743 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065622488 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068283636 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077088907 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070531569 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066411527 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071374497 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077388212 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.06561383 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069100439 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065697358 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067107573 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066678022 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074484406 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071209097 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071064316 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068225569 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062125633 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071498883 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074411919 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065448728 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064386201 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065048004 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070014819 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071559316 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.07000553 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067100645 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064250258 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066925792 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069331343 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068509714 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065866063 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064653036 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072415218 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063800576 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072883556 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066689391 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076079598 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069384567 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061016333 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069117892 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064133738 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072446651 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.0608378 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063957956 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065053486 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066584765 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064904966 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069229671 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059942064 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072873296 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073508654 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065950894 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.06491316 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065081209 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071796998 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066171002 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068137667 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067778467 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.07090411 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074763737 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064241307 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.06800257 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.074591769 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.065214422 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.058760765 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.069898094 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.06359651 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.064130388 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.063650482 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.062587951 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.19590041 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075607844 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.072650804 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060177847 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068727985 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065498427 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.06591543 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061828207 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.07052733 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069866282 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067446864 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072927696 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067731359 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.06710725 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070601877 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066377046 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067344023 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067546371 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069314034 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067595817 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068644633 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065830962 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069773293 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065775406 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064817179 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068413004 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.065769838 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067174044 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071435601 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065677851 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066398877 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068631195 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067404079 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067308146 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066651039 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065496679 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069512546 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066714475 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067006293 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.067978394 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061354405 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073325198 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065713053 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073833358 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067090932 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.06359017 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073641795 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068281424 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072179751 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066583177 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067487956 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067395217 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065993525 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069016741 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072975029 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064186622 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.07668475 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073622046 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066835251 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.068406474 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066485573 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068380603 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065543514 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068018794 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066635341 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066387318 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.06579354 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070594868 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068445365 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066328818 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067900497 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.06708142 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066243285 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066416946 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060115229 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.0649221 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065416341 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065722978 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075610413 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066543292 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065790495 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064840937 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066814807 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064836183 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062886715 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074395571 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075420159 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066629113 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073291317 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065230894 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067966545 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076710372 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060476893 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.06421903 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063979916 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064220215 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073703123 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066448452 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075874367 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.0667508 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065469186 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062944051 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.067057185 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064389599 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060162733 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063725191 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069408378 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065589111 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064814627 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066600731 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068277437 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066797471 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07419139 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064035126 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065601022 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.06498879 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061945174 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064372883 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.06356964 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.067274179 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.065251139 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.062653492 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.062092845 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.064166528 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.065719777 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.065903067 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066875979 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.06592576 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.203598214 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066912834 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069932341 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070340281 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.060709946 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069877203 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066383193 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066325485 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065501697 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069666673 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070008283 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067719335 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075368586 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.06672227 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067458929 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066188555 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.063852099 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065987254 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066879301 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066417842 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065243175 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067605403 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075081297 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064488037 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070191077 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066228824 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.06723325 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073035527 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067094493 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069644331 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072945854 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066880315 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068416435 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074758236 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070007715 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070018147 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067011474 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068262724 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071815841 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065373003 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072651889 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066453639 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067314332 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068147812 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063833029 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066476813 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.06539152 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066182458 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073322978 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067318562 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066004965 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066261102 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064426289 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068154439 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069152434 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074321265 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.06835779 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069254869 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.060850468 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.06310493 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067544142 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064116152 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067804216 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068427798 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071508449 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.069122576 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066643407 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065373522 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075048195 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071885806 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069723756 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064424454 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069467734 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.06680162 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068063761 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067199469 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.065769683 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067003962 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069747532 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067317761 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065629954 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072958504 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069025714 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066601572 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067529112 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067172104 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066583692 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060922789 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066493137 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068170456 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071595321 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068468116 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06600836 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076274199 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063748577 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066667754 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069077702 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065486482 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070431215 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061689947 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067528526 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066659611 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067018238 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061302079 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065418518 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063966553 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068327808 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065074234 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061244698 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076507652 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074867062 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.0694561 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06435674 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064231248 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061120709 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060588853 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.064595843 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06552605 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.066446672 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.074790429 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.063424624 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.063870238 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060157532 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064980405 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067420856 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.067434317 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.061706159 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.059928923 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.063959076 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.199341646 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072113928 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065089632 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066997898 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069688895 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068605937 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064203536 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069717676 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063312209 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070603478 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079210679 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066712527 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067463796 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072816232 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074227013 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067517306 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061541702 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067394173 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069449516 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067468397 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067387992 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067965292 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081184481 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069577471 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066109857 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065152831 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.06883564 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065416457 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074786709 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067190944 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066924916 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.07189759 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068080096 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075388283 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069226948 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074332814 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069553398 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070065584 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065893823 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067340424 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.06457757 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065821041 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067771571 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067041721 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071564874 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074672722 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065181965 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076787862 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076061893 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068087159 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063613224 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065455362 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066792968 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062044823 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067121427 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065331291 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.065365146 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.06445764 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065628464 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067276017 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071626337 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067383725 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066465728 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066638585 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060214195 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068357909 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068038662 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066826704 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063383465 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066789154 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.06694023 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070133496 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068765002 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06366284 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.06746507 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067327392 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066372277 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.060972408 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072612991 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064876639 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068063137 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065133452 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066359534 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066662114 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069419482 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071027457 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067035278 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068875643 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069307997 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068197226 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063944719 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063446414 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070941173 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064144134 seconds)
  done (took 42.342897766 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.102567398 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06277964 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061616055 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062045472 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072574314 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062351555 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06130538 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06247018 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062743676 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065054387 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061715061 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061211374 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070007222 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077136295 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072706226 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066179347 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062198027 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062388646 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061107032 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062574904 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070479971 seconds)
  done (took 2.726330255 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075295184 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.077813021 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075390679 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082121742 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070341592 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069919877 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075623051 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070314355 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078436869 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072298069 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078198614 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069888478 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.072171208 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.071977077 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072012456 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070207446 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077698494 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070328907 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070033908 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075221154 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07016545 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075181374 seconds)
  done (took 2.924781096 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.06864976 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.064845016 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067657781 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060890696 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.064891294 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.060536357 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069342532 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063899062 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.077074994 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.06398721 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064470077 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064145594 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067066719 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.06062334 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065576505 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.062908994 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.108328753 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068602061 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065076654 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066133134 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060629157 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.06718776 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.06085331 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061178375 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064285724 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.06905201 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065695916 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063388371 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064539897 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064550279 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065128537 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.062954419 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066658858 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065398268 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064391511 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06395566 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064808687 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065121661 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060547916 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063287158 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065865248 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.060968326 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065203263 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066735583 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063344423 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063200566 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066887778 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065843555 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060684044 seconds)
  done (took 4.525010888 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081288393 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108641414 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066776412 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.08850185 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.082137625 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.072305874 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069395631 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089901754 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062901121 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063958723 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080986083 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078955161 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065486985 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.07010939 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071924174 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065032697 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065880567 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064306714 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068785193 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064126534 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068896054 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071491723 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079875846 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078269162 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069063351 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063920218 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065032404 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069706844 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077795648 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.06956142 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.07025447 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070484531 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080553233 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070840698 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06463329 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067762673 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081365282 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065453254 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067558994 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063185079 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067463337 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069514645 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072274825 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081330419 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066127139 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070347594 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065375627 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062521414 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078200149 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067411118 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073209374 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079397701 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069096914 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.06572667 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069884289 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080411315 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064897008 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063440278 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068307174 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077570111 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062659393 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069077283 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078708829 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.06725218 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072925912 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079512886 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070470303 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06922996 seconds)
  done (took 6.328793542 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077717178 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094314612 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083524672 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083225675 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075123513 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.074907927 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.074862618 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075530982 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.075085425 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079410323 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075111119 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115423831 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070712129 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078572827 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075365661 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.075060794 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075311537 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074912115 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075147414 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074754645 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.07516428 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082445497 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.07516377 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.08277763 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079113762 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070577285 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075207109 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.075102644 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082953043 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.074476404 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079007116 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074515198 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.075013302 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082740378 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078839209 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.074142917 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064782445 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074542517 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074681427 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.074451576 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069874335 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082325922 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074650491 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070046667 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074797425 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074285036 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.082208847 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078785622 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.0774739 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079189531 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074329683 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082552964 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074544974 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.074872721 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.08280028 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.085532273 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082337997 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082245147 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074640881 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.082134792 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082214 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085417262 seconds)
  done (took 6.167210215 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085533378 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074107442 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.082122113 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060923984 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06387842 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071262992 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063888882 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064410086 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073957166 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.07415659 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076530218 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071722015 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074632528 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076594983 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071500242 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074585816 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071463366 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071559891 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074035749 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071615803 seconds)
  done (took 2.779311547 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076588011 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083059366 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.065818619 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070908588 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068522792 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071187159 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067890444 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068949229 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066681379 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068799539 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075431671 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075852004 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066628211 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071241475 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075708894 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070948474 seconds)
  done (took 2.467520583 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.086034432 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072722918 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.08039473 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066240935 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066480961 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061758306 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.06592986 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060978357 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061752151 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077876305 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065261559 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.076213847 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.064871131 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063867343 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.06199901 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.0707614 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061389518 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062793594 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.06487764 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078023219 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.069358661 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063345795 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068807778 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065440648 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067837686 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.06978984 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064787895 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065117923 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062276633 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065750936 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.068512019 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068781725 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062518224 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063379753 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063785257 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062727238 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065192752 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065764434 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070599571 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065131751 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063377001 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067367032 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065429966 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066436446 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061642065 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065953488 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061496853 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067547671 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063211365 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.068333455 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065079662 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067821192 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066117344 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072526562 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068359174 seconds)
  done (took 5.003794771 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081097537 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070198521 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061316733 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063991622 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068802187 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067330215 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069336126 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066979038 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066911115 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063719343 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067540979 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068489714 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067262631 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069217085 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066758392 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069458406 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061332393 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066948738 seconds)
  done (took 2.55350375 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072886198 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066531719 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073086592 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065529901 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066325023 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067551656 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061524754 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064258593 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063934794 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065613262 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065660447 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067537887 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06408724 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067810454 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065365857 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065150347 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067532224 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063938061 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065301403 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06121081 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067090682 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063751999 seconds)
  done (took 2.776886912 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.095227212 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.081881655 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.140138424 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078564018 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.084601517 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.070674663 seconds)
  done (took 1.877916321 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093335571 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100302928 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066085215 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068842995 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075754469 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06916789 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069310229 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069725466 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07840538 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075293877 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069272096 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07778725 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077912166 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077168934 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075228383 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075442965 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069985215 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069762177 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06627144 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083735223 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069792625 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078254109 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069990365 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069721837 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06986123 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077474719 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078746999 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075893035 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069190955 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07829174 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075347626 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069506208 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078215863 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076270239 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068928146 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077935361 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06959607 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083666328 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075302524 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07724046 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068634726 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075446556 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077954156 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074623346 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077977575 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06955031 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074124417 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069606662 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070049957 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085524214 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075127219 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077257147 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078056167 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078601627 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078658343 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085604234 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075482045 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077246035 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075796727 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075307597 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077870035 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075762131 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077855737 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075669522 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075536147 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07736332 seconds)
  done (took 6.313292705 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106212391 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065841576 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070550022 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076100761 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07724143 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069629262 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069892918 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069359934 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069670726 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067371191 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108493707 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070381114 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077648492 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077350662 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069997728 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069551613 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069708671 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077461822 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066645168 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085698962 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06978208 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077929592 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077346001 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077592136 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07550543 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07590911 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070053874 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069871798 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069790604 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069398301 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07449954 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070000557 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077750772 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066690755 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077284135 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070636584 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06968721 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074355326 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069783295 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075155673 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077872485 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083457285 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070086956 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069680334 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07534204 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069659468 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069838823 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066398724 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069598082 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066864537 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075443704 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075680837 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075637817 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077072759 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069690735 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069867645 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06969185 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069866419 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069588754 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075237319 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077321099 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069255272 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085958339 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069254042 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069949428 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077357402 seconds)
  done (took 6.216001151 seconds)
done (took 128.667252627 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.186913765 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.165169811 seconds)
  done (took 1.675232544 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070792164 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098850664 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076673387 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128428996 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066274195 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099153671 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098864751 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077702284 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066264221 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065762577 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066253582 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.06821676 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13134969 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066358458 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065730584 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068134858 seconds)
  done (took 2.651843543 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.100718456 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.162315111 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.103348432 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064498646 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098802355 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072279888 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064675425 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074974153 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070836119 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064979129 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.07306786 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.069911825 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065197101 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070010592 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071009256 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072101555 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064251506 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072450209 seconds)
  done (took 2.776464742 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100759632 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091076307 seconds)
  done (took 1.538068492 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.158395019 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105128179 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.144755734 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.356993443 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.166084547 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.128265168 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.127963921 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.128961963 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116711027 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.12291275 seconds)
  done (took 2.897537832 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100598159 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.153466749 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.266002155 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.116753228 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071954516 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094499482 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.118084063 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077999248 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.079940083 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080203 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080214173 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075770391 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099491534 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073442918 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073430217 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075765849 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103494434 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072501045 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074396609 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076007958 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.100521929 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065296203 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073360113 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072437561 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076808702 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077542882 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065187998 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.064973625 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076335469 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.07451456 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076495913 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092816356 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077875413 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.10638654 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070801005 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107221535 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076400315 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073502641 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074522119 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073821065 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078358726 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078118308 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.07232126 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076202052 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.06560042 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076193952 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065327248 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065215843 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077315119 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066452448 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077178548 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.07786609 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106137817 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066057203 seconds)
  done (took 5.958076411 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104911952 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.10664508 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071575473 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.113693749 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102411849 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071852079 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.103469305 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095738961 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.104445306 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070121397 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068116043 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070594763 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082429129 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082568612 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.114494678 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107017108 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073224681 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071191684 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.106206283 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.105316985 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06854801 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09664936 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091026087 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103186483 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067465264 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070278664 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068107591 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069856479 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076437917 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078725163 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069394169 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080896967 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084563684 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078142208 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067218271 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067357303 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068178999 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079419255 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07960118 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07836753 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077159764 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067411818 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067495637 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069383672 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069836191 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066855952 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078737878 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080513075 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078665605 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069389942 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069685324 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068018359 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069316962 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079976055 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077485764 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081067904 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080273864 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068540725 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067911429 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071780886 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080717021 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079501462 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079721092 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069307673 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078907804 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06839846 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080077551 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08451981 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068121695 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070008652 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068266977 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069166393 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069150355 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07826841 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078018367 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069183257 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.06954401 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067973615 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080210845 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078043326 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068013126 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076900919 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066356995 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068198005 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069374824 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069200255 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.07733826 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080037881 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069166152 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068026615 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069405824 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068039372 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067063956 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.07643019 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079815352 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.07801171 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076733493 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067975301 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077830559 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077157731 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068627678 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078022599 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067201581 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069066406 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067988341 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076757251 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.204282946 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080800725 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070633748 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068475609 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078781884 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082199633 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069204989 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.080154562 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081292992 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079872 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068514744 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08224909 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069363023 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080369191 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070276467 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080661954 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068942717 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079685816 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06910429 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068585302 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069427188 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079427654 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073156808 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067995109 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071046487 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070141666 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079481051 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083298697 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07079448 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079326605 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079068948 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070120264 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078362242 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068566792 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080187545 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070326371 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069488194 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067608197 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082720977 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068611952 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069139594 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070041137 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081207695 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068367452 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081015292 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077781796 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06850357 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081491921 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081658866 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078187327 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080654878 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070244993 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068386189 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068413094 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070210801 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077293978 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079982039 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069945197 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068763665 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078620064 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079860572 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066936411 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079039979 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078397394 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.07918558 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068377033 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069758225 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080732709 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080531447 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.07826528 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078330197 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078295502 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06815807 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077493517 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077787541 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067785828 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084333044 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.0674665 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082771438 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078967785 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077096109 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078751765 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080516906 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080119612 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079728977 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082990244 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068196131 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067866326 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079412424 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067762022 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070101594 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078391333 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069227434 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069387239 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083008429 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068323447 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079329937 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067246879 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077179908 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066131018 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068880942 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081823143 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067144563 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068389661 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07831534 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068886864 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.075982832 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.07932213 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.207725062 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06950447 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070273643 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081019281 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.07917039 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069137231 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068470265 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070870845 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079138481 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078692165 seconds)
  done (took 18.64218045 seconds)
done (took 37.488359428 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.214208612 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.154329393 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.184146584 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.121454383 seconds)
  done (took 2.123398074 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.12188041 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.104173339 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094236845 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065208034 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.099130415 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064857494 seconds)
  done (took 1.933152549 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.318469775 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.212596475 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.190374924 seconds)
  done (took 2.100262791 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.205349299 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.191438345 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.426120591 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.266613816 seconds)
  done (took 2.586094504 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.145839249 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089370985 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067533843 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083848509 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.134817786 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.161754383 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101019686 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.126083941 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078613754 seconds)
  done (took 2.428480519 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.149328512 seconds)
done (took 12.708117618 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.094665516 seconds)
    (2/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.215938733 seconds)
    (3/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.072230736 seconds)
    (4/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.164963119 seconds)
    (5/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.07331694 seconds)
    (6/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.157905459 seconds)
    (7/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.08334947 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.170133604 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.082955068 seconds)
    (10/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.083884732 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078557431 seconds)
    (12/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.174639082 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.127029743 seconds)
    (14/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.111680813 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.101444222 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074424508 seconds)
    (17/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.216063504 seconds)
    (18/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.075261721 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.127065176 seconds)
    (20/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.212618584 seconds)
    (21/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.088258079 seconds)
    (22/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.090391964 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.090347184 seconds)
    (24/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.076244282 seconds)
    (25/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.18657293 seconds)
    (26/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.216590843 seconds)
    (27/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.120923071 seconds)
    (28/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.20446224 seconds)
    (29/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.074446179 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.103765269 seconds)
    (31/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.163364862 seconds)
    (32/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.074129208 seconds)
    (33/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.203554176 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.098791783 seconds)
    (35/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.182947485 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.125473453 seconds)
    (37/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.141827065 seconds)
    (38/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073345374 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.111253521 seconds)
    (40/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.182499049 seconds)
    (41/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.075239345 seconds)
    (42/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.051545845 seconds)
    (43/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071461355 seconds)
    (44/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.098324435 seconds)
    (45/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.052276731 seconds)
    (46/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.163443307 seconds)
    (47/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.185706302 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.093484874 seconds)
    (49/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.092038708 seconds)
    (50/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.156437665 seconds)
    (51/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.081316241 seconds)
    (52/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.072222752 seconds)
    (53/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.198103756 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088129296 seconds)
    (55/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.178960064 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074135639 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072231841 seconds)
    (58/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.050945623 seconds)
    (59/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.177423423 seconds)
    (60/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.137285365 seconds)
    (61/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.204735871 seconds)
    (62/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.177015797 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.142394433 seconds)
    (64/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.070708228 seconds)
    (65/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.121285535 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.110051673 seconds)
    (67/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067139883 seconds)
    (68/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073423616 seconds)
    (69/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.08402484 seconds)
    (70/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.071112569 seconds)
    (71/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.078737608 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.064323318 seconds)
    (73/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.063021586 seconds)
    (74/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.064107636 seconds)
    (75/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.152891808 seconds)
    (76/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.188906473 seconds)
    (77/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.053337698 seconds)
    (78/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.188278083 seconds)
    (79/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.050680631 seconds)
    (80/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.064385854 seconds)
    (81/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.071392082 seconds)
    (82/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.064755851 seconds)
    (83/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.155153173 seconds)
    (84/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.050612209 seconds)
    (85/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.063673509 seconds)
    (86/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.194588692 seconds)
    (87/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.227010078 seconds)
    (88/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.077775389 seconds)
    (89/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.199004177 seconds)
    (90/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052218789 seconds)
    (91/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.163928268 seconds)
    (92/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.051106162 seconds)
    (93/309) benchmarking ("sort", Int64, false)...
    done (took 0.066825322 seconds)
    (94/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.067329361 seconds)
    (95/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.167529276 seconds)
    (96/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051508807 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.091631273 seconds)
    (98/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.216481312 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.066012818 seconds)
    (100/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051013586 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.09316945 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.091139855 seconds)
    (103/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073255907 seconds)
    (104/309) benchmarking ("sort", Float32, false)...
    done (took 0.133810009 seconds)
    (105/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.152340898 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.115168785 seconds)
    (107/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.076106513 seconds)
    (108/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.110785183 seconds)
    (109/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.064914807 seconds)
    (110/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.065989241 seconds)
    (111/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.065963759 seconds)
    (112/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051740822 seconds)
    (113/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.050836949 seconds)
    (114/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.082199466 seconds)
    (115/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.082215795 seconds)
    (116/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052492278 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074636275 seconds)
    (118/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.052549021 seconds)
    (119/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.066806185 seconds)
    (120/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079621351 seconds)
    (121/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.051590008 seconds)
    (122/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072704518 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.141571525 seconds)
    (124/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051421676 seconds)
    (125/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.050696165 seconds)
    (126/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.06479966 seconds)
    (127/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.090066022 seconds)
    (128/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.077226397 seconds)
    (129/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.076608548 seconds)
    (130/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.156165176 seconds)
    (131/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.214546118 seconds)
    (132/309) benchmarking ("sort", Bool, false)...
    done (took 0.138653454 seconds)
    (133/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.173377754 seconds)
    (134/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074194077 seconds)
    (135/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.050385953 seconds)
    (136/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.172836532 seconds)
    (137/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.066719006 seconds)
    (138/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072261642 seconds)
    (139/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.074722733 seconds)
    (140/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.052674046 seconds)
    (141/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.184567315 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071553929 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072020303 seconds)
    (144/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.051176933 seconds)
    (145/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.080824737 seconds)
    (146/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.08718467 seconds)
    (147/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.163590952 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065051874 seconds)
    (149/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069937984 seconds)
    (150/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.050277178 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090979974 seconds)
    (152/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.141194386 seconds)
    (153/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.09507381 seconds)
    (154/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.087864565 seconds)
    (155/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072157258 seconds)
    (156/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.086730349 seconds)
    (157/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.154875705 seconds)
    (158/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.050613498 seconds)
    (159/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.050186762 seconds)
    (160/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076316341 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.064873781 seconds)
    (162/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064398992 seconds)
    (163/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072283879 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065088878 seconds)
    (165/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081605664 seconds)
    (166/309) benchmarking ("sort", Float64, false)...
    done (took 0.130703481 seconds)
    (167/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.380784092 seconds)
    (168/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.055279381 seconds)
    (169/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.07358631 seconds)
    (170/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.051536226 seconds)
    (171/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.052933058 seconds)
    (172/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.108904613 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.064961982 seconds)
    (174/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073777092 seconds)
    (175/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.076882017 seconds)
    (176/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.050551155 seconds)
    (177/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.156412511 seconds)
    (178/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.050986814 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.064691625 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065125505 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.092108598 seconds)
    (182/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.065366608 seconds)
    (183/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067124455 seconds)
    (184/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.176036023 seconds)
    (185/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.153166293 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.089752394 seconds)
    (187/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.100339807 seconds)
    (188/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.104687687 seconds)
    (189/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.050014434 seconds)
    (190/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.140662785 seconds)
    (191/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.06282968 seconds)
    (192/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.049864397 seconds)
    (193/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068523944 seconds)
    (194/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.065680297 seconds)
    (195/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.050721993 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.13252807 seconds)
    (197/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071144415 seconds)
    (198/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067008803 seconds)
    (199/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.050116009 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.138513755 seconds)
    (201/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.224639032 seconds)
    (202/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.075236571 seconds)
    (203/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.076414961 seconds)
    (204/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.113144008 seconds)
    (205/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.067273079 seconds)
    (206/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.072696003 seconds)
    (207/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.072389288 seconds)
    (208/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.076775161 seconds)
    (209/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.071725414 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.114069474 seconds)
    (211/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.067776868 seconds)
    (212/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.06478813 seconds)
    (213/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.05085939 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.089848155 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.090758487 seconds)
    (216/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.08906337 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.131153269 seconds)
    (218/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.066578533 seconds)
    (219/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.062262585 seconds)
    (220/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.143600593 seconds)
    (221/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.070044394 seconds)
    (222/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.052975482 seconds)
    (223/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069389124 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065173204 seconds)
    (225/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074483159 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088381238 seconds)
    (227/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073231315 seconds)
    (228/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.103251385 seconds)
    (229/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066331898 seconds)
    (230/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.075391792 seconds)
    (231/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051466088 seconds)
    (232/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068780922 seconds)
    (233/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.065052226 seconds)
    (234/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.108818188 seconds)
    (235/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.065662376 seconds)
    (236/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.117448638 seconds)
    (237/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071531123 seconds)
    (238/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073530826 seconds)
    (239/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.067160226 seconds)
    (240/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.063927967 seconds)
    (241/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.05133897 seconds)
    (242/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068679792 seconds)
    (243/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.18353408 seconds)
    (244/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072671581 seconds)
    (245/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.05083857 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.135835695 seconds)
    (247/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.051836612 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.110394272 seconds)
    (249/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078085652 seconds)
    (250/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.050940873 seconds)
    (251/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.065498332 seconds)
    (252/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.066913515 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089448082 seconds)
    (254/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072482679 seconds)
    (255/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.07249623 seconds)
    (256/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.053227964 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090744895 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.064889001 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087274894 seconds)
    (260/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.100871889 seconds)
    (261/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.074966078 seconds)
    (262/309) benchmarking ("sort", BigInt, false)...
    done (took 0.189609916 seconds)
    (263/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064951678 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.099784942 seconds)
    (265/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052010917 seconds)
    (266/309) benchmarking ("sort", Int8, false)...
    done (took 0.14252334 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090241966 seconds)
    (268/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072127768 seconds)
    (269/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.061912417 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073727057 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065503016 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.09274878 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.095194573 seconds)
    (274/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.050588909 seconds)
    (275/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061389838 seconds)
    (276/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.07486767 seconds)
    (277/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052247705 seconds)
    (278/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.193085268 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.095074569 seconds)
    (280/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.06786804 seconds)
    (281/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.108673051 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.073174363 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063910196 seconds)
    (284/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.065324379 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063436105 seconds)
    (286/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.052014628 seconds)
    (287/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.052070241 seconds)
    (288/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.05121254 seconds)
    (289/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.068893062 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073099361 seconds)
    (291/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065537956 seconds)
    (292/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.05140307 seconds)
    (293/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.051796826 seconds)
    (294/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051047096 seconds)
    (295/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.050466076 seconds)
    (296/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.050908865 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071344723 seconds)
    (298/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.07333445 seconds)
    (299/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.051647645 seconds)
    (300/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.050531974 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.087789214 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065428129 seconds)
    (303/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066639666 seconds)
    (304/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.07106198 seconds)
    (305/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071991374 seconds)
    (306/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.052120021 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.07058138 seconds)
    (308/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.050645316 seconds)
    (309/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.06109501 seconds)
  done (took 30.901078095 seconds)
done (took 32.29397409 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.086642736 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09253057 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075111477 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.094027292 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080524002 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075492127 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071877751 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.07824302 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079369448 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081265551 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077618239 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.053497229 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074308889 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073880618 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074388875 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090650136 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078336942 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072817622 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073166052 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064742497 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072789761 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.06516666 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067288887 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.053642827 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078749304 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071918988 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071862025 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073712298 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065173372 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065209992 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069061451 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073668266 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065534099 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078194593 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072512141 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073222073 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074242187 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077209124 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067030874 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065560687 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074503971 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065398024 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072756079 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073660344 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071440468 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071524888 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072772002 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078184583 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091870435 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067364365 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074614377 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.07559713 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076018012 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072797482 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069480996 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073147938 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071104825 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091567064 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073214354 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067409793 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074166641 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074368907 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071261146 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072869928 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072619384 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074848765 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075597631 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071152719 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074272057 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071327985 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064269022 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072616524 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069086466 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065146529 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075996292 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076814269 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063845622 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071089208 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072734323 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071075223 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.06504069 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067237605 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066682158 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071920141 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066940032 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053520672 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069240627 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.072002845 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064183308 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072965883 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.072003098 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072306893 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066555071 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075103249 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064119978 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070580969 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065083176 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064680517 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066460944 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068783758 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064405222 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066949286 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074429098 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066720642 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071169205 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.07910317 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064936467 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071708134 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063672898 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064313239 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079246857 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.07481685 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065087454 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067496701 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064015318 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073064775 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063944456 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064829434 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064759912 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064325055 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070902856 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064437187 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066274076 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071705053 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.07706465 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063546305 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067431799 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065755832 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063595363 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069815225 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063757863 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063631284 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065611117 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.060270045 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065466479 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.063812185 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071395796 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065770013 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.070704218 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.065508433 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.071701918 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.068533003 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.069456496 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.069271645 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.062580498 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.057200845 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065722443 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065633612 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.065522764 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.063808561 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06520977 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.063419057 seconds)
done (took 12.228524201 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069825689 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.142946722 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.100037369 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096902057 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085817723 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066493572 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075647707 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.10102135 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067631205 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101485934 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087744259 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084743706 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112088459 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064479507 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065342314 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069679372 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067287647 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081819182 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100649821 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085817095 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115592985 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064653703 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094270916 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089431069 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.08721268 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.09171002 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069281997 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069709071 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.06936442 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.09997223 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086541521 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069432191 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066254809 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.097149699 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092401718 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083391043 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066111932 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.08258899 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.06600605 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065545024 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067111918 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.0979452 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.07919181 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079951033 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069707667 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069401039 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067039107 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082876533 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.08871692 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.077984923 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085940982 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102989683 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068950493 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065775075 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064372841 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085324259 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064807779 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068531448 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066262801 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068421194 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065710843 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069334643 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080567942 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081739725 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069564136 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.07998003 seconds)
  done (took 6.771494667 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086034938 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.09159483 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.08270077 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084777872 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06579998 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065856986 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066162865 seconds)
  done (took 2.029820467 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068718657 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08868115 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089000339 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088357387 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.085889424 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087537203 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076102709 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.065966577 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080314222 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.06753344 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087091986 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102101366 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066666714 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072206406 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090542406 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066614324 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090406806 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066734751 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070087719 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090149415 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068370008 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.08266742 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069638415 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066659106 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080823742 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066526249 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113544181 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070245218 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067481772 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068586568 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063757267 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.108108054 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080161029 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075460231 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06658724 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080199186 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081376664 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064334278 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083012348 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071623884 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080179834 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066337357 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067250579 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064034188 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070499011 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076357435 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066692126 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066442414 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068399933 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086006787 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066965114 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080077724 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069689242 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068608751 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067601713 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069975974 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.07624555 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067571612 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086467145 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067296293 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083747323 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082412205 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080230332 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082457784 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068812329 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080267396 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080069298 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068296246 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068012319 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069656059 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082303748 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064581963 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068076037 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076937246 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068641285 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089897524 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089592841 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067888589 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075005053 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066584804 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066535619 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066199218 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088825007 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068641522 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065997584 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070289838 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069310309 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064862295 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065141355 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069854829 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064376827 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068477366 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069616249 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.06941807 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069235976 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082990586 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069356391 seconds)
  done (took 8.741593489 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070277542 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068464131 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069239693 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.06803604 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067559959 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068307602 seconds)
  done (took 1.918307361 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.09546848 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069052813 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081362 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.07244218 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105395846 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.0867128 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087649719 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078012957 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083969843 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078715559 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.08652568 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088392045 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.093183841 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072817977 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086658566 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.07184966 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086934249 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075842493 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078660497 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072981806 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087190181 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072996201 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07265475 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081596481 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.07592518 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072072215 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067251414 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078991566 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078109337 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078147749 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072386595 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075568514 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070490226 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077788386 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.08704135 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070399006 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071680335 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076804555 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072069937 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075253921 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087826679 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072767419 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074075254 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.07684251 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077960897 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070462939 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076864979 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075438545 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085844308 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076623958 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076963166 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071104598 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075255069 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076968037 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069779234 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078063801 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077257957 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086781907 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072237601 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070189682 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068808163 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075352403 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077550327 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.07586697 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078238649 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077224825 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070295631 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073981989 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073159667 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071803684 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.07753594 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069108303 seconds)
  done (took 7.068064808 seconds)
done (took 28.03812658 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.533905629 seconds)
  done (took 2.006141301 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.617674389 seconds)
  done (took 2.114346779 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.587605268 seconds)
  done (took 8.080942998 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.403497752 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.496831647 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.722143392 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.13250073 seconds)
  done (took 3.288812735 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.691048626 seconds)
  done (took 2.197106035 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.21752015 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.201060592 seconds)
  done (took 1.931955764 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.379413067 seconds)
  done (took 1.87530176 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.129390475 seconds)
  done (took 2.628107425 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.264733602 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.174999251 seconds)
  done (took 1.944502899 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.480889603 seconds)
  done (took 1.981160874 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.87385743 seconds)
  done (took 6.376497175 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.217272586 seconds)
  done (took 1.760015935 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.245675657 seconds)
  done (took 1.746769617 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.710660841 seconds)
  done (took 3.212575874 seconds)
done (took 42.649583324 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082749539 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081256774 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081267965 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078708686 seconds)
  done (took 1.810216936 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.07911431 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073804944 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076939563 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073643311 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.07700041 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073829798 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074341533 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077058393 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072818207 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.07331315 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072995739 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.07276887 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075647727 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.0742319 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071237459 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075277726 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.07679504 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072949047 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.076178213 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073063206 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070261075 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074714385 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075770728 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071776862 seconds)
  done (took 3.292094743 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079978479 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073317666 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074958934 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072085984 seconds)
  done (took 1.812946795 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.08019776 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.095484789 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.090423641 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078490476 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.093338258 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.08699389 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069570755 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069119221 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.070667239 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077405391 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067732777 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.097022115 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088606304 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077827136 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079874736 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066148148 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068146636 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087449208 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078229621 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078792048 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.07049325 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.078046194 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068284385 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.089097006 seconds)
  done (took 3.414866152 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.080218562 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.104988473 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078009571 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.090075567 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090842779 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065299842 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074553757 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.091184256 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.127585145 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065407855 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.071253151 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06593264 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.073045496 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.06523665 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076961016 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.107314546 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111138709 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068499507 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.097013838 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065171657 seconds)
  done (took 3.188737063 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074955426 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.068969637 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065906354 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068868155 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077857265 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073412304 seconds)
  done (took 1.951511152 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070084281 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067341158 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067098615 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066652765 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072287555 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.06628888 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066029861 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067211675 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066922938 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067347085 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.06701741 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065811551 seconds)
  done (took 2.325456223 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.205779785 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068553233 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070125436 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065346286 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070532372 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066142902 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080558808 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067650607 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090790315 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066000832 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066330926 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068212161 seconds)
  done (took 2.504271139 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21227619 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07629687 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24005139 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140676576 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112504484 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116181778 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104515678 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114214714 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.143292793 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101523284 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169024097 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168738598 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108619093 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13826244 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089532836 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.100536388 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155922796 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163592026 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105721537 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168286026 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147152252 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126408856 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148979725 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107249541 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106411613 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123562028 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071430767 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079945791 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171593965 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134624555 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146186815 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111936675 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093693528 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17795633 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174054966 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143047557 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137428397 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084163202 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.104869634 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.135533766 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203812379 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090540677 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16154421 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108471793 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.219262664 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136741388 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122561412 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.122271775 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107508546 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09085823 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147407059 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18569131 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.140063041 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088803293 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115692641 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115447494 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.116817307 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105503689 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184126605 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165852216 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130437377 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.072103951 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100844222 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153905489 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13515333 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.10958736 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.127523454 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093353097 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137214084 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157259972 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121076091 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147977213 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.132013482 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089057829 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12048141 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141598283 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12955882 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162545169 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125188189 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.07312966 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125563013 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103364474 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080870182 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.14634961 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075299803 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177143716 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099092602 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.109710083 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115073941 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109274444 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109507684 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160829011 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145396684 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102891864 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.06525654 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246305569 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.122879792 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149278772 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088193372 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109701783 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119511064 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.07811549 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140394932 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.076735575 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125482678 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.078091535 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130411627 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131159027 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.077556968 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124069322 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105135585 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.10161187 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133802938 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162489865 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088406576 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082437963 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171235663 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123141595 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104844119 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145944143 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158791273 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.102188769 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102470332 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150378319 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180117555 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089936243 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164463285 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107485278 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083643364 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.088027975 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124552346 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112515338 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.1247539 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082142319 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.119107728 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16964681 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074649938 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096421192 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13450583 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079109841 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081377658 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106416354 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105290438 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.09560062 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099805576 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103814216 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137007033 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123467183 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105124738 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1236497 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098031604 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.31722129 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088652973 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.102659756 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10486429 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070444778 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.137313694 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159778187 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079486398 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166978752 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.124626452 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106876819 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121574574 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084782812 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141290371 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080131472 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070787082 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145724278 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111276103 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11185986 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.153579881 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106182161 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.127363395 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.12070239 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136180708 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132353081 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.131725867 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105417665 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088693307 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113318614 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126891668 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072945852 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.092081269 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080642012 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105288678 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097024639 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083430942 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142832733 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124717941 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101632835 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113026916 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09701395 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148981022 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076519785 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129056093 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.120074918 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096150749 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.153889422 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153881674 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131827807 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098778599 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137117713 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069742183 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073609857 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.08877882 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123034405 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08241667 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082947822 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.260127526 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151393244 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131597505 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138544471 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114604109 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12193868 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157896599 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070726744 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.117418924 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149247406 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123764413 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.105298383 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090952235 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099934217 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144559068 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108932502 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185591416 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118484419 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125428549 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155459728 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.101770471 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080368783 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103326988 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137812858 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10511078 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145517785 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100630991 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089032456 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111296949 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074745353 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099698567 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127330085 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120935527 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136306531 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.116079088 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133357109 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077821942 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117156476 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1224486 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123586489 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063729798 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121262781 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16341947 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09451817 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118751793 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153432286 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07862464 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.126298351 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175476891 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144714425 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084533077 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.254371998 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120590951 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130455011 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122297836 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141792519 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109681855 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139246566 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112653158 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.08768559 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088955308 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098262053 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105589788 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.095458834 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.108663652 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.115688404 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.096240657 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134022549 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105260322 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112104349 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119169151 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.098775873 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.091343431 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.0975822 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179321208 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120251723 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172694916 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099896039 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.146821823 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1654805 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075292647 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07955712 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078704938 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140167669 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08481368 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131475759 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.099748565 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107763994 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125365571 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144134954 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097037234 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.06884191 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109436757 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134908273 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114630578 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098790298 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.105021345 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165020298 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.101543658 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078994942 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11342232 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105895174 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102828167 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172548519 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061084621 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098197677 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076248265 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080289831 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127884614 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.295834972 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081149332 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.10495223 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12162334 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114520283 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129737911 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103011146 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101446885 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.117005169 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15157269 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129693374 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090471602 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113537594 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147109117 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15926834 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106336322 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096412389 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177152424 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155475971 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.162057855 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088886159 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118324942 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1152407 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109661839 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138970839 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083634096 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164434984 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082477675 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137523737 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104413233 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089871338 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130697563 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.100835449 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08854799 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149191377 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118446283 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08311929 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077944353 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119147805 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120444653 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10740972 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075433215 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139665423 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.07390437 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13306049 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160324854 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080970956 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10798775 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096616218 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079286047 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106971533 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102022077 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086525575 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.23794647 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177365127 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.08880656 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152487345 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134196469 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114091661 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138256207 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103039909 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.640395094 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078408422 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155236209 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117589242 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174274315 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101557633 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120040369 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110700479 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125486134 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14667527 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10473047 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.184480672 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133787077 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.117271969 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080269281 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103266534 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105477738 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089258302 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107704811 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114680934 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117460903 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093693866 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.117419288 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126820956 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082792719 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096845949 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158524169 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117763401 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144539053 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141579575 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085985457 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1196163 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139148157 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080717123 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.122877689 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152648632 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106262718 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098904067 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080627812 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.101285446 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15962058 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072785848 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159710971 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.264942117 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111581786 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115148739 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.114393939 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132832124 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108928367 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122072714 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094115333 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111704441 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115045345 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08304866 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.078907515 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106567088 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11287358 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.099468621 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099059039 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.099490798 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155274966 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072453806 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100962174 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105451473 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146348695 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175502805 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088524991 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083222324 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120496412 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114053059 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.114922936 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12228239 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079860508 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082708757 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082173643 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077801853 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.109602327 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113719844 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105412136 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111199417 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164823945 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083435305 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.23278927 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096546757 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105367243 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069636658 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078569096 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09692448 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099618747 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108422811 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1022806 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160958007 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.095779429 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.09074761 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093231655 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074443848 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083581226 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129672426 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109603303 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117981475 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098086216 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.061631883 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108225575 seconds)
  done (took 59.23375484 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.12381512 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.083202974 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.09683551 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.145309541 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.123677853 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.203415415 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.153296107 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188978711 seconds)
  done (took 2.760665271 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071494227 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.095994826 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.10370001 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083457985 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066267915 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069112124 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.234056904 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081218731 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067233888 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.089980784 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079185783 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068627483 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.429121438 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.06611853 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067189847 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.061260914 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067741047 seconds)
  done (took 3.415028097 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.390023191 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.609240777 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.383244918 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073344406 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.478929442 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.092528025 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.201763208 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.141073551 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.076027285 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.537963518 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.704861401 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.124374011 seconds)
  done (took 18.437503755 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.07856445 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069364997 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.084388739 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084862095 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072349936 seconds)
  done (took 2.014720056 seconds)
done (took 107.720010184 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.084731512 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.383573916 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.052983745 seconds)
  done (took 2.088815003 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.08689587 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085665827 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.086052586 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083208902 seconds)
  done (took 1.970046192 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.076429097 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076964006 seconds)
  done (took 1.773080235 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.23478122 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.169805281 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.088173491 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085707873 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079901071 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.080991112 seconds)
  done (took 1.870074449 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074706656 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075853328 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072859778 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076376094 seconds)
  done (took 1.917240997 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079562873 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.05228194 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055259529 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.057697831 seconds)
  done (took 1.863937977 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.090080429 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.080219105 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079390055 seconds)
  done (took 1.870025613 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.104540449 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.086829372 seconds)
  done (took 1.812523711 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084268573 seconds)
  done (took 1.705570354 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.101223074 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.104951335 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.133854531 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.111960427 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.140776551 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.110404101 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085564383 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086415125 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077771528 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087260272 seconds)
  done (took 2.660529373 seconds)
done (took 21.727283456 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081829248 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.36916708 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361395744 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090293895 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.66959096 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356986439 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.017155466 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093420462 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.115913357 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067429158 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085123583 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.650101206 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.973033601 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.323704442 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.959346154 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.32354586 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.654871437 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068630432 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067820857 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067987369 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.002748278 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067551484 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067477096 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068414203 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.710249715 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372394422 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068242166 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.323635568 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067814141 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06990298 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.35547086 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067954454 seconds)
  done (took 16.243030179 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073882837 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121595904 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073720155 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085205703 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070650782 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069583824 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071571446 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069399321 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122776008 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067982955 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085494882 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.0680265 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071944815 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.06866078 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087779632 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068073456 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069068414 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068961656 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068292403 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068432326 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086879399 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067527525 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067952591 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068745897 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067625084 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08064741 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068197569 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068333521 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06823743 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070339788 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071446999 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069226443 seconds)
  done (took 4.04222315 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.122632604 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.128233376 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074167395 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.1060979 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114335644 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070227284 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.149276128 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093356383 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.130195337 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068203597 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085448678 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068351286 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102091982 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068758929 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089001168 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068582748 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070075061 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069346732 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068941774 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068960576 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088439355 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068197152 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068516482 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069575132 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069007417 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08284931 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068606795 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069032283 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06897557 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070224517 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072187415 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069268991 seconds)
  done (took 4.318841529 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075319563 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076374207 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.084219495 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084429355 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070257611 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071827839 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073203242 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070182834 seconds)
  done (took 2.245762187 seconds)
done (took 28.47827143 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082195427 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069286632 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073592166 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083081408 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073344237 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078893876 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067635318 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.076047789 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072618411 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073582241 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075223534 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067289521 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071399206 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067198277 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074091815 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.06845884 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079930903 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072440907 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079267046 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079998122 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070458908 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.07378591 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.076366 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.07950519 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079419321 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079601221 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.078390257 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073817894 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.0693437 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071154056 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077486125 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084469369 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068427649 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079515451 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.06827084 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068759435 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072717802 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068306635 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079852352 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077686656 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070404129 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.077001385 seconds)
  done (took 4.744615442 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.091183686 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092783807 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085457639 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061997623 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067728192 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065923515 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089485954 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.060366985 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059656779 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088744366 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055623523 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059595031 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.063399356 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053918587 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.063052733 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057079908 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061949253 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055502334 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060066608 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059927069 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.089589376 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053823819 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.078396016 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063819837 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056334602 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.06213352 seconds)
  done (took 3.406918797 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.078311406 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.089213349 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.090674832 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131154096 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.105509834 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.08014262 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.081405184 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.096732322 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.089151845 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067513966 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071585567 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093640879 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092233716 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074684012 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068227398 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.088102855 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084517675 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069691435 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074140993 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097657686 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.08788399 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.087466013 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.099479745 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083866835 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067668257 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070895611 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071710728 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081863361 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072654414 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077104641 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072118127 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071385899 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069874508 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080682944 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072254043 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.07018478 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.093952356 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078312328 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.0795068 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068690374 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071738047 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069033821 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.09331144 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.134076763 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067559408 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074766138 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.076390494 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077252722 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067615529 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088472866 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079074092 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068002369 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071187909 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067379598 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067531596 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081168044 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069568118 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070335905 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076915552 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070566577 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.092584035 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072018 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083398001 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067618314 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075031297 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.06634604 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068466258 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066240763 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.09597599 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.06848095 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111380767 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068941939 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068790839 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076273455 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074942809 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073098559 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067421464 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083141483 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077776239 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070464516 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076193971 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070705847 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070049614 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.091018852 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.06960977 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068904931 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068310849 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073495093 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070140216 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068522415 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080559871 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066994362 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070117381 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084410946 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067413683 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068160473 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073473167 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072521015 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066800457 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078399493 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071762211 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067956202 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076992685 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067081988 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070244002 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080225565 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073805659 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066508735 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072309694 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073567833 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068093289 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.06911121 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.07031652 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069081263 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076660228 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073835429 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071677867 seconds)
  done (took 10.676960492 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.167554097 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.158943385 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071686079 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.150149241 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076901072 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079688744 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.151095686 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095700298 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068206643 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068665769 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069008285 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.111823504 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106928943 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116745227 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079313409 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067946923 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.085031109 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.126771599 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.153864745 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.147682136 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.085190173 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077342218 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070063819 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.06957658 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070466863 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078497205 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085654863 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076910071 seconds)
  done (took 4.443657785 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083906249 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.101689039 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074762926 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091430154 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091895497 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068397146 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070464222 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069728232 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.081807802 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078551163 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067847471 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073320615 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074634328 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071558207 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069109029 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075675003 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075507076 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069523437 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.072002048 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074517029 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.07852694 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.092524758 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072748055 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067803229 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073466693 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066863751 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064043337 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085411267 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068229662 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.09555775 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065931263 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.076430979 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082199778 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068757885 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067807934 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067375799 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067733904 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067909643 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069598402 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066359959 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066562766 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057072033 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066932145 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079909834 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074009601 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056009542 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072719593 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073386197 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072981951 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065372869 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070813697 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070827985 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.07075236 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075520672 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072889726 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072811066 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068454954 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.074554913 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.076463837 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067567137 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064828524 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066107543 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072787729 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.06566498 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.076086599 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072301593 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066049261 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067986804 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069697621 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073952086 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067492484 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070770491 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065086032 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069630291 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072603218 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069297851 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068776686 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065944325 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067272367 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067906041 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055607064 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067832732 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053149186 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071007549 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066018453 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066712617 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067415848 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072471515 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079709996 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069391728 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073734163 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068836117 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067086945 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.07051398 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060102358 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070810431 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083297931 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083511634 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067556701 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065476932 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082567014 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072757999 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066836928 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055893591 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075543911 seconds)
  done (took 9.190856762 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.094714945 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.071489372 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087684102 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.094863181 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.088544472 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075355113 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.078369004 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069923264 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.084413263 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.075285719 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.078011133 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068650343 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079051129 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077562661 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070760708 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079166967 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072857529 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085446202 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.084082492 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.06892367 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.07697224 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081383939 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.091976707 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083020577 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.081962113 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.082565422 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.091448318 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.073520327 seconds)
  done (took 3.930152126 seconds)
done (took 38.025330197 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.714564388 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.886143965 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.713077882 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.092815501 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.986183671 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.723662316 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.825704289 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.708066036 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.762338163 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.746051451 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.917079491 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.878185909 seconds)
done (took 64.60077897 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.747922245 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.852550876 seconds)
    (2/2) benchmarking "String"...
    done (took 1.980759378 seconds)
  done (took 5.478016684 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.999316944 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.2697162 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.960378625 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.708917231 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.710730138 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.05400492 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.510819155 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.235199193 seconds)
  done (took 30.097055501 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.824692881 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.941529497 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.381925083 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.413315578 seconds)
  done (took 15.254728144 seconds)
done (took 62.308941031 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.714389909 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.711561362 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.712404082 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.690756683 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.766851009 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.719896187 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.959361091 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.724308798 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.705572433 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.698639678 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.709485875 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.16308314 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.717162997 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.051661743 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.711010847 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.715790488 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.742402406 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.147240611 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.866573665 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.720324523 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.729539314 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.729885086 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.709980016 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.714379994 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.760427633 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.707537766 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.152780934 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.708385759 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.333240178 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.708910333 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.737151515 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.184060445 seconds)
  done (took 201.770181032 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.710984713 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.833802795 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.920453827 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.750589311 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.277629571 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.891788924 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.845251805 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.309926835 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.714539439 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.71296843 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.837848649 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.709251572 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.856616204 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.7075441 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.743194675 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.795322883 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.973246619 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.878494945 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.742898651 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.898299386 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.741104611 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.654695506 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.634737763 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.830177635 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.743832427 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.773476231 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.859304361 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.726031272 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.901118501 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.941700003 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.745788666 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.716249245 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.932590568 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.585775817 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.715291379 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.722990126 seconds)
  done (took 167.98123596 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.09446002 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.712855153 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.713223166 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.71339849 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.726351918 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.713821325 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.835405471 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.838955955 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.313480631 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.728125571 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.765222727 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.541265823 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.710972419 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.782315557 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.723477643 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.712735472 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.728619843 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.74195231 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.711801709 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.713072955 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.837216946 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.722968738 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.95520172 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.717990894 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.713239073 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.720085469 seconds)
    (26/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.712135745 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.086552954 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.711864359 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.719909973 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.974692924 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.71118666 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.714090082 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.596207447 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.341307028 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.801022696 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.712385977 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.719861941 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.714574993 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.934355738 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.710420308 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.71434495 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.716982438 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.882007337 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.711258314 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.839646826 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.711227413 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.217351706 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.710535777 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.717246976 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.792580789 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.395467799 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.712123461 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.715339663 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.717300009 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.71409558 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.714965425 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.720324844 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.540730165 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.787527418 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.714835567 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.721402519 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.720220757 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.716359511 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.796058279 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.714313426 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.966118788 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.769308708 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.959619946 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.840568361 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.719165484 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.787869715 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.80992125 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.716105299 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.716748714 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.717400826 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.716136973 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.79788574 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.71370427 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.844070939 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.721888487 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.720164743 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.769804519 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.785743706 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.713842404 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.618971378 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.716486676 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.714578347 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.021399419 seconds)
    (89/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.713641483 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.784193425 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.712264962 seconds)
    (92/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.71738439 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.71753572 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.717140565 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.846406761 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.843166547 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.497842516 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.719407598 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.452403225 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.718086436 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.717326418 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.856568177 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.716625253 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.904404265 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.718957332 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.800549273 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.719042435 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.720953667 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.71734125 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.750459457 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.71652399 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.777367357 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.71735151 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.094067594 seconds)
  done (took 394.55640602 seconds)
done (took 768.105921393 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.396364399 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.352737399 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.464299047 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.374292 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.350025772 seconds)
  done (took 13.590091941 seconds)
done (took 15.242957559 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.804523133 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.807556934 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.742591552 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.808577333 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.737320527 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.808811211 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.791713684 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.74362509 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.776147975 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.742515515 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.776418279 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.742043643 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.731854291 seconds)
  done (took 24.66591144 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.953624244 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.950584952 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.788447365 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.966711714 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.763923647 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.962619358 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.881728221 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.872190509 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.873915427 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.73640897 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.732692101 seconds)
  done (took 22.138502154 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.957218767 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.953730569 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.796477874 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.961189161 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.768432379 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.955413423 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.888599898 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.881380294 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.874211606 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.7328736 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.734010428 seconds)
  done (took 22.157789431 seconds)
done (took 70.615380708 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.728179855 seconds)
  done (took 3.381287908 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.75350138 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.91071822 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.734995212 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.732191256 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.728656662 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.730118311 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.733441915 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.729075341 seconds)
  done (took 15.710831205 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.730041135 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.726400809 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.728257982 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.725828181 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.726182157 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.728850793 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.729156032 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.726691347 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.725676432 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.726450864 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.72857251 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.72899551 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.729074285 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.725998382 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.728366858 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.724981328 seconds)
  done (took 29.296417999 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.729715702 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.72680773 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.72686912 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.726824597 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.727612323 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.726586913 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.72819753 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.726905839 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.727701201 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.728073808 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.727861225 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.727564318 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.728096925 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.727573627 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.728016714 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.727401438 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.72706405 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.727429329 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.732427478 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.728790416 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.728152636 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.728009091 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.729297184 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.726218083 seconds)
  done (took 43.129452333 seconds)
done (took 93.171828596 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.589695073 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.094674499 seconds)
  done (took 8.341219096 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.732717823 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.729577251 seconds)
  done (took 5.153785358 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.729571365 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.731505207 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.730665597 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.732071901 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.72989397 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.731690848 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.730508231 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.730938471 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.730960472 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.730057887 seconds)
  done (took 18.966708501 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.730850145 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.730569778 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.728015477 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.731394035 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.731116372 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.729066871 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.731880328 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.733352263 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.731390364 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.728757565 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.73204421 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.729860219 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.731976311 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.729733315 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.732474255 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.728432669 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.729161403 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.729356932 seconds)
  done (took 32.808000416 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.731213316 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.730853477 seconds)
  done (took 5.122129829 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.729164639 seconds)
    (2/7) benchmarking "second"...
    done (took 1.730762113 seconds)
    (3/7) benchmarking "month"...
    done (took 1.729663316 seconds)
    (4/7) benchmarking "year"...
    done (took 1.730756082 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.730172885 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.728028206 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.731110435 seconds)
  done (took 13.76853669 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.736983857 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.889268878 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.95444663 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.364473954 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.73394683 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.736919246 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.676312585 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.734034253 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.73541304 seconds)
  done (took 19.221522589 seconds)
done (took 105.03906093 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.56275288 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.724081114 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.107342218 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.768925678 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.783425006 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.025092948 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.752016068 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.033641655 seconds)
done (took 42.417649161 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.73389726 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.29479025 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.319407742 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.133844867 seconds)
  done (took 12.408547402 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.71333225 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.275854316 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.759054021 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.325736491 seconds)
  done (took 19.756389829 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.093493046 seconds)
    (2/2) benchmarking "read"...
    done (took 2.069779705 seconds)
  done (took 5.830068395 seconds)
done (took 46.391640759 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.734679444 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.734162837 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.735786596 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.730892034 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.735338496 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.731982912 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.732709873 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.732231787 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.733843134 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.734935377 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.734193622 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.735477389 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.735454959 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.735980325 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.732815316 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.732530985 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.734719889 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.736286534 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.732955811 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.732477254 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.734668465 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.736486288 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.735332668 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.732941534 seconds)
  done (took 43.280147157 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.736907987 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.734221318 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.735931063 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.736887705 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.732969455 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.737557556 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.737535587 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.735660368 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.736297098 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.737088291 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.734179905 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.734896029 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.737327011 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.731917163 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.735435222 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.735493189 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.73895016 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.735077357 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.736878775 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.735204137 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.738339915 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.734973228 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.736697747 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.737370058 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.73592934 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.737464345 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.738304219 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.734927676 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.737764427 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.73548583 seconds)
  done (took 53.747121516 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.743541224 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.747497091 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.739059918 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.739011696 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.740741235 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.737183647 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.736990451 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.739476857 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.738737654 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.737348505 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.738632275 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.735818007 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.737175885 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.739296892 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.738058046 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.738672597 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.736835392 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.739227676 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.737735674 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.737812221 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.74157804 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.739686541 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.738294009 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.740255564 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.739166937 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.7414291 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.742204961 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.737703332 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.739127008 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.739207601 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.738131327 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.740221017 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.74018483 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.738617083 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.737568369 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.737308691 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.744707816 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.747124417 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.737881642 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.740112465 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.740017241 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.74199466 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.741456992 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.740317863 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.740783097 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.740544588 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.742467411 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.741872548 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.739523308 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.741796333 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.742356835 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.74241216 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.742054207 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.743153178 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.744175929 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.742036547 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.740959163 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.739474196 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.740973981 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.739573487 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.742621091 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.742703428 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.74331107 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.741803412 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.741273602 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.740612152 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.743049352 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.740463007 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.74118152 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.741839439 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.74249007 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.741751248 seconds)
  done (took 126.977122413 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.742960028 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.739770647 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.739665057 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.737643845 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.739957671 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.742442831 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.740021944 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.742111891 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.738943193 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.744935138 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.74344675 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.740241109 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.739148222 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.743584559 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.744407184 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.740377967 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.742876215 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.740822049 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.741979616 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.742407019 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.742056715 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.740523457 seconds)
  done (took 39.97918222 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.744378563 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.741581999 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.739069471 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.741184201 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.742098556 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.741584098 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.743868493 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.742233082 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.741165861 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.740848219 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.741292515 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.742685353 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.740044343 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.741600674 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.742099695 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.741109883 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.744352934 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.741182744 seconds)
  done (took 33.021112877 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.742182705 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.740923255 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.74553853 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.742211787 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.740407471 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.741373644 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.74073706 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.74531504 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.745498134 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.739406223 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.743118839 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.742864211 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.746134875 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.742669378 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.743207875 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.740227032 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.743335576 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.740824813 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.743852071 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.741678116 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.742611829 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.744801197 seconds)
  done (took 40.010403591 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.74447602 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.745227938 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.7420412 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.742320176 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.742943684 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.744616206 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.74521194 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.741632428 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.744808354 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.74469719 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.741724277 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.745103221 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.742971232 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.743538476 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.742022236 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.742882154 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.744761623 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.741870509 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.745720075 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.744605546 seconds)
  done (took 36.545222683 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.747447803 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.746075017 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.744973829 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.74555001 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.746420023 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.745459924 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.744540666 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.746918209 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.747570072 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.746896312 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.747636379 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.747159799 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.747140438 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.747315036 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.747784606 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.7463808 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.747255216 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.747172875 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.746187001 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.746268664 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.747571839 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.746607609 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.746757246 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.746804592 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.746930373 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.748140823 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.746954352 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.747341973 seconds)
  done (took 50.581969192 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.748929612 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.748598038 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.745364687 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.74420901 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.743954042 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.745486736 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.744415363 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.745512524 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.747187773 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.742858467 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.748067533 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.746736452 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.74790519 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.746984424 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.748490373 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.748725083 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.747653384 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.746085128 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.746368347 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.742980277 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.747546105 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.748572316 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.748056663 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.744534304 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.745123094 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.748084123 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.744334785 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.745018943 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.746291421 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.744788156 seconds)
  done (took 54.064740074 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.767082452 seconds)
    (2/2) benchmarking "in"...
    done (took 1.766454374 seconds)
  done (took 5.20754162 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.746468705 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.747673342 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.747222051 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.744861412 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.746358742 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.748454334 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.749327579 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.746661716 seconds)
  done (took 15.652599635 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.746419638 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.749318394 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.748695916 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.748726136 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.747581113 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.748474066 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.755246236 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.749024366 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.749298846 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.751228617 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.756453341 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.757264563 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.749621945 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.747889023 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.748903235 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.750660654 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.747361566 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.74911205 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.749866368 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.748616058 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.750290322 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.749937978 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.751706029 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.74725057 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.751270328 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.760677531 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.753531836 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.747021496 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.748452616 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.751949996 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.748371117 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.747753297 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.750994767 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.751682734 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.751260847 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.751453547 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.757918262 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.749902696 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.755616902 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.751649437 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.75148632 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.749407929 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.752501136 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.753257311 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.750598212 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.75070156 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.752780647 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.747484449 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.75003957 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.754408318 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.755608479 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.749838126 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.748801102 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.755565971 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.752795343 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.758134223 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.752081672 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.754769784 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.761430538 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.760263014 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.762443316 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.759047483 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.751581462 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.751754509 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.761829891 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.777565298 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.756750737 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.748739308 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.747641279 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.753120865 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.75691823 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.765381545 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.759878178 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.752755347 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.751702543 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.752126584 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.75342372 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.752075065 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.757776262 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.754281935 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.75115018 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.751876598 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.763256047 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.775919721 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.751562006 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.753353548 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.752577715 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.751824675 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.756640437 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.761913956 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.752655061 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.754543845 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.752005123 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.754022378 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.752735621 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.75445411 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.751968133 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.753542265 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.750286972 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.753107104 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.754432038 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.75650361 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.762449216 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.751979287 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.755493941 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.759672668 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.7513751 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.752578767 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.759699461 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.752241372 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.755322842 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.75620567 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.759378689 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.753293669 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.755768001 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.765016696 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.753806579 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.756986003 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.755745122 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.757067472 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.765584487 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.784197704 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.755027626 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.755850688 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.759478758 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.769239481 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.757278408 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.758181599 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.755817318 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.752998607 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.753391762 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.756244666 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.755889691 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.756253572 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.756812006 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.757474084 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.752665375 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.756562426 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.757455238 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.760518289 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.75763265 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.756622705 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.756759122 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.759037867 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.757970637 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.759271673 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.763237113 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.755760871 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.75708443 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.758376506 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.754993424 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.757618623 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.757526561 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.757171647 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.757678647 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.755233475 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.756650308 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.755220902 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.757368589 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.757495421 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.756100926 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.757068282 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.76239707 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.756945177 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.75910914 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.756352773 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.75412235 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.758543625 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.758296561 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.756847588 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.756833016 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.756073374 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.760177209 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.765854604 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.758074236 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.758524387 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.760408378 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.755881764 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.757366951 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.757771267 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.761529626 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.766558823 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.757018342 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.763349992 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.757948437 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.758747227 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.758926457 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.758072076 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.759479574 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.757837637 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.761821046 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.767383571 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.771320931 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.767380064 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.755994754 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.764375354 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.758589754 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.761087 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.760501237 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.758412049 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.758844917 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.759273321 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.756935963 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.757974073 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.758749421 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.758745711 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.760171699 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.760470398 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.759194351 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.7588093 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.761050265 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.759960855 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.760607977 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.758818003 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.761641023 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.761005219 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.760039876 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.757449109 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.760959284 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.759993767 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.76212941 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.762022181 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.766078794 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.756802527 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.761806944 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.761061121 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.760452931 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.759670806 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.762536002 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.762230625 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.761183184 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.767278543 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.75982066 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.762558956 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.765221147 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.75936676 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.762078262 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.761784962 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.761118816 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.759805766 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.764833294 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.769672176 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.758878013 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.762159267 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.760705157 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.760686114 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.761458382 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.767802663 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.757672942 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.760769913 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.760094231 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.761509581 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.757466929 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.762064087 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.761810896 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.76173214 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.761243567 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.761557661 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.763802223 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.761140502 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.762524915 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.764772056 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.762538201 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.76469867 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.77324299 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.768416515 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.763228155 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.766097232 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.764420427 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.768342538 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.762988807 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.763015626 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.763883913 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.774607775 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.771891622 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.767855473 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.764446114 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.764630042 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.766777665 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.762516654 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.767405785 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.76384811 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.762845787 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.763802678 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.761943906 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.760916254 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.764529699 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.764714119 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.76539304 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.764968098 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.770042218 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.763923617 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.763437435 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.76282039 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.763921377 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.766491502 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.763189089 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.764022383 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.767483547 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.765292633 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.762272079 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.764839309 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.770200021 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.765103155 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.768086022 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.767214162 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.765219665 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.765588373 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.769013637 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.768055502 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.769406189 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.773077433 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.767399143 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.775522706 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.765624009 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.773766243 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.765376613 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.768955879 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.774875779 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.763963085 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.765394901 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.76733525 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.765998366 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.772324879 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.765362321 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.766751727 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.772602526 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.768520849 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.767139168 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.770542674 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.76648319 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.768783245 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.766911248 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.776236632 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.766685169 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.772081006 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.767765908 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.763622628 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.765927427 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.764363441 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.765925915 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.771057131 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.76709154 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.76914915 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.765348581 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.764157544 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.767692072 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.766581312 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.76823085 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.764571644 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.76626177 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.771718444 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.765451627 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.77250631 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.766597287 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.77367353 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.76480803 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.773993121 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.768201185 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.769180764 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.769734717 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.767401555 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.768844326 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.766296036 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.769146282 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.766647203 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.769579054 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.772587408 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.767097614 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.768918404 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.769086518 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.770128945 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.769160018 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.777935112 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.79731775 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.768995113 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.77467266 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.768030886 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.771402811 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.773123533 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.768133807 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.767117684 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.772037998 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.782070516 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.7785008 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.768433729 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.769425411 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.769462865 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.768817374 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.772049373 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.771605897 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.770409597 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.769874569 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.771725805 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.771623507 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.77356338 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.769134339 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.771792924 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.769478891 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.770026876 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.779922337 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.768690263 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.77194252 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.768992249 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.771006413 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.770435804 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.769499482 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.769839332 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.770362563 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.771440154 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.771995736 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.775988612 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.776199801 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.771088269 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.769133562 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.770627863 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.771415764 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.772634731 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.771781982 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.770777886 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.770299821 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.772711891 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.773148429 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.770531867 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.771058718 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.771419309 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.771993933 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.772457149 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.773365577 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.777728859 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.771086556 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.767761969 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.771882235 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.772458926 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.769225132 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.772767327 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.777048227 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.772916465 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.782309723 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.780092148 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.777586768 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.772095469 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.77405403 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.779420507 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.769839104 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.772536492 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.770938171 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.773962889 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.771684217 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.775885756 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.773595484 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.779319223 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.770715258 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.773574816 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.778210021 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.771875662 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.774173068 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.775982555 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.77746539 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.771615945 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.770524553 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.773241928 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.772501774 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.77999031 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.771154521 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.773636842 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.777269308 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.772139472 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.775842087 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.779507217 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.774390928 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.773418525 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.77057179 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.774348181 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.775940853 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.775011792 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.771412828 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.772280706 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.772882027 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.776728488 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.78085688 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.770992369 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.773573098 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.772082129 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.773388142 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.774203492 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.774666615 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.771121466 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.770775728 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.772167382 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.774771674 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.774227546 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.776825651 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.773774754 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.776241118 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.777505291 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.777030268 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.778052295 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.7871391 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.783284255 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.771668732 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.77422069 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.774656293 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.778005495 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.774109919 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.774578767 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.775387847 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.776281134 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.774461329 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.774476 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.775608845 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.778438899 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.793402037 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.776322314 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.776174882 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.777599044 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.779140756 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.774658553 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.773969859 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.777137579 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.778055173 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.779673286 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.784477314 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.777242309 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.782527249 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.773335052 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.77822908 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.781052071 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.778669614 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.786151625 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.778860615 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.773840915 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.775596267 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.780305894 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.791271808 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.775337003 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.787197913 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.807887831 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.77675167 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.779195778 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.777005719 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.778710335 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.775723725 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.779901158 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.778127515 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.777690379 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.778891611 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.776966992 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.778255585 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.784650517 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.779134966 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.776898559 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.778978828 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.777054777 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.778537974 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.774015596 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.779861348 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.777906756 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.778060373 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.777794064 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.779027861 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.780180674 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.789308058 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.787648617 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.778027181 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.778860415 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.776249909 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.779595245 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.780285133 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.792916497 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.791623214 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.782263696 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.779554036 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.779817102 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.776715156 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.775748852 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.778980664 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.779214565 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.777583032 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.776776875 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.792068906 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.786655686 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.783047118 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.779485506 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.781674707 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.780235925 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.778996449 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.779658723 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.77941917 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.78070305 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.783012965 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.783923209 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.780985819 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.782512925 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.783796819 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.790569438 seconds)
  done (took 1054.310326442 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.778920583 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.777556542 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.776157564 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.778079637 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.777201413 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.776595297 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.778089044 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.776976503 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.779096361 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.778103397 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.778660285 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.777078284 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.777747313 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.776816493 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.778250236 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.778647892 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.778095254 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.777040684 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.779378565 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.778644099 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.77930201 seconds)
  done (took 39.043366722 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.782623912 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.778851038 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.779599033 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.780643076 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.77840594 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.779008275 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.779346827 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.781335216 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.780908851 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.779041566 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.781413011 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.780974694 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.778721961 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.777591683 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.779248804 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.780671333 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.782629474 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.779794249 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.781481693 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.779156929 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.782882061 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.780127541 seconds)
  done (took 40.872190954 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.783095765 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.782120521 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.781057758 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.779422335 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.782673303 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.78052661 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.781623046 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.783389138 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.782704954 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.783078179 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.780007653 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.784506833 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.791060207 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.791364156 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.785100382 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.783640123 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.927756333 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.784410678 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.784784016 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.783027588 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.781344672 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.786250124 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.778314053 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.78139527 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.784055669 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.78491051 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.783239338 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.782400282 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.784548923 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.784667109 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.789437273 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.784293988 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.784560314 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.785583538 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.783666145 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.785386634 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.788391384 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.783658218 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.781728296 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.784258392 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.794126165 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.808816384 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.784888562 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.786505274 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.784980774 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.783697589 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.787728431 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.793947211 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.783651955 seconds)
  done (took 89.313793385 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.78642057 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.786049361 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.780728409 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.784788068 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.782221898 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.785478651 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.785160189 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.785853377 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.780456731 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.78048788 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.78399157 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.780351164 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.782603612 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.782866362 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.783191652 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.780062435 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.781377504 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.780321093 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.781392345 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.781066927 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.779613109 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.783096848 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.783578438 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.782064858 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.78393001 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.780801126 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.779850844 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.784570307 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.779538767 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.779256537 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.783012981 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.784478784 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.783693297 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.780941162 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.78042088 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.783073515 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.780954159 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.777276838 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.780734527 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.776744886 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.782383542 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.781808693 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.782036159 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.780774411 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.776503481 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.777829196 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.780041664 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.777671277 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.781090297 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.782003265 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.779480851 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.779613639 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.778626891 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.775433808 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.778094878 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.776345682 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.774896324 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.776556355 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.77953415 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.776268541 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.776546177 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.77806003 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.777594307 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.781582055 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.776886484 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.772158247 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.771282145 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.774386549 seconds)
  done (took 122.78032535 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.771289348 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.773848623 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.772774428 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.774080298 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.773515003 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.778101401 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.774978822 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.774507814 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.77418659 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.775346748 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.772768581 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.777702538 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.775235385 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.773244216 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.77352475 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.774150364 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.773256642 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.772335173 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.771800812 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.772972254 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.772429174 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.772118528 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.773330241 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.772870857 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.771878349 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.773908527 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.773180418 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.771969666 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.771443353 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.773518677 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.773294746 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.771645 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.77358233 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.774517605 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.769995645 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.772196001 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.77476552 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.777223451 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.777596147 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.778543142 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.774536913 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.773445139 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.773209036 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.774418566 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.774731135 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.774875916 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.774617981 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.773222946 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.7743964 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.775544426 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.774075849 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.772730347 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.77229859 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.773248055 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.772831492 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.774263829 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.773710906 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.776392525 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.771981876 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.774712987 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.774881102 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.775921032 seconds)
  done (took 111.685111441 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.77577935 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.77314702 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.773290867 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.772325174 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.774956198 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.771268093 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.774437683 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.773343381 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.775100615 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.775566015 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.777625761 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.771292433 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.773480481 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.77580818 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.773110504 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.778144265 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.773261114 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.770882959 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.776756835 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.77328799 seconds)
  done (took 37.181494797 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.772694801 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.777194973 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.774218556 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.77260766 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.776410909 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.774947962 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.776753195 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.774411337 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.773037738 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.775277484 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.776808263 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.778468491 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.772929365 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.773299052 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.775267966 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.772774763 seconds)
  done (took 30.098078214 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.775909899 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.776727199 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.776743696 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.776700802 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.774817899 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.773231785 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.779829249 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.774708524 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.773315892 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.776672371 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.777398658 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.777955994 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.779129241 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.77655422 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.773000045 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.775941147 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.773683284 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.776827066 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.774567495 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.776619534 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.771206283 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.77194232 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.775339244 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.771479529 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.769003257 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.767876488 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.767682407 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.768406429 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.770122593 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.767754054 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.765527887 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.766540955 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.765830118 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.767162891 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.77405831 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.765056212 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.767501289 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.766192976 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.769440195 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.766883427 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.76755108 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.768029779 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.767159487 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.76606596 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.76475954 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.772373049 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.762900538 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.765969722 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.764172654 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.765376762 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.766922392 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.765989759 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.764836589 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.764641474 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.763781838 seconds)
  done (took 99.088329235 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.76706432 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.766794632 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.761687499 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.766274894 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.763711536 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.763924124 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.767136542 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.763066117 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.762680223 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.767746058 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.764302421 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.766848731 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.769347846 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.76720807 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.764957966 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.765034455 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.762492589 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.763445573 seconds)
  done (took 33.466434513 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.763600479 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.763145948 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.766536281 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.763153728 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.76479448 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.766349393 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.763698433 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.766865756 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.76545818 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.761789114 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.763748537 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.768020962 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.766308559 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.76672695 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.764670235 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.764940041 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.766314778 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.766853506 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.76398585 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.763466832 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.768890641 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.769051184 seconds)
  done (took 40.531440828 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.767349462 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.76668635 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.783827086 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.78835456 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.795083965 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.80418552 seconds)
  done (took 12.398598339 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.763606469 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.767629857 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.766257803 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.769499586 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.767288344 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.765321845 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.764653178 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.766328483 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.769525938 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.763506429 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.764527175 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.767669696 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.768047699 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.765076606 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.769000279 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.765421035 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.76375867 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.763470016 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.765043651 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.765338674 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.765642101 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.764890195 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.762016859 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.764365809 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.764143057 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.765651764 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.764180237 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.764233907 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.76074704 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.767852739 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.76469597 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.767219017 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.764865626 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.762966995 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.766195262 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.763742814 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.761808697 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.768989168 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.764237573 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.762108868 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.765054272 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.76404144 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.766260732 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.763788266 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.765330038 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.761531778 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.75939132 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.760755121 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.766256175 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.762221111 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.763419752 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.761244518 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.763216927 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.76474023 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.764554614 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.764941674 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.759398859 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.759853386 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.762912006 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.758978346 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.758806896 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.763676186 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.758882808 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.760498271 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.762898692 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.761912723 seconds)
  done (took 118.131312681 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.757165121 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.756993406 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.757700096 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.758925725 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.761173977 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.757929285 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.757234374 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.759400445 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.760025112 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.765038604 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.758216585 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.757464223 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.758718648 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.759566547 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.758447948 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.760250098 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.759764366 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.758364875 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.758566471 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.762003853 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.760028818 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.762761588 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.757924314 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.757015226 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.755539579 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.760947782 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.762465379 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.755473351 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.757749538 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.757209613 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.757142907 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.757557628 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.759537197 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.758589016 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.757179913 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.75831817 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.759230429 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.759701568 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.759203447 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.762010268 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.756776489 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.761607197 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.759288238 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.758666935 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.756540595 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.758480094 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.758105814 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.757855176 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.760302979 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.758188438 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.757526978 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.75659684 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.758674336 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.758327406 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.758237855 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.762443761 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.756171274 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.757553653 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.757781337 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.760141643 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.758822995 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.758539806 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.759472488 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.756993371 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.75779407 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.756438145 seconds)
  done (took 117.764813742 seconds)
done (took 2447.393816877 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.784706001 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.81199248 seconds)
  done (took 15.279905704 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.920405232 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.872904394 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.75792555 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.801684334 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.755331683 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.776189757 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.779508125 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.755091823 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.75674517 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.758345151 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.756112342 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.942146018 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.756740332 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.753238292 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.755625236 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.849744077 seconds)
  done (took 50.580677412 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.758982829 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.761931772 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.768933242 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.759705436 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.759521755 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.776509495 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.794869377 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.763507163 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.820746915 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.770470448 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.89234441 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.769366111 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.766352368 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.816463573 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.771312592 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.773923753 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.853925769 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.838839976 seconds)
  done (took 33.900308919 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.838854051 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.764306789 seconds)
  done (took 10.293644798 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.788722369 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.792257471 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.770960009 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.764520331 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.769796715 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.785205659 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.766088161 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.793201071 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.768223329 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.747031224 seconds)
  done (took 69.431318219 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.763636468 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.757500681 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.757844113 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.756409661 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.751937121 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.751644396 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.756825129 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.751911734 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.443298376 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.789459983 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.759725742 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.763113316 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.763815338 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.757054661 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.755752531 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.779276751 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.882558484 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.754742806 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.755135547 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.761060234 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.75579973 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.818405641 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.769648345 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.755970755 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.790150049 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.444348116 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.760957765 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.762597156 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.886721642 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.757601277 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.756328971 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.756478995 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.755941745 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.133815737 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.042054168 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.753492924 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.763623082 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.765865563 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.752119283 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.870085317 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.756283886 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.760373653 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.691320942 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.012975086 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.865598669 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.804840248 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.133877202 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.756778198 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.758067274 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.786417947 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.762378293 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.757571548 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.770628834 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.267826965 seconds)
  done (took 126.439497716 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.74999579 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.013820486 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.907478896 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.755430037 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.038193975 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.964482182 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.753693045 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.798108678 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.757264515 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.982489548 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.916485112 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.862863015 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.749731647 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.750534767 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.747522405 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.749238241 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.920776547 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.826837026 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.754869263 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.75061787 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.784327436 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.996966993 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.878590359 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.75125991 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.771691161 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.966202144 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.876884943 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.857742492 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.042283214 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.753865275 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.817308807 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.75059099 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.749818968 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.748086192 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.915346238 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.846523334 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.839480741 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.753541935 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.751676537 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.751254427 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.424974418 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.950432322 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.850530032 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.896671963 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.999455844 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.957924343 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.539849185 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.75610749 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.489172884 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.915790984 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.987293172 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.992909493 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.877197452 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.752936158 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.275536169 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.752161996 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.751327108 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.987610249 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.980225553 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.853584703 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.755352543 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.749104483 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.748334349 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.999068638 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.753080471 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.848947468 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.757701144 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.748659881 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.85049372 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.85868055 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.984535317 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.967858563 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.788141388 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.074217783 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.240017288 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.003754744 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.822911438 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.98980146 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.756147654 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.75022944 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.84371828 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.600150675 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.913173683 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.004046206 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.010503718 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.792298716 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.483490184 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.752871742 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.982466627 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.978661841 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.06082825 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.996215801 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.905633469 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 4.963021862 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.752758122 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.753478743 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.990421677 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.889357641 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.754722321 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.115562074 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.987556524 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.324298646 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.783191934 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.066642395 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.89075746 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.753669864 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.395695096 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.753359708 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.980344363 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.797980422 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.756291452 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.752545581 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.97765884 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.831770462 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.75461735 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.453782262 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.820184558 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.760572229 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.992853537 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.758638456 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.021717419 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.7551027 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.994942949 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.339913081 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.788014942 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.984029561 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.997218646 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.75469765 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.020648108 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.002916183 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.875017367 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.976444344 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.380374509 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.75870872 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.046183032 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.757843097 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.754753642 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.92840091 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.756492284 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.909261286 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.758403806 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.09835855 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.781257427 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.912733451 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.757642436 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.015167792 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.793355292 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.810164367 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.759221927 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.881390453 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.75791397 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.625860913 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.911967536 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.759828413 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.753735344 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.475689601 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.754207938 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.912314145 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.992729008 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.782636015 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.831334872 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.430560701 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.755598218 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.846980428 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.783514123 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.105420444 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.756419701 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.91336956 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.757875712 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.294958035 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.757401557 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.999514965 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.941648398 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.76120746 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.754281393 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.659702079 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.75414359 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.75443193 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.918887549 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.273145301 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.755679047 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.961152191 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.760169215 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.887770529 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.758114434 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.83753077 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.11395789 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.755075523 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.756448731 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.756792399 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.757693247 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.75905676 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.023969602 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.790401127 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.284285375 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.896030199 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.029610536 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.074763637 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.01249104 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.80537148 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.761765216 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.004929336 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.75941171 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.822975055 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.758324892 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.781714681 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.991606394 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.761230069 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.969630704 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.042399412 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.697182936 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.808613335 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.759703801 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.756502622 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.633889657 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.910335245 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.850512369 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.761490079 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.756580795 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.875173514 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.884117875 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.974422491 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.760360164 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.959307224 seconds)
  done (took 878.58860708 seconds)
done (took 1186.203399184 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.759488696 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.760820885 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.744937051 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.773652402 seconds)
  done (took 28.731231507 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.778441589 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.778057245 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.780875215 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.779035579 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.780022974 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.781110888 seconds)
  done (took 12.384863987 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.834665748 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.774359741 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.771096718 seconds)
  done (took 21.086771494 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.849091558 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.188977186 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.887503653 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.219932027 seconds)
  done (took 9.854400189 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.783066371 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.780641245 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.780721142 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.781369936 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.782097312 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.782434773 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.782727834 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.781735479 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.782329735 seconds)
  done (took 17.744797479 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.311183334 seconds)
done (took 95.804274941 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.804057334 seconds)
    (2/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.281198301 seconds)
    (3/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.859958746 seconds)
    (4/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.77516027 seconds)
    (5/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.898966144 seconds)
    (6/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.91040336 seconds)
    (7/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.999436221 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.888149195 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.929324079 seconds)
    (10/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.105980889 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.818319839 seconds)
    (12/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.023880254 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.193441646 seconds)
    (14/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.799104033 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.069527163 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.799039294 seconds)
    (17/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.751802472 seconds)
    (18/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.876293438 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.759012479 seconds)
    (20/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.253062515 seconds)
    (21/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.878826946 seconds)
    (22/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.852160583 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.151707004 seconds)
    (24/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.779705055 seconds)
    (25/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.246948719 seconds)
    (26/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.113717582 seconds)
    (27/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.77138266 seconds)
    (28/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.635041107 seconds)
    (29/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.956870988 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.466291457 seconds)
    (31/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.858314054 seconds)
    (32/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.304464279 seconds)
    (33/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.865285037 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.828432819 seconds)
    (35/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.063955162 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.412154464 seconds)
    (37/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.777142264 seconds)
    (38/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.795570974 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.842854725 seconds)
    (40/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.329591765 seconds)
    (41/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.164564536 seconds)
    (42/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.378449927 seconds)
    (43/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.88569643 seconds)
    (44/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.280850221 seconds)
    (45/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.761030478 seconds)
    (46/309) benchmarking ("map", identity, Int64, true)...
    done (took 3.75417374 seconds)
    (47/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.146063235 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.547635754 seconds)
    (49/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.775138149 seconds)
    (50/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 8.421432665 seconds)
    (51/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 3.886580651 seconds)
    (52/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.184480403 seconds)
    (53/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.697024745 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.772334591 seconds)
    (55/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.96497798 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.886797438 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.022558721 seconds)
    (58/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.061135566 seconds)
    (59/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.973437711 seconds)
    (60/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.770817179 seconds)
    (61/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.106339067 seconds)
    (62/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.77073373 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.875887334 seconds)
    (64/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.907485535 seconds)
    (65/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.939861119 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.821615148 seconds)
    (67/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.923621749 seconds)
    (68/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.793393117 seconds)
    (69/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.579518021 seconds)
    (70/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.048670713 seconds)
    (71/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.857629017 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.403969215 seconds)
    (73/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.097876101 seconds)
    (74/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.860512497 seconds)
    (75/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.841759299 seconds)
    (76/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.132255534 seconds)
    (77/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.755628673 seconds)
    (78/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 3.463397798 seconds)
    (79/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.119127385 seconds)
    (80/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.107855789 seconds)
    (81/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.915596452 seconds)
    (82/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.024607739 seconds)
    (83/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.024625246 seconds)
    (84/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.935471919 seconds)
    (85/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.713256268 seconds)
    (86/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.757939492 seconds)
    (87/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.781966302 seconds)
    (88/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.91254707 seconds)
    (89/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.378711555 seconds)
    (90/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.756781582 seconds)
    (91/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.339817034 seconds)
    (92/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.129587487 seconds)
    (93/309) benchmarking ("sort", Int64, false)...
    done (took 5.433369339 seconds)
    (94/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.752893813 seconds)
    (95/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.95654816 seconds)
    (96/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.143182244 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.105881224 seconds)
    (98/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.761987996 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.0085873 seconds)
    (100/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.145561944 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.554691668 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.023573205 seconds)
    (103/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.895572535 seconds)
    (104/309) benchmarking ("sort", Float32, false)...
    done (took 5.533087333 seconds)
    (105/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.788216326 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.847270538 seconds)
    (107/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.858360857 seconds)
    (108/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.262891634 seconds)
    (109/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.854895428 seconds)
    (110/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.175091583 seconds)
    (111/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.941182093 seconds)
    (112/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.958740043 seconds)
    (113/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.849540442 seconds)
    (114/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.670244811 seconds)
    (115/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.287692986 seconds)
    (116/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.131817001 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.009831617 seconds)
    (118/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.251807408 seconds)
    (119/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.876994749 seconds)
    (120/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.441473058 seconds)
    (121/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.2434919 seconds)
    (122/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.80506189 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.775364306 seconds)
    (124/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.948822836 seconds)
    (125/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.398779572 seconds)
    (126/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.858258339 seconds)
    (127/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.995555713 seconds)
    (128/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.9988565 seconds)
    (129/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.847967893 seconds)
    (130/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.759416447 seconds)
    (131/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.02275062 seconds)
    (132/309) benchmarking ("sort", Bool, false)...
    done (took 2.207861128 seconds)
    (133/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.777475402 seconds)
    (134/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.793856477 seconds)
    (135/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.082830833 seconds)
    (136/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.012556152 seconds)
    (137/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.899176896 seconds)
    (138/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.031064794 seconds)
    (139/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.08688945 seconds)
    (140/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.867115244 seconds)
    (141/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.7754554 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.991669971 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.025640568 seconds)
    (144/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.900227142 seconds)
    (145/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.93453877 seconds)
    (146/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.792018945 seconds)
    (147/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.96614398 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.111342699 seconds)
    (149/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.859838651 seconds)
    (150/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.966719558 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.879728192 seconds)
    (152/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.775678289 seconds)
    (153/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.772045506 seconds)
    (154/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.764036432 seconds)
    (155/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.883666205 seconds)
    (156/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.791731382 seconds)
    (157/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.870884963 seconds)
    (158/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.079867292 seconds)
    (159/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.148295424 seconds)
    (160/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.793773163 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.467299176 seconds)
    (162/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.993300655 seconds)
    (163/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.802365373 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.162832825 seconds)
    (165/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.581652347 seconds)
    (166/309) benchmarking ("sort", Float64, false)...
    done (took 5.574520263 seconds)
    (167/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.851588731 seconds)
    (168/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.756988879 seconds)
    (169/309) benchmarking ("perf_sum", Int64, true)...
    done (took 3.41528221 seconds)
    (170/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.157928255 seconds)
    (171/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.762568667 seconds)
    (172/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.028662802 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.07369867 seconds)
    (174/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.786962514 seconds)
    (175/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.783482021 seconds)
    (176/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.880979414 seconds)
    (177/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.878333305 seconds)
    (178/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.902548535 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.152034792 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.07102867 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.412980595 seconds)
    (182/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.413207791 seconds)
    (183/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.88479328 seconds)
    (184/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 8.081729557 seconds)
    (185/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.08478931 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.460556679 seconds)
    (187/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.928562362 seconds)
    (188/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.770126173 seconds)
    (189/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.991398452 seconds)
    (190/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.787175416 seconds)
    (191/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.766488868 seconds)
    (192/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.017022693 seconds)
    (193/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.847242177 seconds)
    (194/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.781876006 seconds)
    (195/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.016591046 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.811318571 seconds)
    (197/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.806746039 seconds)
    (198/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.901934287 seconds)
    (199/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.063461089 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.798887292 seconds)
    (201/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.785891397 seconds)
    (202/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.824190514 seconds)
    (203/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.816231996 seconds)
    (204/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.082079607 seconds)
    (205/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.838913846 seconds)
    (206/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.903228956 seconds)
    (207/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.798761192 seconds)
    (208/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.868293582 seconds)
    (209/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.804641198 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.882438306 seconds)
    (211/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.918384098 seconds)
    (212/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.842519131 seconds)
    (213/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.976497341 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.726585883 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.84119527 seconds)
    (216/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.785578075 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.92479976 seconds)
    (218/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.783441232 seconds)
    (219/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.073391495 seconds)
    (220/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.788054922 seconds)
    (221/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.266456183 seconds)
    (222/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.771185613 seconds)
    (223/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 3.228667305 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.160324543 seconds)
    (225/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.578954994 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.979854674 seconds)
    (227/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.020084598 seconds)
    (228/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.926689438 seconds)
    (229/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.899157648 seconds)
    (230/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.758570155 seconds)
    (231/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.865285259 seconds)
    (232/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.861770235 seconds)
    (233/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.001621756 seconds)
    (234/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.950682991 seconds)
    (235/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.383398238 seconds)
    (236/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.44641858 seconds)
    (237/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.8032739 seconds)
    (238/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.797815734 seconds)
    (239/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.90512115 seconds)
    (240/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.82689598 seconds)
    (241/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.99892203 seconds)
    (242/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.553686009 seconds)
    (243/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.907717472 seconds)
    (244/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.813241113 seconds)
    (245/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.988436077 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.679036761 seconds)
    (247/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.961374345 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.497821074 seconds)
    (249/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.572518775 seconds)
    (250/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.016172792 seconds)
    (251/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.788041654 seconds)
    (252/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.920181609 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.983254294 seconds)
    (254/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.813383334 seconds)
    (255/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.814213628 seconds)
    (256/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.759892376 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.261541666 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.108205815 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.683070874 seconds)
    (260/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.93548963 seconds)
    (261/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.787341108 seconds)
    (262/309) benchmarking ("sort", BigInt, false)...
    done (took 6.799977911 seconds)
    (263/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.876238377 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.862333335 seconds)
    (265/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.346247308 seconds)
    (266/309) benchmarking ("sort", Int8, false)...
    done (took 4.756642372 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.761801819 seconds)
    (268/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.822660851 seconds)
    (269/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.071080115 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.150501531 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.085088289 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.8514712 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.773215164 seconds)
    (274/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.407536004 seconds)
    (275/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.103793407 seconds)
    (276/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.786025765 seconds)
    (277/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.186354842 seconds)
    (278/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.771855837 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.327687397 seconds)
    (280/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.848260318 seconds)
    (281/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.973375674 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.87085351 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.863769611 seconds)
    (284/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.782269519 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.948231939 seconds)
    (286/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.35194005 seconds)
    (287/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.755333736 seconds)
    (288/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.909989572 seconds)
    (289/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.804080638 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.596706019 seconds)
    (291/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.780272335 seconds)
    (292/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.967904209 seconds)
    (293/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.252352089 seconds)
    (294/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.708341725 seconds)
    (295/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.879301468 seconds)
    (296/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.943777645 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.820565144 seconds)
    (298/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.793279293 seconds)
    (299/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.115634915 seconds)
    (300/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.085066758 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.705936954 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.081187502 seconds)
    (303/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.784538 seconds)
    (304/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 3.275448844 seconds)
    (305/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.807862824 seconds)
    (306/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.184741093 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.906651656 seconds)
    (308/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.13054566 seconds)
    (309/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.98855305 seconds)
  done (took 988.803390162 seconds)
done (took 990.589699114 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.817816361 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.809115653 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.794101179 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.815724457 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.904232625 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.823987413 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.802886376 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.796787349 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.841212387 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.84411372 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.794732086 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.822622003 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.795620114 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.79461545 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.795224153 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.808091608 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.098568179 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.813699886 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.81078615 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.803000619 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.810330373 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.793200218 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.84535185 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.82115295 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.798909632 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.798105099 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.798649116 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.815184224 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.908872322 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.798880446 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.79776218 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.807227591 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.097471669 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.813344516 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.789999391 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.814589942 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.809598238 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.803168209 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.798762164 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.82838475 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.229809112 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.798836801 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.796931539 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.796895757 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.79543111 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.799260422 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.796719346 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.804931402 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.806449386 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.810562693 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.226967104 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.813301492 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.801930446 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.795635746 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.805013238 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.794426272 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.802745124 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.810354027 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.817826823 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.81217934 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.089340919 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.819495173 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.797950957 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.812872353 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.804057246 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.265319272 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.793877805 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.800519047 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.23081746 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.803071826 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.265781239 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.808423034 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.798822463 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.809949805 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.828654199 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.100369757 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.80946516 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.796438402 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.804370865 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.796545186 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.804695044 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.810268704 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.803195169 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.799950459 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.811966715 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.826893946 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.808062928 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.797879733 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.806463374 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.818313446 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.806157999 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.811103277 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.803387173 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.793316122 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.806194711 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.804114777 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.802124482 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.801732519 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.803565934 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.809268831 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.227881336 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.817550459 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.796210818 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.795934054 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.797483034 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.814188581 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.228409789 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.801111197 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.82126106 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.847227118 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.801421333 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.094010117 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.820601511 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.815437011 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.808097988 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.802657314 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.793757359 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.095163717 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.250519673 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.814866694 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.80145465 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.79775274 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.816070298 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.803656658 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.797727777 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.103381989 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.821211104 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.814708091 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.922438833 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.811883925 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.832424215 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.800660128 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.806604738 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.830597607 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.816106656 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.834813545 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.804875845 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.815562827 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.817247326 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.798986875 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.811158434 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.809162902 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.803286483 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.807635508 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.796232065 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.833169711 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.814265681 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.813823592 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.824435295 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.92160414 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.799585026 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.094571848 seconds)
done (took 282.76441464 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.868394278 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.790579545 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.899280268 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.799935517 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.883596394 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.885848202 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.797039618 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.798029548 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.797431712 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.188877297 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.800496784 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.800206592 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.798027383 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.79757592 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.884493559 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.800892708 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.797625101 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.138738166 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.802032293 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.873457273 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.793006211 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.799788782 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.800969649 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.174048277 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.798615188 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.794283435 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.873375417 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.802103576 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.140651736 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.797792766 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.800160265 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.141140821 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.891193396 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.820555212 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.809220068 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.807645945 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.884120367 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.804232969 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.881813034 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.883542694 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.900246158 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.841210874 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.798729728 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.801431949 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.802507025 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.80175512 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.798368611 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.831912805 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.7939802 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.802608906 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.185438348 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.811999136 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.808412925 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.799093155 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.798888676 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.828410209 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.79888674 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.801954421 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.893545238 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.801191089 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.8688671 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.177855556 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.175871446 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.801315241 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.794536129 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.800234596 seconds)
  done (took 179.744949938 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.870829061 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.878543105 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.868918308 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.805128368 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.852413576 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.87068203 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.809870967 seconds)
  done (took 14.68241237 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.80820705 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.804017368 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.85383021 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.855086383 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.80879325 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.95312416 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.804129683 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.816051517 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.799822076 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.863595411 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.800311008 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.803723008 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.807556159 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.795794893 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.850976879 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.813778064 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.918316099 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.804534456 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.810706564 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.954223314 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.801738476 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.813411761 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.858903976 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.819375177 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.805897352 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.808421721 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.398507938 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.805031087 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.80527427 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.804955252 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.801621397 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.845188996 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.805148196 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.800602326 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.799992248 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.920762219 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.805823637 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.804437832 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.806364743 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.801444855 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.804565468 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.804623159 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.803833385 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.8033078 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.805259773 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.832694078 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.806374948 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.807541006 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.80611148 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.808166555 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.862750115 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.807145393 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.803562072 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.803769288 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.862166451 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.813749708 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.811528234 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.806176213 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.808430142 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.80479937 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.961422551 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.860013522 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.808310377 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.856238895 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.807433985 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.808983939 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.806354859 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.809703131 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.902040451 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.809767136 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.858147904 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.806937517 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.969736803 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.83398735 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.81209865 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.813271582 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.81409142 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.812118599 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.808127474 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.813953327 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.805319882 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.809247621 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.815125936 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.806154196 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.804895362 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.921059794 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.916808576 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.805679119 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.820482608 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.815106447 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.805441233 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.861838004 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.807194521 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.80576319 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.861269877 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.92354665 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.863548946 seconds)
  done (took 199.65680423 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.811593718 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.817418113 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.808168042 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.8257361 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.807290715 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.809062265 seconds)
  done (took 12.611258611 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.811272493 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.809576185 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.808647224 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.808455887 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.808356119 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.80991736 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.808535825 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.812595202 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.814080417 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.810322713 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.810145391 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.808991774 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.810913413 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.810044366 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.810720311 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.811275694 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.810774059 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.805906818 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.809918771 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.810717421 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.96935776 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.809610368 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.810393977 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.810047576 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.814224448 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.808791134 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.81921937 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.810133997 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.811074268 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.8175211 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.812935803 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.810415403 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.811097542 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.816721228 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.815081226 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.813321956 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.814377679 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.811743257 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.808278108 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.81170897 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.81229576 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.81180144 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.81163709 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.814275739 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.81288028 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.816194473 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.815740035 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.820288426 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.813592272 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.812119269 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.812133736 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.811684947 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.812238495 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.81204963 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.816263751 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.815033815 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.817881539 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.812960129 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.813365956 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.812768832 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.812192774 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.812947385 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.812805761 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.813671306 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.81019511 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.815402458 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.811766833 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.816091527 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.813299109 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.813857761 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.814542822 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.807356437 seconds)
  done (took 133.373153151 seconds)
done (took 541.805509426 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.928238623 seconds)
  done (took 8.663298453 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.868553376 seconds)
  done (took 8.705616367 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.218239388 seconds)
  done (took 9.954199411 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.84374883 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.805225617 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.805504296 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.806321843 seconds)
  done (took 29.005162024 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.821779203 seconds)
  done (took 8.555229902 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.814930375 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.802607406 seconds)
  done (took 15.387928291 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.889799406 seconds)
  done (took 8.625613149 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.903560357 seconds)
  done (took 8.644318429 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.811096379 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.80961509 seconds)
  done (took 15.369889131 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.787976468 seconds)
  done (took 8.521345426 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.498455715 seconds)
  done (took 11.242187621 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.812505539 seconds)
  done (took 8.560421934 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.849560504 seconds)
  done (took 8.584611761 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.863805891 seconds)
  done (took 9.599564111 seconds)
done (took 161.153106064 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.807787214 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.799037185 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.799155907 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.800023931 seconds)
  done (took 28.939026988 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.844345156 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.845448346 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.846482997 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.854583964 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.84804227 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.845204762 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.836806588 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.838790797 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.855770819 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.847115973 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.846281636 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.846292612 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.842487839 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.840547027 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.847210163 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.847225607 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.858461684 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.847873811 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.83832534 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.846503793 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.813320891 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.856839618 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.847779488 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.811851698 seconds)
  done (took 45.988957726 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.013280783 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.885232054 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.968112368 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.86427585 seconds)
  done (took 9.465441307 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.865956329 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.868006488 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.878405604 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.91410489 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.972627497 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.874618658 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.839522298 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.834975269 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.823535633 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.866668695 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.941159189 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.862501657 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.953005202 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.814511341 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.999303122 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.813825559 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.813712041 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.86537415 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.917680357 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.932485508 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.813101957 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.866529694 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.866240307 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.861297342 seconds)
  done (took 46.797645216 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.81338703 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.822700113 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.818241499 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.813046113 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.810684255 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.813316377 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.817479764 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.815653901 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.83264992 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.815063348 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.81216143 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.813500176 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.813693165 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.813706425 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.812096284 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.827072804 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.827503278 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.812505192 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.818893639 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.817923653 seconds)
  done (took 38.07632804 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.807704154 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.734297666 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.161074772 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.065465924 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.806939627 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.807057103 seconds)
  done (took 31.118929424 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.824946204 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.817608588 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.815411227 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.86963623 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.947496299 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.819621061 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.817558129 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.824274918 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.85383188 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.878199378 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.830178172 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.837135493 seconds)
  done (took 23.873759329 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.809694033 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.807297685 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.806321417 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.823283123 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.823568785 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.820761066 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.821784707 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.806740136 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.827780825 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.832690892 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.822046771 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.830380767 seconds)
  done (took 43.574769719 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.904064957 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.704027924 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.846462737 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.501682463 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.286988485 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.02218564 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.344380421 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.149518398 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.818433603 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.089807442 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.882623191 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911615715 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.064867528 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.809776396 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.836030088 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.295465543 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.106190554 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.041836626 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.835786547 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.648730969 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.860041502 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.260237194 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.665087992 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.873028716 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.020759621 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.939735786 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.073045444 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.770535845 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952523187 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.849787689 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.822301998 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.811214596 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.086754347 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.196428047 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.913717563 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.820498716 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.428935549 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.521981861 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.802235595 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.596543566 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.63684816 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.940483715 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.8193537 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.816402201 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.749098487 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.227964033 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.178163798 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.819718565 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.520869709 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.810551899 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.820596299 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.898752194 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.81311192 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.625365029 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.728088261 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.082128525 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.808691528 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.818275913 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.379159576 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.950871978 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.266811935 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.779043429 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.006918696 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.615840354 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.208945203 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.959975356 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.815532138 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.817427789 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.74804517 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.599180925 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.864574441 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.963562353 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.829403334 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.464091393 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.119584707 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.927632189 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.755037842 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.096864041 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.915631538 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.782777929 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.040776532 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.769552658 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.747729896 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.672848625 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.745790378 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.083721397 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850402917 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.45823092 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.85616309 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.144963401 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.823151232 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.830070159 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.822403476 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.038234713 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.695415148 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.81430255 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.642350578 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.96357108 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.834827188 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.145472205 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.74915597 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.814696221 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.069627117 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.026197774 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.945886255 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.324338787 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.97048928 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.85888773 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.825929648 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.645706259 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.85699761 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.092821345 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.876585183 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.948314628 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87409435 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.783138398 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.115890384 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.893716193 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.911658613 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.883995093 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.938847503 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.148532934 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.100620154 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.882043234 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.824801266 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.816995164 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.715499236 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.374821829 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.0845669 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.826039859 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.232314326 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.860801422 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.825543666 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.756083228 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.415809487 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.869201195 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.789412649 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.045936958 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.695361209 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.125714332 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.754919995 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.967720305 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.929937536 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.038019277 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.469536444 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.900894351 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.08051277 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.196331251 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.979770174 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.863345361 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.838863884 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938143919 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.842676087 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.155951494 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.10624342 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.826252234 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.826342498 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.625565792 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.815999839 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.82651826 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.826800331 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.576289213 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.096164565 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.842440836 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.817290093 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.712388485 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.834943381 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.888738269 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.827790357 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.831105243 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.359921356 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.524733692 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.825364814 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.442765031 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.044773699 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.833123437 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.595761438 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.933740313 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.904785833 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.102841707 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.880592872 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.756620384 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.53344369 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.516296762 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.822909708 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.758232152 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.822797718 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.832099188 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.833628585 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.201601502 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.102334128 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.865762585 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.622208262 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.864684322 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.834378637 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.827045411 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.821866682 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.360233829 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.949849915 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.27291994 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.864368284 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961051108 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.836689138 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.756720889 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.828066053 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.82905008 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.823900047 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.778727062 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874686843 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.630284826 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.204513573 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.07739 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.431608777 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.829327781 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.632880718 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.872796252 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.88962349 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.663079853 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.668381578 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.878872991 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.838318764 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.833689589 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.61415862 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.516358071 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.387163007 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.141927532 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.129492851 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.27410685 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.218634916 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.123144275 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.159260596 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.055215427 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.350195571 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.879224501 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.158050299 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.767578487 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.90798398 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.467046179 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.174223129 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.831581369 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.0518286 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.214838691 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.716819877 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.845815817 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.034231731 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859438121 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.662919758 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.779363418 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.028347622 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.96479407 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.587158198 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.022983869 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.159120071 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.518337279 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.935631111 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.824083303 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.506062616 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910604271 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.533975234 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.187394729 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.278111589 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.771715147 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.29403646 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.822101136 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.270700139 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.177824795 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.049356906 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.938136193 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.761627617 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.837057876 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.838017636 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.824969836 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.816926796 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.688807839 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.071438715 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.834987831 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.062703224 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.981512695 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.114866972 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.72527101 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.829888858 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.825583844 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.120604883 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.512504173 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986927956 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.162201241 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.338599549 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.826742454 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.758014543 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.759071437 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.517139968 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.825534947 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.799614753 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.047330403 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.01491954 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.74240349 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.220083936 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.059790485 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.078763341 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.836957919 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.099142786 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.099461612 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.522743275 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846507407 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.923738718 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.503867134 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.931080033 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.098455332 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.06270555 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.581085746 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.05114978 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.872110148 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.64280275 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.828772133 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.037679537 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.095101686 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.783318642 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.052877999 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.54442014 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.889623054 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.148342079 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882023605 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.765400115 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.972120218 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.018896569 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.832325472 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.910580401 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.837741028 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.836280191 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.840268034 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873943161 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.787504689 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.946021772 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.842791219 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918960815 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.964412332 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.354716155 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.832438859 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.10706385 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.186679372 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.160267191 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.888229522 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.830140036 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.838336448 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.761759833 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962551523 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.275744187 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.10517848 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.96322974 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.129023036 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85193611 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.529524072 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.08495354 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.065958379 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.102090294 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.728057959 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.831046306 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.858665829 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.098430488 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.840279275 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.041238467 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.057545889 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.144545012 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.301948017 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.963917417 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.187005209 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.104913687 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.204847019 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.830824861 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.419198509 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.904387492 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.511889079 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.874104301 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.753051572 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.096398713 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.843382851 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.217422762 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.850370458 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.027164191 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.350511557 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.618194343 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.120092561 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.824879744 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.893252883 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.107341561 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.228932934 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.140143623 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.901633365 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.841351368 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.535532896 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96887042 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.706677598 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.101689744 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.834391079 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.044346631 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.542827394 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.841208467 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.114415989 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.142864195 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.827183376 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.709186928 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.834099035 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.841507541 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.058142568 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.106258767 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.085924811 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.843879198 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.834675098 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.651604859 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.112247518 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.890352348 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.768036505 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.834292257 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.934245521 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.078370559 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.855261159 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.522035712 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.545939401 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.133329809 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.753273954 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855284605 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.239791493 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.193823177 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.159665659 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.368092822 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.058760129 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.395710639 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.715873858 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.130248046 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.84309874 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.288483108 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.140529242 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.839787872 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.347074807 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.86672925 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.108792106 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.152245735 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.920899266 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.631779212 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.806608653 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.063481259 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.401088252 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.77339123 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.845656464 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.898231451 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.835899825 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.966720675 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.84476241 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.729843499 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.689219696 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.579039632 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33279327 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.846508862 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.832262381 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.583644064 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.37050983 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865145998 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.98409129 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.841329207 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.54933263 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.132814733 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.09348532 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.347459414 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.840601874 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.843805425 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.840587735 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.770202788 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.037112263 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.217572782 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.137124864 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.17584415 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.86995449 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.846199592 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.056319814 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.05354434 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.79696788 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.974637819 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.222468086 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.871392273 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.611782756 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.522669054 seconds)
  done (took 1660.901090643 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.868052852 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.85595107 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.883694414 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.913014191 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.880821996 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.917444499 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.89571995 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.938463843 seconds)
  done (took 56.921886788 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.840710473 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.034088627 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.848910929 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.840657512 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.845375103 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.839283347 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.023745035 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.844154869 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.864888046 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.850624515 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.84177144 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.84955595 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.199187099 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.85966826 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.841405647 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.864502036 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.853902878 seconds)
  done (took 73.951283402 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.839429172 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.040007947 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.878989278 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.856477417 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.774155309 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.853234305 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.837093957 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.891144417 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.842730891 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.052000654 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.473898636 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.840930234 seconds)
  done (took 89.95152565 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.849034566 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.847396863 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.848898634 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.847603092 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.848076694 seconds)
  done (took 11.014280072 seconds)
done (took 2162.335334848 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.089283341 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.068650299 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.065011512 seconds)
  done (took 5.904364419 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.988710534 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.036279274 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.158824063 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.161521805 seconds)
  done (took 10.119492603 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.133432312 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.223225498 seconds)
  done (took 6.127590686 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.243767606 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.848996426 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.230796126 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.840635018 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.842933729 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.842624443 seconds)
  done (took 22.302663477 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.845907102 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.84975161 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.846461333 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.8475431 seconds)
  done (took 9.1591604 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.829887865 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.523069114 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.822268094 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.84281422 seconds)
  done (took 20.789426347 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.59265621 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.243648667 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.589767295 seconds)
  done (took 9.19684652 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.350850608 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.736600192 seconds)
  done (took 8.857766511 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.105482211 seconds)
  done (took 3.87731884 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.974935747 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.120355891 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.379883329 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.362825863 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.449113412 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.675165229 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.145584948 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.078278736 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.250382755 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.272360919 seconds)
  done (took 24.480578873 seconds)
done (took 135.999107715 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.21668987 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.841749946 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.041356241 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.186782439 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.070066638 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.042344194 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.251129692 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.171755799 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.681626924 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.679099625 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.185572056 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.125279045 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.007412513 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.081647936 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.012129816 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.082392357 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.145608768 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.230631309 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.923391069 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.078562539 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.257063935 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.813294932 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.026119692 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.820206165 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.105810628 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.994262951 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.401769126 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.081295144 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.074824432 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.410479685 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.995293911 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.234891456 seconds)
  done (took 171.04395356 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.72971941 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.840596579 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.842154378 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.841530971 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.039807455 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.844034846 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.845581912 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.842452183 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.984591675 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.96792122 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.844526067 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.037332945 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.84282941 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.843705903 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.846484169 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.844328336 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.121517684 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.802004093 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.857540417 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.862481138 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.864778981 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.959498343 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.86420031 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.995323467 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.130650378 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.868392883 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.843292561 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.869617645 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.847094073 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.849937983 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.853153004 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.842252076 seconds)
  done (took 206.245863463 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.84592266 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.84600191 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.844820596 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.845857055 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.84364446 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.846102906 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.844528905 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.846443836 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.496123284 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.487274322 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.844524416 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.843558707 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.846355572 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.845536237 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.851756792 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.844715866 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.851880736 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.851791463 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.849606694 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.851833227 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.852636373 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.577241843 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.854963755 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.578482485 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.851235309 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.852542448 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.846378714 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.854479828 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.857402515 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.8561125 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.855324843 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.847822386 seconds)
  done (took 219.697992637 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.05038544 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.85665711 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.855850029 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.799312997 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.858147846 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.855438967 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.804589521 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.051436353 seconds)
  done (took 18.927376371 seconds)
done (took 617.696598371 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.316866555 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.144728373 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.01453722 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.878388273 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.138771388 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.904201777 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.874933733 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.939645842 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.593407603 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.93359381 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.557034364 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.886959378 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.652912374 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.885983353 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.996384191 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.929162616 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.454251632 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.552090378 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.04404036 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.945959372 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.044615148 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.799039701 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.940400043 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.608544237 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.663945061 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.839831929 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.03814494 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.452258949 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.879871587 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.030776786 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.582760541 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.234955009 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.877265867 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.87180253 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.927737912 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.903902774 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.217627001 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.875162833 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.990599057 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.601859044 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.943421741 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.476851765 seconds)
  done (took 102.224053615 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.844293639 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.842011493 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.846262839 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.84551292 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.845584504 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.845092555 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.844014443 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.843536513 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.846642044 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.844233135 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.844416911 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.847023946 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.844636396 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.844328361 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.843330402 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.841778355 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.846387916 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.843616765 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.845545887 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.845467667 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.844938858 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.844086997 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.856843998 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.845132398 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.846588444 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.844077429 seconds)
  done (took 49.763078924 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.855749272 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.018344619 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.099125143 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.871506023 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.858215119 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.861492406 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.874103675 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.861352127 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.859124863 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.859135035 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.962718922 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.858592345 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.872842231 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.104023567 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.861734071 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.854685336 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.854542929 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.852247212 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.020996388 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.869894021 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.877287893 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.858485809 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.872801699 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.866724836 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.857035917 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.852558944 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.858336265 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.336288233 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.861567512 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.959228562 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.899112649 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.874826514 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.280680224 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.110250762 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.903071015 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.858059692 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.85638791 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.963557937 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.860289684 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.85541305 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.871712941 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.858520587 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.100671411 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.322753111 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.864463893 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.857464077 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.348187163 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.971960518 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.894466548 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.865171203 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.103603343 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.868223262 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.859393929 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.859639823 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.892885626 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.867142307 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.857593061 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.1961073 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.864526866 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.875730915 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.860388765 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.856644853 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.026717488 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.86387052 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.016317679 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.867004488 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.865915095 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.857825605 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.103981138 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.866874762 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.340614534 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.863984206 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.857268435 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.960110766 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.019238646 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.366737406 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.864605748 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.034067171 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.291687099 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.88061646 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.865698902 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.326733325 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.882495586 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.863143379 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.861513996 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.858335782 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.859764733 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.903112957 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.874123884 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.268103481 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.338412644 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.205212006 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.880043843 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.868534993 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.85679721 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.19855365 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.861415789 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.859473423 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.096334525 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.342389947 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.866467412 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.866216414 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.322429277 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.868065771 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.875666961 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.866739027 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.106929043 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.869867363 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.904253801 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.859089557 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.863614815 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.862433253 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.874274981 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.863952752 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.85679886 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.308819007 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.976907822 seconds)
  done (took 230.526366659 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.852382907 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.853440374 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.856061185 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.855486984 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.85593493 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.858357674 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.851900211 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.855997069 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.861145025 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.852684729 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.852951116 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.857225379 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.857768086 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.861203347 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.346270137 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.869030978 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.468664226 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.869729508 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.859092844 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.85394852 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.53484196 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.865890596 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.860822316 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.858415213 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.858156358 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.860476486 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.86706892 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.894695533 seconds)
  done (took 167.635391117 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.866037305 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.044079267 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.880224655 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.898909868 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.874614673 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.863060217 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.890834847 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.882505877 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.872236327 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.862622208 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.865216898 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.927115655 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.875375817 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.004322427 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.893231844 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.896726692 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.969771539 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.869829362 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.86536089 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.864386659 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.894543974 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.859186137 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.926606109 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.992354256 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.883929213 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.980869177 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.868044421 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.866683482 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.868651229 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.981587683 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.880073173 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.926097466 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.893904549 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.885439922 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.990095147 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.978445153 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.971608713 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.8938659 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.869755694 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.863175773 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.866004579 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.853184031 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.979876575 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.882546201 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.866090117 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.971099717 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.881005191 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.869666069 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.874030073 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.86583716 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.878964311 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.881373744 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.932585825 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.002455473 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.897403372 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.891946133 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.893365141 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.14330519 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.877032476 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.966290941 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.855396336 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.981319032 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.882834009 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.855968026 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.866719043 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.870781042 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.895233477 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.900655097 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.972351008 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.869604156 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.964347691 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.898542801 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.873476205 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.86398765 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.871969943 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.983850339 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.982747964 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.901737236 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.903558722 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.897459322 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.864329174 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.869327215 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.858104181 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.884166863 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.870105012 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.986927404 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.982015419 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.872078819 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.869466014 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.868978877 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.871025998 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.892366656 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.990752045 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.89858754 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.965878851 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.932032616 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.942980604 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.88390605 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.881965135 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.870604835 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.932862626 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.882967483 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.881871944 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.186139512 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.938683826 seconds)
  done (took 202.276810463 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.347197259 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.916970118 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.925164239 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.192894287 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.285153297 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.722206213 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.915775986 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.917594783 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.940657712 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.115586751 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.987364087 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.939854344 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.903838694 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.89199933 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.917824939 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.93761504 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.928749704 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.236152321 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.051811657 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.029776029 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.899047708 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.230912332 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.233014196 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.359531809 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.953464222 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.258212085 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.594964334 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.167255326 seconds)
  done (took 61.597467871 seconds)
done (took 815.796997889 seconds)
SAVING RESULT...
DONE!
