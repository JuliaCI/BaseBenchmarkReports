cset: moving following pidspec: 25098
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.358020004 seconds)
loading group "string"... done (took 0.487792424 seconds)
loading group "linalg"... done (took 8.094561077 seconds)
loading group "parallel"... done (took 0.174132182 seconds)
loading group "find"... done (took 1.313813742 seconds)
loading group "tuple"... done (took 2.005297231 seconds)
loading group "dates"... done (took 1.350903394 seconds)
loading group "micro"... done (took 0.247163253 seconds)
loading group "io"... done (took 0.687929693 seconds)
loading group "scalar"... done (took 41.856634295 seconds)
loading group "sparse"... done (took 12.90994022 seconds)
loading group "broadcast"... done (took 1.140569261 seconds)
loading group "union"... done (took 14.295318224 seconds)
loading group "simd"... done (took 4.890557674 seconds)
loading group "random"... done (took 9.913308357 seconds)
loading group "problem"... done (took 1.998594119 seconds)
loading group "array"... done (took 22.963544772 seconds)
loading group "misc"... done (took 1.465402736 seconds)
loading group "sort"... done (took 3.664667555 seconds)
loading group "collection"... done (took 20.007271529 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.546475988 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.148688082 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.158315056 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.159337989 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.218838803 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.144598728 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.161260952 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.116408491 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.973061202 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.197558606 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.1613753 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.533132668 seconds)
done (took 5.240732315 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.284682924 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.097862207 seconds)
    (2/2) benchmarking "String"...
    done (took 0.110124517 seconds)
  done (took 0.880842541 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.081842289 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.151527607 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.097387435 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.097961355 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.084227874 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.099300796 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.083666374 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.099098026 seconds)
  done (took 1.380089422 seconds)
done (took 3.301308537 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.747048725 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.295528265 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.225281508 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.488892998 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.186452193 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.219825204 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.733765272 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.390737801 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.278922895 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099871502 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.152073632 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.455927215 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.138969604 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.765803406 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.095849223 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.133416294 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.187639547 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.482720072 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.086134431 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.113186916 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.119259143 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.147753314 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.108984898 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.107598976 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.187201004 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.097604517 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.190432764 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.110650338 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.083872697 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.337038076 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.20601928 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.788642724 seconds)
  done (took 11.464404387 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.119995201 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.142400219 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.100474043 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.159668148 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.142572622 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.08934903 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.106385309 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.084802126 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.130549033 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.18566047 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.139440642 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.147547201 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.097776106 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.088041367 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.12301111 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.250559157 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.125978901 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.108608971 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.104063204 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.109199502 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.127277505 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.117748554 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.114658553 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.114487288 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.170727791 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.212711534 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.114106654 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.128472702 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.098596741 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.118227887 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.150095485 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.148313561 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.100943446 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.086086645 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.182521968 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.12962559 seconds)
  done (took 5.345563361 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.194498402 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.126043235 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.175604288 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.167013958 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.145657563 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.163439595 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119374887 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.256828135 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.14179862 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.187611646 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.148323666 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.117566112 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086146017 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.105348933 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.086373438 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.811388608 seconds)
    (17/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.187230853 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.140877801 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.130524374 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.123835309 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109778301 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.105021937 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.091155977 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.10109444 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102988659 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.113411328 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.677814796 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165746517 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102721701 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.199677708 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.126871577 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.105919016 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137787031 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.203827377 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.128523165 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.139162884 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08505884 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.099824254 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.185522231 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.094402213 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.101099293 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.085400265 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.132945725 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.143191406 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.143483176 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.103948649 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.101611543 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.219106865 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.084261466 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.119655694 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.090438613 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.186442619 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.096572045 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.102588884 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.354318098 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.105328626 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.104626469 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.103327188 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.318796191 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.135226927 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.102801222 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.085375749 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102626935 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.10474891 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.823092665 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.086014868 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.38116633 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.086661495 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.112974928 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.1025475 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.087196489 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.111064569 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.093581021 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.122403619 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.104110627 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.087563386 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.103346862 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.084054024 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.106666274 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.113072881 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.091161099 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.102086148 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.156029093 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.093948332 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.105009116 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.135834443 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.106251549 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.101602933 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.122385668 seconds)
    (90/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.098857723 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.100012506 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088472885 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.104496406 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.144990017 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086780402 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.115452262 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104830309 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.132908533 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.102447112 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.24733584 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.083971616 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.132998817 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.106375959 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.136541807 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.115133127 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087422209 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.108321534 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.085066179 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.100670758 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.170476609 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.085152124 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.103990591 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.087963443 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.117351883 seconds)
  done (took 25.216257038 seconds)
done (took 42.691510871 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.357432586 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.110131452 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.111285026 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.110896979 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.108390822 seconds)
  done (took 1.540739758 seconds)
done (took 2.259002304 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.31251421 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.19646566 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.080787494 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.193770072 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081003866 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.199953573 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.164386364 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.115063424 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.211071243 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.096949969 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.170375984 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.098250473 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.08248731 seconds)
  done (took 2.745622839 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.099745309 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.121657413 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088545662 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.117365721 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.099717183 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101284504 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116469939 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108106164 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.116798691 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.108489051 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.081949615 seconds)
  done (took 1.878358939 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.098211246 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.118392454 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088093306 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.116582328 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081796049 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.116219708 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.115910896 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106359354 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.117525892 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.108407796 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.082310548 seconds)
  done (took 1.867857131 seconds)
done (took 7.202366855 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.098590526 seconds)
  done (took 0.807856359 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.026304346 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.082667963 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.123544968 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.164378867 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.348032705 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.211187117 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.568789377 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.136829362 seconds)
  done (took 14.603354978 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.152412449 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.092331458 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.10746642 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.091439179 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.106248586 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.103646308 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.091078929 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.104156239 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.106360171 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.087477762 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.105881938 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.107805357 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.092497503 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.105012062 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.09088923 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.103876513 seconds)
  done (took 2.429928859 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.141225051 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.141122275 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.093588486 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.110870469 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.109646605 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.092484731 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.10958038 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.109158698 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.089636421 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.106950446 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.109648496 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.108758266 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.091451433 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.098669582 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.109280797 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.094915394 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.105165648 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.109890034 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.11056907 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.096004439 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.110538695 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.098669886 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.09200443 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.109957087 seconds)
  done (took 3.356059641 seconds)
done (took 21.915777383 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.167269969 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112796797 seconds)
  done (took 0.999739987 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.105969692 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.123108362 seconds)
  done (took 0.954202918 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.112294739 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.097335231 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.140488088 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.118827394 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.099262462 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.084162984 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.136280517 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.099359267 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.084792831 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.099290921 seconds)
  done (took 1.801482452 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.090345534 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.118787121 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.110745125 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.123416614 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.097882054 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.104253014 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.114679161 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.090545188 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.121192965 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.100149727 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.094729497 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.118595925 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.110336225 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.122317497 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.117299583 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.094437415 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.114367025 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.109951793 seconds)
  done (took 2.684378543 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.084419064 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.103799738 seconds)
  done (took 0.917989249 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.090129331 seconds)
    (2/7) benchmarking "second"...
    done (took 0.100108149 seconds)
    (3/7) benchmarking "month"...
    done (took 0.089578489 seconds)
    (4/7) benchmarking "year"...
    done (took 0.103161763 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.100502311 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.085761544 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.100425382 seconds)
  done (took 1.397990277 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.48993403 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.139477126 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.269138774 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.108618737 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.129514264 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.33656805 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.085292304 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.109233063 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.108778709 seconds)
  done (took 2.548188864 seconds)
done (took 12.029244951 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.09678393 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.121054797 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.140774718 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.510393955 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.12795669 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.102697834 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.153970581 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.262584554 seconds)
done (took 2.252404326 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.157944335 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.337740994 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.122934878 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.086182897 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.085875245 seconds)
  done (took 1.368451256 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.083885789 seconds)
    (2/2) benchmarking "read"...
    done (took 0.102521076 seconds)
  done (took 0.926543084 seconds)
done (took 3.193680932 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.0843702 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.136363252 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.102803056 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.082426379 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.103079764 seconds)
    (6/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.085760553 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.100520747 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.084007075 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.102354331 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.087276124 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.101832781 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.102586342 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086734201 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099482895 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083242088 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102834705 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.083378462 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100135182 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083195261 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102587552 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.084259197 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.09956771 seconds)
    (23/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.098983619 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.083844378 seconds)
  done (took 3.053514057 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.112960554 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.101847775 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.106068679 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.092015923 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.105626491 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.106248461 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.092450646 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.103030586 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.108561672 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.089733295 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106584375 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.107875277 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.089320095 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.107310126 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106304992 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.092508211 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.108977871 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103568565 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088998821 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.107273479 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.108421206 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086883754 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.107155372 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108243755 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.090964481 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107706422 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.106483805 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.086933691 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10952757 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.107063263 seconds)
  done (took 3.798823027 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.08991768 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.097092998 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.082320948 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.105573996 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.082912998 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.104184671 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.100247215 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.084338361 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.102439314 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.084650181 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.102247432 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.084310559 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.099895878 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.085727189 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.102970731 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.105170587 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.098841977 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.100683004 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.085259259 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.10093707 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.087741345 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.101595198 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.103205502 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.084590241 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.099657164 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.083979619 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.101655248 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.084577198 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.10140596 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.101713194 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.086868911 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.105471451 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.084403754 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.107949667 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.087629831 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.099796705 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.088383859 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.09949447 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.100861732 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.084078167 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.101023763 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.083914738 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.100629785 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.091656535 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.104035653 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.08595651 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.100787087 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.103139276 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.085906124 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.10477368 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.083683313 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.100638004 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.086874147 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.102760202 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.105015265 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.083168937 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.101450263 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.085199206 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.102284403 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.084472361 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.099960007 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.100666839 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.086938545 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.102211165 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.101141152 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.108558005 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.08530206 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.101851078 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.10505302 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.087895213 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.103571164 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.099451731 seconds)
  done (took 7.617960535 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.088540261 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.109442612 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084502288 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.101334231 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098155599 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.083196922 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.104828362 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085677526 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102885522 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.120253031 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086475706 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103633858 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102834539 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.089307772 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103135797 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086404275 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.112529784 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099938124 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.085154136 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.106081033 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.085526602 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.105850306 seconds)
  done (took 2.894313493 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.218645036 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.109221683 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.147840632 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.126648245 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.121406349 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.101384379 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108835192 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.110732313 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091677013 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107338816 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106557422 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093211732 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110657297 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106557076 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09153179 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.10889883 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108797416 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092474951 seconds)
  done (took 2.810074863 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.097612151 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.102064424 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.126861408 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.087681184 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.10528182 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.090374618 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.110629653 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.120512505 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.107153139 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.088018223 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.115373809 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107634361 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.090826358 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104694944 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090153178 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10401546 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.107764198 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087740508 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116100526 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.111614908 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.095008718 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.115656546 seconds)
  done (took 3.034426007 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.1028019 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103965645 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.123043377 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088858305 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.100597302 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.086680587 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.109330854 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.102274949 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.095487021 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.102789495 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101651245 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08680793 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.108451564 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.102112374 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.091414228 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102979656 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.087768988 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.100892827 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103611753 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.084047707 seconds)
  done (took 2.738476805 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.12469721 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103993428 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.21613325 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125974866 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086624355 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.104269173 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.126871744 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.086527583 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.103080545 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.130302699 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.087382428 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.103673021 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.128181942 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.123762652 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.087675165 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127580809 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.127924999 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.127588107 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.088524721 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103294574 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.130807769 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103424141 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110720774 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.104413563 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.104290798 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086822515 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103877098 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.123882797 seconds)
  done (took 3.936095561 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085209075 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101889201 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082762609 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.099986935 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.083171938 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.100013375 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.083462595 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.09913091 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.085800776 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098908716 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.101655937 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.085757886 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.102443569 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.085960202 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.10191849 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.087983159 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105318077 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.084632177 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101321785 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10145659 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.088176781 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104383094 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.087499636 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.102952994 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085138778 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.104335973 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0856312 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.101549666 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104522158 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084853897 seconds)
  done (took 3.581975416 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.097148715 seconds)
    (2/2) benchmarking "in"...
    done (took 0.109757111 seconds)
  done (took 0.965915467 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.083411679 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.119395118 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.08282942 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10611664 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.107596691 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.086779886 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112113485 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.1107631 seconds)
  done (took 1.564424568 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.10488874 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.121832638 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.092199453 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.121408139 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.117150805 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.122185095 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.170005199 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.093408925 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.109832698 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083289469 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.120562755 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.10498822 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.094319464 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103565369 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.09390054 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.111613467 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.105420363 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.104000769 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.111852988 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.08774966 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.107659646 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117338949 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09166375 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.102606348 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.10721096 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.100279882 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.115553971 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.107644485 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092235917 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.11714238 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.095114596 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.099258471 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.106383869 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.09434643 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.10393643 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.100524587 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117164513 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106965902 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.096133675 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10926077 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.130405685 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.086343812 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.108750103 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.108923295 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.097623998 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.108811939 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.09284726 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.101270465 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.103427913 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.089062081 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.101589594 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087686814 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.097368879 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111047068 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.090565578 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117512893 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.085511284 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.105778179 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.107538997 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.090257675 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.110996237 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.089210296 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106141354 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.102771214 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094674358 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.107517573 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110143534 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.084845484 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.097034722 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.087285976 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.112796334 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.12714295 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.095233254 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.109447189 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109712196 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.087774571 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107010892 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.093183298 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110147415 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.111980159 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.092619688 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.123801947 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.11312152 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086842986 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.105865478 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.116384363 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.085706145 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.106188389 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.084392653 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119134078 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.102357775 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.087331394 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.101058875 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.115242126 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.092534953 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.106291732 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.085924331 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.114035935 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.082824927 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.111405511 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.112742494 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090107011 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.116278709 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.117695954 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.098438096 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.11213578 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.115234979 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089239789 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.109867019 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.085431547 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.112315146 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.108760491 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.096145001 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.100859294 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093821341 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.108523369 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.112720152 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.097326022 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.105537898 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.094681737 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.115180354 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.114292931 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.088009144 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.103476191 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.092375496 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.111154022 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.115263331 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.096871619 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.106011723 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.10540777 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.08797819 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.1110052 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.094810882 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.112230326 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.118305444 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092117229 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.101051285 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.090834362 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.117105101 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.11548146 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.0904657 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.107371438 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.112440204 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.090498977 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.106595208 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.096349179 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.108799961 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.105648232 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.09396698 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.110216112 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.088309943 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.115371655 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.109741947 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.088028598 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.110713735 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098489415 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.109022211 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.11245267 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087679255 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.111536813 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110928082 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.086689457 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105046413 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.086236088 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.114494588 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.105730147 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.084726648 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.100948731 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.100102605 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.10127164 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.107179143 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.08639635 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.106741513 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.092168576 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.104802271 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.086751725 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.104857549 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.135271448 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.117474859 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.092764426 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.111493588 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.099366569 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.110080512 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.10843252 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.09212476 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110263909 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.091658665 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.110909226 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.11007148 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.097360082 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.106920635 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.099922494 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093236535 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112248403 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.0859566 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.106176895 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.102818861 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.091535249 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.112440561 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.107521642 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.09182456 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102144109 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086988659 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.113125872 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.107331869 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.091313072 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.103398463 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.093653992 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.103442183 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.116662686 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.092857843 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.114163939 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107700238 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.085223384 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112700937 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085488194 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.110247193 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.102389838 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.084978339 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.102475182 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.092724936 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.10272284 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.107216369 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.080993701 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.113147027 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.096066425 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.104555087 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.103403659 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.091976082 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116067875 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.090898431 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.11037152 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.111418162 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.095714649 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.12200885 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.10734497 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.093611432 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.117882974 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.094847841 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.101890514 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.113540826 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.08920698 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.10752546 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.088696426 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.105560766 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111787451 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104814025 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.109392794 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.081320781 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.106534512 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.103134654 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.085850704 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.103139991 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.093519749 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.108023579 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.106186417 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096155112 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110811481 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.109307428 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091476224 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.108112671 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.093271775 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.11034229 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108131415 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.092943462 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.107132654 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.086869592 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.106192671 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.103688885 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.088334313 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.106117728 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.092735209 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.104928803 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.11106593 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.089629773 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105066128 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.090600874 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.110299803 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106264782 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.087920001 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.104416075 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.09060655 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104991046 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.087872647 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.108139245 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.102555626 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096529373 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.10928106 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113807858 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.088259341 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.103910604 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.096919607 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.111471551 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.11652173 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.092180053 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.110937322 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.089095948 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.10940322 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.108415752 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096879198 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.102792285 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.115330765 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093883066 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10532707 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.090691388 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.104885177 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.106422019 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.086199742 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.10808655 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.093542497 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.105616848 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.087831242 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.110569804 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.108523432 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.088079505 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.106350355 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.110106287 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.087883773 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.106512933 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.081519843 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.104336162 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.087455444 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.110289845 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112906795 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.091867106 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.109529732 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.087769936 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.1112934 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.105438587 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.084638961 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.120439079 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.121897281 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.093862991 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114533813 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.104887734 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.089952491 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117356002 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.083739213 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.106882239 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.109466101 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.088979602 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.1180519 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.095621294 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.117337297 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.10842892 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.088281258 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.106047557 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.096242838 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.118426082 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.085290927 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.109927778 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.112533859 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.093032984 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106649355 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.095385437 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.109744775 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.111877191 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095830468 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.104883741 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.090140453 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.110330613 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.103754855 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.085856886 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.105136 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.090460221 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.110098983 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.102282737 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.084643895 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.10912461 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.08974894 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.107579885 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.088476786 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.106918532 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.114122512 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087885506 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.109607888 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.115076303 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.082840999 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.109313085 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.088942984 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.110207974 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.08752587 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.109848429 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111035969 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.095235534 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.113466841 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.111083682 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088716894 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106700565 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.089381346 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.109912667 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.110153508 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.093833868 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.10563561 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.093668289 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115131142 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.107516784 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.09010664 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106174548 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.0895453 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.110543676 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.111496701 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.090592015 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.120755139 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.09185728 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.107475675 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.113683667 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.092737756 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110647543 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.112115489 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.089906489 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113346058 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.087217001 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.115196027 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.106437941 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.093412403 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.108633998 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.086342135 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105433698 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.106594412 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087674137 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.111564679 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.094373325 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.106166584 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.105807444 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.089322746 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.10899531 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.096309114 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.115622182 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.109631807 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091301329 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.106319748 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.085527437 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.113552917 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.105201396 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.090049812 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.110363992 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095517055 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.109760117 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.107293911 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.087508385 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.11490148 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095775235 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.111967994 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.104585479 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.092911529 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.112702999 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.109264583 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.089531158 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.107482405 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090892443 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.112550222 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.109150003 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.087206157 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115486582 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.092198755 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.113278458 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.109024424 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.089022111 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.107694421 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.086637019 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.11197627 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.109603431 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095254425 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.109904523 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088332199 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116595213 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.107168837 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.089110131 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.116986136 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087924947 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.114289913 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.105550055 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.088911767 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.112441268 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112890227 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.086737043 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.105384841 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.08600142 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.110559553 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.087267594 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.105561653 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116541044 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.095560053 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.109326167 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087476444 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.105607325 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.105028183 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.086482456 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.105822427 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.093446022 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.109246747 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.116458463 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.087317799 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.105823154 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.086867717 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107543844 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.11022643 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.091324508 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.104261699 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.086504542 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.10583518 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.090477341 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.114260371 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105214476 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.09162614 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110651701 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.109367094 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.089042014 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.11588753 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.085404384 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.112432715 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118385183 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.09385994 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.107994166 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.09383987 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115631827 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.112727209 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.086835878 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.113071886 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.109525935 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.08832005 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.113470377 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.089831914 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122651761 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110159531 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.087555753 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.106562512 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.091565077 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.106357089 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.116228954 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.094063157 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.113270409 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.112720668 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.089265935 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.123847565 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.091242072 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114253736 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.110980824 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.090171112 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.107004433 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089132575 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.105378569 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.106804599 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.090158455 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.113607981 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.114102897 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.102261105 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.107373239 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098484055 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.11624563 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.112265843 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.084763244 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.106283555 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.088084322 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.106313474 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.113110943 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.086314341 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.105682837 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.086798373 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.106914358 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.0892391 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113959516 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.110185654 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.094092884 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.107929433 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.082621555 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.108783491 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.110121242 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088411068 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.104079652 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.092874104 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.113501114 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.114853462 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.099633731 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.108738535 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.090374233 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.110163157 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.1081041 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.087012964 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.114824258 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087068109 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.110164027 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.107005732 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.089395661 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.114495417 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092189013 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.11941492 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.110727832 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.09113281 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.120013418 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.115013134 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.085793541 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.105049581 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.094596547 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.109686421 seconds)
  done (took 61.88989822 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.154729032 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092914755 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104177275 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.08330096 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121675363 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107256722 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.084924079 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108051041 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.107121009 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090352781 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.103408533 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083566868 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117989706 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.131983309 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120363981 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112404278 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083976501 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10741594 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084410538 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106521318 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.118904228 seconds)
  done (took 3.036828586 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.110592811 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.122800624 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.12036231 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.125207723 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.113910857 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.101740467 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.120051103 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.121096601 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.124776204 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.116124738 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.106427872 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.12146287 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.115692005 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.115831591 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095617488 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117725728 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.125008466 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.1147843 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.121599555 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.100718926 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.118618574 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.120883336 seconds)
  done (took 3.35848656 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.09742255 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.111280723 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.092219203 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.102010475 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.087571113 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.102308839 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.11650153 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.085999174 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.110926854 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.08693311 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.105779087 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.086995099 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.112850334 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.102867621 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.087258639 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.104866363 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.159059887 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.112950523 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.091830147 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.1092917 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.086673106 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.110639764 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.106376038 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.087765451 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.107027723 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.101923607 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.109219058 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.088824579 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.108277429 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.10621568 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.091957545 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.105796391 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.08971347 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.108544019 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.087240592 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.106781473 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.107545743 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.091416893 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.106051727 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.089275499 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.1085371 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.087328896 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.113318427 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.109618398 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.088322808 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.105748533 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.09011651 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.10755205 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.084646833 seconds)
  done (took 5.770019937 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.122600627 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161306581 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.089923294 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.131184972 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.126072751 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.122126555 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.112875937 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.150581706 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.086006426 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.112824931 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.127993756 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.126085779 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.092196296 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.116809854 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.115186327 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.091772319 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.11301287 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.107481268 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.117226287 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087156752 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.117623764 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.114797123 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.106560591 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.122726303 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.117048736 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.11125651 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.087346376 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.117645286 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.123259842 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.116639524 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.096929445 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.118110904 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.127293179 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.113016787 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.08729126 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.113949551 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.128362248 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.112325826 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.09469111 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.105917664 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.094641203 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.116538436 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.115626337 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.12973585 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.096147455 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.117508208 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.116466726 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.088852228 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.127892712 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.118780303 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.126234004 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.13044627 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.100768522 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.116825658 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.122749338 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.131745614 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.095499364 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.114362236 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.099081755 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.127621333 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.110534804 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.121121659 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.109660757 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.118545469 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.124976544 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.129962915 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.097114994 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.120974297 seconds)
  done (took 8.739367161 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.120500009 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.11982117 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.130017115 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.132798437 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.124435807 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.103704193 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.124569673 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.12549638 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.123790959 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109967969 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125611066 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.171604914 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.11902916 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.128460884 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.103791749 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.124098046 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.123803087 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.122825584 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.10251098 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119894126 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.120848277 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.130336136 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.119228205 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.129601264 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.130260894 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.094008781 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.119839945 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120263105 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.129959828 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.09958029 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.129861209 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.119787558 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.120303143 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.129838028 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.131603647 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.099924601 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.110979306 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11931656 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.100769528 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.120981911 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.114431554 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.130239072 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.100821454 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.113814693 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120773544 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120130982 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.13012047 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.110646516 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.122794925 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.127416034 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.119480842 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.130562358 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120119006 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100021524 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.130561014 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.135512376 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.129831142 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.129942125 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.1206375 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.130087406 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.130932776 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.135685205 seconds)
  done (took 8.367409602 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.140739703 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.102674829 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.130757538 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.105246909 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.087274477 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.117258797 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.107397275 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.086652244 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.12337459 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.122532718 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.125524283 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097064552 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.121204513 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.126089289 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.117062779 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.120449883 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096822174 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.116639034 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.124596706 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.117474849 seconds)
  done (took 3.110097881 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.098482506 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.130006612 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.109936829 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.096762622 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.112884384 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.117155714 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.091756202 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113217197 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110336848 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092954349 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.122912445 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.122452202 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091109681 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.117300451 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.123719212 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.117306693 seconds)
  done (took 2.592860765 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.102139111 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.132909227 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.129211308 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.1103393 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.087374616 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.107304299 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.09177818 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.105080175 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.10582201 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.105068374 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.111817641 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.115871705 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.092659413 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.10840467 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.086452998 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.116081141 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.105721038 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.086556316 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.112467497 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.130398324 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.100461385 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.108906084 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.113479299 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.091846727 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.110131427 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.11556212 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.089914956 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.107728466 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.0876653 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.112817247 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.11004902 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.098136587 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.106038947 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.108541816 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.087438339 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.107224068 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.092657664 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.113367093 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.115762831 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.091570375 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.108487423 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.109046796 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.092982232 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.111426441 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.085111726 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.112912194 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.105484322 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.095929351 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.108546373 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.109748831 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.092289522 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.113005996 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.090975528 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.120811982 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.114127208 seconds)
  done (took 6.609966975 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.104414809 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.113938819 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084621647 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.107843998 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.114156275 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.091699593 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.113290996 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.094070174 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.112621459 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.107536309 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091354519 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.115521878 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.112859976 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.093417668 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112042739 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.093742162 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.104741715 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.11075902 seconds)
  done (took 2.710551835 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.095053007 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.110360645 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.097671828 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.110353516 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.11045157 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.092654332 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10581231 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.087410791 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108548897 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.089199502 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109016008 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.112520226 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087756807 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.112409757 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089482768 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109899161 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.1127904 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088093175 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.110775252 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085449703 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.112438715 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108562294 seconds)
  done (took 3.078236076 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.127299345 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.130304691 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.118211552 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.221325501 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.129131377 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.11607161 seconds)
  done (took 1.674347054 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11471348 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.148381282 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.112019045 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093191215 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124402592 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116198296 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115352643 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095295997 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126011083 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129170349 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115910157 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106298196 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126657863 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126371116 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124597799 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122918482 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095489665 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116063083 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111384831 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134819072 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095931843 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12660912 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116743015 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116000301 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095461702 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126164829 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127336498 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128193991 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116072334 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127677674 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102415701 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116153279 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128071103 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129999048 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094032298 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126312073 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117595551 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138753745 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1258799 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12634171 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.093901927 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124408725 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127124895 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122771114 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106670566 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116316372 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122562108 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115703726 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095523443 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141071177 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123083768 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125996949 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124640414 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127353967 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127366144 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142300331 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128925407 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106718149 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12312872 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128477019 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126898843 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12291083 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127064859 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129945958 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103795794 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125939056 seconds)
  done (took 8.745707159 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131582268 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.11201161 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117650424 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129674074 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127104931 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095714006 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116107849 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116438564 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095361866 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111356692 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.160141966 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116717461 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126096556 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128316943 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095762488 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11543931 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116541416 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126230424 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091478621 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.143085095 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115585851 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126800038 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125794332 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12588469 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128631124 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103842743 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115919655 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116110983 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095690374 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115919695 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122469606 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116931151 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125960128 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.090542385 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126967305 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116574016 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095271497 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122146934 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116543602 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124122453 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126826406 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135071854 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095381246 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116133228 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12848621 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116564055 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094949953 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112814312 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116597807 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091550326 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129116445 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128704423 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128817716 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126868664 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116924297 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09629751 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115473621 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116901329 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096109002 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123205727 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126750227 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116659865 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143436342 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116077179 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095904307 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126874516 seconds)
  done (took 8.587911179 seconds)
done (took 165.005018624 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.106597521 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.145143894 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.124596074 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.152881568 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.110928682 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.123102144 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.145419531 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.126130866 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.089187816 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.111808633 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.090407726 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.113443674 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.155158773 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.109570046 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.110985108 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.091790802 seconds)
  done (took 2.749619993 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.206910062 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.278299291 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.129198029 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.08804005 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.116355154 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.090129031 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.109592543 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.11818265 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.090557524 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.111553227 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.090582919 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.111411831 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.089155001 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.111264921 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.112623731 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.089821239 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.111277424 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.090488555 seconds)
  done (took 3.002031832 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.118859801 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.16198104 seconds)
  done (took 1.138842447 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.126021999 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.210484271 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.284590143 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.159892981 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.146062757 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.131714836 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.160343976 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.115385209 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.231398065 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.128717736 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.108332067 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.12274801 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.147760143 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.120961603 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.098522469 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.122261664 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.148829328 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.118204621 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.099250927 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.122846167 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.144365865 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.089623619 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.12116692 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.118909434 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.194410073 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.104571253 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.110960508 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.111078105 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.101474041 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.120326627 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.117619626 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.131603189 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.103824659 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.193383741 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.106911474 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.186944813 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.124021325 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.09620994 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.11967109 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.116414763 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.103245003 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.124595907 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.131384572 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.122897183 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.091060673 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.124020374 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.089283832 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.109705174 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.118761251 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.103089564 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.119300407 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.117591659 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.165173425 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.124356293 seconds)
  done (took 7.920835855 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.834305176 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.156669071 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118095301 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.928141713 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120435299 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.130815291 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.827068792 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.139620046 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.24605838 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.80884015 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.136651517 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.12672918 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.239829319 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.247118306 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.969820135 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.327539727 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.719013208 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.106308201 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.14690898 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.164079696 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123930789 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.143978567 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.11404898 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.461577973 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.098410519 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.117152739 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.123554439 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.103476306 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.194033813 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.094441339 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.119963211 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.189190841 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.282804938 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.216979634 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.098226837 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.115792472 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.093748754 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.203684715 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.282197771 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.230265666 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.185514278 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090816477 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.116111867 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126380874 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.113421708 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112539481 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.17420377 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.206273992 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.183289862 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.120146387 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.125656886 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.102964971 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.126141539 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.176657338 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.12728992 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.329560866 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.33062173 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.116506491 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124553498 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.109900824 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.278463348 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.130179878 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.238041259 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.144185246 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.227357167 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.0942471 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.817053661 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.202565731 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.098393 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122605774 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.123286392 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098749112 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.125892933 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.176363876 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.417379113 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129315091 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.119979504 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093442427 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.239006151 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.095423343 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.115570691 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.172850512 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120428857 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.124155936 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.106670806 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.126214373 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.202822527 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.240409434 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.128706821 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.103139205 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.120488092 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127971542 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.120153174 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.222756431 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.234052655 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.174189021 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.245176141 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.104148085 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.196219556 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.17863702 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.125979663 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.183327056 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.123002283 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.130738389 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127467202 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.227709171 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.153392807 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.107274166 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.120960509 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.122989051 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.156431909 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.097331694 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.122994642 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.202241712 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.47093434 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.200965986 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.091089757 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.120299677 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102961208 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.193938499 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101899352 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.27599339 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12468369 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.180533788 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121857721 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.113365412 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.10207644 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.197356466 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12826669 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.102425267 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127009925 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123429677 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.245791903 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.232037759 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128697911 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.250405042 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.189727285 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.100559002 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.205339684 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.10164462 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.199438403 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124911451 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.103827447 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120770299 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.809632173 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.128239349 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.101750885 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.121661011 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.197893864 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11626004 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.107898547 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.116475246 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091249616 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.817230143 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.11891833 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.127817652 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.107785816 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122406636 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.123144542 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123347061 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.097109905 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.195582086 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.24276836 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.103728902 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.122342997 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.11768921 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.171107312 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.121203129 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.095195104 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.117034706 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.095328441 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.125129791 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.12003816 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.108138718 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.202501808 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.173811546 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.235437451 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.564764318 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.1171612 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.094566677 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.24154161 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116927156 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.302556671 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101136009 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.240256695 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.195293607 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.127968094 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.325284041 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.174665048 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.196730696 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.119521598 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.184637667 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.114606222 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.09949602 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.198489166 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.094141818 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123122347 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.174559712 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.129447621 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.128865853 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.974878983 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.094169487 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.261602788 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.091057401 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.203871364 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.099475593 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.125803044 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.310401204 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.116263466 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.132589216 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.174118782 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.120649288 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.094340517 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.883828517 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.095350033 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.126919662 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.124077909 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.237295391 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.174099767 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.12556585 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123500745 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.104064103 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.194853761 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.22158849 seconds)
  done (took 46.037762296 seconds)
done (took 61.699789217 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.286210311 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.251631282 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.265838561 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.169537953 seconds)
  done (took 1.927736276 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.143756105 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.150416891 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.141658376 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.111299598 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.122539087 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.11132012 seconds)
  done (took 1.660491288 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.372396188 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.281543393 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.243930092 seconds)
  done (took 1.780116322 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.255965156 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.276922548 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.335902466 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.42454983 seconds)
  done (took 2.276670624 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.241199392 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.146118946 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.129101701 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.128229642 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.22548443 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.268655358 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.161512748 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.217044911 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.14323458 seconds)
  done (took 2.585366686 seconds)
done (took 11.115164585 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.163580152 seconds)
    (2/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.109624844 seconds)
    (3/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.307742216 seconds)
    (4/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.132681215 seconds)
    (5/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.253124366 seconds)
    (6/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.150414565 seconds)
    (7/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.132583874 seconds)
    (8/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.122985267 seconds)
    (9/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.105448744 seconds)
    (10/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.208256839 seconds)
    (11/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.174681571 seconds)
    (12/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.097430378 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.121324257 seconds)
    (14/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.119321508 seconds)
    (15/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.259420104 seconds)
    (16/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.160339691 seconds)
    (17/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.098489816 seconds)
    (18/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.227956477 seconds)
    (19/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.117622825 seconds)
    (20/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.200378616 seconds)
    (21/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.158131592 seconds)
    (22/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.120486884 seconds)
    (23/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.158785977 seconds)
    (24/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.234960434 seconds)
    (25/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.189383505 seconds)
    (26/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.171682063 seconds)
    (27/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.189634267 seconds)
    (28/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.092320222 seconds)
    (29/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.202440763 seconds)
    (30/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.08775886 seconds)
    (31/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.125995223 seconds)
    (32/286) benchmarking ("sort", Int64, true)...
    done (took 0.240018754 seconds)
    (33/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.142580811 seconds)
    (34/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.099119558 seconds)
    (35/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.122669811 seconds)
    (36/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.140220641 seconds)
    (37/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.071031659 seconds)
    (38/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.124319769 seconds)
    (39/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.221627797 seconds)
    (40/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.189282407 seconds)
    (41/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.174086479 seconds)
    (42/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.122708891 seconds)
    (43/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.093415361 seconds)
    (44/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.121792071 seconds)
    (45/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.243844627 seconds)
    (46/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.108182277 seconds)
    (47/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.137477895 seconds)
    (48/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.113817507 seconds)
    (49/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.112025703 seconds)
    (50/286) benchmarking ("sort", Float64, false)...
    done (took 0.181997646 seconds)
    (51/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.188182831 seconds)
    (52/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.115400193 seconds)
    (53/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.17676109 seconds)
    (54/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.122388241 seconds)
    (55/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.179912446 seconds)
    (56/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.230980326 seconds)
    (57/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.09897669 seconds)
    (58/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.096675275 seconds)
    (59/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.192693269 seconds)
    (60/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.116487223 seconds)
    (61/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.115301753 seconds)
    (62/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.18685526 seconds)
    (63/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.107943644 seconds)
    (64/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.125686256 seconds)
    (65/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.125515841 seconds)
    (66/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.166461198 seconds)
    (67/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.27320773 seconds)
    (68/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.071884604 seconds)
    (69/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.176624314 seconds)
    (70/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.168917319 seconds)
    (71/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.15830983 seconds)
    (72/286) benchmarking ("sort", BigInt, true)...
    done (took 0.249418909 seconds)
    (73/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.157669749 seconds)
    (74/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.069588725 seconds)
    (75/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.127868349 seconds)
    (76/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.185357726 seconds)
    (77/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.150874469 seconds)
    (78/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.144548378 seconds)
    (79/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.069902647 seconds)
    (80/286) benchmarking ("sort", Int64, false)...
    done (took 0.112737542 seconds)
    (81/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.215941711 seconds)
    (82/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.069892127 seconds)
    (83/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.094683099 seconds)
    (84/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.07965179 seconds)
    (85/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.124389674 seconds)
    (86/286) benchmarking ("sort", Float64, true)...
    done (took 0.245989892 seconds)
    (87/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.105137974 seconds)
    (88/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.128182217 seconds)
    (89/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.070310847 seconds)
    (90/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.114446512 seconds)
    (91/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.203478019 seconds)
    (92/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.097775772 seconds)
    (93/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.125874776 seconds)
    (94/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.124813055 seconds)
    (95/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.091183753 seconds)
    (96/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.198149528 seconds)
    (97/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.177268835 seconds)
    (98/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.100861415 seconds)
    (99/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.189301447 seconds)
    (100/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.185355172 seconds)
    (101/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.190525695 seconds)
    (102/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.145278853 seconds)
    (103/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.166503732 seconds)
    (104/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.115628681 seconds)
    (105/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.123834532 seconds)
    (106/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.115513912 seconds)
    (107/286) benchmarking ("sort", Int8, false)...
    done (took 0.22477305 seconds)
    (108/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.128126986 seconds)
    (109/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.163242138 seconds)
    (110/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.142892133 seconds)
    (111/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.096967694 seconds)
    (112/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.125385236 seconds)
    (113/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.105786044 seconds)
    (114/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.164651602 seconds)
    (115/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.162571541 seconds)
    (116/286) benchmarking ("sort", Bool, false)...
    done (took 0.193978822 seconds)
    (117/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.124511768 seconds)
    (118/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.098854827 seconds)
    (119/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.116331214 seconds)
    (120/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.147490454 seconds)
    (121/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.122324992 seconds)
    (122/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.071148772 seconds)
    (123/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.113840904 seconds)
    (124/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.096256778 seconds)
    (125/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.138210465 seconds)
    (126/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.122657516 seconds)
    (127/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.070197544 seconds)
    (128/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.145662374 seconds)
    (129/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.07281784 seconds)
    (130/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.113222572 seconds)
    (131/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.070218518 seconds)
    (132/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.12374737 seconds)
    (133/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.070199215 seconds)
    (134/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.119507815 seconds)
    (135/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.079967315 seconds)
    (136/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.107865343 seconds)
    (137/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.118916908 seconds)
    (138/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.208743491 seconds)
    (139/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.114589293 seconds)
    (140/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.187998769 seconds)
    (141/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.089972338 seconds)
    (142/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.12166688 seconds)
    (143/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.09804507 seconds)
    (144/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.113349643 seconds)
    (145/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.072165687 seconds)
    (146/286) benchmarking ("sort", BigInt, false)...
    done (took 0.230932142 seconds)
    (147/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.093579872 seconds)
    (148/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.072194535 seconds)
    (149/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.128625131 seconds)
    (150/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.069996762 seconds)
    (151/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.124047843 seconds)
    (152/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.085976288 seconds)
    (153/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.121757792 seconds)
    (154/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.090839964 seconds)
    (155/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.093959746 seconds)
    (156/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.090982579 seconds)
    (157/286) benchmarking ("sort", Float32, false)...
    done (took 0.18797721 seconds)
    (158/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.070960448 seconds)
    (159/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.137141035 seconds)
    (160/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.123466956 seconds)
    (161/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.092226294 seconds)
    (162/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.094635205 seconds)
    (163/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.126935828 seconds)
    (164/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.186373473 seconds)
    (165/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.121693844 seconds)
    (166/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.137358939 seconds)
    (167/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.176017508 seconds)
    (168/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.070332986 seconds)
    (169/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.117050022 seconds)
    (170/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.15777906 seconds)
    (171/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.127356957 seconds)
    (172/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.172623479 seconds)
    (173/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.079815248 seconds)
    (174/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.377670714 seconds)
    (175/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.093903227 seconds)
    (176/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.070358179 seconds)
    (177/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.165476233 seconds)
    (178/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.070018017 seconds)
    (179/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.090387423 seconds)
    (180/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.119927995 seconds)
    (181/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.130162287 seconds)
    (182/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.069327806 seconds)
    (183/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.12390175 seconds)
    (184/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.097184299 seconds)
    (185/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.093454228 seconds)
    (186/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.101283954 seconds)
    (187/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.113895417 seconds)
    (188/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.089144857 seconds)
    (189/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.09351715 seconds)
    (190/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.116627938 seconds)
    (191/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.093693916 seconds)
    (192/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.085014729 seconds)
    (193/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.125560452 seconds)
    (194/286) benchmarking ("sort", Int8, true)...
    done (took 0.238744298 seconds)
    (195/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.10652153 seconds)
    (196/286) benchmarking ("sort", Bool, true)...
    done (took 0.262721594 seconds)
    (197/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.088772298 seconds)
    (198/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.124166838 seconds)
    (199/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.096156644 seconds)
    (200/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.140668302 seconds)
    (201/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.121047958 seconds)
    (202/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.099199848 seconds)
    (203/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.123977148 seconds)
    (204/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.0993369 seconds)
    (205/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.138216782 seconds)
    (206/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.092576122 seconds)
    (207/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.112575581 seconds)
    (208/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.114164274 seconds)
    (209/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.06954496 seconds)
    (210/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.116514095 seconds)
    (211/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.091263768 seconds)
    (212/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.121348991 seconds)
    (213/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.06961729 seconds)
    (214/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.113175849 seconds)
    (215/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.097999255 seconds)
    (216/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.115419229 seconds)
    (217/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.11708431 seconds)
    (218/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.113146819 seconds)
    (219/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.118482751 seconds)
    (220/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.070283523 seconds)
    (221/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.12007015 seconds)
    (222/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.143150588 seconds)
    (223/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.116310652 seconds)
    (224/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.091005715 seconds)
    (225/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.150293862 seconds)
    (226/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.114019852 seconds)
    (227/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.103286796 seconds)
    (228/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.114983859 seconds)
    (229/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.170960591 seconds)
    (230/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.089790864 seconds)
    (231/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.095426867 seconds)
    (232/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.096060829 seconds)
    (233/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.073386365 seconds)
    (234/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.094176815 seconds)
    (235/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.073146877 seconds)
    (236/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.09391817 seconds)
    (237/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.079359385 seconds)
    (238/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.142476106 seconds)
    (239/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.089995108 seconds)
    (240/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.094685909 seconds)
    (241/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.094623847 seconds)
    (242/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.128359269 seconds)
    (243/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.069985374 seconds)
    (244/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.073249625 seconds)
    (245/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.119726397 seconds)
    (246/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.073286651 seconds)
    (247/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.096607059 seconds)
    (248/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.072525869 seconds)
    (249/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.124551414 seconds)
    (250/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.070234598 seconds)
    (251/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.114166403 seconds)
    (252/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.072827987 seconds)
    (253/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.073470478 seconds)
    (254/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.113944381 seconds)
    (255/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.070967716 seconds)
    (256/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.103413966 seconds)
    (257/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.06974975 seconds)
    (258/286) benchmarking ("sort", Float32, true)...
    done (took 0.247132876 seconds)
    (259/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.115554677 seconds)
    (260/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.194570086 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.098211131 seconds)
    (262/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.114513548 seconds)
    (263/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.070205993 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.113870927 seconds)
    (265/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.079448764 seconds)
    (266/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.141302016 seconds)
    (267/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.098760597 seconds)
    (268/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.117833065 seconds)
    (269/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.090141237 seconds)
    (270/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.121237089 seconds)
    (271/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.123312054 seconds)
    (272/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.07309986 seconds)
    (273/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.097173104 seconds)
    (274/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.127759285 seconds)
    (275/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.079706624 seconds)
    (276/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.171569221 seconds)
    (277/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.098113087 seconds)
    (278/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.090953957 seconds)
    (279/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.118332657 seconds)
    (280/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.090323988 seconds)
    (281/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.122032842 seconds)
    (282/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.091124471 seconds)
    (283/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.140708294 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.122431071 seconds)
    (285/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.091815135 seconds)
    (286/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.097601243 seconds)
  done (took 37.79054453 seconds)
done (took 38.678482215 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.104476903 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.156773528 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.125213599 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.120721814 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.127580324 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.118821552 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.098569715 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.127116336 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.105228908 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.130307793 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.126888701 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.072164171 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.125273073 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.101869351 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.124773192 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.146970117 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.10484225 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.122451843 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.124167434 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.090661629 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.123303633 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.09116861 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.116444696 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.072627386 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.126473176 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.099044279 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.120195092 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.125340472 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.090375957 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.115643559 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.096235177 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.123148995 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.090711352 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.129354131 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.121713961 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.098823857 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.125936215 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.102028736 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.115528921 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.115019536 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.098591613 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.114581639 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.097415464 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.123037124 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.097475244 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.120014391 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.123589565 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.103598442 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.146133314 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.120458889 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.098784945 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.12606099 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.101318002 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.121869973 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.09467103 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.123690388 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.120647558 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.122280927 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.12302916 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.120155757 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.098579097 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.122901482 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.096268899 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.124184705 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.123555735 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.101908139 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.127569763 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.096620459 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.124698375 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.120742878 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.090332598 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.124388513 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.093403569 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.11437018 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.100834364 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.125556434 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.090464411 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.120462474 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.123371681 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.095534268 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.114929478 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09384213 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.11709278 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.097635168 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116778518 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.072955623 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.118029511 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.097368981 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.113681645 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.12393096 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.097478372 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.122047988 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.092916036 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.126466661 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.091087052 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.119658939 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.114822258 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.089843771 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.117093358 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.094828802 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.115130674 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093535139 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.124011327 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.093143578 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.120850007 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.127520082 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.090528643 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.121846298 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.091034272 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.114352515 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.130682648 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.101107742 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.114260373 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096995479 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.114061199 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.098227209 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.115252551 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.090513032 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.114083177 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.11537411 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.096739872 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.115002223 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09307564 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.123077658 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.105510855 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.114638107 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.11857367 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093378885 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.114924048 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.096467426 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.115418383 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.091236514 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.117480569 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.080781507 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117238086 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.091179414 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.122368652 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094215693 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.123184023 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.117255366 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.099916079 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.119965432 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.097352378 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.120191601 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.091568958 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.101288656 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.097355845 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.117847661 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.116351854 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.090953939 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.11845717 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.090227856 seconds)
done (took 17.72359555 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.091711829 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.190791876 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.160457281 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.149992229 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.137051411 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.091334137 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.126918019 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.1478089 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.09334546 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.1483151 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.13846643 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.136420591 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.130942265 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.114059004 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.116924928 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.095639994 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.117498318 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.107301058 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.153002204 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.137395557 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.17098308 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.114833999 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.128205821 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.13914372 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.126693983 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.133314779 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.091423572 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.119817776 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.094245088 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.142655393 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.136513787 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.094698749 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.116056487 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.113565476 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.132185559 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.124278042 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.091026859 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.123116535 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.0918775 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.114873908 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.145328283 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.138610985 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.097634456 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.121970096 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.096432862 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.124847776 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.093839447 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.124321761 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.12824941 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.096582076 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.131816099 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.16142925 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.119980741 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.109358905 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.113645805 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.127270023 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.10890628 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.123173632 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.116517619 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.099676439 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.115796761 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.095495685 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.131948374 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.146064536 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.096308458 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.133461628 seconds)
  done (took 9.023770446 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.110938491 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.146578108 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.136135805 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.110977927 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.11626182 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.093212814 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.11703749 seconds)
  done (took 1.787918814 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.096426341 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.163403718 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.118575592 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.14262944 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.140695564 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.119295409 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.122364414 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.116818416 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.113189877 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.118927016 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.142284734 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.13415759 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.118061789 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.12549073 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.120326172 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.117245857 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.144540345 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.091475674 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.120237012 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.119342445 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120315414 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.136405979 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.094070465 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.116865952 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.110996303 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.117403244 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.166773494 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.097650952 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114702856 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.121274595 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090890915 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.157673056 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.13574653 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.101530163 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.117790895 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.11251287 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.137239039 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115122735 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.108963082 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.122871989 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.135571734 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.093594151 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.119891774 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.091091579 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.122435426 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.106147965 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.121753966 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.094510194 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.120107905 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.142142276 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.093350799 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.135245334 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.093195454 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.121315302 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.119210305 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.09745574 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.12823879 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.093882337 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.141194102 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115823985 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.113549691 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.136758206 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.134784593 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.112713283 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.119949369 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.111283334 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.136605625 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.121233081 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095099601 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.121829821 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.113489459 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.115182866 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.120566456 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.107296654 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120025947 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.120016461 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.144517328 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.120259654 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.10414398 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.120632538 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.093118597 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.120759103 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.147173391 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096986212 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.117996309 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.097704077 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.120011207 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.116271676 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.092372736 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.122123518 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.091523899 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.119696493 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.096335591 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.11883375 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.096760873 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.138196205 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.119521376 seconds)
  done (took 12.427929546 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.096913587 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.119219359 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.096956141 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.120678896 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.09474738 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.119909896 seconds)
  done (took 1.613897563 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.122268972 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.121953732 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.134243222 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.099535581 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.161068991 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.137148681 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.113338611 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.128156089 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.139827412 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.106110382 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.138085266 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.138805065 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.144528428 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.100699727 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.137481071 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.124612683 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.114555217 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.129769917 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.131843941 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.101422027 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.142116511 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.126836853 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.102051224 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.139028131 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.121928016 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.09960233 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.13022013 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.132635722 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.10601295 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.127748333 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.125493754 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.097955301 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.125681719 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.128297569 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.113448698 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.124862434 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124982342 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.097524516 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.130126716 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.121878639 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.114135647 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.125853002 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.131594184 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.097464286 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.12848019 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.126349678 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.097863178 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.129525629 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.138479762 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.099223031 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.123503707 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.099979938 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.122415024 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.124042409 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.100415158 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.127980203 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.12393801 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.113886655 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.126027433 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.126725593 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.096972419 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.123877863 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.129571464 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.097900247 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.134090113 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.123514588 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.10105974 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124448742 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.126277904 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.10106337 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.12311645 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.122194318 seconds)
  done (took 9.691029303 seconds)
done (took 35.494033978 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.706415394 seconds)
  done (took 1.674031874 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.856432421 seconds)
  done (took 1.82707979 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.225514164 seconds)
  done (took 19.229267447 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.514514865 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.599522541 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.040623993 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.179309375 seconds)
  done (took 3.301752016 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.972112811 seconds)
  done (took 1.957617123 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.291568665 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.262855002 seconds)
  done (took 1.530435392 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.91130761 seconds)
  done (took 1.891833 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.474702638 seconds)
  done (took 2.458968017 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.335951531 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.192669438 seconds)
  done (took 1.518448172 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.573285996 seconds)
  done (took 1.553841594 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.328582607 seconds)
  done (took 11.323171797 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.286399852 seconds)
  done (took 1.290778022 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.314188283 seconds)
  done (took 1.301434481 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.721878143 seconds)
  done (took 4.711798796 seconds)
done (took 56.543884815 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.102738089 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.132205622 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.106418807 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.12927455 seconds)
  done (took 1.445381599 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.108802216 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.126361909 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.109264684 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.125638525 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.136137878 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.100256866 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.128096326 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.132437362 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.099826393 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.127692415 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.126742396 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.100629163 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.130313067 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.102822196 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.123406542 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.12997406 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.103713265 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.125088414 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.130885529 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.101519933 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.12416536 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.102334773 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.12987087 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.124589015 seconds)
  done (took 3.836764312 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.105473957 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.123798102 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.100898514 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.123397516 seconds)
  done (took 1.442454778 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.104248693 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.136762173 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.109876444 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.130346359 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.138168084 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.110201604 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.121665329 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.097498993 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.123958112 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.128977347 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.095618208 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.146168654 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.137774831 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.104736725 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.131609869 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.093685777 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.122327731 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.136312469 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.104079552 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.130316275 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.097982349 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.129691853 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.120876883 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.113668869 seconds)
  done (took 3.860935288 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.179448956 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.13134568 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.144988783 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.100671453 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.16581492 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.146420722 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.092930342 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.14621322 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.11895391 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.110097295 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.123112768 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.165910314 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.108007597 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.118406215 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.118161318 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.09196387 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.133198997 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.106359357 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.122232684 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.132651886 seconds)
  done (took 3.559748437 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.101890438 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.123390661 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.092517051 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.121176695 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.103407439 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.125579564 seconds)
  done (took 1.658179092 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.1010071 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.120160595 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.097838049 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.120616204 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.0995849 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.117828265 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.093424234 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.119866535 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.119533135 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.093385793 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.1218897 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.092578843 seconds)
  done (took 2.288748848 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.519261093 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.124195588 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.126560697 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.09277369 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.129965841 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.119862142 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.109796289 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.123631377 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.148361976 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.092082679 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.120435832 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.095622295 seconds)
  done (took 2.796793381 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241030773 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131510254 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.29161702 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.366840728 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201221399 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17070165 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.287629756 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170603541 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.210247264 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167451505 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234261947 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185362616 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158324634 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210708176 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143971642 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.148823355 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198830678 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.278314892 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158490429 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.245456017 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175311962 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172684471 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188041658 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157386319 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143681433 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179983927 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.099920292 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135701708 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217459122 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184330609 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194738169 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169368983 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162813557 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.469637518 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267975474 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224933266 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.293903715 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114598526 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.176121626 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.173338616 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.269144962 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145153205 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210466429 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166691294 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137973872 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23520828 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.32807874 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.185970723 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.151545438 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147830982 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232440449 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20431351 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.201305543 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145157337 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.332739225 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15868136 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.167996973 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199677675 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243698317 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207783234 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222853443 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.099280494 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.22171069 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203042949 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193480937 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.16092006 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.214100579 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154338181 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180030456 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200252866 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181237771 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174805589 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.215053847 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145930968 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173598124 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179440756 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177421188 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265597208 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191338999 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.125961252 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174098354 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155477852 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139087301 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.199467351 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103325248 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24762659 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146578629 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.141211722 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242744126 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163202802 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165259548 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191584201 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179261584 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152095943 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.114365309 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160531025 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.158138798 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178923396 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141565816 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134824848 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15547049 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.135750137 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175445297 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.12888936 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19142769 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.119898862 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.342216478 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214387245 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.104282994 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168268608 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153291816 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.154567176 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188827119 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230071379 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14801762 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111986581 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241385615 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187237126 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.146102405 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182760981 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.207942601 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.147219293 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154820153 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235819229 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217255346 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145965249 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235009531 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127814057 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139800988 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.136756142 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19064005 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162139184 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.16470002 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141618495 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.189084899 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234360611 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.104183555 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143642902 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230221265 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111902718 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137212115 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15313426 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155184646 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.139896 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.118106381 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.151331425 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209022974 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182150012 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158418186 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1700391 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15140427 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24786798 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119205581 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.154456457 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152096855 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.125754712 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.201282959 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231730545 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109930828 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233564844 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.17371857 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208932814 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200265828 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112806946 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182076157 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134814396 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.12591319 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201225318 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17014984 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165432029 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.225647154 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205849311 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.184493477 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.214850579 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172735801 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182364519 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.173132897 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155789135 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.141497877 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165024782 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161415468 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.100990867 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.145038442 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.139787848 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154494087 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148130728 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113627416 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229097845 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179348953 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.226077143 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164317721 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155640499 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187573051 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.106563948 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20359372 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.416577612 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153440242 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.202003623 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20120439 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220149459 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145775571 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209008548 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.124796955 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103005517 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.148557442 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172197287 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140978435 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141148471 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167545685 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188854836 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.366399638 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179012829 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24296152 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184772907 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198540926 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.127843052 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.144791988 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210932443 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184630133 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.182607797 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117711853 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.152741864 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185827698 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157520139 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242146023 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172418216 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180458246 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230718138 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.153388318 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109220494 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153810944 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174793017 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159622279 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.179437784 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151455895 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144457324 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.324087336 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.135785104 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167609518 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212535836 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165987897 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183885034 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.156432254 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192488851 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132572686 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168103277 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163112571 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168854022 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.084917477 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.370713355 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199885482 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149869251 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.354215263 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188381279 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13681226 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.316071335 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208974277 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.373888737 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142891403 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161964147 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16536194 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168061144 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.329583504 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182068651 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165640551 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217766935 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133851512 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.141573944 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14445849 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15404036 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158105983 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.108960644 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.153175184 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.2103096 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.113523587 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215602416 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152218676 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162429532 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176804345 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.155296549 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.12217057 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15626602 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249673084 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191799148 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195580577 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.153968958 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.180853574 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235839836 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130845606 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110299096 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.139042605 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182985874 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1424849 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19790416 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.222202102 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208046287 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217189035 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177007156 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116030685 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.12536171 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164115985 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176034359 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240304585 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150172537 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.155829097 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203831437 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.139956529 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10793533 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167227339 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.32138833 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123910157 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222248285 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.083393587 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.292124794 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129332862 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138626312 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169482167 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192009671 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.142846005 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.155912519 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198730188 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156495317 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16802221 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155000054 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.198019279 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21804232 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235647928 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186569518 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.137674274 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164326125 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.32957912 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217758962 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165257812 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.112735496 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219218531 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201347218 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.198216531 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.148818823 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174174036 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172337263 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164841997 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223023825 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141656183 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208930883 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140212657 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202594113 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158380188 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150058216 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18075933 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.223633923 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145852546 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188989915 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191065798 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139782958 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138113251 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165663637 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185306939 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155019472 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.132112396 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185701834 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.102586735 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228561812 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270082326 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140967562 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131987133 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151636712 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142073742 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16181253 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165618807 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142899208 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.144641039 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225625363 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.140714059 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19263733 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238827623 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177040085 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.326160057 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148725922 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.714576225 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.136648187 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201769283 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152649089 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184219849 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155111483 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179072671 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164603665 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173267518 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231345633 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164984435 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.236786586 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203884199 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.212156397 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110452333 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164691776 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152868085 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.150936725 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159736655 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173679807 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165290515 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.151383772 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.185964195 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160363078 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.140156139 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145659267 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204657377 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153095074 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186357252 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183844107 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144620433 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179296143 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224142304 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111051049 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.216909331 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194085909 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148158726 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154978736 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.113883912 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.156291061 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273004815 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.130210648 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189492266 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222344498 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166219197 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172679936 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.153972527 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201031383 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163884055 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221489444 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122374147 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.162474999 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162528416 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14621735 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.136388497 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160802136 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173074632 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.156775988 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167305033 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.14623659 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225532796 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.100875171 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150850785 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.321217071 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180276618 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219239821 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.14013448 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140815148 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165061586 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122579799 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.211592172 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186188416 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.141140897 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140551391 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.113689488 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.16317697 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.14292274 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162126459 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202211617 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.330763733 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235972463 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.113655731 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.286902253 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145662515 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161929786 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.091498709 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.138501098 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156464251 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152012962 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156776386 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.201236377 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274326149 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.153197011 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.139782275 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157192756 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.103130883 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141727496 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169872589 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167595079 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18734438 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147296278 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.111364 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161557892 seconds)
  done (took 87.416488165 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.221959181 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.164754353 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.170992558 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.308614872 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.203825579 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.340578452 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.23624005 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.30060915 seconds)
  done (took 3.038978818 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.100566377 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.157752681 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.162265628 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.140491849 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.095048441 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.123160395 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.390611522 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.138021809 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.095497357 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.176496816 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.151956209 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.122910625 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.650585498 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.122358706 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.125361885 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.182777542 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.095111937 seconds)
  done (took 4.125343729 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.416653526 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.516262949 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.396084386 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.201940938 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.166574787 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.121802945 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.742527861 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.124948722 seconds)
  done (took 12.779062786 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.128280286 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.150659648 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.169521752 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.14151348 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.156104889 seconds)
  done (took 1.835000751 seconds)
done (took 131.059411299 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.102626683 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.132473207 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.103090755 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.13499451 seconds)
  done (took 1.55064006 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.102518074 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.073803148 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.104699024 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.077726078 seconds)
  done (took 1.45023072 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.198877295 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.175261737 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.405478269 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.074980714 seconds)
  done (took 1.611843 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.120766121 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.137573045 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.138139874 seconds)
  done (took 1.49641088 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.110830941 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.13496719 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.10797049 seconds)
  done (took 1.44233946 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.111442784 seconds)
  done (took 1.206714609 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.116612144 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.145887834 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.116503925 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.143758285 seconds)
  done (took 1.620485161 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.102374105 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.132349222 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.116393926 seconds)
  done (took 1.448422785 seconds)
done (took 13.292309302 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.111500974 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.529034519 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.423477945 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.114634879 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.732044889 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.413477031 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.043229162 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.150578759 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.176126344 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.126354265 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.115604652 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.705507106 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.02748755 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.451268423 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.014232508 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.476169323 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.680953834 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.124635543 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.096388211 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.12607776 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.054753212 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097315001 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12672221 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.096193976 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.70739014 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.431516983 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09884972 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.47473227 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095745821 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.133979868 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.391558222 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.126847937 seconds)
  done (took 17.555364192 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.104146347 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.186863539 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.136730603 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.099143916 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.133424603 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.098458326 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.129546895 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.126589854 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.190836644 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.098524889 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.148326992 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.096480376 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.13076911 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.127576354 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.11965394 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.124725124 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125475438 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.096679204 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.125346747 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.098294266 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.145736519 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096242981 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.126648967 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.125212743 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.098758558 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.140470243 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.128841094 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.096850342 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.125572069 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.10777349 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.130201264 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.099645504 seconds)
  done (took 5.02749914 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.152860974 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.196839021 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.137508356 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.16196026 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.179951789 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.099319294 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.206234826 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.153985741 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.194261076 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.126834995 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.116443319 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.125651781 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.161612621 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.099189842 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.147120339 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.097002547 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.128293851 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.125580933 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.097181589 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.127958825 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.116545632 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.125065746 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12694922 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.096636785 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.127177911 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.141743725 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098998633 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.125981493 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.098241966 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.134177469 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.128250387 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.099174961 seconds)
  done (took 5.365181606 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.102437795 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.131409707 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.113620018 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.143857418 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.128413291 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.101002794 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.13125057 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.101129815 seconds)
  done (took 2.065939665 seconds)
done (took 31.110752554 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.116659882 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.133238372 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.112043672 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.139882221 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.136826219 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.110737679 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.125048057 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.109928401 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.138770788 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.105419256 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.14242281 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.125184289 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.09936197 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.124656004 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.111649516 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.131377655 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.141079539 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.107252566 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.140679321 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.110418815 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.128050242 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.137965974 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.107852577 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.140708644 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.112030036 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.141072238 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.142737018 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.105103078 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.127162875 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.099488306 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.131267276 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.109487373 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.127994828 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.141526194 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.102821749 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.13139208 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.099051 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.130991021 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.139864086 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.10876507 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.132818988 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.109776984 seconds)
  done (took 6.270789866 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.115998122 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.148821429 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.110655418 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.114153877 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.090909102 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.085039304 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.144094405 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.082944273 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.113527127 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.114537774 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.10610249 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.080055429 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.110343814 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.0756622 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.079326831 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.107737666 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.082540362 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.07845943 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.108298861 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.080872884 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.112013162 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.075406301 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.082484728 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.110106908 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.07826843 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.113311031 seconds)
  done (took 3.717198491 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.104728253 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.149484735 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.118075622 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.181888072 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.162227255 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.134969255 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.110201063 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.145117678 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.113659225 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.126691427 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.130552893 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.127263837 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.14443008 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.104317929 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.130192522 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.142185114 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.112311998 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.128308612 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.108007802 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.146869506 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.14314175 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.109355592 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.14648185 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.13795461 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.097184129 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.128326039 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.103929768 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.139763055 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.104695249 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.139816746 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.132437274 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.100858431 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.128073109 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.138677511 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.104025679 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.1280082 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.117847485 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.144012362 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.136072945 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.09932193 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.134737946 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.100060504 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.149447892 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.165644442 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.097935205 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.134957077 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.099923614 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.141403353 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.126958437 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.116328809 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.13682814 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.097043495 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.129960518 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.127488466 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.098995743 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.142880789 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.098926566 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.128839957 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.106525893 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.131546179 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.140124627 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.102088592 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.144014273 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.097596314 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.134590045 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.128373921 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.09746931 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.124702866 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.124321994 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132622345 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.169057964 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.099197862 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.129030213 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.139428381 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.105835801 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.133575166 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.097224256 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.143533451 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.135840098 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.101365499 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.138504027 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.101377885 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.1302327 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.115479193 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.128642366 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.128386565 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.098317723 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.133631508 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.099327451 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.128044217 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.141612389 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.097450506 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.129787415 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.111150162 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.127077554 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.099415022 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.133947805 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.131961989 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.097586198 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.140597025 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.103090381 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.127207088 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.137463837 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.0983752 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.129717578 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.10765609 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.134948 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.126456714 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.103227616 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.133469497 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.097514912 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.130938964 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.100533669 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.128733458 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.13802275 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.104385006 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.132538112 seconds)
  done (took 15.606042528 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.240213191 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.225448613 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.247388856 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.309770316 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.111039881 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.153611979 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.222582388 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.165283933 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.097545989 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.168102137 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.176718477 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.221032671 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.147032358 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.187621769 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.211871186 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.096799831 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.148953924 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.173988952 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.227030146 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.302755689 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.118811506 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.136720315 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.16851707 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.166595306 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.143225077 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.107475668 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.145525629 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.139885778 seconds)
  done (took 6.082381974 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.114898373 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.160203325 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.13373508 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.120508662 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.155316866 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.128671987 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.101976127 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.130151602 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.111877867 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.141654018 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.12716902 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.104563524 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.135365522 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.137996765 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.098560861 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.137227333 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.107813052 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.129585276 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.130782504 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.10246443 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.139688233 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.106856443 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.130673625 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.126891515 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.108454618 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.126726311 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.090969991 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.149424247 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.128125858 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.120169416 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.127098073 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.106699762 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.140252027 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.128463374 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.09835373 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.129720787 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.099453368 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.130513218 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.099477693 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.126004964 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.12665531 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.081371431 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.095538191 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.143501209 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.135749065 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.084033141 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.134731006 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.103601922 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.129313577 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.126029254 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.100149553 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.130577405 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.101396025 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.135879792 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.100229863 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.128993125 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.101033199 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.118627852 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.133167281 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.100445699 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.08772846 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.126859552 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.133181639 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.092799884 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.137194902 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.102811786 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.12689575 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.099219099 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.131583902 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.134135204 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.100794165 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.134380704 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.096805047 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.130372906 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.100881834 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.133816424 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.131073417 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.096613655 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.127699421 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.0995001 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.108186798 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.09796923 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.0767632 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.13088447 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.126000052 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.097144614 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.130149961 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.105374054 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.144286049 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.129512471 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.106498425 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.129372637 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.096604441 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.130746685 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.086354626 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.130956151 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.145521062 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.116872981 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.127735412 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.126932442 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.11246354 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.130867673 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.097558138 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.110065614 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.107657526 seconds)
  done (took 13.590547443 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.135734646 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.159350317 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.130299367 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.117063226 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.163006302 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.164224899 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.106025508 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.136782239 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.129618674 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.116655156 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.128933658 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.107733492 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.128921284 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.112914464 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.162533912 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.138818095 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.100482322 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.143133466 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.132737419 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.175674897 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.116885174 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.148214275 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.116601056 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.12814645 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.134371579 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.116224601 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.1658719 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.142678456 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.112274047 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.148073815 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.112804288 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.16648904 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.149625089 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.102330763 seconds)
  done (took 5.694469675 seconds)
done (took 52.074675695 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.246500899 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.446657195 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.21358861 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.136472426 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.262247957 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.262756676 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.219923522 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.207772594 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.41936406 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.208698032 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.468945593 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.797701266 seconds)
done (took 59.025933691 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.330047031 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.364138128 seconds)
    (2/2) benchmarking "String"...
    done (took 1.529159789 seconds)
  done (took 4.036522523 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.850194958 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.173556869 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.473118913 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.226828514 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.205849555 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.559524518 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.007003948 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.641732192 seconds)
  done (took 28.416080059 seconds)
done (took 42.767031076 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.205930384 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.226714805 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.225420616 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.189683848 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.324955874 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.235549737 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.737157543 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.252219269 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.227343832 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.18614965 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.224875863 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.205296545 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.229076275 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.768888026 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.218481944 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.20987957 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.257078507 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.805472841 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.625556561 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.21895724 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.217897711 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.224565044 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.220228455 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.2085982 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.2170038 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.207193264 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.225037039 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.243173151 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 5.072834212 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.214643109 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.234911854 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.493101225 seconds)
  done (took 191.485396694 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.206551427 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.251237254 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.407189704 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.259948814 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.783861632 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.406661013 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.347455499 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.869951867 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.230801726 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.222596546 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.488061683 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.207673647 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.543641381 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.177861041 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.237532065 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.252321564 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.444299802 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.569832972 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.247705294 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.342045712 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.209783113 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.405367927 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.311212344 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.463830876 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.254053274 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.246265344 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.251828211 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.240455824 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.423718819 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.390545031 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.233723433 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.2554592 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.883922301 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.067129338 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.219708063 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.233449785 seconds)
  done (took 150.726012237 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.207931452 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.209451355 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.209540285 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.245444056 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.213394113 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.837644255 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.806760046 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.734087517 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.621578593 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.808707082 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.549730416 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.219347518 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.308438588 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.227024011 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.212899247 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.225931823 seconds)
    (17/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.228991707 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.210517063 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.235908206 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.211864601 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.831625077 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.231845018 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.393426175 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.229988424 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.245218168 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.60331708 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.21799467 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.229146899 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.24701864 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.552108166 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.264803308 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.212131918 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.635200111 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.974315301 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.328523727 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.215263521 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.248680502 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.213111835 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.497135131 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.214403304 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.21476402 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.211501226 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.214723532 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.942524881 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.220078394 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.840394216 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.21765742 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.245674508 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.219001051 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.215244572 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.953827707 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.010040324 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.236385586 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.214250798 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.215733878 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.211730509 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.213866656 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.24977206 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.998106906 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.318318185 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.230429255 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.217245362 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.24956403 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.214171423 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.696756225 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.213253157 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.966287501 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.275838619 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.329570889 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.843166301 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.219666194 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.315703767 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.338407348 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.215240633 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.214352199 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.216107054 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.213179692 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.32688239 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.213499958 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.64885418 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.397069114 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.234658103 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.722707062 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.314278531 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.213685951 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.680947665 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.222500637 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.213818621 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.01545969 seconds)
    (90/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.21506484 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.214032378 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.314773919 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.217897873 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.214884811 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.215003061 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.652455434 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.814305384 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.536386609 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.223464026 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.915163186 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.225986862 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.672670047 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.845708241 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.97602023 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.222146746 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.335025358 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.398070919 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.235945045 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.215772121 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.834631448 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.221792037 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.276383457 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.219602819 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.61804671 seconds)
  done (took 371.419845272 seconds)
done (took 714.761649218 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.823288334 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.823481395 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.930813256 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.810279617 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.76466522 seconds)
  done (took 10.290341839 seconds)
done (took 11.436591986 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.422660462 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.419144184 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.28314604 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.424714531 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.256654413 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.444483633 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.402311681 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.237909849 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.325511378 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.313531196 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.32384146 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.277264513 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.265936038 seconds)
  done (took 18.532837018 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.557612946 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.557161463 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.283341983 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.550841683 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.258231672 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.568573691 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.434539302 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.473289314 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.455131307 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.254392831 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.231738976 seconds)
  done (took 16.76821225 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.548322665 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.569774151 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.289835503 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.576203772 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.263198681 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.599631228 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.44364467 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.447096102 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.448345571 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.252995296 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.230376591 seconds)
  done (took 16.8103328 seconds)
done (took 53.254854267 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.228359046 seconds)
  done (took 2.37026516 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.264701248 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.4371462 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.252678774 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.233424204 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.230312273 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.232777104 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.232962281 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.22951452 seconds)
  done (took 11.259604995 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.228783253 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.22722662 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.227565869 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.226059761 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.224044059 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.226459535 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.232316677 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.223852785 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.22452751 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.224918021 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.224442193 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.228441164 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.226942132 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.225794983 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.228478478 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.225580002 seconds)
  done (took 20.768782421 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.226132229 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.224476007 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.224092248 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.224824278 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.225848884 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.225955877 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.226191688 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.225450174 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.224937944 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.224698494 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.225930774 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.224865273 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.229010985 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.225753182 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.225896595 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.22698183 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.22955624 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.227928229 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.229159634 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.227143756 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.226540821 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.225701035 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.23029679 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.226841649 seconds)
  done (took 30.580290608 seconds)
done (took 66.124937676 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.860461334 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.840767426 seconds)
  done (took 6.842616721 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.285498337 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.289800387 seconds)
  done (took 3.719363537 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.230141035 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.227185663 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.230643017 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.22899704 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.229204841 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.22687962 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.229471716 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.227802977 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.228542411 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.229065463 seconds)
  done (took 13.432163195 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.228304571 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.230996587 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.2286823 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.231243626 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.229067655 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.228879063 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.229935238 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.230441821 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.232387767 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.226625787 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.230934821 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.227841296 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.230679585 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.2297245 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.230329111 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.228029447 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.230394198 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.23023166 seconds)
  done (took 23.278865812 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.228096084 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.251998301 seconds)
  done (took 3.626830498 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.359228877 seconds)
    (2/7) benchmarking "second"...
    done (took 1.271497103 seconds)
    (3/7) benchmarking "month"...
    done (took 1.340288544 seconds)
    (4/7) benchmarking "year"...
    done (took 1.328122824 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.270620808 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.249708639 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.271138488 seconds)
  done (took 10.235561794 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.229490245 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.399142634 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.508595972 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.812196193 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.230151142 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.234003669 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.071756065 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.233363312 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.235992579 seconds)
  done (took 14.100782641 seconds)
done (took 76.382176658 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.294908998 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.246207219 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.56038193 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.247492297 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.243146029 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.522377854 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.239358465 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.358292727 seconds)
done (took 37.861361178 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.241885993 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.21731585 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.03849191 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.234635158 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.359535872 seconds)
  done (took 18.994713595 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.308943255 seconds)
    (2/2) benchmarking "read"...
    done (took 1.563354019 seconds)
  done (took 5.0160835 seconds)
done (took 31.402229127 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.233548547 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.230241157 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.234045342 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.226771907 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.233233551 seconds)
    (6/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.231591753 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.229216095 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.230184505 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.232744904 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.231286364 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.232704569 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.232259431 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231160478 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.22958786 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229360105 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.233310098 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.229152158 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.230255888 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.230481715 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.230831107 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.228653281 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.229742802 seconds)
    (23/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.229342315 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.230608263 seconds)
  done (took 30.688206365 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.233066393 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.232375769 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.235096025 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.235070979 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.229728612 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.233783634 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.233570268 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.232620532 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.234908959 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.233483053 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.229105806 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.231006777 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.234789871 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.232123297 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.234779447 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.232596678 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.23418742 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.233704625 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.235285177 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.231462441 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.23640382 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.23196574 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.23220914 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.232933953 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.232566077 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.232347906 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.233808914 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.233150616 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.236316662 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.232175549 seconds)
  done (took 38.145446058 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.240627826 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.244285689 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.233685078 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.231805463 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.234581531 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.233338533 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.234660942 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.234474729 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.235098193 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.235106606 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.235571868 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.236403462 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.236694367 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.235510321 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.236411564 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.234388296 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.235052008 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.23791703 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.235672592 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.237055738 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.23722916 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.236882956 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.238389406 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.234337643 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.236101084 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.237531681 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.237763518 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.237746762 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.237630175 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.237625558 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.239412524 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.238900463 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.238041166 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.23530542 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.236800722 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.237694198 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.241872927 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.244579373 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.237569221 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.23613595 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.236960696 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.235519899 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.238068987 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.239309826 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.238121451 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.238513082 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.238159194 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.23707572 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.236625126 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.235360486 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.23856935 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.236266948 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.237534157 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.237610583 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.238626652 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.238549859 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.239666265 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.236775347 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.239841467 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.237871878 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.238734119 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.239126083 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.239644949 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.240457583 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.236918498 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.237551068 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.241560418 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.241147268 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.240558387 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.238612213 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.240793555 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.239790627 seconds)
  done (took 90.256559707 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.239870631 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.238657993 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.237106698 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.237721244 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.238469312 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.241394502 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.237052956 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.241087669 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.244641111 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.239411833 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.240155498 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.237577571 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.238149905 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.241713345 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.240272168 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.236294141 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.238468895 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.237306479 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.242968008 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.243565381 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.24216663 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.239902048 seconds)
  done (took 28.427628603 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.24179295 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.243629034 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.240657966 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.241503734 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.241440777 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.24532299 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.24171878 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.245390028 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.242946036 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.241002003 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.24295842 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.245381867 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.245365515 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.241650918 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.242690974 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.243814224 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.244120454 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.243381667 seconds)
  done (took 23.531760025 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.239331434 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.241637731 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.244107953 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.239749042 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.240215451 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.243099124 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.240752245 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.243903829 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.245626894 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.240415767 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.248620353 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.243762363 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.247151258 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.241652099 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.245013787 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.24393139 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.245895647 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.243099341 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.241331383 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.239882155 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.243139581 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.247441034 seconds)
  done (took 28.509933439 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.241951718 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.249124861 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.24443127 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.241813068 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.24037554 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.246421014 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.246236659 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.249077672 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.250121217 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.247810614 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.243587667 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.248155061 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.244416279 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.24600409 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.242725268 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.243131405 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.24728696 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.247571832 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.245129489 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.246795189 seconds)
  done (took 26.070206869 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.250321882 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.245127519 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.247402172 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.247233724 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.24680523 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.24647575 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.247651703 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.246973809 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.247347765 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.245149809 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.24717486 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.246238673 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.244451696 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.246276898 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.246300792 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.247800716 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.248897935 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.248006199 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.245329616 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.24615248 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.245795498 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.247557217 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.246188449 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.248782901 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.251929171 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.249727364 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.249792326 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.249681929 seconds)
  done (took 36.084814839 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.249583039 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.248085289 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.244317576 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.245232975 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.245972142 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.244278254 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.24526647 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.24648969 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.250395867 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.248532787 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.247075482 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.250072871 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.249613362 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.248662805 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.248773675 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.250036091 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.251861803 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.245919564 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.246870763 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.248494521 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.247757342 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.250886736 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.251228609 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.250112478 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.250677048 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.249823373 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.246981954 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.245925089 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.2506508 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.247811868 seconds)
  done (took 38.610324292 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.270182362 seconds)
    (2/2) benchmarking "in"...
    done (took 1.269489538 seconds)
  done (took 3.703907566 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.24711498 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.252750152 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.251298982 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.25063564 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.246858956 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.253403145 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.249068467 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.245649829 seconds)
  done (took 11.160675452 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.250766659 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.253541735 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.252656569 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.254653683 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.249779782 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.251169948 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.263573159 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.277536776 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.252585135 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.252005072 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.260151478 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.259786751 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.253913451 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.253969735 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.254223654 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.256672046 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.254624599 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.252148375 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.255055545 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.253400277 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.254606209 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.254813858 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.259568028 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.254297246 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.256661306 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.265735601 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.280001163 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.254472522 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.25573719 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.262184806 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.253181957 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.253374883 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.25763478 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.254973146 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.253282314 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.25601256 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.261924029 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.277459774 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.262056445 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.275831553 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.257147697 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.256597822 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.254042602 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.2605795 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.25517475 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.260241735 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.256848748 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.253086372 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.255709806 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.262257787 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.260889371 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.25714706 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.253517975 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.257988165 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.258847116 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.266308183 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.282167493 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.255848324 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.266981659 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.270018274 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.292786049 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.283717132 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.262112061 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.26117544 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.269415276 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.284480306 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.267323184 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.281550556 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.254495042 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.26147789 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.266249557 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.295023896 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.286389024 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.258312301 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.259596711 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.259322816 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.259987065 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.257491648 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.266532444 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.284648746 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.263764828 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.256939605 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.267653392 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.286732738 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.258732563 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.262107702 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.265241451 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.26183597 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.262840097 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.268540154 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.282944804 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.258377408 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.260479583 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.262773323 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.261242494 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.263527053 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.263517491 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.262862541 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.258737942 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.261899502 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.259851874 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.263311366 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.272624132 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.266486539 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.263991823 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.265899046 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.283666401 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.26449019 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.268795268 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.282584407 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.266185876 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.26343725 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.267957856 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.26081317 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.270770885 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.269855926 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.266105269 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.261098442 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.263765542 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.261398682 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.275468762 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.28633082 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.266940221 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.264497457 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.268206173 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.280339884 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.262345946 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.267957325 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.266080403 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.256566427 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.258876537 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.263314876 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.264866697 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.263528672 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.266892357 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.267736474 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.259842595 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.263841477 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.266230559 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.264765399 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.266014572 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.264621547 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.26469936 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.267123533 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.264972299 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.262455569 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.272119716 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.28164501 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.265135888 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.265001684 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.258357336 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.26179983 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.263446568 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.268342242 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.260264187 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.263954204 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.261706836 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.266501696 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.264796487 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.263162531 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.263816192 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.264641577 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.272787108 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.263737275 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.267910282 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.266295709 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.26365863 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.264056101 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.264193104 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.260194762 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.267585445 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.26398158 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.268224854 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.273105944 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.262687633 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.26479917 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.267088941 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.266301236 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.266705768 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.267548179 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.269863289 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.275067111 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.270038113 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.272013968 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.289848001 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.264984927 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.267143853 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.265350905 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.26632262 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.268803345 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.26802646 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.272302432 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.280007866 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.295680207 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.267984532 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.270047444 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.269764433 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.269869234 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.271455511 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.266358341 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.266403233 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.265801681 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.265221348 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.267828628 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.266931775 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.269252133 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.262621709 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.269212361 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.26627197 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.270558088 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.265135332 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.267046171 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.266240023 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.266533322 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.264890175 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.267833776 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.265170231 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.263518158 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.267445534 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.264573622 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.266164423 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.266360406 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.272362991 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.286335091 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.26757312 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.269654155 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.267620404 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.266074549 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.268760024 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.270227158 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.269435567 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.273443885 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.28834237 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.268009485 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.274679994 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.28967581 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.266653863 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.270411284 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.265852318 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.264236098 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.272332888 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.278525225 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.264136717 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.268412127 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.268533767 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.268776055 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.270002724 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.2752001 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.289409301 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.267352172 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.270040488 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.270317417 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.265549565 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.270511659 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.268364826 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.268306475 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.269823774 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.266734177 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.267135088 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.272142336 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.269787982 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.270413745 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.269661822 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.272605634 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.279674121 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.276800192 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.289409872 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.270987103 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.269213259 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.274889296 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.271321246 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.27173324 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.271416953 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.283109099 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.29999009 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.275072964 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.290093274 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.269734815 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.27352604 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.292038249 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.274632513 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.273880276 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.271977899 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.272784765 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.273836 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.271713959 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.275009634 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.273624387 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.272291726 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.274440678 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.275842001 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.273182 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.273522204 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.270446148 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.271957014 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.271327926 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.272487932 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.271280895 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.273950134 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.270941289 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.272127618 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.270074167 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.279186555 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.297820794 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.272849004 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.271894941 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.271723727 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.274049629 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.276267535 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.275606163 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.276553743 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.282548972 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.276823684 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.281886576 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.275351103 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.283574141 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.297340067 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.278724268 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.281955557 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.271088288 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.273833672 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.272191495 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.277203676 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.279214341 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.293913451 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.273925139 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.277587616 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.275601266 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.276073875 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.274576698 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.275414612 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.275527335 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.276541324 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.282078274 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.298332858 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.277515467 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.274195789 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.271654565 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.276516959 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.275254713 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.273479506 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.274812654 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.276516964 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.276581901 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.273325433 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.274852026 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.276709359 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.276807087 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.275316044 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.271794175 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.273484441 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.281612703 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.299703658 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.282255389 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.2761485 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.282548754 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.297361614 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.283714635 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.298799228 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.275686721 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.279068754 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.2746084 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.276816011 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.275559001 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.276199965 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.280192544 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.276171301 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.281351772 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.277826921 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.278887809 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.278908883 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.275710584 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.275922239 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.290677121 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.303756604 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.278115951 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.282953473 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.274391434 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.278890537 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.282794546 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.277796385 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.276465626 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.281670911 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.287742666 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.286791516 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.278587269 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.281128329 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.277822498 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.278459201 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.276273888 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.276595913 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.280060528 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.277132469 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.277612796 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.279550184 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.280222529 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.278766908 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.280664782 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.280871443 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.282126213 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.290078771 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.299382678 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.282100501 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.282704277 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.279695745 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.281520282 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.2811323 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.279015831 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.278562773 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.278760103 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.280719424 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.286552707 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.287057462 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.282472576 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.279944059 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.279407938 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.27967065 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.280004868 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.284415043 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.282666306 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.282295916 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.282777618 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.281683419 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.281628072 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.281730414 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.27916827 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.282277198 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.28157818 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.286034101 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.288042034 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.281977888 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.277421594 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.280514266 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.280751027 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.279943036 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.282461431 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.290632133 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.307781455 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.293864866 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.290419759 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.286637607 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.283948946 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.288099452 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.291842164 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.282595491 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.284034404 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.28317397 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.283239933 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.284105258 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.288201123 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.285940561 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.288519488 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.300864664 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.284316515 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.292138749 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.307384677 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.286103232 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.282567951 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.288821134 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.28256328 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.279768913 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.283308008 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.282131483 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.290313552 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.305573658 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.282983457 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.284038907 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.284068315 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.283227068 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.288998341 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.282921041 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.284248254 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.282821424 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.287476705 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.287146112 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.28543687 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.284047825 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.286178149 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.287326712 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.288805364 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.29312793 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.284289683 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.285121609 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.284142175 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.286748626 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.289607439 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.283860871 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.283716786 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.281610078 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.282496756 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.285709371 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.286858748 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.292782519 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.291672099 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.289456865 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.290764815 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.290422177 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.292305956 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.300638957 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.293815299 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.286920018 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.292294298 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.292559673 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.29207586 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.292851718 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.289866233 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.293049356 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.291508477 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.291596527 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.289706305 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.287063401 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.293317606 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.305987175 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.312245764 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.28902149 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.28780618 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.29169958 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.292278514 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.286191089 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.288763136 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.290923477 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.294524419 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.298126032 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.292579558 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.293976845 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.313396619 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.287800302 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.294515318 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.294429662 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.29669984 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.291621307 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.289126203 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.291682299 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.292610236 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.30690336 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.310518172 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.302555424 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.32303761 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.312580208 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.290074883 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.288474566 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.28995134 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.287783383 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.291220526 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.291819389 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.292319378 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.291172042 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.289851306 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.292841491 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.296541726 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.292085621 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.29086383 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.290394728 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.290112508 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.291767542 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.290468848 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.290090662 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.292322843 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.291393851 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.291754427 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.291494101 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.290765589 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.303403817 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.320612184 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.291118373 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.291987085 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.288729848 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.295641919 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.297240982 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.305034938 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.301158217 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.291648148 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.295215133 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.294852338 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.293373084 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.29234475 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.296042392 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.296953676 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.292718796 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.288713435 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.304086484 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.321825134 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.297143665 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.314531955 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.298166309 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.292556629 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.296089915 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.295703919 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.296786709 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.296334962 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.297340493 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.300903508 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.295970599 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.295164998 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.300512233 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.304591608 seconds)
  done (took 762.207187964 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.291496481 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.293021089 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.290874797 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.29166516 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.292191734 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.292774338 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.29339068 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.29634639 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.296970022 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.293493138 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.295738063 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.294093646 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.295058603 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.296075562 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.296582238 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.295753965 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.293684739 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.291995003 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.294558993 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.293220063 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.294069927 seconds)
  done (took 28.377473369 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.294398792 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.294157033 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.294500134 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.298529954 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.290354114 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.292008808 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.296779962 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.299142404 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.296990738 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.294801114 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.301229938 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.300509934 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.292410208 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.295576985 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.297020328 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.295265464 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.295384542 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.293816409 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.295102999 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.291108107 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.2930621 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.294731086 seconds)
  done (took 29.704860986 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.295622336 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.299681658 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.299610291 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.295934281 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.298768714 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.299055926 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.302717896 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.294066008 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.298864745 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.299858654 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.296597138 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.300089599 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.306348737 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.304776836 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.301185585 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.302074391 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.444318327 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.305821762 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.304589562 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.300140822 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.30267612 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.310379225 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.320434882 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.297840311 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.30164171 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.304304819 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.302963781 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.301864867 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.304619077 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.30458611 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.304874198 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.29974616 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.298511566 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.302422753 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.2979743 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.303174941 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.303916162 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.302326911 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.296324352 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.304335667 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.314103483 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.320695523 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.307297367 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.307453333 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.319348441 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.301344103 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.304308693 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.310681926 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.297354562 seconds)
  done (took 65.206082177 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.298508497 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.303575237 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.300857233 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.304927583 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.303740165 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.302902883 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.307954113 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.304147536 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.301834473 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.298092992 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.302542669 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.301304328 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.305059686 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.303491789 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.305912924 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.303141429 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.302749063 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.299572832 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.300787948 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.300260379 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.303877855 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.306720014 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.303508275 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.301274443 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.302555536 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.296711893 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.301439558 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.302201931 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.301636675 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.303191775 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.302683768 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.30573196 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.301067817 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.305126047 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.304497424 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.306650326 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.308058246 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.301600654 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.310748721 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.306613377 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.308047673 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.305496143 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.306952344 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.308057706 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.305570513 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.302900576 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.304829302 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.303296648 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.301799434 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.304249705 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.307535344 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.304180516 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.30745109 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.303032663 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.305201779 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.304009568 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.304428811 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.308070767 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.307839013 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.302624412 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.306476461 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.305041063 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.307187551 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.309534451 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.309099905 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.304794997 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.305828541 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.308053449 seconds)
  done (took 89.900492569 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.307780165 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.30769991 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.308311835 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.308550884 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.306966201 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.307114532 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.306595992 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.308201617 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.307214497 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.303770949 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.307445509 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.306541912 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.309582743 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.307601551 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.308358811 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.304051178 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.309832749 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.307224467 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.310094098 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.308913455 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.310916159 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.308305013 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.311353321 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.307693878 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.311317173 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.305785439 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.308912029 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.309194276 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.311944333 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.311888759 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.307949408 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.306174175 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.310853152 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.309276293 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.3103782 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.313157972 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.312298612 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.315320535 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.311053182 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.310002299 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.312258146 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.311692536 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.312394908 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.312465689 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.312598739 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.314141586 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.312225176 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.313351234 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.3126449 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.313182967 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.313006121 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.314658902 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.312813396 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.316266096 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.316288186 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.309423244 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.314151025 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.313317594 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.312960528 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.313138761 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.316545677 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.315271006 seconds)
  done (took 82.468787806 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.309469532 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.314293035 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.312802556 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.309479052 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.313205912 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.31231215 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.313321309 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.3116865 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.313201495 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.309597011 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.315717017 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.313776703 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.311588315 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.316081519 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.313542995 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.315352548 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.30950419 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.316470736 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.313892472 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.312308479 seconds)
  done (took 27.476641159 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.313625106 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.314441139 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.31296815 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.311161776 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.314356994 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.31300045 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.31437933 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.314121074 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.314427685 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.31589586 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.316941162 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.315491174 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.311025601 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.310818864 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.316824465 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.311280797 seconds)
  done (took 22.242975102 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.309629955 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.316576686 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.31776915 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.31460566 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.315438198 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.314612377 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.314233882 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.315333099 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.315438034 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.316955472 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.318532283 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.315550536 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.314930514 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.317014453 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.312912407 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.316489087 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.315318117 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.316142729 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.319199711 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.318005678 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.316318215 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.318259499 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.319719113 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.318519875 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.313203664 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.31734443 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.311771922 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.313801941 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.313638996 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.318676003 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.319278312 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.317108653 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.317100386 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.31605883 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.31847683 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.310724664 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.32098586 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.318787994 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.316135107 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.317790014 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.31972647 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.313960449 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.318374136 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.318921168 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.315669275 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.319301671 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.317172563 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.317273785 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.316154338 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.317827483 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.321361853 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.320853545 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.319826692 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.321477423 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.322234223 seconds)
  done (took 73.652424762 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.317891497 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.31615401 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.317718392 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.322957399 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.318354659 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.31870159 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.323114845 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.318007579 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.317283414 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.32083153 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.322386193 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.320154315 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.31450877 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.320378133 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.321044182 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.319699555 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.320298015 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.320370837 seconds)
  done (took 24.975616014 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.314793434 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.319456861 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.319090891 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.316117084 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.322808898 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.320896828 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.316501942 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.322752604 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.318181559 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.3191689 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.320045917 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.322168713 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.319890851 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.320383361 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.320230696 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.317430268 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.320202945 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.32096593 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.317543081 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.317989494 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.322276671 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.324615834 seconds)
  done (took 30.25666821 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.318524597 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.32161528 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.319770839 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.339291343 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.342525994 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.346046832 seconds)
  done (took 9.216660987 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.328448543 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.323413514 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.320858507 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.326764764 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.323372987 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317623242 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.321665531 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.324279949 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.326269714 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.323331017 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32272587 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321588372 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.324996223 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.322600013 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.322440129 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322492766 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318931303 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319542847 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318618902 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323660033 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320633277 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.322184993 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317035654 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.323921524 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.325523604 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.321857633 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.325701407 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321515807 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320565933 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.325802305 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320503831 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318651603 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.322387244 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.321447686 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.327241311 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.324162496 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.321634684 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.324602788 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.324072722 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32023302 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.322154677 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.327557225 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.327986784 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320194325 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.326609705 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.323859781 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.323566016 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.322955032 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.322486709 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.32414311 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.325262981 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.326015403 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.322865327 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321981912 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.325925909 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32817285 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.324577009 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32501271 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.326870764 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.32379852 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.32467948 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.325138275 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.325547702 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321643214 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32320604 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.327148038 seconds)
  done (took 88.598699808 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.323847539 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.322193101 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.326806089 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.322215913 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.324095521 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.324902201 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32766005 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326961806 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.325082447 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323712836 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.324721947 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.326993334 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.325391316 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325559286 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.3249212 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.323013783 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.323466531 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.326241818 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.327454891 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.330640762 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.327341583 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.324968515 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.327115117 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.329577751 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.326074863 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.327828557 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325122131 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322314657 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.32683387 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.325836823 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.325431417 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32190502 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325671852 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.324204114 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328077293 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.324959676 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.327542626 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.326052904 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.324316035 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328862384 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32738895 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.330089926 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.323255362 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.324829149 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.32873731 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.328353355 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.325796417 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.328530555 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.326579282 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.327825092 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328760419 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.327139351 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.327022955 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.328974824 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.330360355 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.328658782 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.327343805 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.329988041 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.329041768 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.327252468 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.325963246 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.323302472 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.331658643 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.326589742 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32815743 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.328557446 seconds)
  done (took 88.779216636 seconds)
done (took 1779.40266515 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.491150211 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.444015199 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.327502226 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.377865921 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.3263376 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.344374846 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.353106782 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.32832033 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.328258467 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.331471575 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.331388898 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.522380865 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.353966316 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.328507266 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.323979937 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.425722756 seconds)
  done (took 43.173749121 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.360832851 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.334600503 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.467591976 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.35595406 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.358292401 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.543798237 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.395352794 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.33737607 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.540340551 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.379670519 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.158080218 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.354548262 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.337720445 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.587100444 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.353954679 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.544113625 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.620550806 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.105858361 seconds)
  done (took 31.371761241 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.869334431 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.341171222 seconds)
  done (took 9.444586904 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.356191187 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.335316666 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.333041589 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.333115879 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.324869991 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.338794482 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.332157879 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.326717453 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.639009065 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.482812894 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.355175013 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.345074596 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.355966393 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.333342911 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.334467678 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.376020826 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.486353461 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.332806065 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.329740356 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.341093635 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.333577579 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.433686072 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.397407675 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.333346033 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.477146153 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.656934281 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.338106843 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.344211082 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.483326273 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.334474181 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.334244978 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.334894827 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.337376294 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.306493687 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.858335742 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.328778657 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.359311217 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.344592931 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.330395418 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.519916573 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.339257045 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.338331659 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.331684288 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.858842639 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.486201445 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.472787675 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.841014402 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.352067721 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.341497689 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.402141602 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.337855888 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.333371286 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.383692529 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.200502572 seconds)
  done (took 113.84538355 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.358130885 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.730091889 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.50272416 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.356515051 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.08570495 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.12440105 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.347232897 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.672975427 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.415271149 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.327010435 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.642164962 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.899252936 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.354830999 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.338561883 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.878638425 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.381905784 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.325885317 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.262010327 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.346384339 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.329546605 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.862852129 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.324538805 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.330815049 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.500415413 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.367560669 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.860558422 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.041676412 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.813470813 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.350329798 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.324643611 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.863910372 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.353160847 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.371340881 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.329058374 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.61835022 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.756803173 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.754250118 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.34924817 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.374328195 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.33128544 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.348813107 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.85581462 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.76301172 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.350664037 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.34066754 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.860861817 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.349185756 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.340747611 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.332245946 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.549880067 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.05434278 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.33826871 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.038224996 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.337590476 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.671406195 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.418899506 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.404597225 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.887867723 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.350491546 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.48029488 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.359048798 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.330727578 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.332293892 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.330604327 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.340076338 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.752529949 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.686965862 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.336686088 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.759251744 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.878727278 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.366406472 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.921361074 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.269396015 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.366707219 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.434832976 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.330870403 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.093878239 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.899041523 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.357512815 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.329496118 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.743216721 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.352235444 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.647012482 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.359629029 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.33879392 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.885820334 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.337371824 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.359791775 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.336129588 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.331606451 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.128232127 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.338528522 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.654742034 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.373367543 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.335187358 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.331608401 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.345342908 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.33137532 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.337849388 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.336667759 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.918787782 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.352494435 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.487178626 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.358008164 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.338106998 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.338098147 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.335966846 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.341157387 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.570201665 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.854191906 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.358944247 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.33760884 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.333374849 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.342774008 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.516830058 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.340464416 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.71009722 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.360258507 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.33873105 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.364860458 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.177096516 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.391716127 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.333178741 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.344321197 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.264097819 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.552104033 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.360253554 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.333196198 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.341067466 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.365160163 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.869393767 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.366605987 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.367573636 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.33934606 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.097279291 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.382189005 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.363374294 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.710587052 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.353167979 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.339422892 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.336205267 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.333363626 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.638184988 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.639089408 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.618216537 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.336413677 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.34933236 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.094457582 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.378489046 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.474713468 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.363644022 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.335996408 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.539708217 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.772335765 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.341442886 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.955443714 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.33810158 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.564507425 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.341169378 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.673011814 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.898677933 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.357603409 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.338925564 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.118871823 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.098439453 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.179928446 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.343398242 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.642699435 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.317001866 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.817958487 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.343715401 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.342885509 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.939886662 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.345042605 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.339855984 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.339872286 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.341291967 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.647276599 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.519831641 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.160392302 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.350737962 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.864502958 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.421092418 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.341639469 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.34909704 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.34547224 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.685063004 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.346291156 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.34926817 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.352458237 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.342182297 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.352129613 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.888911166 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.293552964 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.344587365 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.49816484 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.03783923 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.358968939 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.343702534 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.04404559 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.582057013 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.966120693 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.430457704 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.720833482 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.363690407 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.38480921 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.053275123 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.372319736 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.885109172 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.361264596 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.347856743 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.012558416 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.361752746 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.704314085 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.343430208 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.346153637 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.969393848 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.364394149 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.343559606 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.879019841 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.371202576 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.608547594 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.348778017 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.348812714 seconds)
  done (took 1118.343984898 seconds)
done (took 1317.417429217 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.344098379 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.339109734 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.323955691 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.338302128 seconds)
  done (took 26.596091101 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.38238262 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.38235499 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.362468377 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.358910105 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.367532881 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.379264251 seconds)
  done (took 9.489174846 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.020798592 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.336998263 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.344826655 seconds)
  done (took 19.960484189 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.593543956 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.77024951 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.724081451 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.855531368 seconds)
  done (took 11.202111451 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.34618994 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.352254965 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.353500096 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.353962084 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.357072438 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.355027933 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.356301065 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.354395439 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.356194003 seconds)
  done (took 13.43699169 seconds)
done (took 81.93477217 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.351202769 seconds)
    (2/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.65836827 seconds)
    (3/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.232973284 seconds)
    (4/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.232333214 seconds)
    (5/286) benchmarking ("map", identity, BigInt, true)...
    done (took 3.064918806 seconds)
    (6/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 4.282799064 seconds)
    (7/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.638214711 seconds)
    (8/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.447869418 seconds)
    (9/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.388054452 seconds)
    (10/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.444539031 seconds)
    (11/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.358002402 seconds)
    (12/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.320987983 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.375655275 seconds)
    (14/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.366211665 seconds)
    (15/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.332443777 seconds)
    (16/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.35324371 seconds)
    (17/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.349594034 seconds)
    (18/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.360243302 seconds)
    (19/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.436062383 seconds)
    (20/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.321927085 seconds)
    (21/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.346899933 seconds)
    (22/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.108602849 seconds)
    (23/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.345050004 seconds)
    (24/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.046126167 seconds)
    (25/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.682332014 seconds)
    (26/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.387641743 seconds)
    (27/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.342611613 seconds)
    (28/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.335431564 seconds)
    (29/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.694280494 seconds)
    (30/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.329599666 seconds)
    (31/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.372021008 seconds)
    (32/286) benchmarking ("sort", Int64, true)...
    done (took 6.347506747 seconds)
    (33/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.381014127 seconds)
    (34/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.462305843 seconds)
    (35/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.432373257 seconds)
    (36/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.44661338 seconds)
    (37/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.331126411 seconds)
    (38/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.443893568 seconds)
    (39/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.339384391 seconds)
    (40/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.699263658 seconds)
    (41/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.327626849 seconds)
    (42/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.37038827 seconds)
    (43/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.435187836 seconds)
    (44/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.461465527 seconds)
    (45/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.59639763 seconds)
    (46/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.479276697 seconds)
    (47/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.607855044 seconds)
    (48/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.200828543 seconds)
    (49/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 6.202180539 seconds)
    (50/286) benchmarking ("sort", Float64, false)...
    done (took 5.788427889 seconds)
    (51/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.363813631 seconds)
    (52/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.405002536 seconds)
    (53/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.330196946 seconds)
    (54/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.759657046 seconds)
    (55/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.348334362 seconds)
    (56/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.571636742 seconds)
    (57/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.389674915 seconds)
    (58/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.324974972 seconds)
    (59/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.461834962 seconds)
    (60/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.794822363 seconds)
    (61/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.372336442 seconds)
    (62/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.963289227 seconds)
    (63/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.191695648 seconds)
    (64/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.439484274 seconds)
    (65/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.349670863 seconds)
    (66/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.337379205 seconds)
    (67/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.35173853 seconds)
    (68/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.353857452 seconds)
    (69/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.330340254 seconds)
    (70/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.759901285 seconds)
    (71/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.331316757 seconds)
    (72/286) benchmarking ("sort", BigInt, true)...
    done (took 6.370163466 seconds)
    (73/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.781785565 seconds)
    (74/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.378348685 seconds)
    (75/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.386271868 seconds)
    (76/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.380260467 seconds)
    (77/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.348761047 seconds)
    (78/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.248623642 seconds)
    (79/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.3448088 seconds)
    (80/286) benchmarking ("sort", Int64, false)...
    done (took 5.728898279 seconds)
    (81/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.338603672 seconds)
    (82/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.146499744 seconds)
    (83/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.357033884 seconds)
    (84/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.327731702 seconds)
    (85/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.378591485 seconds)
    (86/286) benchmarking ("sort", Float64, true)...
    done (took 6.354023972 seconds)
    (87/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.451808693 seconds)
    (88/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.496840594 seconds)
    (89/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.363211325 seconds)
    (90/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.352288622 seconds)
    (91/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.350342343 seconds)
    (92/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.380900924 seconds)
    (93/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.350769759 seconds)
    (94/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.998087626 seconds)
    (95/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.354045846 seconds)
    (96/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.363432182 seconds)
    (97/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.342203176 seconds)
    (98/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.452488623 seconds)
    (99/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.327965243 seconds)
    (100/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.331033717 seconds)
    (101/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.607005163 seconds)
    (102/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.366477335 seconds)
    (103/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.451801161 seconds)
    (104/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.36355693 seconds)
    (105/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.405263419 seconds)
    (106/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.567722552 seconds)
    (107/286) benchmarking ("sort", Int8, false)...
    done (took 4.37760573 seconds)
    (108/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.064922937 seconds)
    (109/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.985246707 seconds)
    (110/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 3.067467856 seconds)
    (111/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.905117736 seconds)
    (112/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.101981233 seconds)
    (113/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 4.042906864 seconds)
    (114/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.475305735 seconds)
    (115/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.280819138 seconds)
    (116/286) benchmarking ("sort", Bool, false)...
    done (took 1.889488207 seconds)
    (117/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.400801872 seconds)
    (118/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.380959155 seconds)
    (119/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.442864452 seconds)
    (120/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.150477669 seconds)
    (121/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.630158408 seconds)
    (122/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.332632133 seconds)
    (123/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.170828782 seconds)
    (124/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.209347613 seconds)
    (125/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.375798345 seconds)
    (126/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.609469145 seconds)
    (127/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.342434371 seconds)
    (128/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 6.301762669 seconds)
    (129/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.326552292 seconds)
    (130/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.366577611 seconds)
    (131/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.332343043 seconds)
    (132/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.468994197 seconds)
    (133/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.321995537 seconds)
    (134/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.3808864 seconds)
    (135/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.351245596 seconds)
    (136/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.939113054 seconds)
    (137/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.355878151 seconds)
    (138/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.380556133 seconds)
    (139/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.374377476 seconds)
    (140/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.633152168 seconds)
    (141/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.241060037 seconds)
    (142/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.277510387 seconds)
    (143/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.375862174 seconds)
    (144/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.732134801 seconds)
    (145/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.348688118 seconds)
    (146/286) benchmarking ("sort", BigInt, false)...
    done (took 6.375095902 seconds)
    (147/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.54929511 seconds)
    (148/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.91541491 seconds)
    (149/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 4.056953459 seconds)
    (150/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.82719314 seconds)
    (151/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.373051629 seconds)
    (152/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.556837748 seconds)
    (153/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.383766773 seconds)
    (154/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.368321525 seconds)
    (155/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.063852403 seconds)
    (156/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.395422211 seconds)
    (157/286) benchmarking ("sort", Float32, false)...
    done (took 5.431083288 seconds)
    (158/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.34161271 seconds)
    (159/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.083389189 seconds)
    (160/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.436697125 seconds)
    (161/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.460414887 seconds)
    (162/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.864149789 seconds)
    (163/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.784225548 seconds)
    (164/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.349965125 seconds)
    (165/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.481502209 seconds)
    (166/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.795947179 seconds)
    (167/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.353801601 seconds)
    (168/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.892159703 seconds)
    (169/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.419731645 seconds)
    (170/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.774987826 seconds)
    (171/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.070488312 seconds)
    (172/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.329594147 seconds)
    (173/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.865840863 seconds)
    (174/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.439578868 seconds)
    (175/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.580899356 seconds)
    (176/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.595726824 seconds)
    (177/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.226804151 seconds)
    (178/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.136202044 seconds)
    (179/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.103787361 seconds)
    (180/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.38709716 seconds)
    (181/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.383234963 seconds)
    (182/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.399511967 seconds)
    (183/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.402712078 seconds)
    (184/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.490948301 seconds)
    (185/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.557255744 seconds)
    (186/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.417840612 seconds)
    (187/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.801057397 seconds)
    (188/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.47855776 seconds)
    (189/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.116899596 seconds)
    (190/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.266516158 seconds)
    (191/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.747831785 seconds)
    (192/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.900301914 seconds)
    (193/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.442135475 seconds)
    (194/286) benchmarking ("sort", Int8, true)...
    done (took 6.359118918 seconds)
    (195/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.139320241 seconds)
    (196/286) benchmarking ("sort", Bool, true)...
    done (took 5.458402514 seconds)
    (197/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.429680873 seconds)
    (198/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.467225495 seconds)
    (199/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.377198139 seconds)
    (200/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.376406305 seconds)
    (201/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.385506227 seconds)
    (202/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.369204002 seconds)
    (203/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.006839076 seconds)
    (204/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.562302776 seconds)
    (205/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 4.299865052 seconds)
    (206/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.470744699 seconds)
    (207/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.39354562 seconds)
    (208/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.597941032 seconds)
    (209/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.7054268 seconds)
    (210/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.486859786 seconds)
    (211/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.969116727 seconds)
    (212/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.375938162 seconds)
    (213/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.701025949 seconds)
    (214/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.231596649 seconds)
    (215/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.37971473 seconds)
    (216/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.362098371 seconds)
    (217/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.392650743 seconds)
    (218/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.404870985 seconds)
    (219/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.440030795 seconds)
    (220/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.976027544 seconds)
    (221/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.446308857 seconds)
    (222/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.377594208 seconds)
    (223/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.487895819 seconds)
    (224/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.372958838 seconds)
    (225/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.084045055 seconds)
    (226/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.958786685 seconds)
    (227/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.374818371 seconds)
    (228/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.338641296 seconds)
    (229/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.333289134 seconds)
    (230/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.860962722 seconds)
    (231/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.922776974 seconds)
    (232/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.443738426 seconds)
    (233/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.340135003 seconds)
    (234/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.344290566 seconds)
    (235/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.350333478 seconds)
    (236/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.529292752 seconds)
    (237/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.232997871 seconds)
    (238/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 4.184132104 seconds)
    (239/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.598310445 seconds)
    (240/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.388503229 seconds)
    (241/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.177461009 seconds)
    (242/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.410291682 seconds)
    (243/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.563672848 seconds)
    (244/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.342380136 seconds)
    (245/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.406011115 seconds)
    (246/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.354224339 seconds)
    (247/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.457194388 seconds)
    (248/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.366120033 seconds)
    (249/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.749151504 seconds)
    (250/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.178931884 seconds)
    (251/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.492268115 seconds)
    (252/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.339125756 seconds)
    (253/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.355277511 seconds)
    (254/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.258380143 seconds)
    (255/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.355209231 seconds)
    (256/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.855459791 seconds)
    (257/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.789777638 seconds)
    (258/286) benchmarking ("sort", Float32, true)...
    done (took 6.399624536 seconds)
    (259/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.358196248 seconds)
    (260/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.464191852 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.446395425 seconds)
    (262/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.446897615 seconds)
    (263/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.705888618 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.497452869 seconds)
    (265/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.882602122 seconds)
    (266/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.373650775 seconds)
    (267/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.210847345 seconds)
    (268/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.416719581 seconds)
    (269/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.01213909 seconds)
    (270/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.385340965 seconds)
    (271/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.376031601 seconds)
    (272/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.344044146 seconds)
    (273/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.399640906 seconds)
    (274/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.972294248 seconds)
    (275/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 3.005268498 seconds)
    (276/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.380741097 seconds)
    (277/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.359314128 seconds)
    (278/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.367657082 seconds)
    (279/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.493065888 seconds)
    (280/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.343837186 seconds)
    (281/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.389001795 seconds)
    (282/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.204497084 seconds)
    (283/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 4.06537972 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.383680673 seconds)
    (285/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.804518557 seconds)
    (286/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.378291656 seconds)
  done (took 963.646079688 seconds)
done (took 964.901020247 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.396508196 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.396607428 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.374992235 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.398307911 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.488364172 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.399796862 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.386428498 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.375491645 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.426735489 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.424473111 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.374495885 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.403703047 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.379101202 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.377483519 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.377868309 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.390396987 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.589531355 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.374086269 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.393709297 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.389930447 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.394915741 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.380070545 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.428213775 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.406818745 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.384501285 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.382054978 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.381084751 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.401268255 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.494058699 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.382498692 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.38145782 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.389708009 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.649065241 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.379079783 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.376538421 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.400591931 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.389224533 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.388335526 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.381874455 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.414076939 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 3.02762466 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.390319091 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.383508338 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.382957691 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.381519461 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.385600285 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.380003493 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.386691726 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.39804077 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.39402208 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 3.017578068 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.408840494 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.379875488 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.380050785 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.393015888 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.382287527 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.382347039 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.400499224 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.402250856 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.401160056 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.563553662 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.381879019 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.385189081 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.396545673 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.389436389 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.060567255 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.388458817 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.386567574 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 3.032668269 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.400662811 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.0574818 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.402566596 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.381474428 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.396119095 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.412317126 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.571240113 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.371759828 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.381699698 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.387448954 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.380455671 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.391466428 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.398158534 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.382767826 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.383579616 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.39632533 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.410184312 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.391726772 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.384052161 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.393531965 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.403738573 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.388302395 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.3936053 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.386511468 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.379799665 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.392877913 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.386485408 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.386471627 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.386258612 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.38876303 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.395792154 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 3.031016777 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.413100485 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.381391006 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.381210683 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.384550293 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.399495357 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 3.032159505 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.397975113 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.403988617 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.431303457 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.388093774 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.649243658 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.389951402 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.40468476 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.397463522 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.387028866 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.379980216 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.648726306 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 3.03138141 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.410130735 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.388361461 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.381960158 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.405669894 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.390568714 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.385243739 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.577910572 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.385184442 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.400200233 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.507923536 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.39755567 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.417058298 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.387362005 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.388651665 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.412862457 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.402206219 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.414551557 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.389323567 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.408334596 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.399644178 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.381578351 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.398116127 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.397781628 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.386530521 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.394451135 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.383109356 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.412562308 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.404101107 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.399558101 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.406075408 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.507656202 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.384721811 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.608178422 seconds)
done (took 236.24261553 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.445748804 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.381538788 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.470837326 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.385474243 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.494188019 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.485968373 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.381816431 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.384407323 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.382595599 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.780727462 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.383203308 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.379351236 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.37834784 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.382110428 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.473026953 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.385878719 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.383407763 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.748200709 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.389132561 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.458820932 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.378219997 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.38369589 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.389338466 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.785044825 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.379854581 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.384890947 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.460323222 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.382665198 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.748548419 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.381762655 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.379327991 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.749941655 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.477984684 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.401804627 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.394737597 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.393086424 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.492254791 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.409378955 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.470319722 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.468703974 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.470585284 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.424953219 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.383030061 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.384345166 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.388146584 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.387144015 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.382176652 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.412764844 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.380698573 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.383992307 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.744687546 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.397896727 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.394219544 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.386482051 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.386125821 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.411101535 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.383566039 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.389064892 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.479335879 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.390313272 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.454864818 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.789855363 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.785074631 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.388445866 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.382064133 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.387144064 seconds)
  done (took 152.100327372 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.453223841 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.464770949 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.512797175 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.408975592 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.435847971 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.519059572 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.407709637 seconds)
  done (took 11.48915962 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.396466 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.390421926 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.436583853 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.439350189 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.393087202 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.567642175 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.392219139 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.398977716 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.388704164 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.440161878 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.393809894 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.393165891 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.399678834 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.386250498 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.440834793 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.401617052 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.505242584 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.390896491 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.390191772 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.541725813 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.390152425 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.396954273 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.442721475 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.402305955 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.393621537 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.39452204 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.207951996 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.39025699 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.3881836 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.389375941 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.388737113 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.468759731 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.392015175 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.390687277 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.388375758 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.504519554 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.395077434 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.390389021 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.392146421 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.39047421 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.39146109 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.394361451 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.394219686 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.391675729 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.395464921 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.418327467 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.391232417 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.394233578 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.390707215 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.392795299 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.444791337 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.394788876 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.39016331 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.391190221 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.446650136 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.400741324 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.39334 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.390923711 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.39582217 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.39177805 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.54622301 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.443442428 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.395335806 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.441309346 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.394282 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.397356891 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.390394664 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.395448778 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.448025348 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.396320878 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.440571479 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.392690507 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.573117419 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.418773431 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.39662124 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.399762508 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.396174565 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.394219196 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.388605181 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.397681227 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.391382809 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.398638008 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.398518602 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.393877023 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.39242252 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.559845472 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.500105819 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.391252096 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.408298021 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.401544032 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.395899733 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.44613852 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.394116249 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.397160037 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.448969985 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.509844427 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.448235654 seconds)
  done (took 159.39230579 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.398041018 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.402329042 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.400377436 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.418351451 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.414777612 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.399022685 seconds)
  done (took 9.721258633 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.396871987 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.399088091 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.398510421 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.397499493 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.400966584 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.400554037 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.39689406 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.394760702 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.403168562 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.398166104 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.398486055 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.398156709 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.398748231 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.398908126 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.399374012 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.398115687 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.40276069 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.394603789 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.39996066 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.399082214 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.498542547 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.399061139 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.397244431 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.40412321 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.402458617 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.398241095 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.407851185 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.401986298 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.399212295 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.406056823 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.417586763 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.398540794 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.399619808 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.405921155 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.405594545 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.398943877 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.403793701 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.400288126 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.392460174 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.402590073 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.402456257 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.399095097 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.401099547 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.402970921 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.402061131 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.404876383 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.406817598 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.41164206 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.401266476 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.402052096 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.403061385 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.400162795 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.400942414 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.405459184 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.401808413 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.421280664 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.408023678 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.401028062 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.402696596 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.399397887 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.403693826 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.402772971 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.402344093 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.405896039 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.409440497 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.400685845 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.405536034 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.406646579 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.404355638 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.401745872 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.403374094 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.400585792 seconds)
  done (took 103.331953312 seconds)
done (took 437.316148506 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.74314945 seconds)
  done (took 8.039709249 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.573937066 seconds)
  done (took 7.874458291 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.887058602 seconds)
  done (took 25.455386026 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.422756778 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.510977572 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.42292478 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.39056261 seconds)
  done (took 27.045063064 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.855270076 seconds)
  done (took 8.149960275 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.401125495 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.396407252 seconds)
  done (took 14.096053538 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.931643634 seconds)
  done (took 8.227882399 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.408850746 seconds)
  done (took 7.712470934 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.405355137 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.431574043 seconds)
  done (took 14.150554027 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.374318342 seconds)
  done (took 7.667901171 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 11.28077189 seconds)
  done (took 12.579654402 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.397484357 seconds)
  done (took 7.696652618 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.462487304 seconds)
  done (took 7.758863684 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.904324536 seconds)
  done (took 11.200114037 seconds)
done (took 168.953369306 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.394758642 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.387654562 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.391236889 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.391252695 seconds)
  done (took 26.859061651 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.439031051 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.436385208 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.440536373 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.450125322 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.441509809 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.436646148 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.43126565 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.427958663 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.449989493 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.439867294 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.439620591 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.444132478 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.438596028 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.434826732 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.443400987 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.442551244 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.452153375 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.441520306 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.431183801 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.444427231 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.405769266 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.450181913 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.440090375 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.404727259 seconds)
  done (took 35.807841276 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.927346926 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.477297164 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.557473643 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.456067337 seconds)
  done (took 7.71536711 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.456253469 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.457165906 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.468873109 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.509330729 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.535093263 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.46995504 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.433187312 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.428911188 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.410785174 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.4586094 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.535156207 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.477808188 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.561131751 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.406668426 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.591991029 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.405296268 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.408192712 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.457744893 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.510621471 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.550116326 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.404341152 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.459003544 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.461488088 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.473326726 seconds)
  done (took 36.629767392 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.406155329 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.42563605 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.405000302 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.404962562 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.412803393 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.40967384 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.407212275 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.405642 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.403744554 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.41350135 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.405731062 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.418013899 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.405693739 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.405823974 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.413465109 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.405641999 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.412850854 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.408316585 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.407528856 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.417617662 seconds)
  done (took 29.494864789 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.398907659 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.318584439 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.751958515 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.659493716 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.402626321 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.392315836 seconds)
  done (took 29.225187344 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.487408133 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.67228435 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.408369275 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.831884861 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.916501884 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.420620299 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.409748339 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.70412713 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.092928551 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.078076308 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.475339542 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.491450925 seconds)
  done (took 21.290328451 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.41471565 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.399243298 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.403030564 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.418015255 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.473623289 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.429298851 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.416006171 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.401815254 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.4690128 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.496238916 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.428656016 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.478431356 seconds)
  done (took 38.531693879 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.489456687 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.457734582 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.555169088 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.45819245 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.122779498 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.610747313 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.501245673 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.167569063 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.420311119 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.680879497 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40697103 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.494782314 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.661576649 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.423502498 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.410069081 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.480510069 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.647618334 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.977620168 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.410834804 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.110088192 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431587574 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.404303337 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.20944251 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.691930192 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.636563559 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.389609156 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.666433513 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.183514661 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.744754723 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.423197985 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418843578 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.407556415 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.682720691 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.502673225 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.495206817 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.666382752 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.434527333 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.95219788 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.410336354 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 6.118462271 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.418062212 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.410256584 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417999717 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404883887 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.343011026 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.405898654 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.644324577 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.405220154 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.119083547 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.408978279 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.716681262 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.502415082 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.40882282 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.981162014 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.489970817 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.409544819 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.412349724 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.513013614 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991295253 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.413742702 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.421238916 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.343272845 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.405401631 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.116297065 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.138702217 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.438644608 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.415464607 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.412199473 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.344294159 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.111440414 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.423504354 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.555728025 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.426646324 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.106355858 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.300256429 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.43086215 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.340309503 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.052704482 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.413590573 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.348414628 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.639075859 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.184328202 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.352041516 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.36806315 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.344049382 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.194853633 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410302611 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 5.128430918 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.427614854 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.199608726 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.6872891 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.455391545 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436244852 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.637521167 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.291218126 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.414064222 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.40830796 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.558493936 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426139143 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.188802521 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.35803093 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.411509328 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.670801551 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.616455536 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.414211503 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.481321574 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.39384665 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420251426 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.4166565 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.41015584 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.674126232 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.108756351 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.447017866 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400506123 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431901054 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.19148897 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.235250391 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420937321 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.413145041 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.432457542 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.723221061 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.257852912 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.288930762 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48386458 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.417154795 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.412156471 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.135247628 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.263338526 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.298695186 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.658657853 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.446672754 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.413272037 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.411908694 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.375164232 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.410705091 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.429014448 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.191327631 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.639166047 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.412554414 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.681625139 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.347410197 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.560840809 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.457194034 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.63133749 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.848411902 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.437294538 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.677449498 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420589342 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.420359963 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.423731487 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429825803 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.516334242 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436991375 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.430523124 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.66760695 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.420816799 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.4184039 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.141094232 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.196718556 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416275038 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.417746333 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.432291253 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.092599098 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420523709 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.413005189 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.310322072 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.429397873 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481954333 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.418127065 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.681601331 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 4.037292442 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.453445045 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.413260233 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.41545952 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.638851004 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.425425613 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.932918363 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.4871414 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.958093624 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.109277091 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.449746386 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.350528283 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.130371747 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.110076462 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418156255 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.628628075 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.419543324 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.67914678 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.452600323 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.431846271 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.094527747 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.438950698 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.143617155 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.427458007 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.429960537 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.777981794 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.43768008 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 4.024377466 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.298443389 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.432672341 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.428351398 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.559957924 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.432290746 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.353007592 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.937212087 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.423861633 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.418445553 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.197568043 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.452384701 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.96337059 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.801964561 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.700524849 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.440946742 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.726228493 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.24817228 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.455962739 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.430267257 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.42749734 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.426559675 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.442044779 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426880463 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.431766731 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.058097399 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.892294193 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978020306 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.292136137 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.059407617 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.831480668 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.445475781 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.33053299 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.205758952 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.369626867 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.081390152 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.696862116 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.229686131 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.389571377 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.395880918 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.769007922 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.351442223 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.731332827 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.653435526 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.809140018 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.443291587 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.727501242 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.633413081 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.457873262 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.423168478 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.352961121 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.692291006 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.600578781 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.42896744 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.490084921 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.684727008 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.41348263 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.193361028 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.475269811 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.309423244 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.261989418 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.976750255 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.815587849 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.432524951 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.42941776 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.783992813 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.445751006 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.950179536 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.157873044 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.445802003 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.965675102 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.377551593 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.689889814 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.454289712 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.416318766 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.419161742 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.45836664 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.678675601 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.732666472 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.362240936 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.433258409 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.04660846 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.301741143 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.428166804 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.92106365 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.248398763 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.429665271 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.76355244 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.435447588 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 4.05587479 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.448792292 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.359747986 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.358562386 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.118930583 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.436544918 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409051234 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.995448598 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.437614598 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.42630934 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.445862289 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3183775 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.68204174 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.437570296 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.110274229 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.670503545 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.426622948 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440589968 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.426922272 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.423864979 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.405805132 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.307585793 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.663691803 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.444718328 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.66164229 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.566628368 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.316900264 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.441099277 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.650082671 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.310002209 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.439861487 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.703088347 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.159213505 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.451688487 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.281125899 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.471645464 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.434932144 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.482785416 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.428410662 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.447010506 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.5158678 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.695349349 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.456306335 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.439750095 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.278537945 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.419631285 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.447352552 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.443242748 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.52143083 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.435771187 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 4.06470079 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.215903616 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.117376028 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378457413 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.142600529 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.764389898 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.42942956 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.430930638 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.363644742 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.56839349 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.959245577 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.705714521 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.556092335 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.422388676 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.469382163 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.435221229 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.441689222 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.639029152 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.701663094 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.30531396 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.446081702 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.092856035 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.314395346 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.437509027 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.639496297 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.015255856 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.089032244 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.814283279 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.437338906 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.219623496 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.717653785 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.52228858 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.428949973 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.027224606 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.448328552 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.412945388 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.434409069 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.442725142 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.576594038 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.743300038 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.580723766 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.431395051 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.588193556 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.205272642 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.191823463 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.689141275 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.007143042 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.695057362 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.139467 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.293069646 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.696565572 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.501628878 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.703460182 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.560630749 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.575595073 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.444582715 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.328871508 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.432391399 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.284417477 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.142816262 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.442682834 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.128796152 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.714990757 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.434311914 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.446959393 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.454841319 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.443553427 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.65729823 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.23126277 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.650940617 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.44068621 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.442304341 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.004342509 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.126077888 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.768930987 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.372315217 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.42884523 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.709098418 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.686968094 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.45805036 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.884230792 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.144002302 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.091574604 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.552624502 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.455400621 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.434849539 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.262933658 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.135391449 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 4.097042668 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.037752723 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.098081264 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.437019119 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.705994209 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.439283545 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.450309902 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.707548364 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.440906479 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.43653174 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.705032216 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.148742548 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.384633783 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.458571351 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.254892432 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.370238782 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.664918677 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.45278486 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.382622368 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.429144653 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.924555801 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.451453027 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.562734538 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.440684527 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.440404583 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.435170687 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.190819298 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.758049192 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.434291737 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.42154515 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.424278735 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.440712179 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.535750517 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.530158056 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.43739959 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.103358026 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.7877048 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.695181666 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.452637234 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.416476354 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.439668418 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.438591471 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.161701895 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.405949513 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.442315284 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.06631474 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.434919492 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.445486259 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.43949835 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.652406566 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.64741748 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.440308414 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.707321651 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.469415588 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.453008464 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.338960706 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.242364326 seconds)
  done (took 1740.856086253 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.462376371 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.491479559 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.464146038 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.519665482 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.457481424 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.443459669 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.541905683 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.463224386 seconds)
  done (took 53.180824398 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.437336575 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.602516291 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.471682171 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.439758346 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.444823414 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.463087673 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.967802318 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.453540925 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.43967755 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.453956434 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.461925178 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.441125923 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.167025748 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.43862415 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.456285865 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.457575643 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.445485816 seconds)
  done (took 67.384730099 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.657110509 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.726864517 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.288251654 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.523939524 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.432073803 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.451147739 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.504163534 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.450465106 seconds)
  done (took 56.373042945 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.449240353 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.451174713 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.450025817 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.449781425 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.447699191 seconds)
  done (took 8.585855946 seconds)
done (took 2153.235121738 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.443562778 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.446723997 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.443988406 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.445881867 seconds)
  done (took 7.114748587 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.4192742 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.109140047 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.412647812 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.435682684 seconds)
  done (took 18.712301838 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.4446651 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.45593575 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.27863501 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.163671126 seconds)
  done (took 5.780726316 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.193307737 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.203653226 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.188582806 seconds)
  done (took 7.92118238 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.444955766 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.443818103 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.436878095 seconds)
  done (took 20.661521613 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.764526424 seconds)
  done (took 3.103465978 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.588400856 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.641846102 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.812149615 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.811751985 seconds)
  done (took 8.189839377 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.839448585 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.813876661 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.627543672 seconds)
  done (took 6.618426427 seconds)
done (took 92.340147236 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.888238489 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.841323742 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.649444866 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.87123211 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.665325838 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.649068756 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.006353915 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.842184536 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.700154497 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.325474816 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.863269534 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.663247372 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.744886636 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.847016791 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.745844255 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.846907685 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.668224957 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.904824338 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.451942478 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.437172183 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.022794462 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.46544384 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.694448186 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.486147342 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.661515159 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.600770426 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.056814418 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.840154344 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.452378739 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.117945222 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.596627938 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.445171814 seconds)
  done (took 204.388688056 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.453691795 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.434106241 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.434079507 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.466907271 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.449713903 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.451470988 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.436420776 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.438484573 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.448321415 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.447037856 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.443458037 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.444469297 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.439698263 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.455056716 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.45659578 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.436463869 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.458924335 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.43616816 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.439639272 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.456103485 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.455438256 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.433846982 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.455258 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.459399498 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.43633038 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.456956945 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.462458209 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.449545488 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.434578737 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.453332751 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.45832949 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.456284602 seconds)
  done (took 207.67930932 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.444392986 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.47063027 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.438172917 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.448026762 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.44270661 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.438819999 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.438590103 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.439291243 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.436371688 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.466466286 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.44681721 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.437094026 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.440846764 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.435547654 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.437987694 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.445330534 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.440078949 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.446687896 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.437791269 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.440963286 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.451589504 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.447566835 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.438413574 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.457137242 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.458418717 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.46064614 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.443711268 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.43787361 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.455083777 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.469452734 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.470825851 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.439966504 seconds)
  done (took 207.645542559 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.650736449 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.454386168 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.456533787 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.407124851 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.456431562 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.453434601 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.454583674 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.644679081 seconds)
  done (took 15.322281112 seconds)
done (took 636.377325563 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.934220263 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.641201082 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.666814734 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.471433399 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.358048406 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.486431689 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.476202473 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.671187853 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.427976502 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.672899266 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.798982681 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.480121054 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.961666101 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.463791789 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.772532031 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.587515371 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.481212039 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.622416053 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.843866905 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.148637511 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.761093598 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.147441792 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.703412121 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.457840163 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 3.067923733 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.149010975 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.388348781 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.432468805 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.485116699 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.849622059 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.320942981 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.676083866 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.529293611 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.551249102 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.609585599 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.595048464 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.63394428 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.545935113 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.696026042 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.881615658 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.136837346 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.265849162 seconds)
  done (took 100.196894509 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.439582189 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.44086509 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.439381688 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.439222044 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.441570795 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.439012868 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.440098173 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.439000452 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.440147756 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.439743813 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.435669541 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.438604113 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.440870476 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.440806651 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.438981415 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.437681141 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.438718124 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.444769999 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.438537469 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.44032093 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.442861229 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.440128684 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.441054141 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.441084889 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.441510151 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.439260261 seconds)
  done (took 38.786494835 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.460074182 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.738334305 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.938618381 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.467157889 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.459241076 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.464012755 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.558936468 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.459744609 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.46356748 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.464708422 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.636687878 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.466600094 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.499908837 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.966556713 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.464567826 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.46377412 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.463304884 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.463205705 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.752711422 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.470335554 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.57869665 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.462799959 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.561290617 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.472082044 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.48434686 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.463180353 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.465238917 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.068070095 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.480066317 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.638782215 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.410177043 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.553258772 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.029955109 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.968408949 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.416739019 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.466365593 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.463841614 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.644232494 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.466133393 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.465449184 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.557751765 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.465050529 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.948919275 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.173037638 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.474651291 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.464536568 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.094076068 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.662327237 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.772211341 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.472710494 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.985968564 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.469522653 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.465540509 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.464846495 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.775441233 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.475088486 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.464165979 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.145355567 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.490851525 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.563487612 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.465722933 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.464333093 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.760063427 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.466426146 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.753537782 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.468028789 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.474173858 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.488184696 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.955874836 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.46879746 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.212996769 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.486655967 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.466882291 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.64327499 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.754912862 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.135590152 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.487194666 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.763323067 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.040713395 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.577689741 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.470200196 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.060102941 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.583102118 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.471376746 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.469856024 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.467784948 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.467017231 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.515507921 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.560162407 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.145058353 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.220523056 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.16978056 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.585529831 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.475913324 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.465067621 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.144122003 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.489956691 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.471789404 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.951353123 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.215628372 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.486581925 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.473908282 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.212572876 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.489655583 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.56438789 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.47398333 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.957856675 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.469212078 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.516663559 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.466508905 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.476887376 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.495006348 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.564183051 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.47330913 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.469475168 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.19401339 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.67203294 seconds)
  done (took 194.608012473 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.462021925 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.455689767 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.466836727 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.453097443 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.464189269 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.467578893 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.461354142 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.462869206 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.468209991 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.461450784 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.462161381 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.465789914 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.465843855 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.491431566 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.465759521 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.469267159 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.073951467 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.466375191 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.465845303 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.45237317 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.302880364 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.466316813 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.465878642 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.455466047 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.463975938 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.46333655 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.470280912 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.476987904 seconds)
  done (took 155.824977412 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.475185899 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.144669308 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.482353256 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.631801754 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.499698082 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.469676561 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.633578304 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.544601447 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.491030459 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.467493634 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.472180266 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.862129237 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.469027214 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.134630162 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.707092051 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.651330913 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.133854062 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.488640959 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.468707282 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.471406904 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.63587282 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.480677665 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.860451406 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.196466443 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.490730127 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.198242204 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.451555884 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.469744985 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.469195716 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.201130631 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.488578807 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.858739374 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.570718649 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.546067879 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.213640165 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.154191873 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.153196021 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.655640768 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.469341807 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.47019902 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.470386817 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.455997954 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.199384951 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.493300319 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.472573254 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.187412274 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.49597269 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.473322515 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.479712519 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.472806423 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.545998703 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.568187348 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.886491732 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.206977158 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.586412462 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.485050414 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.636585585 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.90799536 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.478592615 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.141824561 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.458682844 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.206527084 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.503019433 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.459556764 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.475438127 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.481461771 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.659281104 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.638404878 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.140453967 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.491056104 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.099119022 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.667322309 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.473045768 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.47188317 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.476132966 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.209964789 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.159225404 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.679755238 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.64140042 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.715664528 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.457147808 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.477755217 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.458793883 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.568999781 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.473468098 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.20888673 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.159557009 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.493227666 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.479721048 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.477910153 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.47716215 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.691354226 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.229402129 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.590206451 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.074880334 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.879182916 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.872557051 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.477511808 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.54854893 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.491096209 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.871513463 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.478089207 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.550818539 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.984034815 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.872166296 seconds)
  done (took 179.194866182 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.761058555 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.826328899 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.576180318 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.651495357 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.163209187 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.113199157 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.941784406 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.639432606 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.60684813 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.768632828 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.777787789 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.581916522 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.728628912 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.574351977 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.31738825 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.5834608 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.591846892 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.64238805 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.650499078 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.55766761 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.210596154 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.809262964 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.704167902 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.515609861 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.577463088 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.367897964 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.105233205 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.027461613 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.680734672 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.929984623 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.056592047 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.68029193 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.596124029 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.300761564 seconds)
  done (took 71.979262828 seconds)
done (took 741.938304176 seconds)
SAVING RESULT...
DONE!
