cset: moving following pidspec: 15402
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.350120485 seconds)
loading group "string"... done (took 0.489714777 seconds)
loading group "linalg"... done (took 8.293641299 seconds)
loading group "parallel"... done (took 0.179335038 seconds)
loading group "find"... done (took 1.32979675 seconds)
loading group "tuple"... done (took 2.020803668 seconds)
loading group "dates"... done (took 1.363432763 seconds)
loading group "micro"... done (took 0.257217258 seconds)
loading group "io"... done (took 0.700602678 seconds)
loading group "scalar"... done (took 42.696655121 seconds)
loading group "sparse"... done (took 12.769545837 seconds)
loading group "broadcast"... done (took 1.138136747 seconds)
loading group "union"... done (took 14.299560714 seconds)
loading group "simd"... done (took 4.881114218 seconds)
loading group "random"... done (took 9.857506392 seconds)
loading group "problem"... done (took 2.008459863 seconds)
loading group "array"... done (took 22.968409895 seconds)
loading group "misc"... done (took 1.475221095 seconds)
loading group "sort"... done (took 3.662810276 seconds)
loading group "collection"... done (took 19.941749606 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.546949943 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.14977743 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.159201501 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.160874795 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.217843767 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.146603143 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.162253388 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.117462461 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.956404505 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.191309193 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.160755189 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.523804755 seconds)
done (took 5.213141653 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.253877822 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.098976588 seconds)
    (2/2) benchmarking "String"...
    done (took 0.111225022 seconds)
  done (took 0.87493412 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.081348062 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.152185139 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.098150382 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.098197926 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.083863515 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.09987302 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.082681497 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.0982784 seconds)
  done (took 1.380759029 seconds)
done (took 3.263266987 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.749188645 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.288536739 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.227472723 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.486925664 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.184470998 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.222146513 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.685243218 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.351157237 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.272946486 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.101900074 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.153602727 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.413373495 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.138561015 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.672258841 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.094214352 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.130242288 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.181601297 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.448947943 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.086575725 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.115181163 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.120134545 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.14519579 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.131604686 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.095083944 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.189949175 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.101126945 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.192531904 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.111804575 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.084130868 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.297003137 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.209775688 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.691711657 seconds)
  done (took 11.075603758 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.12071611 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.143027625 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.103630139 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.162767039 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.144671792 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.089258995 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.106897827 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.086284817 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.130415497 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.186415481 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.140902932 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.150314314 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.099688162 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.089206345 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.128497401 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.253835806 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.128419209 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.112898878 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.106829015 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.11202272 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.12888525 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.120962263 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.117156827 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.115950678 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.171542535 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.212034476 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.116509896 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.130987975 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.101248161 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.120980017 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.149753287 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.150943634 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.100896934 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.08677546 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.181801896 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.130247468 seconds)
  done (took 5.417958846 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.195495995 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.126357685 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.175513949 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.165484255 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.146473309 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.162846359 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119631255 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.256902445 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.134776122 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.185345842 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.152133852 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.118239804 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085277572 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.104493388 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.083328951 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.785304038 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.170525902 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.139966701 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.122674314 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106307597 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.092573292 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.372287532 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.105064777 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.083161465 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102685183 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.06828752 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.166831611 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103791033 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.241679219 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.105468191 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.105037046 seconds)
    (32/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.13471438 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13797011 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.209284503 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.115890937 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.139651674 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100305083 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.082878607 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.182048624 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.108347847 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.100857294 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.111428813 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.139142797 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.139983614 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.102297625 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.098297397 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.216625614 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.097790904 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.102932016 seconds)
    (50/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.130529177 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.9821583 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.183225356 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.096356275 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.099368389 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.342952068 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.102466914 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102354825 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.098605996 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.265985916 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.137565807 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.102819102 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.084466221 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09957617 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.103031697 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.393336259 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.083928137 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.760337719 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.086806738 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.112176145 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102088113 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086316762 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.109460159 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.090960038 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.118748947 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.099943543 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.085334204 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.101217036 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.082906364 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.102917636 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.109341927 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.081074478 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.105240722 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.083923379 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.167135024 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.082458452 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.117284132 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131562277 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.100522085 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.08326485 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133860905 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.104025821 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.085290983 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.141189041 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101628085 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.094086673 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101454694 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.144832782 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.100916177 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.18932935 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.082516151 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.132162237 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.102832957 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131303105 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.114486227 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086616862 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.105862126 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.081891226 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.098062813 seconds)
    (109/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.097947932 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082218283 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165553695 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.088484917 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.101660303 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.097108134 seconds)
  done (took 23.411723697 seconds)
done (took 40.568157346 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.354995674 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.108774952 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.107224583 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.107474342 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.104823859 seconds)
  done (took 1.526281526 seconds)
done (took 2.247255126 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.291055969 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.179661455 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097236117 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.174694015 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.095069625 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.183169621 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.181115725 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.099413424 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.206895413 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.081433266 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.185687932 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08033326 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.096468375 seconds)
  done (took 2.695613564 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.098311538 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.120348213 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086475176 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114267422 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.096456019 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098689959 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.113586821 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104955691 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.114722824 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.105647309 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.079729515 seconds)
  done (took 1.846102628 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097847517 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117374345 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086474225 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113890983 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080022775 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113482443 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.113948736 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103294431 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.114364267 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.105723756 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.08087795 seconds)
  done (took 1.844600392 seconds)
done (took 7.095150658 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.098466707 seconds)
  done (took 0.808385161 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.035537289 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.842736753 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.120771024 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.160551278 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.33517592 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.190389342 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.60142486 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.133139817 seconds)
  done (took 15.355736068 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.152509469 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.089231388 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.106061308 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.088608466 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.107629332 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.104228781 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.087496124 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.104096506 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.104808207 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.089380388 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.10251354 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.105124444 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.087894859 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.105006928 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.088603558 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.107408967 seconds)
  done (took 2.412134423 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.139834781 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.139910482 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.093544571 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.111242553 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.108920452 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.091892534 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.110602134 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.10834501 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.090544837 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.106297226 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.110299393 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.109476974 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.091424982 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.100119862 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.109653967 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.095995176 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.105503951 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.110049531 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.110337579 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.094752224 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.110276366 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.099276456 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.090830064 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.109970266 seconds)
  done (took 3.362225662 seconds)
done (took 22.65545162 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.166576584 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112154755 seconds)
  done (took 1.002065548 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.107749464 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.123420546 seconds)
  done (took 0.958563251 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.114044079 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.098159245 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.139947121 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.118950898 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.098618944 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.08316582 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.135262131 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.09913232 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.083660252 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.099944652 seconds)
  done (took 1.802390526 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.091549789 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.118138063 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.109447577 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.122164315 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.099209216 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.105246134 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.115429985 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.091490617 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.124272537 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.102209711 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.096422018 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.121206966 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.111352064 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.123433901 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.116377496 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.094907506 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.113327853 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.107924716 seconds)
  done (took 2.696434789 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.085324943 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.106606828 seconds)
  done (took 0.929442507 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.090133712 seconds)
    (2/7) benchmarking "second"...
    done (took 0.102521051 seconds)
    (3/7) benchmarking "month"...
    done (took 0.091134859 seconds)
    (4/7) benchmarking "year"...
    done (took 0.107113371 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.102724743 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.086727274 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.102088675 seconds)
  done (took 1.421039076 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.489865595 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.139052071 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.262620709 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.105494216 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.127237082 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.332145582 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.08567745 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.107217406 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.10621771 seconds)
  done (took 2.530204286 seconds)
done (took 12.068664545 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.098366801 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.121260547 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.135354388 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.478707799 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.126220291 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.086030775 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.167236962 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.26877597 seconds)
done (took 2.215558766 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.156963943 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.333653091 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.119336196 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.08372515 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.083922843 seconds)
  done (took 1.358145519 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.083703535 seconds)
    (2/2) benchmarking "read"...
    done (took 0.103219523 seconds)
  done (took 0.922449183 seconds)
done (took 3.180331416 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.118956339 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101159687 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.101241081 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.083790142 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.098478913 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.081702942 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.099340142 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.081519509 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.096233354 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.084546637 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.099254409 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.098128856 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.08473327 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100073698 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081415767 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097446447 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083930719 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.097320742 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082091942 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.09740507 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082063461 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099420446 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.097118433 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.081394008 seconds)
  done (took 2.995778733 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.114782176 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.101158249 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.107152495 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.091655696 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.104667865 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.105439746 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.090567324 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.100032261 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.106781483 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.088093545 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105914094 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.105398966 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.088511931 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.1059733 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104243219 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.090543999 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.108082156 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103400498 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089972319 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.106301017 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.107929034 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086487247 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.106859528 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108701902 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.090264254 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107005989 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.104512687 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.087969796 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107869961 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.106120696 seconds)
  done (took 3.770531808 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.091294141 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.099230792 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.083779244 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.105874645 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.081663685 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.102350114 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.097277439 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.08223214 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.099443101 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.081411287 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.099205022 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.082072989 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.097767125 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.083191277 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.098324623 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.101008424 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.095282374 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.097850377 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.081390948 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.099286364 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.085077206 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.097517809 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.10026455 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.081650517 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.096958355 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.081892162 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.098006724 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.081709113 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.098246282 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.097177205 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.084888386 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.10134799 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.081703532 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.10495583 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.086987624 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.097368914 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.08745074 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.097303643 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.099196925 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.081011842 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.097516394 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.081160725 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.097221273 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.088811094 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.100923406 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.084148091 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.097387598 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.099373356 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.082826139 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.100585862 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.083350108 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.097532236 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.084190039 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.099570786 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.10120856 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.081707543 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.098906503 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.081146528 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.098993986 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.081326178 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.097760783 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.096426977 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.084333373 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.099240515 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.097477037 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.104471087 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.081364815 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.099898128 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.101457584 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.083868183 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.100128518 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.096831966 seconds)
  done (took 7.433388265 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.087118174 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10954544 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084279385 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09988114 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096355257 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.082107748 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.102187713 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083150835 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098976046 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.116236519 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083711767 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.099986314 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099537789 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.086791678 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09907518 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085117619 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.10902843 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097261539 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.082871462 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102792981 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.082993057 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.10200444 seconds)
  done (took 2.838765725 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.222325312 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.107806339 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.145623569 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.126432917 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.118922184 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.100587039 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104374291 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.106877925 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089347319 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104536379 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104100057 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090533546 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.107518805 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103970789 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087676304 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.105928567 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106077148 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.089728898 seconds)
  done (took 2.771650018 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.099147569 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.101732535 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.123841681 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.08517284 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.101958148 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.088934605 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.107083423 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.117289323 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.103953508 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.085535589 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.111152857 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103313327 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.087913648 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100819988 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08810197 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.100461958 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.103150122 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085587425 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.112091072 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107416273 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.092263936 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111663548 seconds)
  done (took 2.968859362 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10181285 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103477288 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.122301124 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088380409 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.099813376 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.086613185 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.108664378 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.100290282 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.09373788 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.102778629 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100793102 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.086351561 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.108281561 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.101211186 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.090769832 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101812632 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.087974725 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.101557442 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103446836 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.083957254 seconds)
  done (took 2.72746098 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.124705127 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103217483 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.211948957 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111814427 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.103563551 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.103235806 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.126522789 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.087026856 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10366726 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.129537957 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.087406399 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.103214472 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.126896224 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.123548197 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.08845175 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125560829 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126520123 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.126214693 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.086974221 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102171054 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.130177858 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102220972 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110776513 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102086969 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.103624046 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.087501023 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102756656 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.123510621 seconds)
  done (took 3.919726062 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085431599 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101499142 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082711985 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.098819772 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.082159414 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.098522316 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.08277052 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.098241081 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.085089653 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098290336 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.101068713 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.085630974 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.101111123 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.084412584 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.101770753 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.085434141 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103565224 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.083161638 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098038382 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098080668 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.084677054 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101760381 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.084806254 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.099074972 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08240706 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.101029489 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082936833 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098303347 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101061707 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.082221785 seconds)
  done (took 3.528756454 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.095911114 seconds)
    (2/2) benchmarking "in"...
    done (took 0.109122375 seconds)
  done (took 0.963587303 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.082756309 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.118734847 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.082763523 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.105387733 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.107974796 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.086561075 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110958482 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.108604972 seconds)
  done (took 1.560088597 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.104019412 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.12058634 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.091668875 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.12029213 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.116457167 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.118538402 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.164890545 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.091390455 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.108016319 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083957827 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.118764147 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.100824543 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.091417604 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102157947 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.091958783 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.108284755 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.102015643 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.101897346 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.10878705 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.085300533 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103673109 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113908802 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088106028 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.099119503 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.103595603 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.096506961 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.112836694 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.087432912 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104845959 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.111990338 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.091278276 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.095548144 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.102053986 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.090921286 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.102900125 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.099397638 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114526292 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.105263704 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.09464267 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107425813 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.129655061 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.084332624 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.107649776 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.107691426 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096295686 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.107205556 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.092401162 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.100791898 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.099940885 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.08761135 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.100896853 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086237522 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.096285633 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109847491 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.090562455 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11662226 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.087956794 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.102385811 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.104943321 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.089559466 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.108441387 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.087710621 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105964365 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.102182071 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093385344 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.107058449 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109868067 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.084196897 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.096614519 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.087049522 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.111735039 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.125878751 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.094825152 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.10739626 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108583375 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.087593761 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106174133 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.091679784 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110448883 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.111096952 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.090732655 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.124358115 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.10997017 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085803897 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.104960085 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.116170276 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.084406602 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.105500244 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.083576 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117707959 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.100745831 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.087336111 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.099812829 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.095286845 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.105954327 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.102724762 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.082672095 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109548123 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.080069619 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.107518808 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107819465 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086541787 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.111670376 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.11327293 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.096384338 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.110017355 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.112505404 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086418388 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.105557775 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.082874445 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108498065 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.105437068 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092704933 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.096630293 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089619614 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.104159529 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.107913482 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.094425639 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.10055862 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.090333807 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110987179 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.109974966 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.084841178 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.099506318 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.088971729 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.107420313 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.110902335 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092809156 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.101654434 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.084570895 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.100966805 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.106984039 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.090285361 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.10707998 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.112711487 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090786324 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.096892203 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.086706246 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.11240879 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.111442736 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.086193114 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.103544424 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.107896993 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.087112381 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.10143711 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.092303481 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.105352236 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.085454171 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.108129193 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.105148224 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.084657561 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111735206 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.105453871 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.084866349 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.106757137 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.096053567 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.105312641 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.107919767 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085253861 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.110143665 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.091770564 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.101841933 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102402907 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.08468914 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.112970862 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.088944769 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.100939018 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.100440803 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.09893258 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.099933958 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.090140871 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.101609505 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.104720666 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.092676513 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.103637045 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.086159093 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.104914031 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.134248781 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.09911637 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108030333 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.109685645 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.095969599 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.106493591 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.104349481 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.090135574 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10864446 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.091613585 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.110656494 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.108314527 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.096821183 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.106017314 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.082083685 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109190165 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11193265 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.085062592 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.103521108 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.085720187 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.106328945 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.110399597 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.090562487 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.108416388 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101614812 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086701886 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.112425579 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.089216381 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.105871098 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.102370363 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.091903553 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.102601213 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.115020436 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.091837297 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.113446799 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106925292 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.084704102 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.111974472 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085325229 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.109683455 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.100963757 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.083559187 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.101775178 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.092111724 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.102433055 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.089282457 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.097185081 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.11098549 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.09507349 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.103440245 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.085686056 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.106939458 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112289471 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.088678828 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106780454 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.089557949 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.108637401 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.117742232 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.085249869 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.106001147 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.11328953 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.090763975 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.098409941 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.092771062 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.102275283 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.10219936 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.085414564 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.101201798 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090861798 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.119575149 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.108721017 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.080743537 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.105911973 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.102095262 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.08526262 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.102297015 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.094161318 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.107578219 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.106069886 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096722016 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.109901859 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.092787304 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108363451 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.107556532 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.091905269 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.110518871 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10724607 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.092282869 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.105433366 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.086771227 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.107173667 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.085234948 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.106088354 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.105287068 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.091009604 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.103523022 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091904039 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.105278582 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102999048 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.089856697 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.108465223 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088726573 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.104502286 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.102818302 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090391376 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103869675 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.086915251 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.106984475 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.102211185 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094422308 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.107732811 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095216866 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.102881426 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.100519328 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.093622066 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.10620289 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.114347544 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.091567323 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.109748864 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.088677211 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.107465204 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.106469017 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096632097 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.102026817 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.096458123 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109238509 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104441917 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.089633919 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.103950592 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.089445678 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.102817032 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.10549953 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.092489711 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.103592968 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.086239637 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.108617361 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.106610226 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.087032675 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10519365 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.092557378 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.103932391 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.105767812 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.080930068 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.103392343 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.086252736 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.109209285 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111851239 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.09278341 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.107279157 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.085513755 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.111201084 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.10320715 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.083630319 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.120192079 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.119255937 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.091801818 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113218625 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.08577895 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.105429449 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115452442 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.080908914 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.102746471 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.087760813 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.101953578 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111944441 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.092594009 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.11235283 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.08801534 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.10359827 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.101747868 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.092872463 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.103406191 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.090240597 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.10507845 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10673365 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.089178368 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103127519 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.092096444 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.107178948 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.093237069 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111852543 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.103205599 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.088937512 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.108989123 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.100560856 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.085443118 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.103768584 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.089583243 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.109805926 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.085372634 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.101763215 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.108913526 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.088498229 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.106389228 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.088146045 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.1061683 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111603958 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086868173 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.107238707 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.096901116 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.099012673 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.10744148 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.0875498 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.109122034 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.085805691 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.10871554 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107524273 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.093933525 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.111746278 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.09132787 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106182885 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10501401 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.08887352 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.108381736 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.091007635 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.109346133 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.103236073 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.092661989 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11293871 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.088206872 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.106842691 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103752132 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.08714798 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.109571517 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.092000521 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.106638232 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.11924355 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.08988228 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.105821144 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.111142131 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.091781724 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108320154 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.093037077 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.10510492 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111172707 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.086647785 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.113661056 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.104518301 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.09214753 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.105996899 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.084289343 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104277284 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.087256916 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103878724 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.109023511 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.092664035 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.10377438 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.086285229 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.105182151 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.106711275 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.096693823 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.1126959 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.106676336 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091979121 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.102941692 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.085986896 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.110531935 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.085176747 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.106207818 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.107276529 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093194187 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.107804448 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.087570015 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.104313019 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.112513325 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094017853 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.110373753 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.101672577 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.091888142 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.110339491 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.090014353 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.106193557 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.104377695 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089083112 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.110448914 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.088942824 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.104284435 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113616371 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.091136995 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.111560536 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.089597394 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.104856982 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.104977827 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.085602723 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.110718793 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.088955959 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.11181614 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.10667978 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08768397 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115359322 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.086522165 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.104866804 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.114977616 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087041169 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.111354598 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.104195452 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.089056867 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110951984 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.092901494 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.102772852 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.104352402 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.084881692 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.10699674 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.087009637 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.103191393 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097555468 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.113226295 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.107501772 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087201827 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104278738 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.086724961 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.103631046 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.103927847 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.093687348 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.107114881 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.097059217 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.103776412 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.10418667 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.085421575 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105990795 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090245194 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.108454481 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.102178856 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.086031735 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.103174567 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.089831466 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.113460908 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103859987 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.091973358 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108614314 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.090371433 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.105721701 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.114550578 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.084470039 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.109973713 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09830647 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.11055978 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105984079 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.093460338 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113530658 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.111006899 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.086543131 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.110745031 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.090019245 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.106048357 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.111281943 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.089707878 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121038588 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108017466 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.08650968 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.104463221 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.090376781 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.104825703 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.095124539 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110887882 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.111378237 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.092464237 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.108440331 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.120515605 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090931985 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111676654 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.107548376 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.090057796 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.104951201 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087647583 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.104331456 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.085986423 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.106961051 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.112106787 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.093333123 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.119381211 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.104963247 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097767107 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.114237179 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.11077905 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.083750696 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.105666296 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.087004076 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.104657168 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.092661709 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.10457494 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.104102349 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.085327721 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.104861907 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.088892856 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111659598 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.108559049 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.093774511 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.106299121 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.08158644 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.107875749 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.09100746 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106210435 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.102986302 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.091808962 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.111744413 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.093824548 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.116764577 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.10611622 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.090519954 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.107876538 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088418745 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.104266674 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.111831276 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086975948 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.108770104 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.087750679 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.107184718 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.11171197 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091020225 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.118360173 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.109222747 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.090592203 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.119330668 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.095598991 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.103686469 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.103273284 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.093872434 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.107321979 seconds)
  done (took 60.78102998 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.153650322 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092534404 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.102187439 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083883899 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12048147 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106859189 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083845013 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106789556 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106524915 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090207153 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.102007718 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083292816 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115700782 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.130998907 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123177688 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111406867 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082949764 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.106442662 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083515836 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105978691 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.11855827 seconds)
  done (took 3.020433727 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.111741513 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.120451103 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.119322848 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.125243882 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.112614165 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.102234273 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.119208486 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.121155959 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.124265611 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11570222 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.105233293 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.12086188 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.115436279 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.114660229 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096251698 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117460619 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.12388498 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.113446841 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.101998166 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.118865891 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.11866108 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.120317801 seconds)
  done (took 3.351275566 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.097570061 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.109812893 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.091597986 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.101530158 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.087604209 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.101764272 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.116382504 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.08525817 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.11100615 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.08724593 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.105239059 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.086229973 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.111206 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.101696132 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.0869685 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.104086239 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.160399544 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.111621276 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.091030956 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.108728533 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.086136151 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.10952606 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.104880183 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.087054468 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.105829046 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.100672207 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.108353942 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.088504212 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.106629518 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.10549368 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.091743952 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.104840314 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.089347392 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.107902529 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.086251233 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.105645615 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.106506555 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.092030497 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.105124906 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.088078512 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.108389855 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.086999277 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.112162057 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.10864873 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.08907847 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.104574162 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.090466799 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.107063172 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.083060005 seconds)
  done (took 5.742898309 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.124104967 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.160445686 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.090772483 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.131304647 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.1264393 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.121761604 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.112519133 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.149953682 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.086414609 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.110341448 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.129105548 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.124942903 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.093236093 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.116678462 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.114993389 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.091900642 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.11289963 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.106377566 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.117262039 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.08846314 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.116094223 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.115318185 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.106679458 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.123249817 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.115555075 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.109971401 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.088114145 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.117172799 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.122899981 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.117382722 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.097750686 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.119361636 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.127275169 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.110086763 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.088057795 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.113754357 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.128618699 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.092626367 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.116347034 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.106265739 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.094595766 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.116976172 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.114803592 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.128268142 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.092799175 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.114096336 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.110855483 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.085854414 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.123736522 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.114081249 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.120349028 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.106224717 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.116190667 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.11171025 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.117537705 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.108236161 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.111746433 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.110057019 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.096599418 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.12315 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.105850148 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.115564749 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.104490245 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.112574967 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.120593728 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.126158106 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.094180014 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.116477347 seconds)
  done (took 8.633425369 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.120595405 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.119318296 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.130580254 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.13184861 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.119580588 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.101328348 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.120339064 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.119184056 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.119147019 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.10680711 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.118416877 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.167465138 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.113837856 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.125084292 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.101320913 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.119732612 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.119941107 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.118998928 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099892003 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119192812 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.120584353 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.130112575 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.120219235 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.130308938 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.129630726 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.093612775 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.119672014 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.119189378 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.131011307 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.100757101 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.1307081 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.120147409 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.120077533 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.131053084 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.1292775 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.099797621 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.110256527 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119015107 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.101108528 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.121384553 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.114000075 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.130212819 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.099438616 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.113387511 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120893706 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.119655502 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.130219667 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.112637865 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.122712148 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.126871825 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.119312035 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.131731251 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120155195 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.101287929 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.130943942 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.136420391 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.131836215 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.130398333 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119794243 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.130774442 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.130429723 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.135437137 seconds)
  done (took 8.300644869 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.14120738 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.102946325 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.130309668 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.104360154 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.086432299 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.116810913 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.106422668 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.086791993 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.122699327 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.122729108 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.125431658 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097323643 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.121723185 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.126230097 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.116932581 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.120668867 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.097373153 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.117102333 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.123433128 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.116469098 seconds)
  done (took 3.104853752 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.097549171 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.129702945 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.109298176 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.097419362 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.113396433 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.115746 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.09139431 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113616842 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10906963 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093360358 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.121166671 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.122994236 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090206546 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.116835938 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.122399996 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.117355246 seconds)
  done (took 2.587003055 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.102569768 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.132054753 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.12890924 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.109926005 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.08775912 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.106547661 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.092233981 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.104633528 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.104860061 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.105060968 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.110077866 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.114780503 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.091897665 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.107283585 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.086214765 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.115063755 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.105209805 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.087256343 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.111904359 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.129961438 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.100668576 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.108995538 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.112942669 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.090689202 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.109038893 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.115120784 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.090287191 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.108341801 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.088603885 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.112913261 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.109178857 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.097657163 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.106642311 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.107788225 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.087331719 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.106641292 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.092659053 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.112271531 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.115759562 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.092012482 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.107868928 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.109482724 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.092807334 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.110102045 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.085495016 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.112944046 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.104828028 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.095874854 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.107212704 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.109473235 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.091593139 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.112848887 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.090183881 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.121667577 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.11397137 seconds)
  done (took 6.596446662 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.105334485 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.11355711 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084542607 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.107317953 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.112836304 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.091318352 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.113300361 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091882022 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.110515703 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.106801113 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091759238 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.114374762 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111524092 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.094759335 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112827137 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.093482853 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.104651138 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110549758 seconds)
  done (took 2.705175984 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.095328848 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.109369053 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.097118624 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.110390561 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.110172411 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.09171596 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10543769 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.087833925 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108173976 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.089642225 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109888405 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.112085854 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088353266 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.111836184 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090136651 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109804094 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.111310381 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088413768 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.109471625 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08471153 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.111470824 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108241209 seconds)
  done (took 3.07160647 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.125846464 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.129577204 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.117814547 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.221999082 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.107618156 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.137269557 seconds)
  done (took 1.673290389 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114276753 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.148956859 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.11098366 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09336111 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123786883 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11515733 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095614536 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115137257 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126813251 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128673493 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115880129 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107488261 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126777333 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126935833 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1224956 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122482787 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096495255 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115448339 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110815295 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135534263 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095340298 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126101747 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115482311 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115095515 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095471894 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126555452 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128873172 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128120154 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116068207 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12738664 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103301572 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115368028 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126453847 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12986815 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092843064 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126779354 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116493964 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134866258 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122775709 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126408897 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.093096275 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123637534 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127968082 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122747603 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107131334 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116071 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122609421 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11500339 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095578674 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143087734 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122919982 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125594724 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122646861 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127541375 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107551138 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.162045619 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129082798 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10689173 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124050923 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128996178 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127495608 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123275602 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127624387 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127971972 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103791664 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12678364 seconds)
  done (took 8.726903013 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132247669 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.111039346 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11621136 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129445479 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126738421 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096115209 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115160438 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116147892 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095775431 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11205133 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.15958165 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117005241 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127038386 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12723424 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096039255 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116022269 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116897303 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127062636 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09166176 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.143156134 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115951007 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126560341 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126860569 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126208457 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128386471 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102846347 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115785347 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116547431 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095930588 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116466066 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122532713 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1159404 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127017962 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.091129211 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126896185 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1157008 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09628344 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121826446 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116746111 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123228566 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127005511 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135909528 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095885905 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115906162 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129119092 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116483938 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096787634 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112423878 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116420338 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091509541 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129374419 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129290868 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128997991 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127158871 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11657377 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095613136 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116116125 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11626222 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095823885 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124158054 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126287122 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116580561 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143932259 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116516372 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095546448 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127045729 seconds)
  done (took 8.589554591 seconds)
done (took 163.095612907 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.108696093 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.144571501 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.123679572 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.151698624 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.111438124 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.123361204 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.142744989 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.125580639 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.089531599 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.109938945 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.089804698 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.112955556 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.15417436 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.109836444 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.110481209 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.092677867 seconds)
  done (took 2.745957571 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.206531816 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.277119306 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.128772673 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.087954083 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.116839688 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.090244064 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.109741805 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.117637053 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.090659621 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.10907309 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.090054441 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.110772715 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.089773609 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.111198475 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.112107922 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.089662817 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.109345522 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.089529343 seconds)
  done (took 2.98373171 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.118467338 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.159660324 seconds)
  done (took 1.129444103 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.125668621 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.188920937 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.306901764 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.158784466 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.145584316 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.132868397 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.1595527 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.115742664 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.23185898 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.129760278 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.108330892 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.122217796 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.146745135 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.120341243 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.098403019 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.123165106 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.149187367 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.118241716 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.099084642 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.122981662 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.143416995 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.088846588 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.120957454 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.11792419 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.193904689 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.104777241 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.109371347 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.109456047 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.101555065 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.119633555 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.116295182 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.131444481 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.103272979 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.193071416 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.107420403 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.187047724 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.123568188 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.096120357 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.120011219 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.116418398 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.104136419 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.124398834 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.130921809 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.1021916 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.111454514 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.123008648 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.089252094 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.110139801 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.117536123 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.103162529 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.11910023 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.118146731 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.165599091 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.123586672 seconds)
  done (took 7.897960149 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.834419787 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.157318665 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.117228083 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.936470861 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.1198219 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.130190246 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.824699692 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.138433801 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.244829203 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.81164715 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.136958351 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.126338981 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.24315569 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.247689388 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.970756611 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.33119143 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.697324533 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.129902357 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.145675849 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.163494417 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124171565 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.143024759 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.114114464 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.461574675 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.097651703 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.116173047 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.122206571 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.102960557 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.192962388 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.094861493 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.119322185 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.1908295 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.283240142 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.198051335 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.11989251 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.115368996 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.093741139 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.202784382 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.281155809 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.231446567 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.186705236 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090075927 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.114784589 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126459782 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.113897684 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112596224 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.177224209 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.208103216 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.184051308 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.119278416 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.126479172 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.102264938 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.12519226 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.176404425 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.127120185 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.338116443 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.333431582 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.116510668 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124342548 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.110266389 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.276337611 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128933006 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.240929107 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.142035191 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.227676357 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.093639927 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.796505425 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.181763656 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.114628651 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122344347 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.100555395 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12050129 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.124791922 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.177661734 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.417108481 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128611835 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.097588312 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114778982 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.24196072 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.094172295 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114633398 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.173405614 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.12013596 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.124519824 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.107319251 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.126705854 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.182724302 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.268854847 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.128080317 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.101756806 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.119841376 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127950672 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.098771259 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.244665843 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.237307587 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.175388579 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.245888768 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.104220058 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.198823429 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.178906298 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.126115311 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.183400945 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.122714761 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.130864988 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10496494 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.232131423 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.175983635 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.108099793 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.119701324 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.122953132 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.156313186 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.096640263 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.122485635 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.183107019 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.493792297 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.180922343 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.111798003 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.119598511 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103002807 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.194723041 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101597976 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.27772079 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126065191 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.180251698 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.122179054 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.112847643 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.101297522 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.196729307 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.105980621 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124935717 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127160552 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123320237 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.245799945 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.233474601 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.127718935 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.231675851 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.188958825 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.122447605 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.205967643 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.102839139 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.198946017 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102488669 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12445959 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120610686 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.786589937 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.105885011 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.123038452 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.120596209 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.196993022 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093815938 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.129691588 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.117283846 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091186468 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.806441571 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.119135951 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.106202723 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.13007521 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122544028 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.123696412 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.100446363 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.119140472 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.174913882 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.244798079 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.125783287 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.123934303 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.094108357 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.192503388 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.099136958 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.115470788 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.116491007 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.095222793 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.124620917 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.097772539 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.12990989 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.201528482 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.173375062 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.23705294 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.568647117 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.094436777 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.115989771 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.246626866 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116224564 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.302600836 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102143154 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.242982368 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.197486314 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.105848256 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.331927532 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.199091909 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.198145126 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.097863568 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.206725955 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.092045346 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.122575353 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.197190521 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093010923 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122991712 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.172870732 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.130103974 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.128071943 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.973860695 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093455368 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.25934502 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.091355825 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.204550625 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.099352342 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.126170734 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.310944596 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.116416531 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.110583521 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.199449587 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098141016 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.116309631 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.883061391 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.094907997 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.126634584 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.123686561 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.237872612 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.174122382 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.123734679 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.101184667 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.125579166 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.176248859 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.242313574 seconds)
  done (took 46.042415112 seconds)
done (took 61.64702621 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.285042778 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.215877504 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.258939396 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.170769204 seconds)
  done (took 1.888003797 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.18252676 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.151280172 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.15070432 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.089042948 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.157945952 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.110044601 seconds)
  done (took 1.717187748 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.373108852 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.282798264 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.243404542 seconds)
  done (took 1.777994848 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.254865231 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.276014358 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.333015681 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.424154085 seconds)
  done (took 2.271403358 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.241190722 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.145740422 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.131096826 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.1277507 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.225998614 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.267867001 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.160666627 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.217527905 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.142505999 seconds)
  done (took 2.585486506 seconds)
done (took 11.122636277 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.191120429 seconds)
    (2/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.24367287 seconds)
    (3/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.1960348 seconds)
    (4/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.223366643 seconds)
    (5/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.230211311 seconds)
    (6/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.164143493 seconds)
    (7/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.134694862 seconds)
    (8/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.273841302 seconds)
    (9/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.232505616 seconds)
    (10/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.104539744 seconds)
    (11/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.121341117 seconds)
    (12/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.130187892 seconds)
    (13/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.21329359 seconds)
    (14/286) benchmarking ("sort", Float32, true)...
    done (took 0.244395743 seconds)
    (15/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.119265438 seconds)
    (16/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.095829507 seconds)
    (17/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.096653997 seconds)
    (18/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.185733005 seconds)
    (19/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.092163418 seconds)
    (20/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.175032118 seconds)
    (21/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.201492615 seconds)
    (22/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.208766158 seconds)
    (23/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.100253864 seconds)
    (24/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.218110346 seconds)
    (25/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.118881004 seconds)
    (26/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.127418102 seconds)
    (27/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.21815924 seconds)
    (28/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.163581496 seconds)
    (29/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.17094273 seconds)
    (30/286) benchmarking ("sort", Int64, true)...
    done (took 0.23771641 seconds)
    (31/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.224875855 seconds)
    (32/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.123067397 seconds)
    (33/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.200693196 seconds)
    (34/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.122144756 seconds)
    (35/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.154285451 seconds)
    (36/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.101166474 seconds)
    (37/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.183528411 seconds)
    (38/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.154543294 seconds)
    (39/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.144636774 seconds)
    (40/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.150624929 seconds)
    (41/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.171372265 seconds)
    (42/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.120591505 seconds)
    (43/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.105478009 seconds)
    (44/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.257812901 seconds)
    (45/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.095676651 seconds)
    (46/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.171617742 seconds)
    (47/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.117775182 seconds)
    (48/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.198720871 seconds)
    (49/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.097836774 seconds)
    (50/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.163498213 seconds)
    (51/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.118752249 seconds)
    (52/286) benchmarking ("sort", Float64, false)...
    done (took 0.181907671 seconds)
    (53/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.108778839 seconds)
    (54/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.138663388 seconds)
    (55/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.144867914 seconds)
    (56/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.096710653 seconds)
    (57/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.192154 seconds)
    (58/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.081880353 seconds)
    (59/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.123995742 seconds)
    (60/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.204869139 seconds)
    (61/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.115505146 seconds)
    (62/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.119429267 seconds)
    (63/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.121597788 seconds)
    (64/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.124154783 seconds)
    (65/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.103116458 seconds)
    (66/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.212322287 seconds)
    (67/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.139570893 seconds)
    (68/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.249613288 seconds)
    (69/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.069642144 seconds)
    (70/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.107992123 seconds)
    (71/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.069801003 seconds)
    (72/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.129686508 seconds)
    (73/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.119564527 seconds)
    (74/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.186537801 seconds)
    (75/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.17626465 seconds)
    (76/286) benchmarking ("sort", BigInt, false)...
    done (took 0.231395527 seconds)
    (77/286) benchmarking ("sort", Int64, false)...
    done (took 0.113526686 seconds)
    (78/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.105844045 seconds)
    (79/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.194703582 seconds)
    (80/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.18563788 seconds)
    (81/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.121875296 seconds)
    (82/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.071956617 seconds)
    (83/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.070205993 seconds)
    (84/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.129980701 seconds)
    (85/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.112879012 seconds)
    (86/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.11768563 seconds)
    (87/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.146665886 seconds)
    (88/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.07246096 seconds)
    (89/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.119066102 seconds)
    (90/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.10079649 seconds)
    (91/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.123195196 seconds)
    (92/286) benchmarking ("sort", Int8, true)...
    done (took 0.235917318 seconds)
    (93/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.124213872 seconds)
    (94/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.133833061 seconds)
    (95/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.116052666 seconds)
    (96/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.12206669 seconds)
    (97/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.08948351 seconds)
    (98/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.139956188 seconds)
    (99/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.069224868 seconds)
    (100/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.157638971 seconds)
    (101/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.098906483 seconds)
    (102/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.120764683 seconds)
    (103/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.124166564 seconds)
    (104/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.243777433 seconds)
    (105/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.09099197 seconds)
    (106/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.114861215 seconds)
    (107/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.089225923 seconds)
    (108/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.125362894 seconds)
    (109/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.103810245 seconds)
    (110/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.120721861 seconds)
    (111/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.113858017 seconds)
    (112/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.097511549 seconds)
    (113/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.101355899 seconds)
    (114/286) benchmarking ("sort", Float64, true)...
    done (took 0.245667586 seconds)
    (115/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.094861424 seconds)
    (116/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.125043478 seconds)
    (117/286) benchmarking ("sort", Bool, false)...
    done (took 0.207156578 seconds)
    (118/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.122895333 seconds)
    (119/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.073237498 seconds)
    (120/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.074372325 seconds)
    (121/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.121268646 seconds)
    (122/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.171971392 seconds)
    (123/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.070160191 seconds)
    (124/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.120974986 seconds)
    (125/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.079191363 seconds)
    (126/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.137727609 seconds)
    (127/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.139710181 seconds)
    (128/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.133195157 seconds)
    (129/286) benchmarking ("sort", Int8, false)...
    done (took 0.225376233 seconds)
    (130/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.089979828 seconds)
    (131/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.093753301 seconds)
    (132/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.089149886 seconds)
    (133/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.140647262 seconds)
    (134/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.072689495 seconds)
    (135/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.142979925 seconds)
    (136/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.123068717 seconds)
    (137/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.125743288 seconds)
    (138/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.195318475 seconds)
    (139/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.197503532 seconds)
    (140/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.090553271 seconds)
    (141/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.11490068 seconds)
    (142/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.070731712 seconds)
    (143/286) benchmarking ("sort", Float32, false)...
    done (took 0.185436439 seconds)
    (144/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.132048797 seconds)
    (145/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.091680831 seconds)
    (146/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.112240348 seconds)
    (147/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.089971751 seconds)
    (148/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.120859074 seconds)
    (149/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.199796 seconds)
    (150/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.17489733 seconds)
    (151/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.089815106 seconds)
    (152/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.144737456 seconds)
    (153/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.11756634 seconds)
    (154/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.151617219 seconds)
    (155/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.119502761 seconds)
    (156/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.072622738 seconds)
    (157/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.124166738 seconds)
    (158/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.099760449 seconds)
    (159/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.096020073 seconds)
    (160/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.099526578 seconds)
    (161/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.172998997 seconds)
    (162/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.07019482 seconds)
    (163/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.096246572 seconds)
    (164/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.17679109 seconds)
    (165/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.069624979 seconds)
    (166/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.124098557 seconds)
    (167/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.150000826 seconds)
    (168/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.118431044 seconds)
    (169/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.175871129 seconds)
    (170/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.07007051 seconds)
    (171/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.091844166 seconds)
    (172/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.120074265 seconds)
    (173/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.071214247 seconds)
    (174/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.115419479 seconds)
    (175/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.069798773 seconds)
    (176/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.124084459 seconds)
    (177/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.297492258 seconds)
    (178/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.185469929 seconds)
    (179/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.120154553 seconds)
    (180/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.090838721 seconds)
    (181/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.114658971 seconds)
    (182/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.099883 seconds)
    (183/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.097644993 seconds)
    (184/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.070993134 seconds)
    (185/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.16472183 seconds)
    (186/286) benchmarking ("sort", Bool, true)...
    done (took 0.235523353 seconds)
    (187/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.113535254 seconds)
    (188/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.091952409 seconds)
    (189/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.09472137 seconds)
    (190/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.089550877 seconds)
    (191/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.11572955 seconds)
    (192/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.11954877 seconds)
    (193/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.115815108 seconds)
    (194/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.151459907 seconds)
    (195/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.089650897 seconds)
    (196/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.122366372 seconds)
    (197/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.079867391 seconds)
    (198/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.116931262 seconds)
    (199/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.099715893 seconds)
    (200/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.126539959 seconds)
    (201/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.097373512 seconds)
    (202/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.092620296 seconds)
    (203/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.090593628 seconds)
    (204/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.116392063 seconds)
    (205/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.124108797 seconds)
    (206/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.089922708 seconds)
    (207/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.072281778 seconds)
    (208/286) benchmarking ("sort", BigInt, true)...
    done (took 0.270640738 seconds)
    (209/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.088803018 seconds)
    (210/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.071729384 seconds)
    (211/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.149234517 seconds)
    (212/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.121740936 seconds)
    (213/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.06972496 seconds)
    (214/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.120802264 seconds)
    (215/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.072641344 seconds)
    (216/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.070414945 seconds)
    (217/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.104978821 seconds)
    (218/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.090069864 seconds)
    (219/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.122855823 seconds)
    (220/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.090508208 seconds)
    (221/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.191168553 seconds)
    (222/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.093941648 seconds)
    (223/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.06941055 seconds)
    (224/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.115106019 seconds)
    (225/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.092714714 seconds)
    (226/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.09630203 seconds)
    (227/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.069750656 seconds)
    (228/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.173121215 seconds)
    (229/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.088792251 seconds)
    (230/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.151266167 seconds)
    (231/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.090849664 seconds)
    (232/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.147250598 seconds)
    (233/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.070700711 seconds)
    (234/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.095450344 seconds)
    (235/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.114973583 seconds)
    (236/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.112198697 seconds)
    (237/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.080357104 seconds)
    (238/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.148177977 seconds)
    (239/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.069863359 seconds)
    (240/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.142723062 seconds)
    (241/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.141694114 seconds)
    (242/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.073889069 seconds)
    (243/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.120872445 seconds)
    (244/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.097615242 seconds)
    (245/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.11367374 seconds)
    (246/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.080119109 seconds)
    (247/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.140970294 seconds)
    (248/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.080695531 seconds)
    (249/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.09300224 seconds)
    (250/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.099741886 seconds)
    (251/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.101605727 seconds)
    (252/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.070335041 seconds)
    (253/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.126102544 seconds)
    (254/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.104402037 seconds)
    (255/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.092700785 seconds)
    (256/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.091352916 seconds)
    (257/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.11499516 seconds)
    (258/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.071714177 seconds)
    (259/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.093993271 seconds)
    (260/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.090757112 seconds)
    (261/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.093299624 seconds)
    (262/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.070554877 seconds)
    (263/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.168994441 seconds)
    (264/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.072595681 seconds)
    (265/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.114240619 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.098846593 seconds)
    (267/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.103042808 seconds)
    (268/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.089661801 seconds)
    (269/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.095050632 seconds)
    (270/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.143100435 seconds)
    (271/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.112562604 seconds)
    (272/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.132844316 seconds)
    (273/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.098948148 seconds)
    (274/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.127407969 seconds)
    (275/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.098615871 seconds)
    (276/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.095930699 seconds)
    (277/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.091306969 seconds)
    (278/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.119231889 seconds)
    (279/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.112964966 seconds)
    (280/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.097254468 seconds)
    (281/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.127882346 seconds)
    (282/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.07808453 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.119922187 seconds)
    (284/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.099612603 seconds)
    (285/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.121420549 seconds)
    (286/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.089945437 seconds)
  done (took 37.615772758 seconds)
done (took 38.502639339 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.106687913 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.156038535 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.125783237 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.119411934 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.127973419 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.117944435 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.098337959 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.126655036 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.104769729 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.128150451 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.126205547 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.07149182 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.124648195 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.101648792 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.123601217 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.145369155 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.10364392 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.121378433 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.122844783 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.089708419 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.122982707 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.089895696 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.114889903 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.072380808 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.12515204 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.099121694 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.119104684 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.124920009 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.090108453 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.114023883 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.095806519 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.121921016 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.090341092 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.126693384 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.12040829 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.098189699 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.124928861 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.100822261 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.114477835 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.113804397 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.098740958 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.113562846 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.09726822 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.121640166 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.097053588 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.118315928 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.122818812 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.104221733 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.145801178 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.119836896 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.099094186 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.124598274 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.10037508 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.121453767 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.094601323 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.122419947 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.119159779 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.122710982 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.123618935 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.120119424 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.09843118 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.122939543 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.095939923 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.122792126 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.123871293 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.101278032 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.126087686 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.096371539 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.124820784 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.119448308 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.090297732 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.122616349 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.094088764 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.113961353 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.099825006 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.125696892 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.090545614 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.119212215 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.122452898 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.096097234 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.113754561 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093005443 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.115957054 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.097467431 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116346974 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.072754279 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.118211495 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.09716076 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.11353666 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.123813949 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.096771062 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.120769822 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.093584938 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.126532496 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.091481219 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.119268977 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.114873091 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.091231212 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.116600787 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.094969464 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.114196988 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094324588 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.123607486 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.093567549 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.119615715 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.127429378 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.090581431 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.121411916 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.090291939 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.113667088 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.129503536 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.101593324 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.114556447 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.097219798 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.114234299 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.098440971 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.113557475 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.091503101 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.113682658 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.114622129 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.096677001 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.11419558 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094191481 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.122638617 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.106146057 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.114457786 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.095777949 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.116972443 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.114944948 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.097024787 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.114460137 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.090918156 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.116420967 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.081151249 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117378324 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.091611806 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.122189 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094247183 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.123017259 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.116716779 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.101134973 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.119085841 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.097316661 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.11949588 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.091523603 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.099975838 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096895773 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.116394821 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.093958815 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.11427779 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.117160093 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.090782433 seconds)
done (took 17.656152301 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.091061645 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.189484182 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.160860771 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.150205068 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.13735782 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.091365034 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.126318275 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.147776827 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.093620108 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.148002972 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.139296555 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.136909442 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.1308421 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.114173523 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.115159787 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.095425138 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.117476251 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.108903262 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.153659552 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.136425005 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.171337018 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.114553192 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.127641805 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.139646265 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.1252978 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.142132725 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.092173169 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.119385304 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.095234942 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.131596545 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.135449565 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.094323707 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.115659085 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.114064606 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.131731276 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.125445832 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.090995246 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.12282633 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.091983089 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.114874025 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.146780883 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.138036574 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.097146732 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.120837024 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.094977504 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.12357061 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.093129485 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.124101638 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.127246336 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.095819311 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.130675489 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.163123732 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.119630506 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.108787769 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.113303806 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.126499045 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.108200905 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.123039717 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.092540534 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.123483679 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.115542887 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.094735473 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.131371308 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.146299379 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.096016206 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.131045602 seconds)
  done (took 8.997208037 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.109669877 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.146426811 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.135019821 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.110212907 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.115166865 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.092516822 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.11570543 seconds)
  done (took 1.768490028 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.092265623 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.143339938 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.136171973 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.142009501 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.140617343 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.118699172 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.121693993 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.116542566 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.11224385 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.117859839 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.1418693 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.134503781 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.117662512 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.124092307 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.120817672 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.116573262 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.144337185 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.092229116 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.119897822 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.119636956 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120666209 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135661367 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.094534994 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.116895258 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.110926252 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.116818722 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.165903863 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.097968098 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114150886 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.120158456 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090701305 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.156671695 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.135439518 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.101073772 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116737799 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.112111503 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.134199105 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115101275 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.109048763 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.122824815 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.134614219 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.09347011 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.118879628 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.090775098 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.122052623 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.107598697 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.120723967 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.094178775 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.120222015 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.141685583 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.094225357 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.135018346 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.093050787 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.120470461 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.118610364 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096728925 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.126567436 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.094131669 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.140678832 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114776495 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.113685032 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.137052428 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.136099913 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.113336872 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.119809223 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.11126725 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.135370203 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.120229485 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094303611 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.120494593 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.11285783 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.114205123 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.095769154 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.131139249 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118497534 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.120178253 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.144912773 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.121088639 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.103194534 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.120075353 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.094102044 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.116899406 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.144612588 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096370233 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.118043999 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.097100238 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.12022924 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.11593359 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.091521133 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.121413883 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.091270115 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.118842976 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.097429521 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.118019262 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.096897401 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.136668267 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.118022127 seconds)
  done (took 12.365416293 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.095056093 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.118676749 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.099530964 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.118922074 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.094947367 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.118233303 seconds)
  done (took 1.598981191 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.121725347 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.120929522 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.134081089 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.100719361 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.161053248 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.137094037 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.113536173 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.126464328 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.137422373 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.106996484 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.136790216 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.137685381 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.14381949 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.100136264 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.136624437 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.12431834 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.113971489 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.128843797 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.131077132 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.101710526 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.142249278 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.124945841 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.101243466 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.13964228 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.122289532 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.100465287 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.130632147 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.131523934 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.105886962 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.128018842 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.12506712 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.098470987 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.125854588 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.127362752 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.113700672 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.12508868 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124386633 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.09940559 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.12985293 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.122612321 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.113150052 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.125196605 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.131990071 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.099116394 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.127587508 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.1251483 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.098913754 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.128809032 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.138171775 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.098763957 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.123551623 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.10062236 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.122059561 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.123798469 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.101262846 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.127962465 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.123639669 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.113661939 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.125066786 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.12686512 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.097939993 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.123274795 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.127578121 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.097175679 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.134700513 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.122947774 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.10126711 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.125159304 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.125918097 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.100261528 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.123934584 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.121705912 seconds)
  done (took 9.667591056 seconds)
done (took 35.336494757 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.69656598 seconds)
  done (took 1.649530837 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.850628024 seconds)
  done (took 1.807595714 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.714241872 seconds)
  done (took 17.701635051 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.506484103 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.587642975 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.031460323 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.178899024 seconds)
  done (took 3.260610341 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.945243427 seconds)
  done (took 1.918022951 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.287589529 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.262039076 seconds)
  done (took 1.509990002 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.788047592 seconds)
  done (took 1.753967531 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.46055362 seconds)
  done (took 2.425115995 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.331177111 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.192453076 seconds)
  done (took 1.502295734 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.570432956 seconds)
  done (took 1.544998458 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.211262954 seconds)
  done (took 11.189528627 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.277931328 seconds)
  done (took 1.261863223 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.311246967 seconds)
  done (took 1.286573753 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.475352918 seconds)
  done (took 4.453712532 seconds)
done (took 54.224605502 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.103916687 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.131463844 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.106463735 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.128238329 seconds)
  done (took 1.442512044 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.109450584 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.126264782 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.109135223 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.124026544 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.1359124 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.100896053 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.127726567 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.132674053 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.099341004 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.126213036 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.101006313 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.123872994 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.129124499 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.10225618 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.122317732 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.129002298 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.105240236 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.125939709 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.130481426 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.100968061 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.122774073 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.103512743 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.129810012 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.124255139 seconds)
  done (took 3.824373505 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.103953142 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.123234686 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.100909381 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.122070533 seconds)
  done (took 1.432626487 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.105019419 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.136260961 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.111484442 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.128994887 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.137606433 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.111151354 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.121528611 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.096447362 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.123397534 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.129365615 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.095005886 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.144363611 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.13639419 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.103655177 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.131102284 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.093914507 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.119855711 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.136149883 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.104050783 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.130187906 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.097394869 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.128868651 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.119508996 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.114231009 seconds)
  done (took 3.838866656 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.176616938 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.13080357 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.142918405 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.099411414 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.16622116 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.144793225 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.0919893 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.144504095 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.117235844 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.109880803 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.122629606 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.165575758 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.10720946 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.117454806 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.117103384 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.091704014 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.13222368 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.105993512 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.119859451 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.132007287 seconds)
  done (took 3.525839647 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.102512292 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.120980531 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.091994118 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.12007139 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.103179482 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.125092847 seconds)
  done (took 1.652687802 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.100389128 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.118911334 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.096696923 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.120208021 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.098664352 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.11752252 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.092826387 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.118734395 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.118026138 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.09158897 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.120768453 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.092351453 seconds)
  done (took 2.279223197 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.517914458 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.123248119 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.124866094 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.092739998 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.129177001 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.117817603 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.110728352 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.121881697 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.147285361 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.09271596 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.119448471 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.095818673 seconds)
  done (took 2.788511354 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233876236 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12980394 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.290065415 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.365077418 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202946174 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170645512 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.287449455 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171169564 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.210322371 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161644276 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234161201 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184846754 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159132088 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210535248 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144115278 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.147940278 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19737077 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.273838929 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159042332 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.246512976 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174328235 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171495477 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186785081 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158122087 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143058452 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178390389 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.09991039 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13445905 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192484645 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20909854 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196737036 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169155381 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161540264 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.461812596 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263723037 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19930344 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.291162441 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139922334 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.174017545 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.174761482 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.265466787 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143590369 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21184425 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164169477 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135053984 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208640899 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.347211267 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.184808835 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.150632886 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146803431 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203888541 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228136036 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.200196208 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143096153 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.33034111 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156537077 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.165303209 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19862951 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215563967 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233788595 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198229215 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.124309233 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195254391 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224985325 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192493871 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.160936958 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.187604832 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155208215 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179658077 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.223778065 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181066194 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175703359 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.211580513 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118806025 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171775707 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.201817081 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174866234 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264779159 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191643755 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.124843714 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173194544 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154237946 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112636089 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.19961522 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12930045 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219236505 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14558278 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.167601092 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217053653 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162120744 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164430643 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216909525 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180720739 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151498346 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.087525506 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160984057 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.159895339 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177605298 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142787107 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16215656 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155626862 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.135977818 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175565871 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.102065854 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217246982 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.095033165 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.362125875 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189798816 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.130353696 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167858295 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154120231 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.154639365 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189186781 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204240923 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145701205 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138165605 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216817243 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187085086 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.144661668 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.20795676 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.206890613 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.148595634 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15556726 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207720748 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246801496 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146016886 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207905267 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15334183 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14035001 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.110325033 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216665851 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161615681 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.164329627 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114601465 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.216922013 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207932553 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.129783289 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143402124 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204279557 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138172939 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135978321 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12518257 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152549868 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.139873485 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.145759074 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.151600444 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18124902 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183403027 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15950998 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169427396 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150619441 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246574451 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145952131 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.154461151 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125746482 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.124281283 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.202853128 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2331354 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135526842 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208005052 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.17439678 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235349667 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174230932 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138857511 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181167579 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107998267 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.124354299 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200374144 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.19339011 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164933335 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.200031801 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207421837 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.213582629 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.187783048 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17192446 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181395443 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.171343124 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153674688 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.141490441 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165317988 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161520475 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.127607621 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.118383087 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.139099232 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15353204 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149210543 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139836809 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202741042 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177352311 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.224408496 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165921952 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156051139 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187787862 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.133707004 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178348918 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.409380112 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155588441 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.201750115 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224567833 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193633646 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145115808 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209875736 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.124958339 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129032314 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.122837817 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.198946893 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113670749 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139469894 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169038612 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188587566 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.360445787 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178120328 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242377954 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185283052 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198368265 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.126250104 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.174318194 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184873579 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185054987 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.182958913 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14518832 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.127483875 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184783056 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157041649 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241775963 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172999431 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178728502 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230150022 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.154197415 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110759037 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15311716 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17517945 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15900366 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.18020759 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150535402 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143264274 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.317744348 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.135174772 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167787707 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214113946 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167673143 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182974586 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.155034238 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19340701 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131485119 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167971791 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165311848 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169143415 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.111803432 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.335609687 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225083887 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123411037 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.346028805 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188163026 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13631795 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.319473312 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208571468 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.366420586 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142114529 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160606517 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164658373 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168459177 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.32273095 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182953502 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163751482 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218017992 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134383754 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.139461728 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143324138 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154686629 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158718318 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.109767911 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.153253224 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.210432222 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.113660688 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214681351 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151590235 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161335544 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178717596 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.12858884 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.14922479 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156509584 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248316382 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192426283 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194680272 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.154597116 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.181208792 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236007913 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104239275 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13677154 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.138839831 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182409156 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140980114 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198871018 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.222036303 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208930275 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190534775 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203511848 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116739908 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.124916763 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164452407 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175441977 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238022907 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150988279 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.126497966 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231316343 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.112679863 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136201489 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168607885 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.322212638 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123300841 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218896393 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.082997676 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.291441049 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129139068 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138233009 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16708977 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192226635 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.141821691 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.155833471 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171336184 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156798857 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169050185 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154239859 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.22520608 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218255856 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237115131 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189047094 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.138305011 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164354365 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.323946079 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218183215 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165227536 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.113361477 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192293826 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22812204 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.198629006 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.148075406 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174689954 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174660762 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164775999 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220611258 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115627634 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236970231 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111392907 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230366795 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1590729 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148553614 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181054342 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.19597629 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145340999 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216426081 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190804338 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139956929 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110513719 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164950728 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211243115 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154389185 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.105120323 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212000524 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.102332162 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228418435 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243162547 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140763426 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16013123 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150881654 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140456461 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161139521 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165450479 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142478196 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.14346971 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1981685 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.139816479 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219431663 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210573308 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176002788 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.346458226 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147220691 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.712634868 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.109268536 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227872946 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124350381 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209442621 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154939004 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177963374 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165785684 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172561861 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203350127 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163857799 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.237693177 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228555539 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.185564881 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136415409 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165276793 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152927564 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.149456277 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131128566 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199895003 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163345986 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.124361117 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.211724249 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161953714 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.111371308 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145233442 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204469402 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15309731 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21469751 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182585533 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11578982 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206295334 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196004684 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13912355 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.188041667 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193563259 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146901721 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155127318 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.142056406 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.156884915 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272100564 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.101387495 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217059733 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193119785 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165975994 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173004405 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.154327304 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198980814 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163604232 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222328217 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148732548 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.16257353 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162711881 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118360188 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.134313888 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160591425 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172721267 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.155115995 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169224822 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.169332367 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203649213 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.128382861 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123243465 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.322757661 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181691521 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248570183 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.112289692 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140359753 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165815593 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149801199 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.185655698 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18562785 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.141188994 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141026246 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.14028775 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.135417916 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.141533991 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161493972 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203613334 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.323121967 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23902495 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.142212676 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.286553527 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117466839 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159599361 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.118742252 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.111565886 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156232602 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151985944 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157498102 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.22733896 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2467868 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.152690498 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.138885391 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158106003 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.103389653 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141092971 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170217696 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166451712 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186792659 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147369245 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.111302621 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162203032 seconds)
  done (took 87.114569187 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189463764 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.140870265 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.154060832 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.207844666 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.184526592 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.298863193 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.215780803 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.261515747 seconds)
  done (took 2.732392285 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.097309475 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.157888352 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.16207866 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.140002112 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.094858696 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.124014179 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.390175769 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.135735918 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.095330724 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.154865913 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.152806477 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.122429241 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.649336812 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.123032962 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.12322522 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.161113545 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.119695674 seconds)
  done (took 4.076971038 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.219444468 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.497679375 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.985755852 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.199089701 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.164275302 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.120368126 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.717457823 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.12444484 seconds)
  done (took 12.107679951 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.129483782 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.149669096 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.168146673 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.139859973 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.154712409 seconds)
  done (took 1.826120732 seconds)
done (took 129.619488891 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.102101498 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.132109994 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.103260775 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.134306051 seconds)
  done (took 1.543364356 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.100291407 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.073544575 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.104043647 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.077502461 seconds)
  done (took 1.438989354 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.198037832 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.174775703 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.40219122 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.075202102 seconds)
  done (took 1.592066893 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.120139094 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.137651148 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.137014324 seconds)
  done (took 1.486488793 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.110673479 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.134012574 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.107420591 seconds)
  done (took 1.433856873 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.110976636 seconds)
  done (took 1.199499913 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.116070487 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.145073789 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.116988758 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.142481117 seconds)
  done (took 1.609385433 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.102670388 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.132397865 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.116704629 seconds)
  done (took 1.442190496 seconds)
done (took 13.200866948 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.111167936 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.430115884 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.422622111 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.114376888 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.729821583 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.412876468 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.060233921 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.151713599 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.174771201 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.125057814 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.115398503 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.70445027 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.042918027 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.349771588 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.029475087 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.469412071 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.683583401 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123388323 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.096394051 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124816968 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.04508794 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.123985824 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.125621749 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.096321934 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.707060864 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.429988725 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098658516 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.469988806 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096268584 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.134249991 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.384102092 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.125934514 seconds)
  done (took 17.388587397 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.102453573 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.186171976 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.135912778 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.099309463 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.133107332 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.097825395 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.128143113 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.125497486 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.190352051 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.097980501 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.147080398 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.096350834 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.130429119 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.126214709 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.119240867 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.123950971 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.12524901 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.097278876 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.124710521 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.098376056 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.143675801 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096894697 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.126138065 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.123942077 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.098162547 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.140323996 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.12698314 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.097093916 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.124535011 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.105947166 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127664237 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.099107205 seconds)
  done (took 4.991363682 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.149059213 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.194749015 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.136444509 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.160483163 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.179413972 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.09935509 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.206106112 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.152512042 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.192611988 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.125554249 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.116813844 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.125979435 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.160165624 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.100427406 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.146960608 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.097015875 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.127294088 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.124786517 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.096552156 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.125924079 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.117455491 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.123975736 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.126223362 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.096641075 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.126343665 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.140566098 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.099041926 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.125574774 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.097778925 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.134199233 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.128740777 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.099743728 seconds)
  done (took 5.332573439 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.100597853 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.130882217 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.114537824 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.143449149 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.127740611 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.101505527 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.129739689 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.100676256 seconds)
  done (took 2.049539262 seconds)
done (took 30.852952879 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.11563768 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.131020714 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.112008405 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.138013973 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.135456176 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.110591682 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.124158447 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.10929139 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.139249045 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.105939365 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.141526692 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.124226346 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.099131661 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.124930389 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.111737 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.130030882 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.139027893 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.107648598 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.140282787 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.111300272 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.127303911 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.13676136 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.108550884 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.139768935 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.112492686 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.139653959 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.141519618 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.103844283 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.126821522 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.098520054 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.130200116 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.110408355 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.12664613 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.14099299 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.102345859 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.130296789 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.098865919 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.12931984 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.137903105 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.109615717 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.132461998 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.109724822 seconds)
  done (took 6.233788522 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.114337709 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.147235431 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.110659195 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.113586344 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.091009495 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.084175378 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.144018204 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.082653588 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.112332685 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.11480146 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.106059719 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.080138346 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.109648572 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.0757315 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.079314144 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.106636174 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.082356526 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.080039845 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.106987052 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.08014399 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.110619003 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.075439303 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.082060745 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.10967997 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.077676133 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.11112821 seconds)
  done (took 3.69343016 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.104874546 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.145826093 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.118372923 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.180557354 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.160424605 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.134022852 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.110570834 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.145542833 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.113230625 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.125237122 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.128670405 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.126511021 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.143847872 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.10473855 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.128985228 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.141178364 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.111030431 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.12664864 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.106743752 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.145465172 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.141754733 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.107846436 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.144906092 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.136244566 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.096827112 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.128113711 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.104527282 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.139308072 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.105566454 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.134583035 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.131727105 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.100265069 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.127294527 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.138054795 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.103464749 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.127023924 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.117155534 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.139755481 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.134646226 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.098072571 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.13331748 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.099071314 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.147408957 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.166565042 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.097357202 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.132776948 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.0992617 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.135985865 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.126901315 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.115124285 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.135696659 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.097257645 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.128606982 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.126801285 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.097804195 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.141706509 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.099869592 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.127049565 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.105620926 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.130598983 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.138717815 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.101261484 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.142651046 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.098028061 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.134207701 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.126102494 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.097764989 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.123938394 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.12090149 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132538708 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.167984255 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.098934834 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.127194889 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.10693935 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.133584405 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.132347556 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.097519066 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.142875995 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.107330112 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.129682373 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.138130661 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.100994793 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.128653389 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.115382596 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.12760644 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.127195334 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.098327647 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.132676158 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.099373486 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.126614631 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.111973923 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.124601831 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.128495141 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.111179264 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.125279463 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.098138702 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.133397141 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.130697066 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.095946577 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.140050564 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.103954567 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.125735942 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.136648943 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.097870366 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.12812198 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.106959083 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.130849893 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.096443867 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.130144871 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.132549774 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.097176653 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.129904934 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.099313409 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.127962803 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.136448027 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.104780794 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.131328934 seconds)
  done (took 15.478935993 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.239132429 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.224880085 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.195622139 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.305522644 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.139386149 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.153168611 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.223522453 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.163275268 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.09720962 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.166149403 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.17718736 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.189165975 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.176883229 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.187774312 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.177262889 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.127252344 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.117457711 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.173468048 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.253689353 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.273111632 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.147500315 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.135943445 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.167288152 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.165902082 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.111476317 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.136499905 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.146913279 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.109899309 seconds)
  done (took 5.996207149 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.114059499 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.158801804 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.132192612 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.119786098 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.155682972 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.127263835 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.102481342 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.128172325 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.111572247 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.140690449 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.128163824 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.104276606 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.134595983 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.137707314 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.099217921 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.136180555 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.107128336 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.127803427 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.130133001 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.102369404 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.137384353 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.106794102 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.130727715 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.096561874 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.136863542 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.126161799 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.090863372 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.149163911 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.127302112 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.118811798 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.125626115 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.105587592 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.140742943 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.126832586 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.096710211 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.128592697 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.099301409 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.129707723 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.099776485 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.12497939 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.125378601 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.081298168 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.096469601 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.143530915 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.133999991 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.083941372 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.133470822 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.103643776 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.127562668 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.124302803 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.10084017 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.12948205 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.101179823 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.134238839 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.101018482 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.127764878 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.101750074 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.11844793 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.104412434 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.129038928 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.087906943 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.126332154 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.131229539 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.094055773 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.135857204 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.102327747 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.126052756 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.099879815 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.13072475 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.133488968 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.100272489 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.133485758 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.095053181 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.129259568 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.101381703 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.132911676 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.100879562 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.125894963 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.12660579 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.098339466 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.106816463 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.09806622 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.077639774 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.130527003 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.124877564 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.096360408 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.128631148 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.104359694 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.143313634 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.127892137 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.107974015 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.127229283 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.096707744 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.130340144 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.08660576 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.129767109 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.143211834 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.118423999 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.127495415 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.125702233 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.112536709 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.129772166 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.096627938 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.108280114 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.106543259 seconds)
  done (took 13.522790955 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.136640425 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.156690829 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.128931523 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.115785938 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.161339892 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.162029277 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.105045863 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.134874094 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.128916294 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.116718581 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.128088813 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.106442332 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.127300345 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.112678253 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.162517608 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.137360713 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.100038526 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.142124502 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.132328298 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.174129641 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.117208187 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.147251207 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.115931527 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.127917893 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.134027981 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.115571576 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.166337713 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.142495543 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.111924698 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.146587909 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.112505205 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.166742751 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.148644079 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.102047276 seconds)
  done (took 5.657475484 seconds)
done (took 51.68338326 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.201461235 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.422267851 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.193459663 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.044597333 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.237625242 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.219326195 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.221860416 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.191343917 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.826818165 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.192820039 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.449722279 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.786223913 seconds)
done (took 60.106266646 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.245291061 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.347933151 seconds)
    (2/2) benchmarking "String"...
    done (took 1.478488848 seconds)
  done (took 3.942318795 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.744144077 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.15187752 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.454341783 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.219110747 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.195793725 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.482566914 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.890233922 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.576296823 seconds)
  done (took 28.086988631 seconds)
done (took 42.140191716 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.204297358 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.212979415 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.23677475 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.172567013 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.322809315 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.225436181 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.506421283 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.224524289 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.21220427 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.175784126 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.201959932 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.194945623 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.202259009 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.513763502 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.19552366 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.196555514 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.226738672 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.713951907 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.620215374 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.200701004 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.226262213 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.241584187 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.214575931 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.201003558 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.2818086 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.206319467 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.205010432 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.209184217 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.744874683 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.1972638 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.225046556 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.70606254 seconds)
  done (took 190.535874818 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.195512497 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.258210397 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.366926333 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.219083319 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.758439413 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.396072437 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.339440694 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.834647832 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.21718779 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.223896917 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.417233917 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.196073491 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.478714679 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.168530439 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.224832623 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.281030743 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.48315992 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.493841073 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.234088812 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.351286746 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.213209583 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.293775068 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.228293501 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.393601124 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.212724873 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.252805581 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.226200019 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.236987955 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.390479165 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.416730701 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.243798797 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.201626719 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.816491916 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.051766156 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.199150603 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.211430728 seconds)
  done (took 149.845334653 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.19342127 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.193420671 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.193395911 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.225846914 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.193225733 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.768921134 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.775012749 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.710493761 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.501166386 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.556407041 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.442608075 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.191555738 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.285522004 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.205939435 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.192615935 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.207971479 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.23356301 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.196961301 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.191200232 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.740389526 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.204496308 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.272171395 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.370750841 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.208332382 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.223761053 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.5796935 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.192708295 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.223643643 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.521291646 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.241150559 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.192374898 seconds)
    (32/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.193094421 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.575393374 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.285629597 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.305322686 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.195245065 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.224061582 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.193199116 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.47238474 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.194012388 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.19388605 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.196332092 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.866488316 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.196872046 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.761358642 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.195716458 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.149787549 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.196872405 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.192608931 seconds)
    (50/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.193391758 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.385190815 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.798581 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.209883278 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.194417142 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.196087216 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.193943677 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.193283658 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.225749217 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.344502875 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.290374083 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.210160306 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.197034672 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.226946025 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.195007312 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.262479337 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.198043913 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.378458736 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.272700711 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.303385497 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.744601265 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.194444685 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.292862333 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.315705489 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.196211012 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.19438744 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.196331904 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.19505882 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.305573083 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.196681908 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.593825948 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.195875326 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.369867158 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.21254968 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.553692489 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.294681933 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.196111689 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.601489027 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.198910788 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.194661788 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.934866483 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.291655441 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.194832007 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.194381255 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.194517103 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.591591542 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.758456254 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.437374914 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.198725945 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.327167903 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.197199807 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.605198727 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.725150903 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.872967099 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.197350778 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.305193867 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.365511242 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.211746436 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.193112324 seconds)
    (109/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.193083368 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.193830768 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.508442977 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.197868058 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.251346645 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.591032936 seconds)
  done (took 363.588004636 seconds)
done (took 705.08824328 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.810808424 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.804543599 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.906910042 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.793175735 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.755416513 seconds)
  done (took 10.187317821 seconds)
done (took 11.305296661 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.376643216 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.375596268 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.250799869 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.379166844 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.224902379 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.394246353 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.356929132 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.214469907 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.293145513 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.272075746 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.29497583 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.24469648 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.229226297 seconds)
  done (took 18.024388669 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.50793288 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.505263156 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.258945999 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.511334958 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.234439775 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.517712517 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.415605769 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.404126334 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.414667158 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.227244212 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.20870145 seconds)
  done (took 16.325386385 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.518126871 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.535676378 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.263221616 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.520519338 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.236486761 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.524982174 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.411597805 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.41568376 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.409923397 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.22823015 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.208423827 seconds)
  done (took 16.391588402 seconds)
done (took 51.861363265 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.204166826 seconds)
  done (took 2.322383591 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.24136083 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.40103233 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.222490968 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.210082825 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.204620506 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.208416193 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.211945256 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.205122074 seconds)
  done (took 11.025615347 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.204160954 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.200956368 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.201702289 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.200617308 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.20343919 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.203769733 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.201086303 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.204028438 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.20384166 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.203766319 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.201852543 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.203523349 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.200599726 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.201165223 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.202594276 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.204965152 seconds)
  done (took 20.362061371 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.203557164 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.202167063 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.201629679 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.201965365 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.201907547 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.20354748 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.203346271 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.202488927 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.201012943 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.201377704 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.203296128 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.202188101 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.203355841 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.203661307 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.20263473 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.203223528 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.20204992 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.202648702 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.2080834 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.203685446 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.20341403 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.202614212 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.203153395 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.203941907 seconds)
  done (took 29.992622447 seconds)
done (took 64.823387588 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.806649853 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.703586384 seconds)
  done (took 6.630689657 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.263719519 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.267836082 seconds)
  done (took 3.654763197 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.206356626 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.205914726 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.207295465 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.207089352 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.206150891 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.205746976 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.207210588 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.206206144 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.206253123 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.206292406 seconds)
  done (took 13.185743951 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.206152704 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.207302925 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.204354743 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.206571718 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.206539024 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.204708971 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.206667344 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.206754114 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.20699056 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.204450709 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.20777917 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.205464919 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.207179854 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.204389339 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.206201732 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.204490593 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.205527528 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.205442577 seconds)
  done (took 22.830117889 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.207888487 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.228495554 seconds)
  done (took 3.559481228 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.335232398 seconds)
    (2/7) benchmarking "second"...
    done (took 1.247117466 seconds)
    (3/7) benchmarking "month"...
    done (took 1.314496234 seconds)
    (4/7) benchmarking "year"...
    done (took 1.303743113 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.246766191 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.225371404 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.247576954 seconds)
  done (took 10.042909762 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.209370099 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.388932137 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.494493409 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.780384267 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.208897257 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.212437973 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.093706436 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.212114124 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.213854463 seconds)
  done (took 13.937948068 seconds)
done (took 74.964030385 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.190761157 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.218215171 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.433754327 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.226319445 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.234299796 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.500981407 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.237358892 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.326410932 seconds)
done (took 37.49406873 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.203256237 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.187062077 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.934670589 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.214019995 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.24716529 seconds)
  done (took 18.708523352 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.244263011 seconds)
    (2/2) benchmarking "read"...
    done (took 1.542924125 seconds)
  done (took 4.911724782 seconds)
done (took 30.949879214 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.209797325 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.209832773 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.209969073 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.210254596 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.207367979 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.207923007 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.209959782 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.207945756 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.207288029 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.210085372 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.21020359 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.210103241 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.209760028 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.209924484 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.207719639 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.207874152 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.210189561 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.206818203 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.207667373 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.206548759 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.207825909 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.210505684 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.207574602 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.207749491 seconds)
  done (took 30.136602566 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.210994274 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.209981918 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.210844227 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.211112737 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.208641791 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.210380463 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.21123682 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.208320603 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.21070735 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.211588935 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.208090733 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.209454292 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.210330804 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.209883138 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.21178415 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.208772595 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.211134414 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.208839567 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.212068206 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.209391826 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.212245774 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.209196781 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.210232754 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.211593127 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.209894905 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.21028449 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.212380696 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.211412332 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.212841518 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.210723427 seconds)
  done (took 37.440999579 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.218058498 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.220012666 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.212079337 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.21322007 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.212636057 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.213194684 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.213867317 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.213132536 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.213545174 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.212605841 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.212155955 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.213749634 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.213927522 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.213793307 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.213963059 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.213326208 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.214623102 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.213327291 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.213772969 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.21384672 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.214195547 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.214562928 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.214968917 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.215186338 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.214205238 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.214499433 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.213833077 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.213184716 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.214759702 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.213320228 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.213585303 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.214347715 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.214449332 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.213631623 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.214564313 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.215403798 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.221709069 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.221394231 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.216345037 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.214469501 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.214159931 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.216010608 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.213750356 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.215617656 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.216089717 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.215963993 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.214309737 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.215568046 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.214930467 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.215471627 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.214111798 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.214069359 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.215175155 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.215458838 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.215913519 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.215616485 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.215475152 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.215137026 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.21553823 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.215798492 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.215935676 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.215746129 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.216226226 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.215114587 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.216679798 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.216231402 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.216745922 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.216418039 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.216684925 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.217262811 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.216562192 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.21610848 seconds)
  done (took 88.611558462 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.216452749 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.21383097 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.21405615 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.213813993 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.214839714 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.217409171 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.213967639 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217956347 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.214953974 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.217926382 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.216783776 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.215067919 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.214520164 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.218560398 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.217134078 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.215590847 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.21736091 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.21518617 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.21778653 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.219984555 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.217136012 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.216003138 seconds)
  done (took 27.888600886 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.218661069 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.220184587 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.21949356 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.219097133 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.216464977 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.219404108 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.218722813 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.219572767 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218057497 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.215420956 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.214904089 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.21987246 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.217099529 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215400322 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.21639993 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.217091093 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.220119884 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.218339949 seconds)
  done (took 23.058284203 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.216037827 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.215965607 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.219904694 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.21680392 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.216813168 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.220175376 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.217316327 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.219408586 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.219278406 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.217305505 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.220397046 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218552172 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.219290383 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216669532 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219104415 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.217865559 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.219666202 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216763615 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.21994217 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.217358318 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.218251077 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.220573069 seconds)
  done (took 27.936909281 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.220801122 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.22204268 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.218031206 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.220483 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.220248717 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.221912714 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.222582512 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.221198877 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.223449058 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.223192291 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.221697674 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.223610953 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.220094242 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.220402786 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.21983484 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.218936232 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.222644454 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.220311847 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.221589333 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.218845874 seconds)
  done (took 25.557508206 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.222281725 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.222755966 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.224583143 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.223346231 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.222883811 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.223103648 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.22240351 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.22394903 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.223499214 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.223658736 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.223395083 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.223353643 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.223184377 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.223487303 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.223937793 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.224720728 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.22444778 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.223841622 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.224666072 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.224225387 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.223548957 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.224347275 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.223682821 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.224378609 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.224124942 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.224277642 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.223914576 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.224077147 seconds)
  done (took 35.401173359 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.224350546 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.224557845 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.221621528 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.220787905 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.221575127 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.221531879 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.221780094 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.221481353 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.225391316 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.221634908 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.224897851 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.224142733 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.224230442 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.225105506 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.224373334 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.224721774 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224427871 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.222538662 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.222893877 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222314752 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.225324131 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22566536 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.225767908 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.222443768 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223427201 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.224564689 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.22266901 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.223233518 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.224479978 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.223131466 seconds)
  done (took 37.844837762 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.24465781 seconds)
    (2/2) benchmarking "in"...
    done (took 1.244514692 seconds)
  done (took 3.628476408 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.224762434 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.22586358 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.225224042 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.224754155 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.223442558 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.226764669 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.226496445 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.223420289 seconds)
  done (took 10.940598961 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.226900074 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.226839553 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.227567592 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.227427667 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.227378073 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.227214751 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.234571959 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.246852612 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.228023402 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.229016631 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.23446429 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.234426255 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.229363728 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.228089871 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.22742083 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.229887698 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.228064315 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.229914437 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.229225966 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.228657611 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.228701763 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.23173632 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.231521622 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.22607991 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.230762988 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.238964575 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.251604298 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.229177292 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.229411927 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.233430485 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.229394437 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.226580995 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.229893687 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.230410898 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.230451754 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.230411597 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.239550104 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.25066934 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.236296842 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.249665655 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.230030636 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.2283871 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.230989016 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.231129879 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.232271038 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.231319035 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.229984075 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.227955443 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.229211042 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.233419353 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.234247186 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.230051965 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.228111418 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.233519119 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.231788905 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.237928046 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.249773959 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.234136352 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.240002496 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.241487624 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.262810085 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.254235997 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.233407428 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.232326189 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.241867529 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.256718287 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.239608068 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.247979304 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.229595474 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.232064908 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.23753195 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.263928564 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.257549992 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.231871276 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.233243135 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.232900597 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.232232911 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.233971463 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.239203978 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.253326851 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.233362801 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.232788598 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.242544577 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.254478254 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.230957239 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.233655535 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.234278172 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.232639727 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.23381821 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.242931796 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.251993829 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.232841763 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.23188146 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.232671457 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.233809278 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.234293934 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.23308794 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.232216187 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.230395042 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.231949626 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.234661441 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.238491544 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.241056664 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.235197958 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.234298293 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.240542662 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.252506382 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.233490953 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.240748614 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.251738145 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.235378968 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.236480428 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.239013527 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.231616608 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.239121277 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.242139266 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.235993649 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.236125247 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.234686033 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.235623744 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.245550671 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.261118074 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.236586291 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.234901476 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.240833154 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.246332362 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.237023956 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.23781072 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.235960262 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.232674399 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.232728418 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.236399111 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.237053662 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.235868417 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.236629451 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.237261057 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.233401581 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.235825334 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.236202319 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.236176077 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.237510617 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.237170919 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.237049229 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.238991368 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.236506519 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.237308364 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.242938051 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.25407887 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.236743803 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.236884169 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.234142838 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.237069381 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.237045316 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.237219265 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.237588675 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.237092732 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.237190005 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.237707633 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.238755646 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.237114789 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.237481795 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.23806799 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.240606529 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.238232712 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.240870409 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.236856333 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.235969952 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.23847598 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.239342738 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.238145155 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.238011918 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.237581013 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.243104736 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.246084822 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.238667716 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.239033601 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.241410931 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.239606658 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.239126598 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.239510745 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.242432466 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.246080292 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.240580799 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.245421693 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.258300204 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.239550057 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.240677394 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.240152491 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.239208662 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.240299956 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.243693422 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.247482543 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.252831451 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.265696242 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.241498712 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.243080255 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.241382458 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.244029334 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.243135962 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.241174024 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.240473352 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.241172169 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.239329402 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.241286114 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.240054565 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.241117133 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.240169555 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.241179616 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.241077241 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.241953347 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.241267098 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.241398884 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.241086881 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.238365563 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.242046879 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.241625021 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.240939969 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.238339635 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.240576763 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.239918155 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.241821758 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.242791769 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.248444395 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.256988971 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.242362511 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.242675853 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.2410666 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.240433457 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.242108859 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.24362195 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.242369562 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.249213815 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.259789681 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.24207162 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.249160742 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.260647464 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.240794374 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.244074817 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.244229079 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.239878817 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.245932725 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.250701429 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.242650291 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.245309324 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.243145375 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.243014065 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.243811482 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.250273717 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.259763614 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.242879472 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.243615828 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.244754855 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.241462743 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.244387668 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.2448249 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.244051677 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.245836831 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.244663265 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.24434773 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.245603281 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.243164855 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.245075421 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.244914747 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.248784916 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.252208266 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.249693596 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.262339505 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.246064338 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.245427016 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.250274564 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.24537139 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.245943602 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.245415513 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.257897334 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.270582238 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.25288904 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.265256687 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.246880192 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.251657178 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.266015843 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.249408168 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.245439507 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.245606457 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.244753754 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.245089409 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.242718487 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.247617657 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.246248932 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.247617849 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.249076474 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.250092027 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.246998415 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.245612702 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.247386942 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.24724908 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.247807178 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.246956204 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.247763723 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.249062952 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.249157848 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.247088107 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.246620453 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.254107591 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.265541955 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.246956281 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.246403405 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.247125453 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.246275912 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.247594908 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.248655884 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.251821009 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.254485089 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.250950919 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.254509064 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.248621382 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.256953723 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.267618055 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.251837694 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.254912274 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.245821819 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.247964152 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.248520354 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.248793634 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.256233803 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.267645257 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.250671538 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.254120577 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.249277763 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.249577012 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.248565025 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.249345104 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.249348682 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.249180558 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.257670983 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.271874881 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.253295882 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.249932769 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.246677582 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.250348746 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.249543086 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.248739554 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.252209914 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.250053757 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.250419351 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.249764021 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.24897614 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.25090007 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.251638975 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.251916729 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.247577424 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.250940377 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.2580618 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.272483938 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.254729778 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.251652048 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.25813469 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.269836531 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.257767518 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.269965162 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.252076912 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.251628619 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.251511613 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.251974341 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.251699263 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.252827692 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.250636743 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.253731718 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.255515495 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.252677376 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.252903059 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.2519141 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.25308697 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.252924749 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.261626179 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.274245941 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.25438192 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.255501676 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.248717664 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.252595989 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.256226764 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.252793536 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.250950524 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.254805636 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.261824052 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.259753605 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.251941077 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.252460441 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.253177809 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.25216894 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.25195569 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.253235619 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.252659514 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.253539719 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.252620815 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.254301846 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.255518945 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.252258387 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.252332275 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.253298573 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.25432846 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.263561202 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.272497144 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.254038212 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.253698249 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.253649153 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.253183693 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.253349328 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.253915266 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.254145583 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.253583249 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.255744355 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.260749182 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.260430204 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.255563912 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.253491763 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.254237693 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.254430467 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.254459984 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.254888706 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.255470413 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.255030144 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.255559919 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.255491421 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.25592009 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.254320182 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.255240933 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.255958361 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.256119502 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.257984782 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.261699563 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.256029391 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.253604617 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.255751456 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.256692938 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.254410851 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.255891092 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.264156479 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.277587524 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.266540725 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.265086569 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.260901307 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.257204017 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.259074487 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.263316567 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.25569259 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.256173091 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.256797326 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.258117861 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.256251677 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.259849952 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.257296872 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.263242087 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.274145398 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.255335097 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.265071389 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.277367008 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.256916474 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.259047977 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.260237038 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.256690953 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.255646888 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.257430209 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.257667527 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.263877989 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.277284169 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.257817234 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.258448211 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.257091262 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.259349419 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.261533195 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.257329826 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.257927492 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.257275897 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.260912868 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.258985788 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.257948466 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.255735332 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.257661284 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.257753368 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.261111177 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.264559419 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.255973187 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.259439792 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.257643061 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.259144782 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.259160261 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.258921844 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.25601898 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.256269073 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.2587828 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.259211253 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.259334848 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.261080162 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.258970132 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.260805509 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.259766716 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.259953209 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.262681506 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.269837084 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.267328101 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.257594802 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.258888608 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.259421556 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.262024928 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.259933369 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.260943671 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.260281276 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.260489259 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.261085667 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.260448938 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.260664501 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.263573833 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.274532241 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.283030421 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.261068914 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.26115184 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.264247413 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.260956377 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.259102129 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.261356007 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.262449659 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.266074784 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.269150342 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.26166347 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.267580067 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.28059341 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.262556025 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.26530222 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.264390389 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.267486878 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.264170796 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.261697647 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.26247939 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.267452597 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.27625297 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.281001444 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.272915844 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.294956973 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.281103594 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.263937535 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.262934208 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.261831809 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.263121598 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.263920709 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.262446927 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.264350331 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.264771594 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.263905785 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.264029182 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.26827488 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.263792338 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.26438234 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.26422241 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.262526591 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.263991856 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.260893626 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.26417852 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.263542204 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.264983289 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.263710084 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.263620338 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.263743364 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.276573642 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.290284013 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.264134629 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.264888919 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.261982868 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.267143423 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.266940056 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.275471755 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.271106326 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.264304094 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.263977417 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.265788807 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.264769847 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.263080337 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.264647258 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.263691922 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.26504087 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.262004307 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.278161867 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.288598409 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.269799794 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.28424921 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.265693927 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.266509339 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.266427825 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.266302818 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.266337791 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.266874664 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.269440052 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.270972976 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.266040614 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.26554808 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.269354217 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.273762308 seconds)
  done (took 746.114280287 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.263975525 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.263839403 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.264540745 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.263778723 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.264665708 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.263507008 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.2635311 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.264148268 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.265485663 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.263672505 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.263688358 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.263855494 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.263319994 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.26503262 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.264467507 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.265067664 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.264383436 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.26445932 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.26433966 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.265029321 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.264180393 seconds)
  done (took 27.725934937 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.267833657 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.265516894 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.264722596 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.268234299 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.264062644 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.26731412 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.264935573 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.268049546 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.267645069 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.265326961 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.268156216 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.267572071 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.2654144 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.265591603 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.266201164 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.268223502 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.268474917 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.26622019 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.267977328 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.266351285 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.268375177 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.265910875 seconds)
  done (took 29.046244227 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.269660404 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.268863211 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.26706932 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.265730479 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.269205116 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.266355171 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.269759744 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.269728632 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.269132313 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.269730288 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.268417278 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.269666762 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.276725674 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.27428276 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.270259836 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.26969784 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.414042695 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.269490852 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.269360545 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.269898873 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.267750765 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.275303153 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.286400086 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.267586815 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.269466905 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.27169834 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.271082485 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.269948677 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.27047735 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.272262566 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.274473457 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.270860365 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.269620796 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.273134641 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.270125033 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.273015563 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.274986862 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.271360085 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.268805299 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.27192855 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.282466391 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.292487031 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.273767875 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.278685205 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.291297482 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.271962997 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.27491034 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.27873259 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.268898524 seconds)
  done (took 63.671689087 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.272167823 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.272047347 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.270722139 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.2729209 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.273110674 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.272364645 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.271944607 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.272491404 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.270205309 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.270287183 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.273340906 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.270484937 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.269080814 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.273375055 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.274346275 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.270720161 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.270030498 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.271115751 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.270799795 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.270616356 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.27123864 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.273759473 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.273300775 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.272367125 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.273378945 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.271232929 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.269819908 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.273542011 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.271456434 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.271704781 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.274172428 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.273605094 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.274404841 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.272680924 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.271215243 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.275828878 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.274712855 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.273569614 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.27476822 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.272431643 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.279726373 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.277031393 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.274410408 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.275465117 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.272793645 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.272182246 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.272096108 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.273355503 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.273139737 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.275772495 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.275490283 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.273179643 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.27591822 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.273377774 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.275672979 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.275896721 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.273376549 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.273952971 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.275206367 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.272977723 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.273837325 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.276045557 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.275108282 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.276746068 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.276338932 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.275270859 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.274530324 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.276954423 seconds)
  done (took 87.772485748 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.276918998 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.277005452 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.277175437 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.280506532 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.277649713 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.279236827 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.278875353 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.278305517 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.278137719 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.27580519 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.277400791 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.277271682 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.277376432 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.277629058 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.276928321 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.27924607 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.27930836 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.277774628 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.277924386 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.278104632 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.278420544 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.277102695 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.279467487 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.278327232 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.278300669 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.278757553 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.278772871 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.278094447 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.27845948 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.279501269 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.279210196 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.278792204 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.278665046 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.27924828 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.278807045 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.277539241 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.278902621 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.278754474 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.279670132 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.279299979 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.277916877 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.279088727 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.28038831 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.279958765 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.279776645 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.279183121 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.279411258 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.279538281 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.27972228 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.279871625 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.279611884 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.280451933 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.279434151 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.281087219 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.280106348 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.28019142 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.280694723 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.281276605 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.280602977 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.280732655 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.280310996 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.281935839 seconds)
  done (took 80.482507217 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.281212582 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.28166899 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.278467904 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.278246183 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.282211225 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.27999719 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.28089515 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.279965946 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.282031088 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.281918826 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.282005458 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.279140292 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.280166983 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.281809997 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.28037976 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.280842431 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.279321902 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.279021113 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.280717405 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.279348752 seconds)
  done (took 26.800374902 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.278859658 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.282485189 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.28028816 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.280113788 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.28124944 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.279757995 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.282762203 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.282436524 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.278497728 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.283200345 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.282198796 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.281975583 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.281060445 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.280042096 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.283469016 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.279682863 seconds)
  done (took 21.690306305 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.280121599 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.281903827 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.282897148 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.282826682 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.280151092 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.280658537 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.28255955 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.280399186 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.281639997 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.283880128 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.283601649 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.28314775 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.283367599 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.283869699 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.280408244 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.282949018 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.281318004 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.280771703 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.284058409 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.284015856 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.28181462 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.281624428 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.283489892 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.284384254 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.280478849 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.28181575 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.280868444 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.28114814 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.281585381 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.28546143 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.282484886 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.282617552 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.282862371 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.281595979 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.285021551 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.282079198 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.285356911 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.284759201 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.285032534 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.285515174 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.285008026 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.282376478 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.286504881 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.285729524 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.282912829 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.286245914 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.283215117 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.283275968 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.282915206 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.282455413 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.286938348 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.285040389 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.286929174 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.286344113 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.285760279 seconds)
  done (took 71.769715342 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.287965746 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.286430005 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.28238456 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.286006425 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.288250478 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.282563492 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.286132303 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.285514144 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.283341161 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.286287644 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.284831431 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.287480677 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.284316114 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.286822605 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.284315894 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.28795291 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.283816907 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.284498535 seconds)
  done (took 24.333673447 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.285024631 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.285488183 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.286812756 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.284176963 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.284962059 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.288082261 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.284864478 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.287574885 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.287050258 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.284610079 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.28562126 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.28876976 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.287927678 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.288831247 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.285820018 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.284929693 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.288361634 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.288011207 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.284633273 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.285554228 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.289566892 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.288440693 seconds)
  done (took 29.501618566 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.289035842 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.28747887 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.2872194 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.304538672 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.308114324 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.310483936 seconds)
  done (took 8.984261472 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295401485 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288842656 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.286893197 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290714723 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289533975 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285888545 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287076685 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287415873 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29030564 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287155981 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286545179 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290565038 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290779166 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286758133 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289839206 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289631259 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28769821 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287171027 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289612576 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29013668 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287356545 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290384165 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288461605 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287679071 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289024302 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288078517 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289474881 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28865836 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288239522 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290342117 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291030615 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288033774 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290219706 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288851835 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291527673 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290925726 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288742497 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290880975 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291237519 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288897233 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.291310249 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291607715 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290979637 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288590462 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293396994 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288703048 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28978122 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288341985 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288704889 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29233104 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291206188 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289636569 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293146094 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292382643 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293329399 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294456817 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289475491 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289401471 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29112354 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290116584 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290453697 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291906376 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289721319 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290128773 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292072049 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290490545 seconds)
  done (took 86.349345989 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290953257 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.290677311 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290349712 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292445739 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290776245 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291854115 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292206653 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290917023 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29149055 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291033905 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293758926 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291044572 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291298866 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291627708 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290393821 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289493484 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293112017 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293296022 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291421909 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29483584 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29195959 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292170633 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291775417 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291609872 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29262227 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294026626 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293047678 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293283042 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291597831 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293325392 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29190397 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292368806 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292832771 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.29181887 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293635651 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292331623 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292903016 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293348959 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293088108 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295280602 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293492734 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295600086 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293080665 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292295318 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291956758 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293674659 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293111688 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294458123 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293073604 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293669334 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293423432 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294644873 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294816414 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292476322 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293487572 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294283828 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295100871 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294120043 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294400369 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297966551 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29446202 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294070738 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297429431 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294389117 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294953684 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295980367 seconds)
  done (took 86.541661223 seconds)
done (took 1740.35685563 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.458617083 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.411383886 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.296308486 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.347099178 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.295407913 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.319750055 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.313038048 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.296130527 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.296462464 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.296426668 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.295446347 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.481784117 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.351602209 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.296645621 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.296340344 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.389381855 seconds)
  done (took 42.647756452 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.327129647 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.308845344 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.420286044 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.324293733 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.325730058 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.498493179 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.362766555 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.302697644 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.479282358 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.346686335 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.889485142 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.325688647 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.301686878 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.429297059 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.322790462 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.492604501 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.561398759 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.900027845 seconds)
  done (took 30.126668175 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.76605563 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.318464228 seconds)
  done (took 9.291579595 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.322323181 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.303425081 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.302875055 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.300187564 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.306548049 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.295014637 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.299432444 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.295878608 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.045575269 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.435571052 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.325355732 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.312284112 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.318959288 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.301835935 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.302617518 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.340375444 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.447319732 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.306850983 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.296844205 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.306794484 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.300823365 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.402063261 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.363835869 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.305912242 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.428525321 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.030401559 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.311313761 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.309890432 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.444019394 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.304230776 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.301183402 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.301949566 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.304027837 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.204743104 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.825282974 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.298840385 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.329535253 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.311003274 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.300204024 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.447293146 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.305286802 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.308296932 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.296003222 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.830214603 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.447086908 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.426147389 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.548086827 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.325131685 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.305392867 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.366614477 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.308937667 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.305182203 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.347629862 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.096024104 seconds)
  done (took 110.426211644 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.33034966 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.685977842 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.466927257 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.318705882 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.145918786 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.051988643 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.319456037 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.592752641 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.372345007 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.297630979 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.603801066 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.824894789 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.3194258 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.34039346 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.817798868 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.319581516 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.296849752 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.221883535 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.319196072 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.298250809 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.796142008 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.317809967 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.318170786 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.468230887 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.335944345 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.77129916 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.797865626 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.691991144 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.320613782 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.299552632 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.780100078 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.320854081 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.310256437 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.302304434 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.568919213 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.670192518 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.66783464 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.32151442 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.301629693 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.303248474 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.306325958 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.763309835 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.66368914 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.315766914 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.300505782 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.79155982 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.324005758 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.308641513 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.308231786 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.509435229 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.94250766 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.30779835 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.774526853 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.30720513 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.588480937 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.340462389 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.376139341 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.797474026 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.322762454 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.394856387 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.347075684 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.301442233 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.302540291 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.302163094 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.300646432 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.665705492 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.449562499 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.304782036 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.662546844 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.797737846 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.32279725 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.858749661 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.235176778 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.324513314 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.40515126 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.302019543 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.974235429 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.814232166 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.327914396 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.302570769 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.653221364 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.326208034 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.592004833 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.324178241 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.324058924 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.816751137 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.309020395 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.318231058 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.302471467 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.308519629 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.067856181 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.307819919 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.593790468 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.355755032 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.30118897 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.307066901 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.307307153 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.301228676 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.306872638 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.308422238 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.832691664 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.319896859 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.284408496 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.326140472 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.304918993 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.323325904 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.299679503 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.302385871 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.525120097 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.729996642 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.323328171 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.299749144 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.302066102 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.310391143 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.475639823 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.304255617 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.610704371 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.321937199 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.300838958 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.311063722 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.017791958 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.35185226 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.304515028 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.309786685 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.188657922 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.512903948 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.322848709 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.323177085 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.307186525 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.316513107 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.671494332 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.326401134 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.376568379 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.306198534 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.006108518 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.342831621 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.33047033 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.619242873 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.31375945 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.150217598 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.32712734 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.30326195 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.59640485 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.57671673 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.352822165 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.316458967 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.303308067 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.016579104 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.344486244 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.439430095 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.321365893 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.320407674 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.501370387 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.732773951 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.304034257 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.905241992 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.305079727 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.522442581 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.310307082 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.606107815 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.803012537 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.324006249 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.308083904 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.013149525 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.999363303 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.096072642 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.306203383 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.584375095 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.259129861 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.787311291 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.305772854 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.30462541 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.884967935 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.31116355 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.306075933 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.306316683 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.306663853 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.605000563 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.476633889 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.811855745 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.305882782 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.747943422 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.35906338 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.306813608 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.316820197 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.307883513 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.652007724 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.32985191 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.31104401 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.351586239 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.308078351 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.310515334 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.770767143 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.258253476 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.315138291 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.456149637 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.944089182 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.329135938 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.306780256 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.889982107 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.537255419 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.851410439 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.323786518 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.610058301 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.324422987 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.344817599 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.055921996 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.384891657 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.774149307 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.324497713 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.308331388 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.904496428 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.32194141 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.664905254 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.311101721 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.314242405 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.869358354 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.321499465 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.311407211 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.64031231 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.330511188 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.576843554 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.312991935 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.323863768 seconds)
  done (took 1105.938666651 seconds)
done (took 1299.637219161 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.305607419 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.307205921 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.293285275 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.314763066 seconds)
  done (took 26.444583665 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.320552502 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.317321043 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.317258054 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.31670827 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.317527347 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.31394835 seconds)
  done (took 9.127574535 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.380471516 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.312739708 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.31526141 seconds)
  done (took 19.232370204 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.51882372 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.587609928 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.644163352 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.449427949 seconds)
  done (took 10.423829424 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.318757916 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.315610102 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.314325821 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.320123243 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.318271177 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.319915238 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.314972402 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.314862927 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.318388882 seconds)
  done (took 13.081712704 seconds)
done (took 79.536021116 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.473970111 seconds)
    (2/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.919014624 seconds)
    (3/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.531844628 seconds)
    (4/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.700714794 seconds)
    (5/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.129228237 seconds)
    (6/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.325561119 seconds)
    (7/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.628711539 seconds)
    (8/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.309541673 seconds)
    (9/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.27860765 seconds)
    (10/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.362872355 seconds)
    (11/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.335016984 seconds)
    (12/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.314126738 seconds)
    (13/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.303025677 seconds)
    (14/286) benchmarking ("sort", Float32, true)...
    done (took 6.315629544 seconds)
    (15/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.359630888 seconds)
    (16/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.284937682 seconds)
    (17/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.10407078 seconds)
    (18/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.30985053 seconds)
    (19/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.305725745 seconds)
    (20/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.9175368 seconds)
    (21/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.740622844 seconds)
    (22/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.055212392 seconds)
    (23/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.391244091 seconds)
    (24/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.322193941 seconds)
    (25/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.35299827 seconds)
    (26/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.332943266 seconds)
    (27/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.285977563 seconds)
    (28/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.734312965 seconds)
    (29/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.277006484 seconds)
    (30/286) benchmarking ("sort", Int64, true)...
    done (took 6.328794131 seconds)
    (31/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.403681811 seconds)
    (32/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.42427447 seconds)
    (33/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.260123874 seconds)
    (34/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.439885873 seconds)
    (35/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.179691799 seconds)
    (36/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.286717923 seconds)
    (37/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.293170479 seconds)
    (38/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.914804679 seconds)
    (39/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.160033945 seconds)
    (40/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.314691275 seconds)
    (41/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.622806681 seconds)
    (42/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.075959775 seconds)
    (43/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.027405268 seconds)
    (44/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.153123589 seconds)
    (45/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.308369276 seconds)
    (46/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.292740378 seconds)
    (47/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.339877254 seconds)
    (48/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.327989674 seconds)
    (49/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.424835318 seconds)
    (50/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.760626648 seconds)
    (51/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.078604607 seconds)
    (52/286) benchmarking ("sort", Float64, false)...
    done (took 5.575355738 seconds)
    (53/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.423327047 seconds)
    (54/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.595541738 seconds)
    (55/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.810013185 seconds)
    (56/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.711547873 seconds)
    (57/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.673107512 seconds)
    (58/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.298177084 seconds)
    (59/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.329947291 seconds)
    (60/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.292284197 seconds)
    (61/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.376636335 seconds)
    (62/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.397137516 seconds)
    (63/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.315824473 seconds)
    (64/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.459679901 seconds)
    (65/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.313981308 seconds)
    (66/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.378009417 seconds)
    (67/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.657116053 seconds)
    (68/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.316001641 seconds)
    (69/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.685493325 seconds)
    (70/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.314365496 seconds)
    (71/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.351088875 seconds)
    (72/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.444406609 seconds)
    (73/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.328247522 seconds)
    (74/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.53704061 seconds)
    (75/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.300285659 seconds)
    (76/286) benchmarking ("sort", BigInt, false)...
    done (took 6.316635777 seconds)
    (77/286) benchmarking ("sort", Int64, false)...
    done (took 5.538262322 seconds)
    (78/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.699498892 seconds)
    (79/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.838572591 seconds)
    (80/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.300439903 seconds)
    (81/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.381275153 seconds)
    (82/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.385422918 seconds)
    (83/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.227544778 seconds)
    (84/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.709450453 seconds)
    (85/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.970387724 seconds)
    (86/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.671014137 seconds)
    (87/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.136183613 seconds)
    (88/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.295226534 seconds)
    (89/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.568252502 seconds)
    (90/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.759510897 seconds)
    (91/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.338820258 seconds)
    (92/286) benchmarking ("sort", Int8, true)...
    done (took 6.323795709 seconds)
    (93/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.461762432 seconds)
    (94/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.7487681 seconds)
    (95/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.437972657 seconds)
    (96/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.327258951 seconds)
    (97/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.178828307 seconds)
    (98/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.344662227 seconds)
    (99/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.938782666 seconds)
    (100/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.729795974 seconds)
    (101/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.419799334 seconds)
    (102/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.531325197 seconds)
    (103/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.342467815 seconds)
    (104/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.368536858 seconds)
    (105/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.322187887 seconds)
    (106/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.197543891 seconds)
    (107/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.419594806 seconds)
    (108/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.319843739 seconds)
    (109/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.448624007 seconds)
    (110/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.344461344 seconds)
    (111/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.317728611 seconds)
    (112/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.367723971 seconds)
    (113/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.628330189 seconds)
    (114/286) benchmarking ("sort", Float64, true)...
    done (took 6.317935321 seconds)
    (115/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.384298803 seconds)
    (116/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.423838528 seconds)
    (117/286) benchmarking ("sort", Bool, false)...
    done (took 1.838622952 seconds)
    (118/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.36262011 seconds)
    (119/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.297577706 seconds)
    (120/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.310036808 seconds)
    (121/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.578964105 seconds)
    (122/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.296880919 seconds)
    (123/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.158563704 seconds)
    (124/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.086499597 seconds)
    (125/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.589115593 seconds)
    (126/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.582286154 seconds)
    (127/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.334727525 seconds)
    (128/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.682449211 seconds)
    (129/286) benchmarking ("sort", Int8, false)...
    done (took 4.380933664 seconds)
    (130/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.253200727 seconds)
    (131/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.299540631 seconds)
    (132/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.110473686 seconds)
    (133/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.336048217 seconds)
    (134/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.29690458 seconds)
    (135/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.99868375 seconds)
    (136/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.432615325 seconds)
    (137/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.965631738 seconds)
    (138/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.818483212 seconds)
    (139/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.865843602 seconds)
    (140/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.319586042 seconds)
    (141/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.411942138 seconds)
    (142/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.150404929 seconds)
    (143/286) benchmarking ("sort", Float32, false)...
    done (took 5.323077999 seconds)
    (144/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.324427149 seconds)
    (145/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.971895028 seconds)
    (146/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.083813832 seconds)
    (147/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.443279888 seconds)
    (148/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.350597808 seconds)
    (149/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.881892577 seconds)
    (150/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.114086104 seconds)
    (151/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.678040381 seconds)
    (152/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.340637535 seconds)
    (153/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.407328096 seconds)
    (154/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.309371736 seconds)
    (155/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.346887644 seconds)
    (156/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.314770889 seconds)
    (157/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.350001373 seconds)
    (158/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.345035565 seconds)
    (159/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.298164075 seconds)
    (160/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.428044486 seconds)
    (161/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.099610041 seconds)
    (162/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.90342643 seconds)
    (163/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.301120966 seconds)
    (164/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.311771164 seconds)
    (165/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.163833064 seconds)
    (166/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.723920504 seconds)
    (167/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.555437611 seconds)
    (168/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.405987157 seconds)
    (169/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.713692238 seconds)
    (170/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.797095298 seconds)
    (171/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.329699386 seconds)
    (172/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.352508404 seconds)
    (173/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.300849012 seconds)
    (174/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.506510421 seconds)
    (175/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.534546418 seconds)
    (176/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.364708354 seconds)
    (177/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.527655348 seconds)
    (178/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.437745191 seconds)
    (179/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.771031244 seconds)
    (180/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.955916117 seconds)
    (181/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.3538421 seconds)
    (182/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.332786015 seconds)
    (183/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.329566567 seconds)
    (184/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.306939157 seconds)
    (185/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.440610664 seconds)
    (186/286) benchmarking ("sort", Bool, true)...
    done (took 5.37013482 seconds)
    (187/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.40393522 seconds)
    (188/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.408574283 seconds)
    (189/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.303203069 seconds)
    (190/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.967071851 seconds)
    (191/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.419019213 seconds)
    (192/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.792366249 seconds)
    (193/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.405318452 seconds)
    (194/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.687906649 seconds)
    (195/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.745385643 seconds)
    (196/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.554995294 seconds)
    (197/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.555516562 seconds)
    (198/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.404857245 seconds)
    (199/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.948380853 seconds)
    (200/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.332073258 seconds)
    (201/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.338429443 seconds)
    (202/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.347993991 seconds)
    (203/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.324372679 seconds)
    (204/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.416915036 seconds)
    (205/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.359989008 seconds)
    (206/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.534514802 seconds)
    (207/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.434002895 seconds)
    (208/286) benchmarking ("sort", BigInt, true)...
    done (took 6.342351372 seconds)
    (209/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.365651428 seconds)
    (210/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.301149984 seconds)
    (211/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.331963018 seconds)
    (212/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.378247717 seconds)
    (213/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.921761205 seconds)
    (214/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.350928678 seconds)
    (215/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.301043323 seconds)
    (216/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.802780999 seconds)
    (217/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.307863354 seconds)
    (218/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.233798439 seconds)
    (219/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.338974555 seconds)
    (220/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.331562618 seconds)
    (221/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.426047659 seconds)
    (222/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.302768157 seconds)
    (223/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.495142846 seconds)
    (224/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.406486518 seconds)
    (225/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.395356322 seconds)
    (226/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.780273193 seconds)
    (227/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.50293103 seconds)
    (228/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.303250195 seconds)
    (229/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.195101822 seconds)
    (230/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.307673869 seconds)
    (231/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.250750782 seconds)
    (232/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.507077424 seconds)
    (233/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.14089413 seconds)
    (234/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.319312851 seconds)
    (235/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.86754308 seconds)
    (236/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.541264552 seconds)
    (237/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.326971106 seconds)
    (238/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.699651086 seconds)
    (239/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.58160416 seconds)
    (240/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.353438666 seconds)
    (241/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.36177674 seconds)
    (242/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.326386733 seconds)
    (243/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.35504116 seconds)
    (244/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.344942296 seconds)
    (245/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.326756327 seconds)
    (246/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.649187958 seconds)
    (247/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.175415073 seconds)
    (248/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.326103065 seconds)
    (249/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.56308271 seconds)
    (250/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.735422468 seconds)
    (251/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.076275702 seconds)
    (252/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.257108512 seconds)
    (253/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.454915664 seconds)
    (254/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.581170578 seconds)
    (255/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.928059541 seconds)
    (256/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.679116794 seconds)
    (257/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.425506783 seconds)
    (258/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.322999277 seconds)
    (259/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.157714877 seconds)
    (260/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.326713305 seconds)
    (261/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.60750384 seconds)
    (262/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.533762646 seconds)
    (263/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.31695001 seconds)
    (264/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.314341881 seconds)
    (265/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.3288659 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.417013825 seconds)
    (267/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.098326091 seconds)
    (268/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.410627098 seconds)
    (269/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.313820627 seconds)
    (270/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.345722905 seconds)
    (271/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.445555911 seconds)
    (272/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.752087818 seconds)
    (273/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.148292854 seconds)
    (274/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.041847903 seconds)
    (275/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.37685651 seconds)
    (276/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.307243995 seconds)
    (277/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.763442299 seconds)
    (278/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.384849688 seconds)
    (279/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.729732978 seconds)
    (280/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.415589162 seconds)
    (281/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.581519812 seconds)
    (282/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.701081378 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.358536982 seconds)
    (284/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.338632352 seconds)
    (285/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.414727678 seconds)
    (286/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.798456658 seconds)
  done (took 935.61898568 seconds)
done (took 936.845428777 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.360149943 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.359100842 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.33894705 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.363415014 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.451520888 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.363335587 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.348859687 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.344929174 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.388887238 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.390162233 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.338797957 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.363241304 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.339098472 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.342054853 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.339757548 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.355041593 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.375344664 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.343659853 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.359019403 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.350269002 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.356639614 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.339849772 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.390126787 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.361781186 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.346104823 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.343913661 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.344866847 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.360676415 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.452937473 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.346391383 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.344540709 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.351616561 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.379910927 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.339081557 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.339625015 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.360287919 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.35533409 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.35468535 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.348799894 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.374529944 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.822260716 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.366233769 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.345557289 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.346059003 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.343466246 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.348170973 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.342404627 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.3490314 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.358745273 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.360154136 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.828541773 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.382048268 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.348616763 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.347375423 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.357465447 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.346439823 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.348045348 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.360424002 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.363381521 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.364533335 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.404838632 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.355683008 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.347136977 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.363676983 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.349605628 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.879340307 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.363231178 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.35562872 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.829975559 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.371069059 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.885356968 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.37740262 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.354029686 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.366007909 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.383949062 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.414179525 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.347138962 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.352345404 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.360032528 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.348084144 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.355836989 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.360786575 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.355209337 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.345305149 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.359364911 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.378252935 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.361626185 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.348420607 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.357508547 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.367880204 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.355148105 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.365428368 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.352156817 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.342788948 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.358626771 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.351714444 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.357263238 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.353573007 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.358653237 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.362671024 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.835551928 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.388374488 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.347423742 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.34846773 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.352213412 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.367415861 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.836874798 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.369622966 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.376189076 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.402436204 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.357266799 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.381818209 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.354399305 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.372414769 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.363607581 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.358502299 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.350572528 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.382522511 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.850409878 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.386109073 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.353057112 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.353552007 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.369200918 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.356165505 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.350990913 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.394106918 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.351897512 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.365313346 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.475654359 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.363190259 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.380642543 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.353269199 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.357694673 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.378669717 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.366473768 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.385668079 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.355856202 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.372380918 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.365915931 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.349779976 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.362043477 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.367694151 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.352876631 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.357868356 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.342867955 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.380642565 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.366238224 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.366870728 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.375213696 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.472589365 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.348515726 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.380244947 seconds)
done (took 228.297342291 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.416427994 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.349179304 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.436201435 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.350397727 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.45197207 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.449330753 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.346230184 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.346272886 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.349122017 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.724375741 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.347250745 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.34543807 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.349607958 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.35187731 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.433153309 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.34861739 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.347796312 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.746420185 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.352664973 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.428619825 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.350877999 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.34873062 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.350495194 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.731823699 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.349055936 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.3496895 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.426858135 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.354616967 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.721084846 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.347281512 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.357128146 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.725437386 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.441138181 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.367420581 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.361671384 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.363552665 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.455413855 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.375468643 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.43479786 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.433181676 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.438712851 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.390739309 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.354893772 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.352271487 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.359601646 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.358422817 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.357447533 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.381158604 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.348361179 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.353955336 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.717846806 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.359706799 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.355579586 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.353650876 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.348126425 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.381784346 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.357858146 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.357286565 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.446367405 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.356676216 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.420666172 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.7329461 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.73196275 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.353262331 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.346540557 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.349809939 seconds)
  done (took 149.838640507 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.422610355 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.424106002 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.4648741 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.374825419 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.3988398 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.470348242 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.375469244 seconds)
  done (took 11.188106781 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.360401811 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.355041128 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.40062301 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.405258159 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.353111605 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.535364362 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.356266539 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.36710366 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.350145012 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.405564782 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.357493698 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.354458874 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.357109429 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.349833025 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.399558146 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.36602284 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.469850731 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.355380942 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.352907745 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.505181602 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.351661785 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.359422929 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.406225544 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.365134308 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.355000583 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.358665838 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.173482153 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.354637186 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.353059369 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.353259938 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.350987075 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.427759118 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.352502332 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.351046825 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.348886039 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.465891229 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.353645555 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.353442397 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.355341102 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.350800921 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.353285467 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.353869228 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.354974302 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.351077891 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.35267 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.378780572 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.355819197 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.355819782 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.356064243 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.354922234 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.406792097 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.356771457 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.352662973 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.352822156 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.408066796 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.362540305 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.353733845 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.353141156 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.354390882 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.355821297 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.503106333 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.401986138 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.35581299 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.405138133 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.354216799 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.357072955 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.357773932 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.354099315 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.409240749 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.356961048 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.403898817 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.354823254 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.536166666 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.379800949 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.356428487 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.356365169 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.354765193 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.358512867 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.351926447 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.362319452 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.351580238 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.35758671 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.361165844 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.35388705 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.353163976 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.521814058 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.461425715 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.352410247 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.369693919 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.363283703 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.353118208 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.408857725 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.359005501 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.35341832 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.411487856 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.470028577 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.407336365 seconds)
  done (took 155.664268802 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.358598422 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.365075515 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.360468981 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.380387665 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.375158313 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.35740438 seconds)
  done (took 9.458686505 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.360988554 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.358772744 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.35849202 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.358508803 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.358701589 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.362095005 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.357342154 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.360528827 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.359367026 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.361423042 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.358849905 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.36046299 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.36116836 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.358498638 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.358973688 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.359454851 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.361686804 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.356605721 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.359931156 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.358979536 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.467155033 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.359758831 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.36113132 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.361143102 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.365386173 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.360813245 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.365760815 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.362164484 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.35827479 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.368039788 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.379442756 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.361648905 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.360038765 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.366838006 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.363335829 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.364825515 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.365051494 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.363699713 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.358445993 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.360691121 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.363197597 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.361023321 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.361091539 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.365269665 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.362045956 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.367174221 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.368141497 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.367439862 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.361636556 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.364727593 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.362988421 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.362653745 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.361423943 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.363595193 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.364835242 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.382333163 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.369918647 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.359717416 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.362621802 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.367357933 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.364760745 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.36379807 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.366100196 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.366358484 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.361579103 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.364655554 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.363862307 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.366361824 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.365159733 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.365473368 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.363608311 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.362029611 seconds)
  done (took 100.499735302 seconds)
done (took 427.902302154 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.825097898 seconds)
  done (took 8.092166723 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.4660532 seconds)
  done (took 7.732225097 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.622046011 seconds)
  done (took 22.893919755 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.3710853 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.463336326 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.403453802 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.367341154 seconds)
  done (took 26.870394595 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.766626822 seconds)
  done (took 8.03327425 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.355518104 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.361411491 seconds)
  done (took 13.986618331 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.387951949 seconds)
  done (took 7.654457059 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.034618473 seconds)
  done (took 8.306641868 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.365450142 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.389837055 seconds)
  done (took 14.290256714 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.335204802 seconds)
  done (took 7.602885916 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.671901672 seconds)
  done (took 11.939978042 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.355891554 seconds)
  done (took 7.626615764 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.362592095 seconds)
  done (took 7.631629671 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.614525094 seconds)
  done (took 9.88309057 seconds)
done (took 163.811247751 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.361077144 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.359245596 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.360603533 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.358565051 seconds)
  done (took 26.711214948 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.397501701 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.400613938 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.39852647 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.411090702 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.401820588 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.396923825 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.391404377 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.392112937 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.410343431 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.402970159 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.402047954 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.402843768 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.399801083 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.390318425 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.403277959 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.397079088 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.40826896 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.400797963 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.392822849 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.406394513 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.37003897 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.412546934 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.40534781 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.369718709 seconds)
  done (took 34.835410731 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.891014899 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.436664676 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.523067386 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.421223127 seconds)
  done (took 7.546509429 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.425393172 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.419444893 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.433741804 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.472604191 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.505022597 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.429583675 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.396004803 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.390652197 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.378310791 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.42737146 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.503213877 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.441456438 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.505110269 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.36693084 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.578069408 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.369970654 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.369006386 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.421440822 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.473596074 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.48562141 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.371954449 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.424627294 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.431409445 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.442141928 seconds)
  done (took 35.735764134 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.375227346 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.393267221 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.371340158 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.369261788 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.378249384 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.366750766 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.36922277 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.368350096 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.369926215 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.375518772 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.371767791 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.381883548 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.368919976 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.368945364 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.374819156 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.370841661 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.376635392 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.367625817 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.369504067 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.383702548 seconds)
  done (took 28.746440883 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.369203692 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.217745825 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.716607946 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.61963134 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.369745491 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.372490748 seconds)
  done (took 27.94337963 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.44416075 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.603348409 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.377058213 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.736363274 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.838385142 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.391968941 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.368664919 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.620058451 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.951721529 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.940348996 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.431454828 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.447074321 seconds)
  done (took 20.429725203 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.376715218 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.372178598 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.37472311 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.38895516 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.433526656 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.398947929 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.385248574 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.371422187 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.43449892 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.454886239 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.397180035 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.436267167 seconds)
  done (took 38.102973722 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.45794728 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.411113676 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.369080575 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.378338796 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.081636971 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.57973899 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.364363165 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.097303408 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.389586764 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.644246772 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367228024 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476008089 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.626324065 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369897933 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.376201807 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.321249215 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.60871215 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851754818 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365792419 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.487132399 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401235014 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.366920572 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.575466203 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.616477529 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.604238183 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.349165812 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.628821082 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.144551725 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.661265875 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.387269818 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379733086 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.369678009 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.64156068 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.373903444 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47196211 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.589356447 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393968407 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.013752222 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.357251626 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.487941039 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.393884383 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.379501901 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378997656 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371174327 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.301133119 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.369772366 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.414570059 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.370280663 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.080223984 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.369108719 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.630900875 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468823258 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.369840805 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.941957946 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.457327229 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.396876396 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.371048159 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.461250577 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964610686 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.714973601 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.381107755 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.308025501 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.380996407 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.493355824 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006124217 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.390913436 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.371266268 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.376187809 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.310177433 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.472933848 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.392022384 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.524231285 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.392316068 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.028006034 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.078696235 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.405700973 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.306513549 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917859545 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.37272298 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.327955483 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.604328166 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.150061832 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.311124494 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.323382952 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.304478783 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.076773529 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379783916 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.801809686 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.391628169 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.155217624 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.625287047 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418859048 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40287891 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.602983157 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.254791129 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373156544 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.378407175 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507111572 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395128647 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.145148886 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.337927883 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.373875106 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.629291718 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.585908066 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.38621874 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.33123267 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.247968722 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385140161 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.399042432 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.378235232 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.605758303 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.987002148 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.412996455 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.718627592 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396296943 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.157008614 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.121310739 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372481559 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.384401681 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.395405669 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.662229493 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.129389953 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.273886832 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448753658 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.381710761 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.383368489 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.523882825 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.234922924 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.277440407 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.587215446 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.399585101 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.393334396 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.382794372 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.339528792 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.380327399 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389101368 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.162032924 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.602485592 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.382897329 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.656378708 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.31902956 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.530727778 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.385399345 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.600338846 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.612280728 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.404369912 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.643014142 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382730922 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.39773804 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.410792359 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402792708 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484368622 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402988971 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.391607341 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.639029686 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.385431586 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.386691462 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.527705951 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.161149543 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389197667 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.386613777 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387181876 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.971880343 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377135433 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.384668989 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.269468899 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.393746203 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452837697 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.387796362 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.609976523 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.696980096 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402252109 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.389203456 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.388542072 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.60686441 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.38937098 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.504420433 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.465170532 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.898005905 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.993101306 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.415456957 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.318708682 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.091724799 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.078696008 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385220423 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.574044836 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.388490959 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.611635783 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.421105693 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.403178872 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.969855679 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405043092 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.530051412 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.393385732 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.397034251 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.687082787 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406824887 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.684500767 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.772667634 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.39859527 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.397868724 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.530056772 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.401482997 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.323903274 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.905254999 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.390939103 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.386833253 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.162324933 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42001121 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.541117531 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.682653186 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.664615032 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.3985166 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.651702135 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.614944141 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.421028161 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.409487157 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.390300189 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397410968 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.396016592 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41397567 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.39901808 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.511859314 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.831344002 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950184281 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.108825365 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934945423 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.669883143 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.415849634 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.272880346 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.171932416 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.341984064 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.048033738 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.632659133 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.192205923 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.353808743 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.254939474 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.619619015 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.194321113 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.656327372 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.620786849 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.651003068 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.411569233 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.656397185 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.602869941 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425625048 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.394840841 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.320174821 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.902025014 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.387545563 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.384417745 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.469556793 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.521710353 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.392882261 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.171008208 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.451211904 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.125429888 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.125799781 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.936253942 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.778731186 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.396226858 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.397889654 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.721870784 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.415887521 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.91617544 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016866241 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.417976049 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.903794341 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.344581998 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.620227836 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.422772688 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.388515054 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.034301457 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.408239604 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.649081176 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.657041575 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.328263521 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.393126977 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930073235 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.265056681 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.398845456 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.843402697 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.136314473 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.38835238 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.687603033 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.397986297 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.685228274 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416277552 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.326080959 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.329433092 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.086608541 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.394173027 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369340765 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877834603 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.395573828 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399148231 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.399256611 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.241430138 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.652330224 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.407601628 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.985275744 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.639608979 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.39982226 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439899555 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.39959646 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.40009769 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.37387452 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.290989496 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.632882312 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.43823194 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.64052574 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.395455158 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.2870884 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.441650028 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.606099149 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.296108992 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.407257935 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.633903801 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.125740295 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.411668047 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.143215845 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442263444 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.395035238 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.410336085 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.388436135 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.436679803 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.485208985 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.623363518 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.429332024 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.409776315 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.121215847 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392513937 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.403913975 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.409972515 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4896642 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.800284874 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.693007372 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.186339677 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.991078477 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.168443466 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.011901228 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.683079212 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.397847349 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407581802 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.330807046 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.537900297 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.923265296 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.673209357 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.531018796 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.394103148 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423816452 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.397968393 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.428226326 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.612992511 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676020182 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.271523975 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399125115 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.056296801 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.558485187 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.4079839 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.611504847 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899130559 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955309774 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.513376683 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.416161989 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.170316283 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.692162122 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.465736259 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.401233694 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.90369555 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.402470124 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.154145724 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.397769105 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407097325 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.549657699 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.666626238 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.407341616 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.406387649 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.564627501 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.180454027 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.565239522 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.656483963 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.883692689 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.628810914 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.015022091 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.139735095 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.665730904 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.467558383 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.630237865 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.526609341 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.548037573 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.398100839 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.281879451 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.402793363 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.249656933 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.112734336 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.41244927 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.002621927 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.681320022 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.403259194 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.405769981 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425023711 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.411338248 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.623473302 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.122559863 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.63479506 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.408756798 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.401921266 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.966887787 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.999819623 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.684775573 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.333786532 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.399074942 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.639543856 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.657331411 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.419560065 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.850997089 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.110800687 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965746337 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.364447948 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417054528 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.403509595 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.12001637 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.005813022 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.721538633 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917252356 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.052875848 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.402137876 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.674279855 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.401771638 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.413532798 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.67673959 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.404777624 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.400262815 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.628255898 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.015611799 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.216203728 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.403663641 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.603340037 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.342470706 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.632076034 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.440371616 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.340082578 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.394774734 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.835496465 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.425202967 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.527394163 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.410505399 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.404876751 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407689559 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.156213816 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.687053211 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.404239618 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.384041659 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.395558479 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.408471741 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.50087283 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.475706035 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404468763 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.073557104 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.753922334 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.658534779 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.412835515 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.384915561 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.407417603 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401807493 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.073975606 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.366422993 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.402199854 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982331278 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.415394037 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.415599384 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.40941313 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.624133074 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.618762334 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.414587859 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.636094587 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.437908431 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.420536636 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.307218777 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.169306637 seconds)
  done (took 1704.072370145 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.428803919 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.446271504 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.416957132 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.509723835 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.448412188 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.510523708 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.495555919 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.51928127 seconds)
  done (took 53.083096282 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.414019036 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.566730057 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.440939306 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.41411776 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.410268178 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.409727914 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.879506587 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.428267669 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.405272588 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.413507203 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.412981769 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.408786118 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.04441588 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.417380865 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.421720736 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.415221479 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.416493163 seconds)
  done (took 66.6355392 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.590102492 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.500806831 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.542233258 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.403117295 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.444160642 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.415719735 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.527835215 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.425272583 seconds)
  done (took 54.161072545 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.414638267 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.417921433 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.419469563 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.417775616 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.417986673 seconds)
  done (took 8.396858664 seconds)
done (took 2107.675947438 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.409645282 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.407931605 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.407011944 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.413650784 seconds)
  done (took 6.949669437 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.383100998 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.066597005 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.383098507 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.396499473 seconds)
  done (took 18.540508046 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.415920711 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.403408501 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.100743973 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.014945724 seconds)
  done (took 5.426037839 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.166494154 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.17181133 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.154732666 seconds)
  done (took 7.807987826 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.4058535 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.40955875 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.406655718 seconds)
  done (took 20.53375363 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.704101597 seconds)
  done (took 3.018223562 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.557538482 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.599813519 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.724830395 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.730440387 seconds)
  done (took 7.926250358 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.797387455 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.779182317 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.605730195 seconds)
  done (took 6.495685056 seconds)
done (took 90.830446237 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.331163696 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.40461099 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.613383384 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.339372052 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.636538196 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.630785269 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.821311497 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.304324596 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.80402754 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.79129102 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.295085902 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.633818839 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.55880156 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.658784281 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.562119378 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.785831188 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.718691742 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.360365827 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.018185904 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.180947858 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.828629074 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.935199794 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.126637796 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.953660259 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.695738367 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.561336805 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.517350682 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.783143203 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.192473672 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.533422622 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.556046911 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.357265377 seconds)
  done (took 195.802240524 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.406671154 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.403342242 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.404951349 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.4173516 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.419732901 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.408149715 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.424592137 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.403920505 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.416403378 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.406928535 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.406912174 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.407209411 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.422331866 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.424278402 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.420030099 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.403561017 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.409263622 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.419571301 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.402741371 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.418410621 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.409015199 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.415894946 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.417823143 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.407250983 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.406663679 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.403094222 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.415638786 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.406641236 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.425093382 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.404213347 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.420559606 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.403834304 seconds)
  done (took 206.493262679 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.420724955 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.404563139 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.425007153 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.409300296 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.426953678 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.408519148 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.410568535 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.421331023 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.415819935 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.408273465 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.406083407 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.404895765 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.425436853 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.406665839 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.436326176 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.404286166 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.430179944 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.406196197 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.404052304 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.414307158 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.407261762 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.423760697 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.421829875 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.405649573 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.41988021 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.410560298 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.433895358 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.407112322 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.424038061 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.425832031 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.425117467 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.411270804 seconds)
  done (took 206.617265991 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.61803706 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.4261797 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.423644966 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.377424985 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.427864799 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.425923189 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.421496683 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.616802925 seconds)
  done (took 15.052643451 seconds)
done (took 625.281158161 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.740635515 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.461200983 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.619029056 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.448009905 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.281019898 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.463743236 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.441150867 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.616279405 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.367312418 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.623362733 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.702084348 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.461695758 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.847236766 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.445350899 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.712469835 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.542085125 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.370736858 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.501862532 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.77135729 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.008588247 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.700805528 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.95350034 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.639692547 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.350310408 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.818423027 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.913725383 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.214575831 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.337791297 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.453996067 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.781350087 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.120132667 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.456209921 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.482899967 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.506247423 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.565568776 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.548068515 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.44002382 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.498913387 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.648578111 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.667798998 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.018312793 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.165211273 seconds)
  done (took 96.024645769 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.411067924 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.409323088 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.409209214 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.406473326 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.406445604 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.406523305 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.407965654 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.40779169 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.407902237 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.405196192 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.405008074 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.406200591 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.409209761 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.410536075 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.407489361 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.406882372 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.409169431 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.413206239 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.408312885 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.409704384 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.405384613 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.411467643 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.407770248 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.408197231 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.411350981 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.406118661 seconds)
  done (took 37.935072528 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.430204352 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.676578726 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.845608931 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.432975459 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.427597473 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.435187804 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.506349563 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.433308246 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.431853823 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.428892147 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.581128822 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.434422713 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.460060552 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.877883057 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.433104365 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.427779323 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.423916177 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.427190737 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.684659422 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.430160511 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.526115792 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.4346842 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.510174722 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.440375958 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.444507691 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.427125622 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.433976364 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.016643687 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.447711539 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.584869079 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.252025039 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.504867416 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.982824857 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.887601444 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.248272199 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.431442263 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.426494569 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.590514041 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.426972461 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.429017359 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.507760657 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.431538558 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.864888028 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.112083093 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.451642721 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.427612251 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.038699708 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.610856452 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.681756087 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.442066493 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.886489445 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.436124863 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.429407209 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.432644639 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.687560274 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.437481827 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.428029194 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.070824757 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.44815767 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.508394799 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.435864457 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.427673856 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.692698035 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.432101989 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.680281301 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.429584923 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.438767315 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.453221615 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.876053001 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.434541742 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.139631682 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.451403895 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.430593177 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.590735127 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.680434598 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.075040148 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.453720257 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.693479062 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.988858932 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.530269797 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.437699075 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.009275118 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.533853761 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.441178722 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.430911944 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.429751103 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.426677855 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.522377231 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.505025298 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.072000472 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.150898028 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.068699223 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.525735889 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.443231407 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.431623713 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.057760809 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.445511666 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.431131234 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.859362936 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.150786959 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.449071808 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.438772705 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.13965616 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.45200128 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.510012584 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.441761136 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.875289378 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.438666112 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.478441518 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.428226769 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.438120259 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.453627066 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.510784894 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.437323823 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.429753803 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.104202539 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.614731018 seconds)
  done (took 188.681738034 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.429167232 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.419411186 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.44520585 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.421940289 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.427563884 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.436807513 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.42552911 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.429794926 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.433129104 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.425928447 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.43299266 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.431381916 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.424788224 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.433067807 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.449154757 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.436578388 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.036300073 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.42807647 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.42604705 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.421840998 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.230061044 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.43021526 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.431511708 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.438665144 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.433478774 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.425502843 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.435787664 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.445408804 seconds)
  done (took 154.813777938 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.43829766 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.02030768 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.446377414 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.573326072 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.458552877 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.434889343 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.565700564 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.499752583 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.456260918 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.436972317 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.436645477 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.743299798 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.431427266 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.965905723 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.630025241 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.591179937 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.987275843 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.447981109 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.43623235 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.435204729 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.570078774 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.437034553 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.758168789 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.038972529 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.455167494 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.0312484 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.420307245 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.437228278 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.432745118 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.035312094 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.450520465 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.758255898 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.521670649 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.49955355 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.039602416 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.979521165 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.996495054 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.589238105 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.441953532 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.433027075 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.433152749 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.418507725 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.024334019 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.452129204 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.440627915 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.008853143 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.452123796 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.441499187 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.442256723 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.433808476 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.495337269 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.520302995 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.783281253 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.048572668 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.531540685 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.455292898 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.576060129 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.825327382 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.434940367 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.970674596 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.414223735 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.043432412 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.461648653 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.420193015 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.439673593 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.443178055 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.593192266 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.577373672 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.975718856 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.449745172 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.973087788 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.603703112 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.443357404 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.444793598 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.441765919 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.048582749 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.993224944 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.606504966 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.581638469 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.639364189 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.425303833 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.439731261 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.421960676 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.521281002 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.442858367 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.041574623 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.983376714 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.454214998 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.438334558 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.444440367 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.439690259 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.625714905 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.068171617 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.540146488 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.961310656 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.769175337 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.76410616 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.442247502 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.499453947 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.457100019 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.763473199 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.438544995 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.500700247 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.892142313 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.752266646 seconds)
  done (took 171.405228946 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.693119329 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.647670638 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.52206303 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.587264408 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.045350827 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.013837602 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.769340183 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.574445891 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.552480093 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.699683634 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.605229065 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.544079771 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.652875754 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.519184131 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.193571194 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.536749407 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.547838282 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.591417509 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.605154527 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.471534843 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.128793748 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.734293473 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.640814916 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.356465042 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.531642276 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.201976567 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.010220094 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.967645718 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.620986997 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.807612565 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.985060853 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.567859746 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.403393596 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.161722189 seconds)
  done (took 68.825549619 seconds)
done (took 719.006905093 seconds)
SAVING RESULT...
DONE!
