cset: moving following pidspec: 744
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.296922738 seconds)
loading group "string"... done (took 0.58635635 seconds)
loading group "linalg"... done (took 7.135300391 seconds)
loading group "parallel"... done (took 0.164977531 seconds)
loading group "find"... done (took 1.121425753 seconds)
loading group "tuple"... done (took 1.983374006 seconds)
loading group "dates"... done (took 1.26923721 seconds)
loading group "micro"... done (took 0.23451362 seconds)
loading group "io"... done (took 0.966022408 seconds)
loading group "scalar"... done (took 38.657001162 seconds)
loading group "sparse"... done (took 12.426878587 seconds)
loading group "broadcast"... done (took 0.979672627 seconds)
loading group "union"... done (took 13.200474113 seconds)
loading group "simd"... done (took 4.471435033 seconds)
loading group "random"... done (took 9.030011554 seconds)
loading group "problem"... done (took 1.923221927 seconds)
loading group "array"... done (took 21.417313546 seconds)
loading group "misc"... done (took 1.937280996 seconds)
loading group "sort"... done (took 3.254275958 seconds)
loading group "collection"... done (took 18.143058397 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.535217812 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.142852766 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.118852404 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.14050376 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.184878543 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.13298247 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.145579097 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086476868 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.028111495 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.163227055 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.141032409 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.479833565 seconds)
done (took 5.06079993 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.203989436 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087457547 seconds)
    (2/2) benchmarking "String"...
    done (took 0.09707734 seconds)
  done (took 0.885329203 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.06691242 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.127647404 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.081346739 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068328404 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067651963 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.081929132 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068075093 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066520135 seconds)
  done (took 1.269422159 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074863124 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069617397 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.085108128 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069849021 seconds)
  done (took 1.00843885 seconds)
done (took 4.152105246 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.899264078 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.235893532 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189702975 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.455208205 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.148884774 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.190209373 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.669476359 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.318711244 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.211872011 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.101313844 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.106698427 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.378542592 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107694872 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.662557471 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.079454414 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.107984269 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.159793594 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.416409258 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082714016 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083805029 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.105290262 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.143037913 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.10123936 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.07806197 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.170662481 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070823141 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.149087088 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.096698451 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069009772 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.245788604 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.190858021 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.690487027 seconds)
  done (took 10.462086192 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101537018 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.117974298 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070373945 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140883584 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.102110254 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.087237532 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072882161 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.085026767 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.092058127 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.159909428 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.116372972 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.107158493 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.08227905 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070897933 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.101927363 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.212897769 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.108254036 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.086635382 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.087694831 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076952128 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.123131267 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.083830462 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.095575811 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.080108031 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.153692563 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.196901038 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.115837661 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.113804961 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069697099 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081833303 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.132393513 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142381411 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067469102 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.083177164 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.140985108 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.111366803 seconds)
  done (took 4.593416021 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.026398941 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.086773204 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.161809793 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.109630049 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.153262117 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.068832561 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.127333023 seconds)
    (7/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.108435808 seconds)
    (8/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.067063352 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100989489 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.246426143 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.142283853 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.47712288 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128341533 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.088464474 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068545119 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.087926822 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068170786 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.516082326 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.146970184 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102212243 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.104426524 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09092818 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.071411822 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.359099274 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069798756 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067612036 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085736228 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.060902966 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.145771001 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068907811 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.219666325 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.090048504 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.088815968 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102620547 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.194568587 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09635291 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.123164948 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083135283 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067956978 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.170917579 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074976736 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.084823285 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.089735929 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120823267 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.121232064 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.070005593 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.083803592 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.182219144 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068745046 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.100438799 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.875816117 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.165522112 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078729688 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066917669 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.286882626 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.106030665 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068370381 seconds)
    (58/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.065344947 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.082354388 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.244234013 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.166672424 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068979726 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067323111 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083554039 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069874456 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.367768431 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.083513293 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.648332275 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.072401973 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.081082332 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.086290757 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068196422 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.0888607 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073687434 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.101802503 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068076927 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.068759872 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.083895591 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067469913 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.084619935 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.086181411 seconds)
    (82/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.080457292 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.203608078 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.068697516 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067776507 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.082540303 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.086468021 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113247502 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.07075522 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.082165253 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10080136 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084426584 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.068372074 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.120201179 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067539633 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.103451595 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085606605 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.115121153 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082823786 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.121692251 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.073083692 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.111886134 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.073250742 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115518613 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.094582435 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.0690698 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.153686887 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065554597 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.082670208 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068026821 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065782582 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.085074467 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068881302 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.099178275 seconds)
  done (took 20.942054995 seconds)
done (took 37.733089976 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.292604288 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.092776087 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.093102088 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075738117 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.092955938 seconds)
  done (took 1.433896894 seconds)
done (took 2.194737204 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120457173 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116975742 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064524264 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112945832 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064408571 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.116713997 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.115209903 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082765652 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118854373 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064942436 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112108347 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064993914 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064418198 seconds)
  done (took 2.006435405 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083846772 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085421057 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086417134 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082865688 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079596419 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084087604 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081104897 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105229288 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081805187 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089275519 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065440162 seconds)
  done (took 1.67909752 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083155311 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084757901 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085870497 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082109378 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07974494 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083187926 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081080741 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102999591 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081941435 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089832339 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06530687 seconds)
  done (took 1.67563234 seconds)
done (took 6.111649062 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.07966664 seconds)
  done (took 0.829353623 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.694388815 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.677576769 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.085460761 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.13498688 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.222428483 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.156564101 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.447741181 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.109761115 seconds)
  done (took 10.454535373 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.090168785 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.099950482 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071474368 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.086569746 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.07034551 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.086634685 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.071536919 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072949917 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.087921062 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069553972 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.088764741 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.073658817 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.086780984 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.074232842 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.072246616 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.087261383 seconds)
  done (took 2.107960353 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094647485 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.093696896 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.0923616 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077369515 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.090483294 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074494845 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.093693351 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075751602 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.088093797 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074387613 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.092705664 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.0762817 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.089462775 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.06746918 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.091928979 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077694176 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.088699355 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076603476 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.092564549 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.07777897 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.091867065 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06643873 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.089358907 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076790175 seconds)
  done (took 2.873451242 seconds)
done (took 17.022306515 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.131570959 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.077927164 seconds)
  done (took 0.966802806 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.08262888 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.098575781 seconds)
  done (took 0.948290671 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083871231 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.081940632 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.09098573 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.094865664 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.067385642 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.08261713 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.103434905 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068342015 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.082165663 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068494648 seconds)
  done (took 1.591168127 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070505884 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094083717 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071814309 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.098340099 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076686019 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.08233151 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.07482277 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.085309476 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080028104 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.079581391 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.07303382 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.100408461 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.073030317 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.10193465 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074408261 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085514335 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.088073677 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068969442 seconds)
  done (took 2.248092839 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.06748806 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068813429 seconds)
  done (took 0.904247221 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070103638 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065465119 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083202105 seconds)
    (4/7) benchmarking "year"...
    done (took 0.06819823 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.079920069 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064181877 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.080577616 seconds)
  done (took 1.279411054 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.399987684 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109636491 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.242987931 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.089198012 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.104768951 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.263209247 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.084645206 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071951876 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.089353129 seconds)
  done (took 2.26145064 seconds)
done (took 10.963851432 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081163373 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087374445 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111245108 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.419075553 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107925567 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067532068 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.142151489 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.207429452 seconds)
done (took 1.995643782 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.126224325 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.617444447 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.403008791 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.213581618 seconds)
  done (took 2.009935387 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.372719709 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.092961177 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.075067405 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068197515 seconds)
  done (took 1.387746832 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067588687 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070987983 seconds)
  done (took 0.916305832 seconds)
done (took 5.215878203 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068027943 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067601273 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.105863213 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.065316277 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.085516781 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067309403 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.065184692 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.082896457 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067828845 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.0678105 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.081789958 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.070174294 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.082393156 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067764254 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065149225 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080788582 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065369559 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066958471 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.081226672 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065397839 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065128398 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083324265 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065610082 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065415166 seconds)
  done (took 2.561823913 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.086391048 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084060801 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073347643 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.089464231 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072565049 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.088731629 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.073596369 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067945295 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088895654 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069596029 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08782861 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071572161 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.086245766 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.07279564 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085694658 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.07192521 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088889287 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0712517 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070258043 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.087576881 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073638427 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084091471 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.07208668 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089484299 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071665699 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08747961 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070055176 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.083854938 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074033998 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.087342058 seconds)
  done (took 3.163717503 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072041505 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064955749 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081668681 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072052484 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.06487587 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.082590005 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065194771 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.082115089 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.06674687 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065140086 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.082800198 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065420127 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065483879 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.082986142 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066467487 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.084717345 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.08275237 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.06551388 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.081822708 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.06687418 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068081077 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.081388243 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065496003 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.081304799 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065830968 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065071725 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.081467129 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065590568 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065738114 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.08164676 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068377319 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068608165 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.081432225 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071565722 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.085032109 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065469598 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068907156 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.080916155 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066227225 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.064681028 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.080851758 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.065537687 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.064758525 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.087784817 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065662532 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.083717469 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065679095 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.066773266 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.082212873 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068223694 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.081108033 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.065696358 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.06800469 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.082327759 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069177942 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.065691263 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.081921999 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.065272115 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.082480064 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065928145 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064542195 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.080834406 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068568068 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065636051 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.09655038 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071911746 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.08102244 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067753853 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.066893559 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.08360532 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067288347 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.07898862 seconds)
  done (took 6.03936468 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.118163219 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.092535718 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084937726 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067661269 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080469406 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065809755 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069217135 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082296639 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067561781 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087991426 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066530808 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067067719 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083753063 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078501682 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081885281 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067852772 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.08731313 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064609295 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.066031186 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085686049 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066221758 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.084873919 seconds)
  done (took 2.503848713 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.187169619 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088626748 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.11060588 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091897639 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085567117 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076211924 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071347368 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088202351 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07239543 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087456803 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07073816 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088292527 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069829681 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085863736 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069940981 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086171273 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072225812 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086244196 seconds)
  done (took 2.376112526 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079303505 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067507936 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.107306982 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068004271 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.08430847 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070190349 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089991192 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076435351 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086826252 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068180783 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092816991 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070670193 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.085756427 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068755626 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0700438 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.08378943 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070608461 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084350358 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076487727 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089930784 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07322203 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09280081 seconds)
  done (took 2.545710068 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08264692 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069638898 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.102301812 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086446738 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064828358 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066597265 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.091339793 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068597565 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.090063131 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.070235573 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068352963 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082424322 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072735235 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.083930168 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.073146249 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083997303 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070068632 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068393466 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086351631 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063779371 seconds)
  done (took 2.334489106 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088635717 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085136278 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06875702 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09404166 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068878389 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.085443979 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078168843 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.085259773 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068969131 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.109461647 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069586475 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.085694645 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078101326 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090081201 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069259418 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093163088 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076707655 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093356512 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068798633 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084670771 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.219258274 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069710355 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093847384 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068888562 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084267696 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069278827 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068797477 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090649698 seconds)
  done (took 3.200374826 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067891234 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068090313 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081494393 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065117249 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065461422 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.081706 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065048988 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065424183 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084541443 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066017836 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.06761083 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.08391853 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067825324 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.083650501 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068205423 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067752554 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083697819 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066168598 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065800973 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082076208 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.067469096 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067400597 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.084559158 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065842873 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081475703 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.068138594 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065562071 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.081301646 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068093678 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065698 seconds)
  done (took 2.955527847 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.078447544 seconds)
    (2/2) benchmarking "in"...
    done (took 0.091781563 seconds)
  done (took 0.966170379 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066310711 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082388176 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.082338233 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072425073 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.08887776 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069575336 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.092351412 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072812526 seconds)
  done (took 1.420623268 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.08298969 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079348104 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086788056 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080068311 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.09578428 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084807564 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.156104026 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086821646 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075202899 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083594291 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082438854 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067544802 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.091310434 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068536372 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090589383 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073962037 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065875539 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.089666794 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.07082753 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.08412388 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069583985 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092821487 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070399467 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064875011 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.08603638 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.07739795 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.095519541 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069768946 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087404339 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.074949279 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072679051 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.079184007 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068199098 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.08568541 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066645786 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.094173298 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082704764 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087063541 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076412175 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069485727 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.094556043 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063190614 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.088884952 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074498968 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09419432 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068346973 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068443793 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.080578127 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066165938 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086856054 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063822265 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068201419 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.080149066 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075025548 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.087955527 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078720205 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.069231081 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.086246272 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.07079084 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088074407 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074953854 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.08633579 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070665501 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.068149437 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09447519 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072644588 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093602813 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.064107629 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.063084124 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.083722207 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.07689133 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107068264 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074646765 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.085435568 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069205665 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.082589904 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071845391 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069515352 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090111125 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074298937 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.085163017 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074547519 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09141209 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067716083 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070484517 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.092659281 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.0670918 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.086942157 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066053612 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100161217 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.067136262 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.066114651 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.082544696 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078261891 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087476563 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067979839 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.082046554 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075332681 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062570985 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.085998302 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069305783 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084377425 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.078708568 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089982277 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074068302 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.092671847 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076737713 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067566035 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087752994 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065591282 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085824687 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.067071407 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074999577 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.079809496 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070510194 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.084646623 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.069183788 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076359506 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.083877346 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068576837 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092203581 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073646645 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.083270075 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.065420325 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071416837 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.085126444 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071769376 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092567961 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.068398409 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063734421 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.080419182 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071515562 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.084767364 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072450959 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089955342 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072163671 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063732797 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.083799969 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073445677 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.093949678 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068914214 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068190571 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.091446983 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069802497 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.084882 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074563742 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087179339 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067421753 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073463384 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.085853801 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064433042 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088239506 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070496194 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067196676 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.087977971 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07202831 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087573389 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069685254 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066284232 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.090942252 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069156114 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.08358829 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068953844 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.083642065 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078344691 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069884668 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.080723146 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.066099745 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.092492827 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065676886 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067900447 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.083922267 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070299063 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.085901674 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066358554 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067070131 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.086717723 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079013128 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.090216017 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.0687882 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.091085402 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078600625 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.085092138 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071412471 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.068666252 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086114213 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069458697 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.093756273 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073616311 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090008479 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070781524 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.064948478 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090502454 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075596647 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084011975 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.067081153 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067166064 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.08895557 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073890324 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.089342088 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.070202349 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083302242 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069210624 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071708807 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087973638 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.068487758 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084230776 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073792058 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.066903025 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.092741243 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069179322 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095729394 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071379331 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.081149264 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072268786 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082910053 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074080913 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063282951 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.083898539 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067608455 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.069554156 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.084577731 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.07111794 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.079233121 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075347746 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092409849 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069369478 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067678833 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.084934427 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074944474 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.085880821 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072655492 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070792901 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.090748864 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07854549 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.084160589 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071258749 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.095017083 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068884297 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062706363 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.090297437 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067526247 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.084454081 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.068166882 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066427381 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088657804 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.077285612 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091676235 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062847869 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.086407074 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067672443 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067232343 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.081251265 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.074046212 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070643546 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.085845616 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075050292 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086707171 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069352436 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088420636 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.068567298 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068600751 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.087144385 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070817199 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.086293462 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.07069368 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067328482 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.088097628 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.06720675 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.083493565 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.071161552 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068417911 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.086119227 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074949897 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.08568629 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068767075 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.07017644 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.086023089 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069099735 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.085595092 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067943209 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07052199 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08702122 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068223943 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.088328049 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064240507 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074626642 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.085575966 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075298127 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.085545015 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.065772424 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.090877368 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071383205 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073176657 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086986303 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.069911645 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.086180009 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068625721 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070231844 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092961226 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066772884 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.095968879 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075939526 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086202138 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071290943 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068360549 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.086323272 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067895924 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086340056 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069167613 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068622196 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.086460993 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073311491 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.087695223 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068516625 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068736564 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.086664474 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068175275 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.086972998 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063231361 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066250608 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.084632979 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068161759 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094601731 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.069076778 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.084417166 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067486994 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069229358 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.084932021 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065167885 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.093124244 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077122078 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.085864882 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075618523 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067555966 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.086927044 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077710686 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.079894001 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067118461 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.065584157 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.082977457 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074836841 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.086289571 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077303263 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.084839004 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067505489 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.066434666 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.086485846 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067975716 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062164613 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.083824806 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072293976 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.084016434 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068460419 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.068145169 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.088709996 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069919452 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094330423 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.068486875 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.086274851 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.069438944 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.066123744 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.084567628 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068248079 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070796096 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.086760618 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066118116 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.083760758 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.069240327 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068868114 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.087020883 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068478334 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.086662449 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074999368 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067790433 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.088467659 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072099279 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.083553908 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071287809 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.067511631 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.085774084 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067752406 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.089438321 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071904227 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086311883 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076604044 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067762342 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086591219 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069054512 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.083554602 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068571109 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.068417721 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.08641111 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067395559 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.087271947 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076805733 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066064954 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.088403986 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067762775 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.085946081 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074644232 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.086053121 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071577091 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07534601 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.086606479 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070421989 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.093291827 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.07266122 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088463555 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070035443 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069890654 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09135023 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067374401 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.092066923 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.06902676 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069094999 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.08718712 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.067095413 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085820193 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.069183536 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.0676368 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.091916425 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.069534803 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.08516948 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068193456 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.06685582 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.08641648 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072174383 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092861171 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071526979 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088515817 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064730195 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.065695186 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.08768234 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066493437 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069191888 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.089070938 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074063304 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.0886734 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069298876 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.084439725 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077634527 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074075015 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.09017986 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066495119 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.089370418 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069497248 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070058499 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.087265691 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068632923 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087601798 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072547788 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068906186 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.086552735 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075573638 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.088782516 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069480186 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.086895661 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069380972 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068586698 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.081814298 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069283829 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.087431051 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074237024 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069848083 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085950801 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078486682 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083106198 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068879959 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071057148 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086537943 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073635409 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.081537143 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070569318 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086116242 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070126991 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063752576 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.085868365 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066600661 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070340282 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.085624472 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063748262 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09575262 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077225382 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.087916677 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068288387 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067997502 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.082106235 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.06417453 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.083915164 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070525501 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.06990105 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.096138252 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067495556 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.084443875 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064606172 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068452015 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088894608 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.07179699 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.083770674 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.065032862 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067597104 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.08937691 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.07395166 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084134623 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068782437 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070765889 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.087956863 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066839533 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089457351 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.06546331 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071540586 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098284344 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.069118703 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086879319 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074118113 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094142597 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069673997 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063876464 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.087410691 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071050152 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.086678434 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.069715456 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.087007137 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082942997 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088800432 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067661102 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067463381 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.088423175 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068225397 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.093283885 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070002464 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.069254252 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.090438904 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070291031 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.095212286 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07159011 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093846381 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071012589 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070273561 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.085561883 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068442297 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.084392834 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066928206 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.069451227 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.087549178 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073597638 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.094175735 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067654074 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097474569 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077786583 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088043653 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.066452544 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.068014238 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.085822566 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.064636378 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.069519398 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.085719823 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.067302406 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.085584569 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.068424932 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068892097 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091285553 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069727607 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.087360747 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.069065247 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062907318 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.088557444 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.07126028 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087089284 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.066408027 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.068435559 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.087303689 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072212565 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089589897 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.067051795 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069904181 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.087301452 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069694276 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.081709825 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075539641 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066898951 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.088526646 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068051187 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086308535 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.069829666 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071599569 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091838918 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069740836 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.088778104 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.076861801 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088341849 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.066049757 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.065088889 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.0916718 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.067116081 seconds)
  done (took 47.00910864 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108827839 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083980635 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064428939 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081734081 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076918122 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08306609 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064457632 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064784645 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.083245187 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067742446 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.081921279 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063854318 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090198224 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088467969 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094518768 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068391727 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082432839 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065949747 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08238943 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06532182 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090875871 seconds)
  done (took 2.498471764 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.076884378 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.090653498 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075070183 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.096321935 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070604506 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.091132645 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075095232 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091074172 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095772651 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06979709 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.096662133 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073064319 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.087153116 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.070277251 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086551972 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074775441 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.096411132 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069831207 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.090814305 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075144068 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091286149 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075420329 seconds)
  done (took 2.661117241 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068588922 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067455974 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.087266301 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063817959 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067490002 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.081466329 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.071897838 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.083455347 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.072818164 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.074395401 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.085346853 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067020541 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.086579276 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063472771 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067343513 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.084063404 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.133149189 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.071077847 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066605963 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.087660389 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063533776 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.088517532 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064187758 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063401066 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.085226173 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.072169029 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.086367721 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066513401 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067018658 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.084774039 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.068695843 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.083659457 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069960695 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068326336 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.084622282 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066575029 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.067917716 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.086140825 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063479404 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.083473375 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.0687646 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063950989 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.086835562 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069227018 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065672159 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.084153913 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.070202683 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.085707774 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063637122 seconds)
  done (took 4.540604671 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.086499937 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.129939716 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.089170118 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091569533 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.103832154 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.094891862 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072321722 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.11267922 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065614621 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.086638754 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.084734811 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.105755127 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.086306039 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.07363449 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.093885146 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068370254 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068266533 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.085738643 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.07209124 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086774809 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071473934 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.093877811 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.101199364 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.082658565 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089752595 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068297592 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.085591087 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.07344842 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.099991972 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073142913 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.091166061 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073916209 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.103032415 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072661854 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086123555 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.070057229 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.103320848 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.086394385 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.071677756 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065100863 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.089336218 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.072701966 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.092721005 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.084561837 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.088351929 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.073263264 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.087130607 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.065045787 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.098956957 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.070693993 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.09485677 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.101339858 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072565906 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085996272 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073334307 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.100897346 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068433589 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.084962299 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.071824069 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.099128624 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066279628 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089734182 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.08230633 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.088099022 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.075947594 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.101452538 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.073043974 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.090772026 seconds)
  done (took 6.738494844 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077200422 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093142292 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08270751 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10202628 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09281087 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.074978421 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.092638576 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074945769 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.092839493 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079958462 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093108024 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114217773 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069527329 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096132316 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074357258 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093880762 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074413934 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093167136 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073607461 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.094902633 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.092506585 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082895219 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.093171896 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.100944926 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.105096512 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08919513 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074107443 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.092732374 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082813326 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.094368313 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10465824 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075024468 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.092893888 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.100748484 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.087577026 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.093447315 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067859981 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092827457 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075252554 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.093341825 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070559036 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101592088 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074263048 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.088397864 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074089999 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.094041214 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.101785157 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.086526307 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.095351245 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.098001872 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075252959 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101276581 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074120859 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093763221 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.100694243 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.108160035 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101195391 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101652655 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075289697 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.102007634 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100620667 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.107878438 seconds)
  done (took 6.411571186 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089464681 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095663408 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.097971425 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063845431 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066492217 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.091407704 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066906646 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.084231928 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076924102 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095175718 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079739834 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091077463 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075236369 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099455294 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090117338 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075785839 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090777225 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072868267 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095001909 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072375479 seconds)
  done (took 2.525866701 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077722796 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.104231768 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070279087 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073423468 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.091862945 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074373422 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.09005862 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071576239 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087819338 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072212714 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097161972 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.078779993 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087745613 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074705951 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.09745613 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.07494692 seconds)
  done (took 2.184146306 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.081585948 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.097983667 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.084167584 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.088114912 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.06681836 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.084722305 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.06940536 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064275872 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.084379578 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.083334728 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.089131914 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.071484922 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.087687389 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067030067 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.06480713 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.09140853 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064948189 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.085379073 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069139013 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.101517696 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.079880467 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.085997651 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069811746 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.089410494 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.070384822 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.073757785 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.08919358 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.066676315 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.086007801 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.068992402 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.088575967 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.076505625 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.084850141 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.068127396 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.066689271 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.085126536 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.068518434 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.087461481 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072477009 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.086601052 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.068428758 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068877688 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.087585306 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069642421 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.083770405 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069863039 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064073181 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.093805666 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066957565 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.087733087 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068173787 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.089869678 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069705333 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.097088004 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.073131109 seconds)
  done (took 5.183211494 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08248941 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070989751 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083820372 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067087247 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090169533 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070431129 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071217854 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090159654 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07013835 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085146277 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070288798 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089227785 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070631075 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071400129 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089147021 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072112556 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.08316269 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070204132 seconds)
  done (took 2.262863501 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074382072 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068074964 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.095380575 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069192803 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.08725796 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071242022 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064495597 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.08677464 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06727958 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087337384 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0693461 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070439045 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086099916 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071188808 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087357404 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069263923 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.071105024 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086486851 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06887103 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082991962 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071533523 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067161077 seconds)
  done (took 2.539675815 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.073942523 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.094887914 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.165077243 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.109246748 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.084983471 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.101671875 seconds)
  done (took 1.496577221 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092649911 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101199779 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069921652 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108453359 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0775413 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089436891 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071533202 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088984129 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079640218 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10365129 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07038337 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098706078 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097410104 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079923219 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09611503 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076557205 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089430917 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070765462 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08794728 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107124583 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071924361 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098538102 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070970095 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089299089 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070621426 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097467049 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079586938 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10376411 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089849474 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079255701 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095403803 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070810377 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098197746 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103115333 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072613865 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09826872 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071547247 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109075701 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075358757 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09857787 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.07083435 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096290917 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097942534 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076021799 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098037637 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07133104 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095589856 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07014528 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090404469 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114814772 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076677285 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098195933 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095181728 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080092844 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097858465 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114839177 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08391425 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098488829 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094818348 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084254827 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098376122 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075974494 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099249212 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101626436 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076950094 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098521827 seconds)
  done (took 6.725899812 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087704392 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107658619 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071976714 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104447392 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098207816 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071300034 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089179496 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071701161 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089359578 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070694992 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130459901 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071035565 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098600924 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097774946 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071647513 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089599008 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071768781 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097466392 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070925396 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114468071 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089414916 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079568891 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097886108 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097425672 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084373954 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095690018 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070635023 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090275669 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070567923 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089847382 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075924365 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089995463 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098068833 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070445969 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098096402 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071097275 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089685254 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076822769 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089478831 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076455394 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099105151 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107298123 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071016801 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089187829 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083958574 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090134073 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070008723 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090083786 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070662787 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089989174 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083880746 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104186372 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102642684 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097672844 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072371893 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089132245 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071632651 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089459542 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071502409 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095400337 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080316943 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089819699 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114591678 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071430193 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089442227 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078666824 seconds)
  done (took 6.612755746 seconds)
done (took 130.236463476 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.203242517 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.185872596 seconds)
  done (took 1.255800582 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070294882 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.096464872 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.099193014 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129906141 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.088367604 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.102241043 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.120903688 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.081291926 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067820792 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.087921261 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068415332 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.089188397 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.132866742 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068096545 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.087492051 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070703146 seconds)
  done (took 2.335079319 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104354382 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.198011973 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111018306 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067345435 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100826214 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080502498 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.086680439 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.078560115 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.094857199 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068168728 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.078166674 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.097341862 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066850783 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.09688765 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075981479 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.099121848 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067580125 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.099154223 seconds)
  done (took 2.550043153 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.105475183 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.143031332 seconds)
  done (took 1.124247171 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.201640929 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.124758679 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.203533604 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.416640938 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.208442964 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.278442089 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.174355988 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.17442296 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.155429882 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.171190915 seconds)
  done (took 2.981140373 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101243102 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.171864051 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.312254712 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.138937424 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.087391296 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.116706163 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.13963412 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.090461891 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.102904042 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.101605524 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.082136323 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098385397 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098083585 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.097272178 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076168175 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.099045527 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121506861 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076428478 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.077963646 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.097814063 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117702871 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068735863 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.075902035 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.094825978 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078479664 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.098911726 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067069493 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.087045847 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.07666912 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.096035653 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079929434 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.115180386 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.098535898 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.132138504 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.082395402 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.131327155 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.099825094 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074169473 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.096375028 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074780713 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.098659277 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078334476 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.105190277 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078145336 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.087742923 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078554461 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.087839278 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069085859 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.099967778 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.079611489 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.099918178 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080562764 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.131055428 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.098462033 seconds)
  done (took 6.283182154 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.744045883 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.110527651 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095658814 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.801430947 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090172694 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106176699 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.709071244 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117805233 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.210048871 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.764841677 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.090210904 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.09932382 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.181328617 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.214351899 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.911878805 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.284020187 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.630619536 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.105847479 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.109215682 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.132800716 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.140908364 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.17827209 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.151138051 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.438632275 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.076621807 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093918267 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.139760801 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.076082228 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.13981444 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.107209772 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093938301 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.156965754 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.226357819 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.156707016 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097481939 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071377081 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092281126 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.148716874 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.223124105 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.192577083 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.15792584 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070321808 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091389021 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.141452239 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132946077 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070395979 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.141023825 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.154246661 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.169320529 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.075848189 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07551009 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.162991363 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.14074848 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.14421911 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.102141548 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.272158875 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.284900916 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071213489 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121625773 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.104640022 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.217120393 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.105367119 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.201104396 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.140713531 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.16984653 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091622159 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.733998668 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.148518163 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.092581978 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.076175957 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120891148 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074281457 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.160013884 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.123647578 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.370202803 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.164132546 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.076513784 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070703604 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.230602138 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084710365 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09268863 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.142035859 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.077549668 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.123496901 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.144382282 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.164261572 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.147960897 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.208162194 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.143613947 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.139103159 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.096059492 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125078531 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.077281102 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.19142197 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.194481655 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.14255771 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.187354417 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.140571549 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.163570184 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.149533538 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.078265659 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.150532339 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120454576 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102045215 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.140436674 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.193145341 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.102793424 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.105587916 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073545179 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.162520906 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.126716318 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087477517 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.140232678 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.148933428 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.48240769 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.148309656 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069699186 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.108458342 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.141784363 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.141223171 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097404629 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.21405622 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124248595 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.148008988 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.122706445 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088728263 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.100888696 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.163999263 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.079997376 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124242448 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.138623813 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098707076 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.215616877 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.169766796 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099798136 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.195357829 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.163242194 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.096522851 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.150450543 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120190089 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.147522894 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.079859141 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.13894235 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098222549 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.746609151 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.165617371 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.122719305 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.075427393 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.177405944 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072214374 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104407349 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.083980993 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.090712971 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.740791462 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.108250318 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.080076873 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.105527745 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073934864 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122870106 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.157741479 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07558225 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.139740044 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.203436119 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075591267 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119322398 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.104966245 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.141296894 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.076036001 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.106586671 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.105022145 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.085802747 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.124257743 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094869719 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.085632822 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.146405266 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.1424532 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.194062963 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.542929429 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093350108 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.083805655 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.202834966 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092637133 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.24603797 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137356287 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.200925924 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.142959398 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.102052651 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.266025144 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.142878763 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.17805263 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.108882978 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.15315751 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069011876 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.159506471 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.145313528 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072377599 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097038917 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.142952931 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.146361443 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.143132246 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.936445962 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071988631 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.204395808 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.090351678 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.151363145 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.076019049 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098931758 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.260632582 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072588769 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.14723626 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.14250834 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095649106 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.083311269 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.697075273 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.085548345 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.160939475 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07636151 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.194950031 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.144305364 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.137090946 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.138540826 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097358592 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.141713915 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.190906894 seconds)
  done (took 40.607864523 seconds)
done (took 58.013316859 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.263637841 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.178834934 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.243626527 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.144748466 seconds)
  done (took 1.805250454 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.144991502 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.105930884 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.118252947 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.087213871 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.104346407 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.087835612 seconds)
  done (took 1.548437243 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.404408999 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.266974381 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.231785316 seconds)
  done (took 1.803211075 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.26197372 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.214620382 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.445829324 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.299243417 seconds)
  done (took 2.251547768 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.175945156 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.114519388 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.069239436 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.107396269 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.160033426 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.254239379 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.12970933 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.189382489 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.081618734 seconds)
  done (took 2.232091134 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.19947742 seconds)
done (took 10.744451373 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.264676632 seconds)
    (2/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.191638837 seconds)
    (3/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.19026397 seconds)
    (4/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.125837855 seconds)
    (5/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.219123938 seconds)
    (6/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.140454048 seconds)
    (7/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.080428729 seconds)
    (8/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.077236137 seconds)
    (9/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.200006912 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.114357752 seconds)
    (11/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.214648677 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.183855187 seconds)
    (13/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.100556441 seconds)
    (14/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.185578855 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.13839306 seconds)
    (16/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.18011728 seconds)
    (17/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.181521405 seconds)
    (18/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.183789609 seconds)
    (19/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.18505866 seconds)
    (20/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.094585686 seconds)
    (21/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.1886577 seconds)
    (22/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.0768133 seconds)
    (23/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.181772502 seconds)
    (24/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.103792128 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.097852104 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.118415659 seconds)
    (27/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.07523445 seconds)
    (28/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.173035128 seconds)
    (29/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.232114449 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.108406589 seconds)
    (31/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.099967284 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.133790947 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.096843419 seconds)
    (34/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.135974639 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087706133 seconds)
    (36/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.204978279 seconds)
    (37/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.074515185 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.100635916 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.124433135 seconds)
    (40/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.140519107 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.089159159 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075777123 seconds)
    (43/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.126249445 seconds)
    (44/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.075282007 seconds)
    (45/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.084546058 seconds)
    (46/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.100280802 seconds)
    (47/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.184972951 seconds)
    (48/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.190381453 seconds)
    (49/309) benchmarking ("sort", Float64, false)...
    done (took 0.127575785 seconds)
    (50/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.097641318 seconds)
    (51/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.070727411 seconds)
    (52/309) benchmarking ("sort", BigInt, false)...
    done (took 0.209928755 seconds)
    (53/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.096799872 seconds)
    (54/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.081313998 seconds)
    (55/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.113319643 seconds)
    (56/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.076180693 seconds)
    (57/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.080425412 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.148709265 seconds)
    (59/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.182261834 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.096986458 seconds)
    (61/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.134754889 seconds)
    (62/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.159241756 seconds)
    (63/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.161664642 seconds)
    (64/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.1026893 seconds)
    (65/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.076615388 seconds)
    (66/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075285471 seconds)
    (67/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.197729107 seconds)
    (68/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.054539507 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.179941385 seconds)
    (70/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.100509656 seconds)
    (71/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.179277223 seconds)
    (72/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.076540185 seconds)
    (73/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.226532323 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.119308265 seconds)
    (75/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.07262374 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.067915877 seconds)
    (77/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.090279404 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.112807415 seconds)
    (79/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.186514254 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.099061715 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.117345544 seconds)
    (82/309) benchmarking ("sort", Int64, false)...
    done (took 0.06917132 seconds)
    (83/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.075010683 seconds)
    (84/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.074993052 seconds)
    (85/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.170501445 seconds)
    (86/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.085643196 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.139350764 seconds)
    (88/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.064500075 seconds)
    (89/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.160690172 seconds)
    (90/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.162941857 seconds)
    (91/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.098941913 seconds)
    (92/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.065783467 seconds)
    (93/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.073537193 seconds)
    (94/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.077436617 seconds)
    (95/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.068806203 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.114613708 seconds)
    (97/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.068454226 seconds)
    (98/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.158672535 seconds)
    (99/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.074576353 seconds)
    (100/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074795233 seconds)
    (101/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.103028339 seconds)
    (102/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.053643392 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.112474165 seconds)
    (104/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.072387605 seconds)
    (105/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.054558709 seconds)
    (106/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.103597029 seconds)
    (107/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.148152403 seconds)
    (108/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.099476863 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.135869678 seconds)
    (110/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.071329302 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.139697646 seconds)
    (112/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.07273657 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.110996545 seconds)
    (114/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.154980734 seconds)
    (115/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.193718672 seconds)
    (116/309) benchmarking ("sort", Bool, false)...
    done (took 0.160468327 seconds)
    (117/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.077049486 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.088910082 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.09276457 seconds)
    (120/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.10413294 seconds)
    (121/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075884455 seconds)
    (122/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.100688547 seconds)
    (123/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.102183719 seconds)
    (124/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.063516929 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.112689823 seconds)
    (126/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.073493848 seconds)
    (127/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.115216727 seconds)
    (128/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.089662225 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.089264646 seconds)
    (130/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.106575575 seconds)
    (131/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.094902527 seconds)
    (132/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.054716752 seconds)
    (133/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.076423 seconds)
    (134/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.09535882 seconds)
    (135/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.053521752 seconds)
    (136/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.193225846 seconds)
    (137/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.145248312 seconds)
    (138/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.075478997 seconds)
    (139/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.149194005 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.163032136 seconds)
    (141/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.053250472 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.089528749 seconds)
    (143/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.075973857 seconds)
    (144/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.053373274 seconds)
    (145/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.196862075 seconds)
    (146/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.067308514 seconds)
    (147/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.16303327 seconds)
    (148/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.189519128 seconds)
    (149/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.067943478 seconds)
    (150/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.104734382 seconds)
    (151/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.053837679 seconds)
    (152/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.100251356 seconds)
    (153/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.078198563 seconds)
    (154/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.090066059 seconds)
    (155/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.179319439 seconds)
    (156/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.074536695 seconds)
    (157/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.077241178 seconds)
    (158/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.054630746 seconds)
    (159/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.172954853 seconds)
    (160/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.19979356 seconds)
    (161/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.071047124 seconds)
    (162/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.173099256 seconds)
    (163/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.054310262 seconds)
    (164/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.077528085 seconds)
    (165/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.079264573 seconds)
    (166/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.067066277 seconds)
    (167/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.09526922 seconds)
    (168/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.052965316 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.156198357 seconds)
    (170/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.068676141 seconds)
    (171/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.097720361 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.093751681 seconds)
    (173/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.160751036 seconds)
    (174/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.139232571 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.099874449 seconds)
    (176/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.069188725 seconds)
    (177/309) benchmarking ("sort", Int8, false)...
    done (took 0.166086866 seconds)
    (178/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.069212172 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.159136331 seconds)
    (180/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.088943286 seconds)
    (181/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.139046093 seconds)
    (182/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.096483421 seconds)
    (183/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.055318202 seconds)
    (184/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.056494515 seconds)
    (185/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.076535783 seconds)
    (186/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.097757971 seconds)
    (187/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.054270046 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.110920386 seconds)
    (189/309) benchmarking ("sort", Float32, false)...
    done (took 0.129778261 seconds)
    (190/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.202267804 seconds)
    (191/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.053393099 seconds)
    (192/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.090344624 seconds)
    (193/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.055227531 seconds)
    (194/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072285196 seconds)
    (195/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.121921771 seconds)
    (196/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.0680478 seconds)
    (197/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.091831572 seconds)
    (198/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.067113509 seconds)
    (199/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.05351679 seconds)
    (200/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.412337478 seconds)
    (201/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.114136269 seconds)
    (202/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.054572687 seconds)
    (203/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.090275293 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.115104843 seconds)
    (205/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.063273336 seconds)
    (206/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.077485655 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.097062725 seconds)
    (208/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.078132159 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.090571269 seconds)
    (210/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077713046 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.09770549 seconds)
    (212/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070595462 seconds)
    (213/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.055941233 seconds)
    (214/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.122110646 seconds)
    (215/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.111246681 seconds)
    (216/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.095920118 seconds)
    (217/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.054512243 seconds)
    (218/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074981143 seconds)
    (219/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.087834177 seconds)
    (220/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.091842911 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.066448123 seconds)
    (222/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.076652248 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.093048819 seconds)
    (224/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.098071407 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.137404833 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.095772871 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.067369573 seconds)
    (228/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.054507779 seconds)
    (229/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.090603609 seconds)
    (230/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.066786269 seconds)
    (231/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.069200475 seconds)
    (232/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.095215768 seconds)
    (233/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.081107646 seconds)
    (234/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.101657841 seconds)
    (235/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.110719887 seconds)
    (236/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.053332699 seconds)
    (237/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.089488002 seconds)
    (238/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.053101345 seconds)
    (239/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.120003596 seconds)
    (240/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.096340004 seconds)
    (241/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.055146278 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.163501045 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.067617227 seconds)
    (244/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.052968018 seconds)
    (245/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.161037533 seconds)
    (246/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.102713333 seconds)
    (247/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.071673622 seconds)
    (248/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.05512645 seconds)
    (249/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.06189337 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.171430651 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.067024987 seconds)
    (252/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.092168684 seconds)
    (253/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.074291234 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.088098022 seconds)
    (255/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.178623635 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.089581594 seconds)
    (257/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.05299109 seconds)
    (258/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.078325952 seconds)
    (259/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.09684875 seconds)
    (260/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.077464054 seconds)
    (261/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.090055166 seconds)
    (262/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.076715243 seconds)
    (263/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.070496504 seconds)
    (264/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.10150534 seconds)
    (265/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.071636005 seconds)
    (266/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.062871794 seconds)
    (267/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.075852668 seconds)
    (268/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.075194479 seconds)
    (269/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.053711947 seconds)
    (270/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.075110589 seconds)
    (271/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.054392601 seconds)
    (272/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.074160557 seconds)
    (273/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.19202808 seconds)
    (274/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072639136 seconds)
    (275/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.077204799 seconds)
    (276/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.054719494 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.139344969 seconds)
    (278/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.05427232 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.07576555 seconds)
    (280/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.128691038 seconds)
    (281/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.067029117 seconds)
    (282/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.05263933 seconds)
    (283/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.078328835 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.067110019 seconds)
    (285/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.069216379 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.090413911 seconds)
    (287/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.053598651 seconds)
    (288/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.068412396 seconds)
    (289/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.0763259 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076184114 seconds)
    (291/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.064281341 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.146573929 seconds)
    (293/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.052493057 seconds)
    (294/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.084421202 seconds)
    (295/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070939882 seconds)
    (296/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.068111303 seconds)
    (297/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.075861708 seconds)
    (298/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.062765994 seconds)
    (299/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074002166 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.094905865 seconds)
    (301/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.05493507 seconds)
    (302/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.053287096 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.088682085 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.074011374 seconds)
    (305/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.067977715 seconds)
    (306/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.093178706 seconds)
    (307/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.053945983 seconds)
    (308/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075615765 seconds)
    (309/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.116548851 seconds)
  done (took 33.623444094 seconds)
done (took 34.53710574 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082919783 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114712827 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.077409835 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.116242927 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.082880082 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.101179792 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074976204 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.080127579 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.105700321 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082868787 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.103873794 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056519835 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.098155366 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076516812 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.098695889 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09317243 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.102475105 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074426154 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074456471 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.089627602 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.07548554 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.090142513 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069206908 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.05615464 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.101037597 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075346162 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.074245884 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.099913437 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.06668454 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.089073892 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.0704785 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074286624 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.089581657 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081175927 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.095685331 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075672399 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076505157 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.100186977 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.069409294 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.088766523 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075174592 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067268172 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.096102786 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075573736 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073397771 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.095523724 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.07505948 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.103216226 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09289189 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09141653 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075083774 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.100382852 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078959547 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.074126622 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.093604758 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075132737 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.094122564 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093265772 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.097719837 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069401968 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074779275 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.098405396 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072539787 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074857668 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.09826737 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077935832 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.099791775 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073379793 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.09813602 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.07316773 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067376384 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.097840519 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.07132419 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.067172866 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.099457828 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078623248 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.08818075 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073573356 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074160294 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.095203726 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067713509 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069181728 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.09140435 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.074607808 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091080535 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.056831792 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071910421 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.095107902 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067961732 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07550095 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.096079657 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074956933 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.068937835 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.101221942 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06709262 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.094438953 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068036373 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067450995 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.092244474 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.072374045 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066774733 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092423077 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.077596934 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.090983577 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.074488617 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.081296528 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.090014176 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074426915 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.066628074 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.090007301 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.084027144 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.099509872 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067686778 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091417878 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067467911 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.075478436 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.089197093 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.068174379 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067629451 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.089411274 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.073568687 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067335305 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092196956 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.075103197 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.10355817 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.067655232 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071866457 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091994967 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.067879767 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072885991 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.090360668 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.068120073 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.069081901 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.087547603 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070042677 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.089227663 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.076191426 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07048602 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.097814512 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.070090171 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.07560386 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.094887461 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.073561803 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.095371546 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067641579 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.060987922 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091762886 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069953982 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.070239114 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.089528239 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.069616298 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067002576 seconds)
done (took 13.396204213 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068599078 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.169581892 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.12754046 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.098387769 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.11188814 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067671281 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.10218359 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.104897366 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.092528132 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.128305373 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.089006656 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.109344988 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.116099548 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.08983434 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06792709 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.072682439 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.091634228 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.090726385 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.126075793 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.10998053 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.118492624 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.089629976 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.121958944 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.091651948 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.113195158 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.095327953 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.090673132 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.071760811 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.071014721 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.125782741 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.10961301 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071263917 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068513283 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.124288557 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.119018992 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.087488088 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.09055036 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.086245175 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.089851212 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068424397 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.115725303 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.101594264 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.105799174 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.083477614 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.097396021 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.071089767 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.091220612 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.088191109 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.11433035 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.081872808 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.112488496 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.135215029 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.071321343 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.107149587 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067465587 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.111868765 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.105391652 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.070854715 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067939775 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.092588519 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.068041121 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071352072 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.112943698 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.116048442 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.07216103 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.106642521 seconds)
  done (took 7.341398414 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085796887 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.117728747 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.085631905 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.109195748 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067622192 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068581292 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.091681685 seconds)
  done (took 1.597348956 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069105803 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.090501248 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.114052708 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.091000729 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.111224907 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.08866121 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.101593941 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069065874 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.109007483 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.069547358 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089361428 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.129337642 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.070293762 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.098582098 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.093030426 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.09104142 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092737374 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.091589663 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072033362 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.115076856 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07225818 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.088571754 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.095066389 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068507102 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.106207068 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069725536 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.139608087 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073611726 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069299886 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.095696587 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067367182 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.141378351 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.106205504 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.080276395 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06937628 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.105949172 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.084050974 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089482851 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.085304901 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.0965153 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.084197134 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069711559 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.093730572 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068136039 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.073873851 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.102373388 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.070778575 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.092404908 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.071727448 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088713922 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.093210292 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.083340148 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.092278054 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073402323 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.0710579 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.097728356 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.079667848 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.092192501 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089804687 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071160179 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.108973524 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085875364 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.106985739 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084411236 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094868934 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.083593801 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.106036498 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.07194101 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069907137 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.095242131 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086285015 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.089832629 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.07049263 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079559577 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.094269261 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091953151 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.114887853 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071047813 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.102240739 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069284605 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068993109 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.091912251 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.092431836 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096057358 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06981421 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072964121 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095141787 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067567467 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068272961 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.095917496 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068576744 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.070990281 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.095711997 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070402126 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.093907721 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085053009 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069296143 seconds)
  done (took 9.44717484 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070392635 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.06962923 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.094192743 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070137206 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069426619 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.092546166 seconds)
  done (took 1.453698744 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.099575382 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.093951813 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.083595025 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.097577137 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.108100312 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.107313707 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.084621012 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.107794881 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.086836301 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.104389751 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.083667227 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.106957868 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.089538177 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.098751221 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083464201 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.097425862 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.085659204 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101282552 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081467823 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099161066 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.090312307 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.098222147 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076722517 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.108335296 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.072897583 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.0749653 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102297398 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082386422 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.104150906 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.084284242 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.098745437 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.072862076 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096592967 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.084397388 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.10725866 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.073752983 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097525335 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.073690738 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101664292 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.073424747 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.107700705 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075784947 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.080468703 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.097542407 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.106657117 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074311164 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.073924368 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101805733 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.084088324 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.097154361 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.073828792 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.097350306 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.073196235 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.096545105 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074803694 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.106831551 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074005291 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.10734565 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.075733852 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.073692201 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.095043078 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.07356935 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.106725735 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.07233924 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105782112 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.074097011 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096406026 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076121948 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098440507 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.075369099 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.072915684 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.096014395 seconds)
  done (took 7.455093739 seconds)
done (took 28.264760456 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.650053155 seconds)
  done (took 1.629193284 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.766975368 seconds)
  done (took 1.749513806 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.587107191 seconds)
  done (took 15.573935368 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.616551289 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.76008846 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.814343782 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.160477845 seconds)
  done (took 3.332640014 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.889482995 seconds)
  done (took 1.891585785 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.236419712 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.226066274 seconds)
  done (took 1.451591337 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.731115059 seconds)
  done (took 1.727648123 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.293045954 seconds)
  done (took 2.281315 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.323247939 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.182769001 seconds)
  done (took 1.505199 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.527823748 seconds)
  done (took 1.527737556 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.561754496 seconds)
  done (took 7.567281333 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.228328825 seconds)
  done (took 1.242903831 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.26850888 seconds)
  done (took 1.271486204 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.119215681 seconds)
  done (took 4.121253938 seconds)
done (took 47.861662717 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079028597 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083820671 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.105764235 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080359597 seconds)
  done (took 1.347381252 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079882717 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075317347 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.102194209 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.074679681 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.102630108 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.075614444 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.100949457 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.079167403 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.074581104 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.099564465 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.075464575 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.097705078 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.077917693 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.099604081 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.072484589 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.07748436 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.101101521 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07542793 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.101344507 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.075591636 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.073381938 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.100163759 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.078255723 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.09706628 seconds)
  done (took 3.078309474 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079084584 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074830538 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.099640423 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073820658 seconds)
  done (took 1.333488595 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079074332 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.116645353 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.092283203 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.079048041 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.117091992 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.111975868 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.07302032 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.071896471 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.09733408 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079399447 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.09286784 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.100037047 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.112956681 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079463522 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.104585871 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.067893041 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.070972918 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.112264805 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.079462409 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.103572049 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073267563 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.082009778 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.093351827 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.092426126 seconds)
  done (took 3.195776663 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078981352 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.10594142 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.104221726 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091611923 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.117745542 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067783994 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.102145055 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.09361217 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.150579734 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067866446 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.096452158 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067533083 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.098055859 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.067345421 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.078574915 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.134240149 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113080076 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.095000369 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.098181415 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.091508154 seconds)
  done (took 2.931827824 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.077216902 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071787321 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090525012 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070472804 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078537744 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.098201476 seconds)
  done (took 1.496367826 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069966722 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068897442 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.092489266 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068378144 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073478387 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.092531491 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068382178 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068679471 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.092303066 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069299419 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068813152 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.090783205 seconds)
  done (took 1.934270011 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.38700188 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.093529947 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.07069137 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.090074335 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072828984 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.091788635 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082066378 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070058011 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.116699699 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068201362 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.092659253 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070735636 seconds)
  done (took 2.320192421 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263103314 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079454973 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.326547368 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169795969 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143137815 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157390167 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106700833 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141115013 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.200462371 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140609529 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203379983 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227254198 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135405841 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168526911 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117205156 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.10923004 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211924058 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222988045 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107681662 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226164499 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207487399 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157841389 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183033806 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130482208 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136599081 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152042525 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.074106775 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107087854 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233317921 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162848611 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204236847 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139832232 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100038127 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231710373 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226010498 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197929559 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163356772 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086250261 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.158475473 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.167324302 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256789339 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115719736 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196085167 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135661531 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10787662 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173811357 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147963207 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.148531037 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.138132251 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116454119 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175657783 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242506323 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.167067087 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114103741 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139126443 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143706361 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.146160954 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105709087 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243193607 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218690686 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159212724 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.098194282 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099002514 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212123514 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161007272 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.142614439 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.153889242 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12121797 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169982017 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.212444721 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147218143 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175960813 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.182665773 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090564512 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147817487 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19729805 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156671681 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203730666 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179100403 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.074594472 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154207431 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132001092 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084072438 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.17126218 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078080227 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234037674 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126696233 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.141583277 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140801626 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112372298 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138234647 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222209885 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203303837 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10612732 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.093521484 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132580579 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.151972644 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179377865 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115123484 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111416221 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174492898 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.082553963 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168202325 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.102729904 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15582136 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.081031743 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178442328 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163137013 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078993648 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157174528 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129619163 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.129896267 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166700477 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22177184 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092770684 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110284648 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202873506 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181728448 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.109437279 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202343403 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.190747496 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.128437036 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131391519 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180592071 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267761785 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092486946 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225163985 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136943732 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086123334 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.115429668 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157385051 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141913211 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.151767972 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085838237 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.179084111 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202576684 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.10254771 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098197144 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192799581 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084389795 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109933939 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141990534 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130229049 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.097808137 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.128564744 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.135873621 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171498783 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156451739 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135990214 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155769947 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126201408 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227368718 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117143936 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.106549864 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131805652 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.097841895 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.167065268 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192543269 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108470124 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227711492 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.158816228 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132640059 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149332409 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086151146 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170780902 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105849639 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.073434055 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201763433 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139885824 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11380596 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.211674496 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131558891 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.157696672 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.155129254 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164752757 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161506887 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.162671284 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134600263 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.114665666 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141349934 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156008399 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.101694792 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.098381277 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.110676853 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132443228 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100168011 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111082993 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173384872 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182837063 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101236176 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141648229 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125993126 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181348106 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.104550813 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161751285 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.149103817 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123876811 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.187261292 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214022369 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167800217 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129000924 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177355323 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.098563359 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077189402 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.118976122 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1582513 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112347506 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086469348 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147226835 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.207201536 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159642799 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169140469 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140235617 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152285951 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189176424 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.099029696 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.119348656 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206974296 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155341861 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.156924886 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092608588 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.127028648 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17643035 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138021072 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24732937 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145509324 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153754147 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210127085 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.132279112 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082832981 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13578555 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169798258 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135153251 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.209492304 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129164637 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091840512 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139560427 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.11013121 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132975686 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15849525 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150604491 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165794853 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.145667288 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188113781 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07990804 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146781356 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153551081 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152974269 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.091846272 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149722761 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197087305 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122999352 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148641656 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214344232 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08225708 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.15365333 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240331087 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203773826 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08757725 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144600909 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153341556 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159930863 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148874629 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172079266 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139813772 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191338857 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114412959 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.113491182 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116043246 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100810071 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13602199 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.123821965 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.141189208 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.147501463 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.123366527 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163510343 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141426594 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139561937 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148379758 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.101169567 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.120181384 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127297729 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210572232 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15202933 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235544644 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.129628097 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.208951074 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203408602 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104172081 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082739043 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.108759821 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172036767 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113056175 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164736106 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.124417204 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10942474 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157549977 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200914735 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098384767 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.096882373 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139441902 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166991561 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141193322 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126980593 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.109302567 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224300108 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.132593022 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081420729 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155014143 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133758932 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132165759 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236941354 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064302063 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126446549 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078187149 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108895299 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160637836 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188542634 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.11130836 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.154690343 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151468424 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151530182 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160796289 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13156702 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10105002 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142612099 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209176294 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159830482 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.092545824 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141725772 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187408593 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190893476 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135311381 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.125389417 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234789858 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187901645 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.224100144 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.117702227 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147123404 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144670368 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113070714 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198670779 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111952682 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204212709 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112181961 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168122686 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13427247 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122115429 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160694295 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.143020226 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091084537 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20813687 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150922744 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111024597 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082586515 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148699623 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15346753 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136135851 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.103783984 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172311405 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.075176499 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194464371 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204197103 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11062648 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13564987 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099124524 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111133449 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138721437 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13386942 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114940254 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.120957077 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232979168 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.120790772 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18520354 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199932889 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144718584 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169520069 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129284672 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.66640716 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.081048755 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21502183 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151301649 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239977048 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1275193 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149461783 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140437114 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154517464 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177553358 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134918484 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.205686267 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164123642 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.151203696 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107960835 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133675629 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141379768 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.094223502 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137310261 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14449474 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145991078 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.130472876 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.15180335 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157524177 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.111059856 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098720167 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218590421 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148124647 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173384884 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19784813 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08773778 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150012873 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198997663 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082537478 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.15320866 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216264381 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138007583 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12826809 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.084271469 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.136038268 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234384428 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.076002587 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222959719 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154420401 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139890432 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143491006 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.15051846 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190401645 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139604883 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156712667 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124870101 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.143158917 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146700518 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087739225 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.10717766 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135854173 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14235968 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.102576678 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13209663 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.146137663 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187621809 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.099948162 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099579672 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134019133 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176975709 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24083462 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.119319471 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08573316 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148370996 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169128935 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.146669599 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156460221 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.084712065 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112312283 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.085003687 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.139784815 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.139116275 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145164434 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106454663 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141176678 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22819226 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.113356511 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.227811133 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125669068 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137015534 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.072168762 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.108437572 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125550787 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100978889 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138044608 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12807897 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234384509 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.100621054 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.120414681 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122010904 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.076348975 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111525218 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161539351 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141920492 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153423386 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126781029 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.06654627 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139645156 seconds)
  done (took 72.205126983 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.133635111 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.105444722 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.118812698 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.174339785 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.147151794 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.239058568 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.181757791 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.224690777 seconds)
  done (took 2.417217183 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070785287 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.11866001 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.104291647 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.117892787 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091114156 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070566109 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.295983189 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.111463025 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068350624 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.116920337 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.120360341 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.092796606 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.472194844 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067310942 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.096138625 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.086186766 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.06962685 seconds)
  done (took 3.254850974 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.429143588 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.634799791 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.451883012 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.075213736 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.874539827 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.108778354 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.375681334 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.163695664 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.09364192 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.433261559 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.734093901 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.153775019 seconds)
  done (took 17.619459605 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076473441 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070660468 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.111152387 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.085024687 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.100313793 seconds)
  done (took 1.536800689 seconds)
done (took 115.670506945 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082154373 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.344596931 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.055019766 seconds)
  done (took 1.525038848 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.08397237 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.086692145 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.111339835 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.084475749 seconds)
  done (took 1.46751189 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.076584818 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078156573 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.111763725 seconds)
  done (took 1.364969732 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.279478549 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.167718199 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.090367818 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.08453555 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079413598 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.105979298 seconds)
  done (took 1.370945796 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073862525 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.077395959 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.101132324 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.079176517 seconds)
  done (took 1.426704385 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.078133317 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.054180601 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056464307 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.083813192 seconds)
  done (took 1.373823213 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.091102799 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.10755093 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.083097637 seconds)
  done (took 1.379411941 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107881744 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.113441436 seconds)
  done (took 1.322341304 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083324509 seconds)
  done (took 1.17939659 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.093790136 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.141808768 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.157220507 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.137659882 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.167634082 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.136955843 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.088815637 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.116533234 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.105292058 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.089845278 seconds)
  done (took 2.337760142 seconds)
done (took 16.457549456 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079827117 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.389757894 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362082043 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117805371 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669151258 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358285507 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.004115226 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.120523062 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.123367734 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.096041948 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08528219 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.676097362 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.005773707 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.346715207 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.994067244 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.323122741 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.675691168 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069641016 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094475147 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069459825 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.964044282 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095576948 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069249399 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070162659 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.675703626 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372469739 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096199556 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.323661468 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069334749 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097100553 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356334329 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096191104 seconds)
  done (took 16.039950001 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071693482 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.145068106 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07530919 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084772959 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.098516522 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071724608 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.099279428 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070953951 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.154165424 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06991292 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112856238 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069641575 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.099317219 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071198683 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08871815 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.096407171 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070198354 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069999553 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.095753049 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069434063 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.114223023 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069839055 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069617966 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.096069706 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069973917 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107872294 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070451167 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069598185 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095772437 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071022391 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.098618967 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071067884 seconds)
  done (took 3.891970012 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11671326 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.153959383 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075323676 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13047257 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114745825 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.098224555 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.171476335 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094463276 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.157208442 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070310523 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112212115 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06920984 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.129082919 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070889513 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.115465779 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070456142 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071083535 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.096395994 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069774304 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095879543 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08824709 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069832237 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095824288 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070358966 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.096204139 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083583567 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095521288 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070260159 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069968152 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097424989 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073254035 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070169497 seconds)
  done (took 4.173792355 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073923445 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076425617 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.110553801 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085011493 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.097815167 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.073810716 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075527925 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.097923272 seconds)
  done (took 1.802579629 seconds)
done (took 27.01180769 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080604679 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071635094 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.101269311 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083656921 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.101694158 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080289364 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069703847 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.103222668 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.07819112 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074823037 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.103989151 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069145501 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.098913545 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069851023 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076004918 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.096211689 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081261671 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.100125675 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080966203 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080513806 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.098285138 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.079378875 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.10191813 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.081260488 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.107177573 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081442595 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.085116342 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.102056798 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071993011 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.098438236 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.078224827 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084633882 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.09713339 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081225338 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.096300651 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.069691341 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.069725596 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.096495651 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081138855 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.102342683 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072481389 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.102445893 seconds)
  done (took 4.742196781 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090343836 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092864593 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.114083474 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.067365609 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.09928035 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.067218313 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.116411822 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.064942121 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.061158757 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.117127986 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.057574208 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060920557 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.091076625 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.056080556 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.06066246 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.058200702 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.090117749 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.058416726 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.061325768 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.087936975 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.059800009 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.055317467 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.088385525 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064551117 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058298581 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.063582709 seconds)
  done (took 3.074164239 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077514877 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085255042 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.126203208 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.157980362 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.108562045 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.105905239 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.079407227 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.089450326 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.114476791 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068836702 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.099715648 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.099097738 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.116006777 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.075873381 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069434122 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.115861125 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.083869469 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.0709828 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.103167671 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091483445 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.112821664 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.080020842 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.120611131 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.082912927 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069186444 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098475683 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073154019 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.110229785 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074454348 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078453316 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.101278449 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073088724 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.09822315 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.081181636 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.100841118 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.071611378 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.09193278 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.105821116 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079577121 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.097835459 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.073027782 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070255399 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.117035421 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.113399734 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.096202676 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.077145378 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.103794203 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.078777176 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069468367 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.115609636 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078099065 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.095940701 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.072811407 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06821096 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.095892517 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082760319 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071565451 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.097941432 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078079802 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.09911099 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.081826586 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073225141 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.111896906 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068808386 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.103688601 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068497995 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070127235 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.095195921 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092919677 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.097151321 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.109846316 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.096985253 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.071058223 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078358448 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.103626222 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074866271 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.095964086 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084284093 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078552904 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.099464521 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077505096 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.099089244 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072953647 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.089322443 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.099365127 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071055504 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.071059329 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.102878357 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071767616 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.097594302 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082411865 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069825658 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.099965654 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.08649771 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.095364415 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071585217 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075792569 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.101218821 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068636079 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.108199763 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074956872 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.097364953 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.0789564 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069147772 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.100045363 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078883799 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.100770403 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.068641314 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.074017235 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.10321888 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070493796 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070451198 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.099414667 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070526848 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.106292003 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075659971 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073228111 seconds)
  done (took 11.499308132 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.193329651 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.187800297 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071699686 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.18060771 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077085112 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.109189574 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.182035321 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.097523926 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.098146828 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069855713 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070264592 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.1328879 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.125129388 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.107497008 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.107876785 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069715545 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.115897917 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.105651777 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.184833098 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.177537681 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.117231892 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077707995 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071823998 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.098811478 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071779098 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079020702 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.114396993 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.078377452 seconds)
  done (took 4.302642927 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082412553 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.130024515 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075867384 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.08965932 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.121302464 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.070022733 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.102693345 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070668624 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.109669173 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.080950234 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.097763906 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075896117 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.076224317 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.109023813 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070056114 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.107597638 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.080623836 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.071749957 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.101335341 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074759811 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.106924248 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.083061307 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.101366832 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069496998 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.075923579 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.097056509 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066220881 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.116008087 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069957034 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.119338766 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069272855 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.07502343 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.110775189 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069869142 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.097133953 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.072824927 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.072294742 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.101485715 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.071160704 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068598731 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.096555993 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.059536667 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068765252 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.11081866 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.076744549 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.089451649 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.076129917 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.075111863 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.102830563 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067063597 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.099711088 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072951991 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072504867 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.106818482 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.07504372 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.074644324 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.102297396 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.067757553 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.105783061 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.073676222 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065944387 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.096097106 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.075095443 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.068816444 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.106189578 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074272524 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.096088244 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.07308038 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.074397486 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.104236379 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.073091085 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071955574 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.096015987 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071819213 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.102275122 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074036201 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.073577114 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.096403566 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069923776 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069333489 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.085345493 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069268477 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.055385313 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.100571808 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068293254 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067807574 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.100879195 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.075587887 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.110246942 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071321915 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.103194376 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070618658 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068214307 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.100812748 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.065430264 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071922952 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.113399866 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.113854647 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069906651 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067891806 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.112165447 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074470835 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.069055344 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.086338735 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076958291 seconds)
  done (took 10.026275096 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.096645548 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093708399 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.099224792 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084164076 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.125561308 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.094734494 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.105111132 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.07518522 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070851418 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.115312668 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.069837085 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.105978026 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.070121952 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078725566 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.126676454 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077522656 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.099453646 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.0792599 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073873004 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.137687482 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084407031 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.112321925 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.082160526 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.098426123 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.074835448 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.082159946 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.125933521 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.081335088 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.108836392 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.086953083 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.081672498 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.125902714 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.087084731 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.101771808 seconds)
  done (took 4.354979254 seconds)
done (took 39.10551385 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.207915358 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.39560757 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.183935953 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.088573137 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.200812338 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.202897904 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.214572479 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.185150644 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.269973757 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.184493457 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.413568179 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.781438527 seconds)
done (took 58.461389817 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.27393198 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.325777283 seconds)
    (2/2) benchmarking "String"...
    done (took 1.454878617 seconds)
  done (took 3.911132503 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.577289634 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.075887848 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.445663772 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.184936571 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.189207606 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.489703605 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.770653657 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.012313442 seconds)
  done (took 27.297851091 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.192766727 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.544410184 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.526441276 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.523592391 seconds)
  done (took 17.918596174 seconds)
done (took 59.110218685 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.218207087 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.216170019 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.220599071 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.171708412 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.309104103 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.207002706 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.472657522 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.189848436 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.187156977 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.179955351 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.207230518 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.18693416 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.198002649 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.467579121 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.192620155 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.186728443 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.245415341 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.664739739 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.562091511 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.192048291 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.208072416 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.228819518 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.186744874 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.189490037 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.255391929 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.192814625 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.189193542 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.213345283 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.384605098 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.188268148 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.277672526 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.649856231 seconds)
  done (took 189.772111473 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.188119403 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.349250671 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.418113972 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.24528129 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.667785458 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.389966175 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.320338753 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.735689993 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.20581656 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.204876243 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.498446084 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.187881004 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.562373442 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.153257987 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.197136539 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.295388008 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.389806671 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.528350655 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.204338543 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.419976262 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.197769588 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.49905694 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.442445784 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.422925618 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.228655855 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.300505745 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.2008772 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.210161794 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.377573279 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.330585577 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.204761583 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.208704254 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.753217532 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.05001669 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.191484275 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.200862552 seconds)
  done (took 150.114996287 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.459274073 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.188795635 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.188632902 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.188943324 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.189301013 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.218283255 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.189066633 seconds)
    (7/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.188908121 seconds)
    (8/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.714080108 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.717308671 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.690299352 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.60751207 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.251369444 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.391733962 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.189194559 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.280509188 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.201360833 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.189474572 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.205355568 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.21532566 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.193366902 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.189764749 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.714963462 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.205277911 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.295775529 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.19557095 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.189681913 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.219828727 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.583279469 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.190226923 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.219620555 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.505053532 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.233526314 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.190214571 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.488693167 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.03561705 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.297343415 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.19203276 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.220508735 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.190619303 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.458294308 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.190734898 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.192314038 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.194060424 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.77232258 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.193703913 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.71836115 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.194165027 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.071924486 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.191471217 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.190985776 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.469437394 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.622522227 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.191890754 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.191115995 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.192672733 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.190972183 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.191922342 seconds)
    (58/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.19150682 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.221033394 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.450093839 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.286963825 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.191604885 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.196054991 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.221584398 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.192252422 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.391262381 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.191163621 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.572708909 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.251292975 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.410635377 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.719536724 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.194958571 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.283603398 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.310818137 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.193981519 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.191792088 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.19264591 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.19141168 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.298585523 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.192726866 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.583128174 seconds)
    (82/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.192667385 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.199396409 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.193743474 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.251699645 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.285724319 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.192724065 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.485350489 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.195401714 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.193418597 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.883500171 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.284858669 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.19313228 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.193527688 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.193162607 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.585032152 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.720779901 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.373097698 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.197247901 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.452094728 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.19737686 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.595800981 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.701499838 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.753121601 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.19475222 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.299964876 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.198368375 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.195963206 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.193974811 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.223139736 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.194528699 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.253199157 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.194853161 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.589704371 seconds)
  done (took 343.290169955 seconds)
done (took 685.767735932 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.847974341 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.835537027 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.945729891 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.834638044 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.817507988 seconds)
  done (took 10.420483689 seconds)
done (took 11.559436434 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.375570638 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.378793173 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.253105141 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.374288528 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.225714965 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.390605842 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.354025222 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.217720376 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.291865833 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.271614893 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.292455295 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.244934141 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.220994902 seconds)
  done (took 18.030705993 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.488047447 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.48790606 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.257981551 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.491926542 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.234244008 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.488916613 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.382676733 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.400508584 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.379711972 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.209437993 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.209434037 seconds)
  done (took 16.171736068 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.496796481 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.490441533 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.262320682 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.496740337 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.237083548 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.496053351 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.384346716 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.391021971 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.38117602 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.210123199 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.208892237 seconds)
  done (took 16.195505935 seconds)
done (took 51.538066634 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.205165801 seconds)
  done (took 2.346716417 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.236563847 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.402942527 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.221611066 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.210161205 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.207120989 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.207568981 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.209303545 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.20681652 seconds)
  done (took 11.043900213 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.202073778 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.205434308 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.203307218 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.202188912 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.203447918 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.202944688 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.203018221 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.205623071 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.205396423 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.202332447 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.205821865 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.205883033 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.20343001 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.205249412 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.207234593 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.205423049 seconds)
  done (took 20.411896445 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.204741261 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.204075264 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.203191788 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.203632151 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.203128125 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.203535102 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.203588645 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.203222501 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.203357313 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.203132569 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.204803638 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.203390862 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.204011325 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.203821414 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.203973194 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.203251376 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.204101554 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.203499403 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.208410327 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.204067018 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.205168336 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.205274207 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.204808463 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.204528594 seconds)
  done (took 30.042880575 seconds)
done (took 64.986525678 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.214259942 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.780718001 seconds)
  done (took 9.138872968 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.206719871 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.206060151 seconds)
  done (took 3.557295651 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.206140471 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.20600023 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.206761756 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.206039444 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.207312326 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.206894995 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.206394363 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.207314547 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.208207814 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.206434187 seconds)
  done (took 13.211505728 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.206466311 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.207163751 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.204673285 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.207133277 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.206962217 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.204689625 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.206839634 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.207898709 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.207880694 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.205463493 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.206894918 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.205797332 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.206714954 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.205285532 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.207569751 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.205375031 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.205724526 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.205786164 seconds)
  done (took 22.859180395 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.208575726 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.207811635 seconds)
  done (took 3.56022843 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.205666867 seconds)
    (2/7) benchmarking "second"...
    done (took 1.205355134 seconds)
    (3/7) benchmarking "month"...
    done (took 1.205996326 seconds)
    (4/7) benchmarking "year"...
    done (took 1.205996854 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.205490385 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.205862821 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.206255981 seconds)
  done (took 9.586369749 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.208515421 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.381810284 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.457811083 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.805568457 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.210380564 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.212562486 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.070280673 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.212761271 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.214017557 seconds)
  done (took 13.919610672 seconds)
done (took 76.976765881 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.193209244 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.200398148 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.04478606 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.215706786 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.218554102 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.543909062 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.217340425 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.33737933 seconds)
done (took 37.117364027 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.212278085 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.935572797 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.934186976 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.204816904 seconds)
  done (took 11.222269474 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.199367696 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.118079154 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.195565477 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.206901927 seconds)
  done (took 17.867886406 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.812829745 seconds)
    (2/2) benchmarking "read"...
    done (took 1.536964048 seconds)
  done (took 4.496427585 seconds)
done (took 40.945589469 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.211141557 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.210293745 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.211987644 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.208142652 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.210516558 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.209904005 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.208110479 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.207365807 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.210727327 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.210550342 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.208390351 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.210536515 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.211290915 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.211144381 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.208332819 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.209462506 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.208480456 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.211339328 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.209107769 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.208308266 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.209016875 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.210362914 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.2091927 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.209149505 seconds)
  done (took 30.180627203 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.211045887 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.20977588 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.211343491 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.212117291 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.210098936 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.212188341 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.21283246 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.210360241 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.211727041 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.212076441 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.209259186 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.209305043 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.212839454 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.2105168 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.211160415 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.209548691 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.213249667 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.210088752 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.21220873 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.209725953 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.21182744 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.20956192 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.209325248 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.213018979 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.209234671 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.209949787 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.212147165 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.211249043 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.213490477 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.210948072 seconds)
  done (took 37.481885066 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.217321667 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.220430789 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.212772192 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.211770797 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.213693553 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.213641787 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.213511817 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.213303451 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.213309927 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.213237205 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.213601092 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.212702064 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.214102971 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.214047811 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.214194133 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.214042799 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.215470207 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.214343265 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.213875733 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.214795836 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.213998849 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.213966296 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.213664668 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.213502532 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.214575274 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.21433337 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.213712216 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.21390979 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.215192963 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.214418116 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.21445153 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.214611451 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.214752518 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.214923157 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.215259864 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.214335497 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.218912928 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.220838241 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.214226774 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.214556748 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.214505453 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.214545021 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.214962248 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.214610509 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.214605633 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.214289022 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.214979393 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.214687329 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.214966231 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.214636918 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.215097177 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.214670019 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.214969268 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.215289838 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.215918762 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.215148348 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.215609986 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.215593952 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.214449498 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.21540317 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.215958175 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.214963952 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.216467574 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.21540674 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.215910984 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.215416098 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.215837971 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.216144832 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.215861511 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.215802031 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.216180174 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.215027825 seconds)
  done (took 88.622383531 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.215796942 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.212797084 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.213226785 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.213509989 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.213555076 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.2156694 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.213615626 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.216204001 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.214319378 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.216427372 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.217651761 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.214802659 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.212818243 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.216949853 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.216175122 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.21388708 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.216750449 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.213650271 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.217635472 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.21710205 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.217150226 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.214683235 seconds)
  done (took 27.887572821 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.216885937 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.217144039 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.214575793 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.217037246 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.215209137 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.216198431 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.217354461 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.217270166 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217362911 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.216602866 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215680776 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.217552503 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.214984556 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215860036 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.215014276 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.215466167 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.217348835 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.215518113 seconds)
  done (took 23.047186483 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.215277776 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.216371781 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.217565726 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.216288428 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.216454084 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.219317351 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.216106409 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.217724579 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.218399449 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.215848499 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.217932853 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218952308 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.218634198 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216725416 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218328296 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.217001458 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.218227095 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216506697 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.218384817 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.216310634 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.216208167 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.218913063 seconds)
  done (took 27.936322191 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.219368354 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.218554147 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.216747351 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.215680528 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.216346571 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.219131286 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.220075773 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.216417045 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.219134347 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.219401391 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.216520363 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.218553821 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.216750754 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.217825706 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.21749073 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.21753798 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.220145238 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.217960826 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.219001129 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.21773745 seconds)
  done (took 25.516265988 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.221304608 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.222293513 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.221406771 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.22256958 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.220949278 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.22147032 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.222829446 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.22105101 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.222168389 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.220917163 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.221790816 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.22067497 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.221737764 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.222182154 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.22185888 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.222325955 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.222326624 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.221860991 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.222749444 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.22312316 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.223075532 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.222834695 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.223923997 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.222296052 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.222968322 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.222296931 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.22265465 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.223519063 seconds)
  done (took 35.379042385 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.222791108 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.221711603 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.219379134 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.220211267 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.2191981 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.219355124 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.218984514 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.219698604 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.221404664 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.219218976 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.221680895 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.221747361 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.223713822 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.222748408 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.222832143 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.222340666 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222631007 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.221084505 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.220009074 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.219097729 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.222228288 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222212653 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.222548435 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.22054173 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.220119524 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.222569535 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.2199209 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.221078308 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.222281676 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.220631221 seconds)
  done (took 37.793175462 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.241279801 seconds)
    (2/2) benchmarking "in"...
    done (took 1.24173767 seconds)
  done (took 3.642896189 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.220705651 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.223585004 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.223705058 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.221078807 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.221134018 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.223905435 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.223252547 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.221112093 seconds)
  done (took 10.938145789 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.223033378 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.224498215 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.223683198 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.224443492 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.224420587 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.225098237 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.232874453 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.240712178 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.226262979 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.225346896 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.230133993 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.232276222 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.228684519 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.22551357 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.224277661 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.227028927 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.224559544 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.225354607 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.225253035 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.22443036 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.224460515 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.228039949 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.227542377 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.221928637 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.227484704 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.239702796 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.232185773 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.225771864 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.224865781 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.232368539 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.22574902 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.223292373 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.227039905 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.226383783 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.225118715 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.225517417 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.235869754 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.243579924 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.234155054 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.227173463 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.226044666 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.222835551 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.228508343 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.228557708 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.227843335 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.226582359 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.225684941 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.223987299 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.225633495 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.229085675 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.2308177 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.225472267 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.224625316 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.233876821 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.228620836 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.235913775 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.244001592 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.22929037 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.234760115 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.239778237 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.242750735 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.234783958 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.229213419 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.228030264 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.236614368 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.251234731 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.236457257 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.243344231 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.225201182 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.227478391 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.237763491 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.243880272 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.236926241 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.227805862 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.228671441 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.228685605 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.22836956 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.228358109 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.238128561 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.249475957 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.228722821 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.228514358 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.238134764 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.25101766 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.227567484 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.229018042 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.228751849 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.228743019 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.229584477 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.241071876 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.245294148 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.228906257 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.228016733 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.228151972 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.232638909 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.230034625 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.227954308 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.230217133 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.226853819 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.229888511 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.229872805 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.233224683 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.238700779 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.229700521 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.230332408 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.238401947 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.229569073 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.229689479 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.239976393 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.231259429 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.230283776 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.230791402 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.238681534 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.227955665 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.233372032 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.238887964 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.231193822 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.232573384 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.230939807 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.231118599 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.240853997 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.257161745 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.230903028 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.229972586 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.236224432 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.241236685 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.231361803 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.234765913 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.230827668 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.228331664 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.229102507 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.233409025 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.230796456 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.232810939 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.231913179 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.233817544 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.228593787 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.231527829 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.23155537 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.233514808 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.233370813 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.232122069 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.233467879 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.235712199 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.232376009 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.234381521 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.240498755 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.232560064 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.234313674 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.233638054 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.229805287 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.232209261 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.235693318 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.232592921 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.232879967 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.232384656 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.231613435 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.233716021 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.232655059 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.232808655 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.232637572 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.232384044 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.236103209 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.232476156 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.238618845 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.231821056 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.231036775 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.233678168 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.233788811 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.233124337 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.233498887 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.231827744 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.236204342 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.241146981 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.233333486 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.233402196 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.237178712 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.234304655 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.233250352 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.234505133 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.237301612 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.241095616 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.233995501 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.243197443 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.234609891 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.233978507 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.234505899 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.235302797 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.233676219 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.23439976 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.236143402 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.241282336 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.249419566 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.244614554 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.235847755 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.2383216 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.235242166 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.238366107 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.241524919 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.235475147 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.234795473 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.236138462 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.234452387 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.235448913 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.237909007 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.235006054 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.235427061 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.234716693 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.236118114 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.235367922 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.235073215 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.236925596 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.238028191 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.231973469 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.235554055 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.23623523 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.235411322 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.233803291 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.235214513 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.23587172 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.235764129 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.2357113 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.246616964 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.233612669 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.23736805 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.237589676 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.236226271 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.234489617 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.235621615 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.238994931 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.236824609 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.245539117 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.254265403 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.237550215 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.24425511 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.253150681 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.236353302 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.240406555 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.237446742 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.23327734 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.239438685 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.243947002 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.236959065 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.237489232 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.237404493 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.237234925 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.237327425 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.246176535 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.235624351 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.236905128 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.237177816 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.240594828 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.234977415 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.24036069 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.239271957 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.239129007 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.241262323 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.2373181 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.237773585 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.240804707 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.239218645 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.238431179 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.238738371 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.240728595 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.246663188 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.245077439 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.240123279 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.241973041 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.240169333 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.241922841 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.239879711 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.239630762 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.238540116 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.253875652 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.247370433 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.247590168 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.24265745 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.239008782 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.246989077 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.241106756 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.243327092 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.239189614 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.239993237 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.240431921 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.238452031 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.237158095 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.240550245 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.240501392 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.24173386 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.241245651 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.243942458 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.240139513 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.239412829 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.240524241 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.240106345 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.240936501 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.240141482 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.239816066 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.245152217 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.243495115 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.240725165 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.24003393 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.248525314 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.258240598 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.242914727 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.239660545 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.240625071 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.239703081 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.243070454 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.240973538 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.243250305 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.247710668 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.24422745 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.25144769 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.242214088 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.253396754 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.242458292 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.244662681 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.248645715 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.238941183 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.241086203 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.241782382 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.241337429 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.250861373 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.258996116 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.242348046 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.245273952 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.242193193 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.242323762 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.242030914 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.24269445 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.242382988 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.243301037 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.253266879 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.259661035 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.245821006 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.244906313 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.239761911 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.242371738 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.243182284 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.241148324 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.248805426 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.242203064 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.244440349 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.242358212 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.243268067 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.241948642 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.242861517 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.242145975 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.240685335 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.242346693 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.252541107 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.261329732 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.247526533 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.24327159 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.255926738 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.244388844 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.252496402 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.260789311 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.245163266 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.244120704 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.241897357 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.247715217 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.245399491 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.246312227 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.244517146 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.244492546 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.247473534 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.244153368 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.247363378 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.244624523 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.244509195 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.244492291 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.254329372 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.267073697 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.247102571 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.248380006 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.24221293 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.245990841 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.24935081 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.244704301 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.242854361 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.246709448 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.254588214 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.251544075 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.245240518 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.246109556 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.245492442 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.245638442 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.244912884 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.245283407 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.244649825 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.244879637 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.247176123 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.245214574 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.250904013 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.245350576 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.247006042 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.246788828 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.246288942 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.257440177 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.246641722 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.24756419 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.246107528 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.246082703 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.245575724 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.246826512 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.246739965 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.246641951 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.245611793 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.246791638 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.252832331 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.252072532 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.25052403 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.246286308 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.246981204 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.248139032 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.247398027 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.246566896 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.246542668 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.247062271 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.247779921 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.247215176 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.248834123 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.244345008 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.245780236 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.248314598 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.246415557 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.249873943 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.252760154 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.247831477 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.243666666 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.246924111 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.246480963 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.246352689 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.247724721 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.259833588 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.25094665 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.256966206 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.256404414 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.25164815 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.247929477 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.250809489 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.255837297 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.247272662 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.2489037 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.247939348 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.250821247 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.249189195 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.250996455 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.247962107 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.256784456 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.2490072 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.24792119 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.258185625 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.266273879 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.24868156 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.249984329 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.25290146 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.249030231 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.245332839 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.249063521 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.248643527 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.258190249 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.268648315 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.249846819 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.251508975 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.247103772 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.250359931 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.252715429 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.249475314 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.251064923 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.245888715 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.250609531 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.249964108 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.248794625 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.247242767 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.249303202 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.248874386 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.252507806 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.256559851 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.247357213 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.25260567 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.249806685 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.250538339 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.250272173 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.250024649 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.247750192 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.246624801 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.249780006 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.250495117 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.251068049 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.254532203 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.250119404 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.251245414 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.250586825 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.251620946 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.253248238 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.260118642 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.25802088 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.247349915 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.249316576 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.25187133 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.254601798 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.250623868 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.250922582 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.251004781 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.253707481 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.251916577 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.251173776 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.251012694 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.253971543 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.269389767 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.267721532 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.251929755 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.25196555 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.257903633 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.251758988 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.249252624 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.252596591 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.255139971 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.255808219 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.259595904 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.252556965 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.26017599 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.268431404 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.253064531 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.254798718 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.255564502 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.260758033 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.257291961 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.253515435 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.25342224 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.257764656 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.271216379 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.253373096 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.263208103 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.283709455 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.271349239 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.254951083 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.253119275 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.251843744 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.253244478 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.256043612 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.253006022 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.252405356 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.252898561 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.25286114 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.254150072 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.259716029 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.255306991 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.253166368 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.253560193 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.253774313 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.256205446 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.249868694 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.253116815 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.253300998 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.254640806 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.254066553 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.254759055 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.254316875 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.2692568 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.265633327 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.254418619 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.254915887 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.25165947 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.259906324 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.257464293 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.264084707 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.26219613 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.254864497 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.254466768 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.256766583 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.25429695 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.252238491 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.25608917 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.254993365 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.253295243 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.252067397 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.27045598 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.2637103 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.260783651 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.256336143 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.255417683 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.255415448 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.257273917 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.254279999 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.255315956 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.257593821 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.25595654 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.258817631 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.255035211 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.255788588 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.259351923 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.262508244 seconds)
  done (took 741.859945317 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.253137436 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.253333685 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.253815982 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.254083623 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.253717034 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.254349202 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.253678909 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.253824739 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.254377433 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.253413649 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.254385688 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.253991251 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.254803598 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.253922122 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.254014205 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.254358451 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.254128798 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.254161409 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.254178034 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.253739587 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.253214036 seconds)
  done (took 27.524825932 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.256172387 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.253412131 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.25411868 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.255843812 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.253541201 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.256808254 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.253609713 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.257097641 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.256686557 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.254301949 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.256755015 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.256849377 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.254645591 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.255135977 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.253891301 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.25701097 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.257305916 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.254494388 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.257556276 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.25553355 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.257647495 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.25416899 seconds)
  done (took 28.815720579 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.258339385 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.258067941 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.256995439 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.255671659 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.258356914 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.256255352 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.258093236 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.258771661 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.258745197 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.260156807 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.256591311 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.258949286 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.264628206 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.263222709 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.262069616 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.258511321 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.403438508 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.259351847 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.258267913 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.258927591 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.256288838 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.265408602 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.256281387 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.256222019 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.25772787 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.259134654 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.259192673 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.258901566 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.259618823 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.260321437 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.26329266 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.258811765 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.259095329 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.261555213 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.259417417 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.260691243 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.263773729 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.260379442 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.257208211 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.259207111 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.269519198 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.281107325 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.261211463 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.267838079 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.260024414 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.260255036 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.264475807 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.267128361 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.258140512 seconds)
  done (took 63.100301154 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.261536034 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.260111729 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.258337872 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.261052343 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.260626997 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.261312323 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.261325647 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.26083729 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.258835322 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.258162382 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.262452175 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.2592449 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.257379299 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.261581441 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.260716865 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.258859369 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.258750965 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.2591469 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.259046309 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.258320138 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.257686415 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.260835376 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.261726358 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.258677885 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.261777191 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.25951467 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.260192877 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.261503656 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.258746413 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.259384881 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.262518564 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.26172939 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.26296518 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.259826747 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.259448972 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.262919921 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.262792385 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.260009667 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.262802815 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.259759819 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.263033784 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.262377305 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.263398722 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.262566736 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.259703031 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.260339163 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.259821383 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.260485011 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.260191193 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.262170871 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.263166114 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.260865029 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.262196725 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.260549716 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.26324872 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.263490412 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.261155131 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.260942392 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.263823312 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.261181804 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.26170711 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.263260137 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.261908041 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.264301127 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.264143146 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.262633348 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.261913955 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.26490811 seconds)
  done (took 86.950949851 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.263943516 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.264033544 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.264929053 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.264585945 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.264898415 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.26473191 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.264400761 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.265093475 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.264334163 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.265124281 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.263909113 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.264823701 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.265091613 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.264727561 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.265977974 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.264790866 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.26597959 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.265253516 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.264878514 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.265309263 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.266386613 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.264998289 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.265620098 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.265384264 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.266183407 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.265388999 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.265790264 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.265484217 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.265400274 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.265210138 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.266184944 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.265922882 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.266596497 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.265313945 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.266892155 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.266442964 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.266222624 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.26675005 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.266092229 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.26685991 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.265899321 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.265151924 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.26618999 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.266300184 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.266444849 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.2665285 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.266641634 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.267123466 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.266427742 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.26789789 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.267712547 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.267573825 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.267273027 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.266468131 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.266371797 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.266680984 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.267175229 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.266856514 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.267424205 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.266952178 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.267344685 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.267052786 seconds)
  done (took 79.687533016 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.267004411 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.267912297 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.264788475 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.264672813 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.267135383 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.264403701 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.267903035 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.268235343 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.267968732 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.268977999 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.267263022 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.264848718 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.265718098 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.268210726 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.26580521 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.265521595 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.265544515 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.265151769 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.267702574 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.266314051 seconds)
  done (took 26.533733204 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.266235091 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.268703536 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.266928459 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.266437865 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.268566596 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.266678169 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.268827897 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.268536383 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.266349053 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.268724577 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.26860708 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.269121579 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.265598375 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.266737293 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.269093444 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.266980978 seconds)
  done (took 21.485145995 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.266689884 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.26906857 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.27033366 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.26990605 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.265579533 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.266759775 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.269623644 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.266764969 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.267010452 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.27091644 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.269106657 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.270309127 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.269761548 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.270269758 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.267271401 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.270183183 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.267284511 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.268156877 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.269871987 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.272041509 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.268905079 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.267539585 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.270600153 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.269734811 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.268315391 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.269063199 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.268655371 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.268444474 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.268532753 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.27042197 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.268802702 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.268813026 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.268614489 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.268539272 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.27225292 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.268520568 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.271329311 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.271018075 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.271360589 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.271428168 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.271000424 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.269106555 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.271735207 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.270967992 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.268427912 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.272160606 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.269257646 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.2697049 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.269620335 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.26947872 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.272828242 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.272957879 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.271413902 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.272287791 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.272825922 seconds)
  done (took 71.036625824 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.272932211 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.273560939 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.27002937 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.272257906 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.273532447 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.270247725 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.272968512 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.270343552 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.270769147 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.272089171 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.271308958 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.273939625 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.269692826 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.273523369 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.270514155 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.273278794 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.270894483 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.271356151 seconds)
  done (took 24.100474207 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.271880294 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.270715318 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.273635613 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.271617966 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.270520975 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.273844289 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.269456379 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.273463503 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.272322034 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.27083344 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.270928528 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.273189305 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.273835417 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.273258754 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.271060713 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.270793273 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.273895653 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.273812428 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.271463282 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.27053236 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.273919724 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.273582117 seconds)
  done (took 29.196757298 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.27370514 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.272873963 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.291199689 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.318684989 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.304012294 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.27261958 seconds)
  done (took 8.940811092 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27159031 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273645586 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.272051467 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274684839 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273447429 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271435107 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271985188 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271736904 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274562515 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272450013 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272620141 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274966983 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273834246 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271236959 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274561219 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275860524 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272134225 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271848143 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273222741 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275194717 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272016003 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275315129 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272590302 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273240589 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27213185 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273062478 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276221239 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273928734 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273442672 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276018486 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275440249 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273008405 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27670847 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2734534 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276002249 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276363931 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274540941 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27645858 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27605164 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273229915 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.276784891 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277441635 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276082594 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274554019 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277455981 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273766236 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273959919 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273724797 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275181101 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27691111 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27673707 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274045382 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276656318 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275754285 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276415506 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277169693 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274062414 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274373677 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277439013 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275465224 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274477602 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277077559 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274159857 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27564466 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278052002 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274188692 seconds)
  done (took 85.330696141 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274053378 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.275047101 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275711104 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27646144 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275907388 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274825659 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274856407 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275691706 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274934042 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275302883 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279154704 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275051208 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275666321 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27650735 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276286321 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276220103 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275371637 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276055376 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276435499 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278525314 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276240101 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276160534 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276281667 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276930489 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276779374 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279522552 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274768872 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276265486 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276645421 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276171407 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276679356 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275927656 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275911765 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.2760782 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276365161 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276730576 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27640437 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276967053 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276117113 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279958088 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276603078 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278747038 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275688054 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276403548 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276105823 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275252632 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276823415 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27472579 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27555343 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274739947 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27563923 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275169896 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275284963 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275830627 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277248552 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274189325 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274976449 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273934436 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275160542 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277209706 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274941654 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274019759 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.2781763 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275258601 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275568552 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274620959 seconds)
  done (took 85.432552921 seconds)
done (took 1729.56915692 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.353526747 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.269396252 seconds)
  done (took 13.834782831 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.441770537 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.392811163 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.274168781 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.306164514 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.275408012 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.273804496 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.297573515 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.274675729 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.273769064 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.273272548 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.273893075 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.463395922 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.270893298 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.274316266 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.273643203 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.365016336 seconds)
  done (took 42.219452923 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.30308138 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.282014866 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.38824699 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.296940657 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.301833868 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.456441584 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.334791476 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.279197112 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.442090509 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.318463119 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.77460451 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.302562994 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.280597123 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.340015359 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.296055105 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.456940956 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.517266038 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.778452567 seconds)
  done (took 29.360563223 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.707912357 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.298576997 seconds)
  done (took 9.217765833 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.278372697 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.305668124 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.310620054 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.274015456 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.272063284 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.327999008 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.340240951 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.313785892 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.318399088 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.319917816 seconds)
  done (took 64.273175073 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.297493598 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.280015134 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.278545489 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.277819355 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.270427641 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.27127621 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.27747506 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.279386397 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.780187612 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.398972289 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.29176383 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.285772959 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.279660231 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.280716875 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.276340839 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.315057155 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.405832453 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.275622046 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.275486973 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.285017165 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.279426947 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.404122838 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.319188607 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.277228127 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.398959356 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.771186265 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.283442971 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.285127468 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.396315385 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.276214478 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.277792044 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.278778591 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.280753205 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.837634508 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.710159362 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.28477139 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.314919454 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.287411264 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.274918715 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.451816118 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.278297182 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.283258094 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.279855771 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.682025808 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.429218923 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.382789119 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.473819597 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.276954552 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.277530212 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.338416071 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.278399117 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.278742871 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.306260251 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.010679039 seconds)
  done (took 107.866455703 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.269427448 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.759057809 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.437669607 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.293869682 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.049409437 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.938667422 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.270731651 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.538466612 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.273496224 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.270351496 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.593847366 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.754973864 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.278710358 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.279035212 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 7.009108973 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.362426257 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.271906028 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.035440781 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.270984695 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.274004476 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.679209159 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.285408037 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.270854143 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.337594722 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.308444929 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.712175451 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.635687591 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.71369013 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.272114537 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.268424928 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.709054441 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.270845415 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.271629552 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.267207784 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.532749906 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.597467694 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.577945545 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.268842574 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.283443711 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.272096606 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.303936716 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.701028557 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.584771193 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.268288919 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.267058833 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.704638914 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.267886689 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.266774654 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.268890107 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.466266086 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.258850822 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.270651536 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.597190825 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.268108057 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.608771575 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.297471778 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.311472142 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.730563939 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.267789333 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.322722351 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.276852097 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.269247773 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.274491906 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.266640891 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.269179731 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.586699571 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.669914896 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.274196248 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.587385898 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.69875697 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.268702758 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.772761682 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.174285492 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.283430571 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.340005188 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.267482433 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.844085496 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.727582914 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.316105562 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.268724432 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.571986804 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.271289069 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.57550447 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.280151012 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.268823078 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.683811701 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.291288934 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.305169077 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.268973383 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.280907327 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.889826646 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.273696761 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.521978977 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.298422644 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.268806725 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.268994309 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.295023713 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.268523776 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.284036169 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.268864263 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.773270641 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.269418056 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.55793805 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.289051112 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.269385659 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.269223229 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.272424136 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.271443175 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.484021471 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.778689966 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.275621984 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.270449852 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.269429088 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.271338059 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.580480332 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.271551654 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.547541323 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.270575038 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.271045607 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.290351476 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.963961426 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.298973764 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.271182875 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.27268516 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.114166705 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.48032115 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.285960478 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.284179461 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.27014625 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.284228249 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.515191745 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.269843218 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.286200817 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.27113283 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.946717659 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.299190368 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.294517019 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.919696747 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.280660269 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.137425274 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.290572469 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.272105594 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.570134471 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.535904616 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.589380052 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.27339237 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.271626782 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.940324565 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.29312183 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.403286773 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.288499604 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.282650039 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.468856605 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.619040636 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.271033694 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.859656895 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.270696903 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.482255152 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.276679014 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.582918642 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.734206308 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.271172903 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.277272185 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.945943376 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.944897328 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.902088779 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.273971232 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.591148334 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.24062423 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.724982713 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.271915736 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.285876691 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.701138138 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.276290221 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.276280747 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.272265044 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.273693787 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.336069698 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.445915981 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.438978754 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.274333709 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.704326249 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.284405076 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.281960746 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.279245577 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.274148202 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.62609503 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.34268152 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.276353593 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.285165821 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.274635436 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.28211539 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.717952246 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.162589973 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.274182056 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.42483189 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.880854723 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.274811523 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.274239826 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.930160327 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.579501901 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.754217992 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.29305533 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.556196611 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.27945681 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.312329769 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.973773531 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.298252261 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.717956497 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.277222955 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.274021005 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.854474719 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.275881514 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.334365288 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.274653294 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.27425233 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.781327435 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.274633149 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.282249772 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.531858748 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.27453009 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.520254403 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.278882932 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.298622894 seconds)
  done (took 1096.21675819 seconds)
done (took 1364.200948026 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.28150383 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.280750012 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.268411972 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.278795519 seconds)
  done (took 26.326273286 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.282798651 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.281902295 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.282781607 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.280315126 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.283802202 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.281502079 seconds)
  done (took 8.90975484 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.302954235 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.279320981 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.278482584 seconds)
  done (took 19.077515622 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.480949078 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.466606106 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.621073835 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.295052857 seconds)
  done (took 10.081842046 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.282745051 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.282563809 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.282395145 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.285465958 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.286283241 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.285769279 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.284888357 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.285224609 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.286820069 seconds)
  done (took 12.778549237 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.930922895 seconds)
done (took 83.321026463 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.264612939 seconds)
    (2/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.281095906 seconds)
    (3/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.439179437 seconds)
    (4/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.510284988 seconds)
    (5/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.521833047 seconds)
    (6/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.572570068 seconds)
    (7/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.319943781 seconds)
    (8/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.302026639 seconds)
    (9/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.971214832 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.607569732 seconds)
    (11/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.280877179 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.884112779 seconds)
    (13/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.276921951 seconds)
    (14/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.461845079 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.350768455 seconds)
    (16/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.276733368 seconds)
    (17/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.563668225 seconds)
    (18/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.960926719 seconds)
    (19/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.482108762 seconds)
    (20/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.925668539 seconds)
    (21/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.743082686 seconds)
    (22/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.358218168 seconds)
    (23/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.078538405 seconds)
    (24/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.42253864 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.482154678 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.085275726 seconds)
    (27/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.406940967 seconds)
    (28/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.874443534 seconds)
    (29/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.264486483 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.723503725 seconds)
    (31/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.290186923 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.281044824 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.121573306 seconds)
    (34/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.316546577 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.643240114 seconds)
    (36/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.271795439 seconds)
    (37/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.824664382 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.82511688 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.327615035 seconds)
    (40/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.870837749 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.756929121 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.38822975 seconds)
    (43/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.278070874 seconds)
    (44/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.543770635 seconds)
    (45/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.470081165 seconds)
    (46/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.293880632 seconds)
    (47/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.070759661 seconds)
    (48/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.309273242 seconds)
    (49/309) benchmarking ("sort", Float64, false)...
    done (took 5.557336311 seconds)
    (50/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.303909975 seconds)
    (51/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.335079866 seconds)
    (52/309) benchmarking ("sort", BigInt, false)...
    done (took 6.279854866 seconds)
    (53/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.376034741 seconds)
    (54/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.303189465 seconds)
    (55/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.278188596 seconds)
    (56/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.326224702 seconds)
    (57/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.406738871 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.353740978 seconds)
    (59/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.845001711 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.108141266 seconds)
    (61/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.493821808 seconds)
    (62/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.318362016 seconds)
    (63/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.049712683 seconds)
    (64/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.373924559 seconds)
    (65/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.335914669 seconds)
    (66/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.309801261 seconds)
    (67/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.278691492 seconds)
    (68/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.752693079 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.30155071 seconds)
    (70/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.283740437 seconds)
    (71/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.892845061 seconds)
    (72/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.268346558 seconds)
    (73/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.480220273 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.151397144 seconds)
    (75/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.342845824 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.146896073 seconds)
    (77/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.279761749 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.344068031 seconds)
    (79/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.540621547 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.329113109 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.324901142 seconds)
    (82/309) benchmarking ("sort", Int64, false)...
    done (took 5.415940253 seconds)
    (83/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.538327929 seconds)
    (84/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.095081167 seconds)
    (85/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.412550614 seconds)
    (86/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.57591479 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.359009761 seconds)
    (88/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.640103918 seconds)
    (89/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.809599405 seconds)
    (90/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.503881487 seconds)
    (91/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.306491981 seconds)
    (92/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.281760068 seconds)
    (93/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.996062974 seconds)
    (94/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.585021874 seconds)
    (95/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.295440207 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.510024558 seconds)
    (97/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.367650506 seconds)
    (98/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.288164877 seconds)
    (99/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.577999231 seconds)
    (100/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.493006409 seconds)
    (101/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.366046448 seconds)
    (102/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.662169205 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.654582412 seconds)
    (104/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.36501376 seconds)
    (105/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.567053675 seconds)
    (106/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.400218939 seconds)
    (107/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.282005783 seconds)
    (108/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.284327638 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.272215926 seconds)
    (110/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.284567207 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.329356532 seconds)
    (112/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.000240089 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.662629271 seconds)
    (114/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.568889129 seconds)
    (115/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.784061913 seconds)
    (116/309) benchmarking ("sort", Bool, false)...
    done (took 1.804878696 seconds)
    (117/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.305542137 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.838393829 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.129421624 seconds)
    (120/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.984857888 seconds)
    (121/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.574224731 seconds)
    (122/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.078610221 seconds)
    (123/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.287186807 seconds)
    (124/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.67113065 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.104985597 seconds)
    (126/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.982104398 seconds)
    (127/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.544431603 seconds)
    (128/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.341496024 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.145958113 seconds)
    (130/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.268145067 seconds)
    (131/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.754077081 seconds)
    (132/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.275308289 seconds)
    (133/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.386560504 seconds)
    (134/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.364627947 seconds)
    (135/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.565268829 seconds)
    (136/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.067126994 seconds)
    (137/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.282966834 seconds)
    (138/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.469303498 seconds)
    (139/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.588196543 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.383874998 seconds)
    (141/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.891824308 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.000263061 seconds)
    (143/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.310133087 seconds)
    (144/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.749578164 seconds)
    (145/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.282937665 seconds)
    (146/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.710328477 seconds)
    (147/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.487903972 seconds)
    (148/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.904286673 seconds)
    (149/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.053142853 seconds)
    (150/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.007713292 seconds)
    (151/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.822222339 seconds)
    (152/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.292930136 seconds)
    (153/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.372713057 seconds)
    (154/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.635632102 seconds)
    (155/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.818060149 seconds)
    (156/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.072638036 seconds)
    (157/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.307306656 seconds)
    (158/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.651515342 seconds)
    (159/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.295738333 seconds)
    (160/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.569390052 seconds)
    (161/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.386391617 seconds)
    (162/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.82688304 seconds)
    (163/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.277397135 seconds)
    (164/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.575268175 seconds)
    (165/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.28504407 seconds)
    (166/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.164268547 seconds)
    (167/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.278506547 seconds)
    (168/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.485043565 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.392386906 seconds)
    (170/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.283847086 seconds)
    (171/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.373609139 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.587067213 seconds)
    (173/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.817049781 seconds)
    (174/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.289198477 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.634345617 seconds)
    (176/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.298766915 seconds)
    (177/309) benchmarking ("sort", Int8, false)...
    done (took 4.360306885 seconds)
    (178/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.28577097 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.392017703 seconds)
    (180/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.586958657 seconds)
    (181/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.44068957 seconds)
    (182/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.310752258 seconds)
    (183/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.138306127 seconds)
    (184/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.686327898 seconds)
    (185/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.328707991 seconds)
    (186/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.302832036 seconds)
    (187/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.597818829 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.651256213 seconds)
    (189/309) benchmarking ("sort", Float32, false)...
    done (took 5.269395403 seconds)
    (190/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.287506852 seconds)
    (191/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.654018374 seconds)
    (192/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.031717191 seconds)
    (193/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.88430809 seconds)
    (194/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.415476821 seconds)
    (195/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.469158146 seconds)
    (196/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.296214374 seconds)
    (197/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.322952063 seconds)
    (198/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.346822031 seconds)
    (199/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.528489337 seconds)
    (200/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.292172325 seconds)
    (201/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.320900225 seconds)
    (202/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.356781948 seconds)
    (203/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.315965079 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.310670519 seconds)
    (205/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.650962018 seconds)
    (206/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.284462146 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.101587898 seconds)
    (208/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.373068794 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.846977417 seconds)
    (210/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.841320436 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.505466318 seconds)
    (212/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.412682188 seconds)
    (213/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.273848531 seconds)
    (214/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.901898363 seconds)
    (215/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.03960568 seconds)
    (216/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.314653164 seconds)
    (217/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.917861507 seconds)
    (218/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.328269436 seconds)
    (219/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.41770606 seconds)
    (220/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.371352806 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.11244889 seconds)
    (222/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.306516925 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.722570035 seconds)
    (224/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.321420481 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.28945444 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.311733217 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.181293911 seconds)
    (228/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.48148896 seconds)
    (229/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.394242339 seconds)
    (230/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.329281757 seconds)
    (231/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.415523995 seconds)
    (232/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.488127375 seconds)
    (233/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.311578333 seconds)
    (234/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.38401502 seconds)
    (235/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.493717989 seconds)
    (236/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.699075672 seconds)
    (237/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.525723927 seconds)
    (238/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.011145811 seconds)
    (239/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.290912467 seconds)
    (240/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.316140764 seconds)
    (241/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.819535812 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.295120788 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.681060101 seconds)
    (244/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.923378238 seconds)
    (245/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.027097807 seconds)
    (246/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.548781037 seconds)
    (247/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.354112608 seconds)
    (248/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.793372732 seconds)
    (249/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.626052352 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.290493421 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.632344301 seconds)
    (252/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.42715589 seconds)
    (253/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.376203456 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.489313003 seconds)
    (255/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.303325706 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.687613923 seconds)
    (257/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.545623162 seconds)
    (258/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.304333089 seconds)
    (259/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.318251182 seconds)
    (260/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.397836292 seconds)
    (261/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.290211998 seconds)
    (262/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.693993316 seconds)
    (263/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.379774264 seconds)
    (264/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.304334356 seconds)
    (265/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.308387179 seconds)
    (266/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.476152649 seconds)
    (267/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.645302433 seconds)
    (268/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.299405715 seconds)
    (269/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.860310785 seconds)
    (270/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.648197341 seconds)
    (271/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.277735348 seconds)
    (272/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.409554399 seconds)
    (273/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.359034694 seconds)
    (274/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.330041203 seconds)
    (275/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.909512815 seconds)
    (276/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.305771297 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.387627992 seconds)
    (278/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.861754892 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.386965682 seconds)
    (280/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.629129265 seconds)
    (281/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.376172065 seconds)
    (282/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.117220956 seconds)
    (283/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.279330558 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.415824287 seconds)
    (285/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.391493066 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.908700399 seconds)
    (287/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.614066589 seconds)
    (288/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.351907161 seconds)
    (289/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.279178281 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.528657853 seconds)
    (291/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.281790898 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.324110243 seconds)
    (293/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.572774372 seconds)
    (294/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.661385091 seconds)
    (295/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.377774421 seconds)
    (296/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.29531308 seconds)
    (297/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.794626683 seconds)
    (298/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.64713877 seconds)
    (299/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.321517092 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.337316401 seconds)
    (301/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.13341788 seconds)
    (302/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.766534149 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.696469126 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.330746382 seconds)
    (305/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.306631351 seconds)
    (306/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.31049157 seconds)
    (307/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.483602856 seconds)
    (308/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.320650954 seconds)
    (309/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.32300116 seconds)
  done (took 901.123480051 seconds)
done (took 902.34348583 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.326774182 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.319473617 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.304125862 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.326307678 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.414702585 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.338415072 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.315821283 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.307154069 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.353248656 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.355571322 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.303298574 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.338151402 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.306118988 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.304629271 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.304004546 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.318657114 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.265899674 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.310428897 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.32114095 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.315121909 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.32189943 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.303800577 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.354679756 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.338157926 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.309271005 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.310144621 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.308118462 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.324788592 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.416859417 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.308568039 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.30939664 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.317374825 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.24343141 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.305447923 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.302020648 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.325254998 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.316946797 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.315956022 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.311092768 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.338315437 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.615643564 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.306701928 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.307785934 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.307662853 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.308475737 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.312738001 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.307030566 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.31436028 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.318878771 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.320962143 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.611558154 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.321534306 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.309467265 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.308882228 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.320368354 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.307723495 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.311586928 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.322719592 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.327210679 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.323212112 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.266178342 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.316016151 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.31043451 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.32369693 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.315437803 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.652618318 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.304632341 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.312738625 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.627526763 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.314400383 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.654225205 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.316021421 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.310263512 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.322682004 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.339876675 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.253015179 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.303445825 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.309442113 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.315519021 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.306860091 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.318567921 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.32120987 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.314100793 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.311201915 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.322770157 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.342649581 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.319005946 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.307505734 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.317184492 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.32616448 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.314664212 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.317899409 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.310703189 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.303758804 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.319282424 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.311157237 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.31043531 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.310788839 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.313703872 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.319297156 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.623618107 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.324328466 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.307749004 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.306534468 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.307469161 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.321165954 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.626876073 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.310141829 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.330716149 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.35549656 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.310204462 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.271372299 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.31701377 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.3237647 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.318492352 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.312207301 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.305346077 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.275320293 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.625901394 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.323164 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.31095367 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.307941758 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.323472102 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.311646794 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.306407832 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.284995465 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.312949192 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.322737774 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.42937529 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.321036316 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.340887475 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.307190356 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.313166181 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.343524441 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.325364347 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.341202843 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.313465372 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.325060857 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.325332694 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.307359892 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.321446307 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.320446257 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.312352771 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.317155584 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.306314182 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.340342491 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.321511226 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.322713423 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.332594876 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.430910466 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.308640496 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.277512719 seconds)
done (took 220.048864427 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.370936997 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.305204904 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.416407845 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.308372177 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.406757626 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.405589224 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.305411139 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.306649688 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.306173942 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.686899042 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.30619214 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.306611677 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.308245981 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.305976804 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.391218589 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.309293586 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.304836646 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.6508511 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.310041015 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.379491901 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.306140425 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.306832632 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.308889762 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.69057527 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.307569794 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.306713192 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.379007319 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.309897458 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.654918832 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.310322646 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.30439823 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.655445029 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.39885604 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.325597172 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.318848068 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.316663924 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.407855526 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.324731529 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.390439196 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.390345262 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.41707075 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.348634969 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.302188806 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.306995852 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.311457275 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.312200742 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.307478691 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.336535311 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.310672393 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.3084965 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.652063904 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.320578725 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.308577492 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.308753356 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.308979078 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.340882379 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.309140146 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.313507779 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.399755909 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.311733693 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.37684554 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.692169419 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.690524396 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.311652067 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.311786129 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.309845933 seconds)
  done (took 146.877340449 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.378420647 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.383979196 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.41948797 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.312095895 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.362115349 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.422941191 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.31213837 seconds)
  done (took 10.835068096 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.317260786 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.312118512 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.361406021 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.361685797 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.312279591 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.458948484 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.313167598 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.323273058 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.309628346 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.364762359 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.314707713 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.312595487 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.318907266 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.30896379 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.360161252 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.323072645 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.426872596 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.312295735 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.314940556 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.467356468 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.309855868 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.319486742 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.364254737 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.323560332 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.31491158 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.318978333 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.877647535 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.312905655 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.31090396 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.31402546 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.309975788 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.350698345 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.313345261 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.310868689 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.311887471 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.429545274 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.314285418 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.312450867 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.314632288 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.305872489 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.314663865 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.313840294 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.312492059 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.310505831 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.313559127 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.337865723 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.312992513 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.314261727 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.313856702 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.314966625 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.363762056 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.315246988 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.312014039 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.312648687 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.369987039 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.321544912 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.315208976 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.312226666 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.315097771 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.31195723 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.468873652 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.362078909 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.314964968 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.363026846 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.315455445 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.315885205 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.314864056 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.315478904 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.369784258 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.315050411 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.363380746 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.313010676 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.46923457 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.338627362 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.316484951 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.317506142 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.31863053 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.315276051 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.312989644 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.321466935 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.313788033 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.316916065 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.321718322 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.31334393 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.313871194 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.418347083 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.42484962 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.314411438 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.32847427 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.322808805 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.313912829 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.369616325 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.316297567 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.31391194 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.367820131 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.431802594 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.369247071 seconds)
  done (took 151.305734402 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.321019565 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.323089651 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.317698348 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.332401106 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.316908936 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.316430387 seconds)
  done (took 9.177185979 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.319854894 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.318647451 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.318126578 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.317458591 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.317199556 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.320170998 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.317679817 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.318386417 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.321602915 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.318154264 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.319470729 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.319348887 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.320258385 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.319165343 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.318644342 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.31796552 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.319406292 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.316040132 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.318507801 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.319977159 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.42319114 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.319874097 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.319114762 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.318467445 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.324462271 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.319061092 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.326309164 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.318942588 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.318856686 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.326816879 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.321737481 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.321312561 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.320098451 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.326181888 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.324037834 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.320806892 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.322864374 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.322044505 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.317947815 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.322144768 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.321583613 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.320161051 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.32016464 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.321291266 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.322437288 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.325102016 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.324827275 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.327911331 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.320604967 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.322087997 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.323230437 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.32129558 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.322073429 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.322684665 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.325340819 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.32577979 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.326622567 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.322378326 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.321188476 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.32279741 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.321806541 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.323255601 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.323130786 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.324953289 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.318762044 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.323223159 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.323321899 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.324911148 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.322403176 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.321619974 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.323168924 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.319212809 seconds)
  done (took 97.493681022 seconds)
done (took 416.930352128 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.630343073 seconds)
  done (took 7.885104789 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.372438169 seconds)
  done (took 7.631482172 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.546612176 seconds)
  done (took 20.809898253 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.345691649 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.363653238 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.318360747 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.329261233 seconds)
  done (took 26.613326597 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.570297081 seconds)
  done (took 7.82569089 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.316957981 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.32561622 seconds)
  done (took 13.899807698 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.855459608 seconds)
  done (took 8.110648017 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.758892858 seconds)
  done (took 8.020916895 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.335154407 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.338495631 seconds)
  done (took 14.196007508 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.299385103 seconds)
  done (took 7.553291385 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.080019663 seconds)
  done (took 8.335940889 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.322815545 seconds)
  done (took 7.578813846 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.368905159 seconds)
  done (took 7.622157876 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.875979907 seconds)
  done (took 9.129168327 seconds)
done (took 156.467175344 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.31368473 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.316395885 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.312425243 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.313290145 seconds)
  done (took 26.509556872 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.355142328 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.354265211 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.356130516 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.365377837 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.357229309 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.354778331 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.34669595 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.346252781 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.366016832 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.357722633 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.355495682 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.356386691 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.354445063 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.346781418 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.357609839 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.356793499 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.366244781 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.356236064 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.347366832 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.357841296 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.323010901 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.365553277 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.358182385 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.322127746 seconds)
  done (took 33.739648856 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.518368843 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.392267196 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.473674359 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.373542061 seconds)
  done (took 7.012843245 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.374176097 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.375677181 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.386249746 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.42512808 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.456035693 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.384549665 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.345575712 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.343802467 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.330129411 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.375396098 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.4510288 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.3913551 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.458127665 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.322703 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.509703217 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.322349366 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.322283552 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.37477567 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.426202626 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.439266778 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.323057082 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.374425139 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.378350904 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.392281888 seconds)
  done (took 34.538307847 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.321071646 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.329638392 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.328501398 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.322686632 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.322484218 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.322718045 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.328321076 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.323062574 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.342773119 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.323777978 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.322373981 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.322675372 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.321635562 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.322806375 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.322127421 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.334454436 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.336176424 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.323446928 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.325995679 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.328927064 seconds)
  done (took 27.782452627 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.317081742 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.170344818 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.669270144 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.573262994 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.317847505 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.319810033 seconds)
  done (took 27.624847424 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.387734738 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.514574362 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.326086197 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.661964803 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.735651665 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.325262683 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.324511584 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.548523483 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.839493296 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.836174479 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.380923152 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.388515607 seconds)
  done (took 19.528953544 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.319243299 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.321560794 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.328112017 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.335772117 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.376952197 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.329307924 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.331698464 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.318047376 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.381082049 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.384911655 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.331876713 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.378107724 seconds)
  done (took 37.400509571 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.40716999 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.363861116 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.281383939 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.048502299 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.698658285 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.531472549 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.070292124 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.743445134 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.325781688 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.593812357 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.293701857 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.428141198 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.575871452 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.324945317 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.324202105 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.28267443 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.547437341 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.801246592 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.324741703 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.130096997 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349407846 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.320671399 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.237196848 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.351125718 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.533149515 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.449206233 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.582195432 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.321037465 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.587992691 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.335447563 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.331598092 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.320950463 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.59490911 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97805087 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.414376829 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.331883211 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.01177621 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.033928999 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.323878268 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.13847398 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.019241536 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.327531588 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.331834587 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.322375131 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.256172413 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.33573576 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.75372099 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.328272578 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.033899701 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.322633449 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.333059975 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.416830872 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.325622132 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.138172148 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.350848478 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.322884101 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.320478876 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.32946792 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.894103136 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.630144242 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.336702659 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.259598118 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.69316499 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.138324956 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918202752 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.426828146 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.32781638 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.327255913 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.257695607 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.146052633 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.344330846 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.469756071 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.344008699 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.972567462 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.009786542 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.280565636 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.270270518 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.865419663 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.324762375 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.262251161 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.551522294 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.323819198 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.260203957 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.282654881 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.257981065 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.019663109 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.336092285 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.714273901 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.332161199 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.749349917 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.336128318 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.342096395 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347424049 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.547902011 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.208569643 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.32476919 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.075222011 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486835217 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.345910478 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.748589989 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.260090803 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.328674819 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.579649952 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.535797502 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.335173312 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.293746598 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.521905991 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.326982199 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.343929903 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.331450228 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.338628662 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.879409404 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.341034701 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.650620842 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.345134668 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.326286081 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065130517 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.330636219 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.42997296 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.326880488 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.565120463 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.088951079 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.331057991 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.407424118 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.327864478 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.326853827 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.263566909 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.844294674 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.326783662 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.328229685 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.338174206 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.340159742 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.328306951 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.273043598 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.331016033 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.328056558 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.331403973 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.549689807 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.328244875 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.604642765 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.260303763 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47335038 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.419459894 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.55019048 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.495004625 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.329306367 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.585273739 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.334572734 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.339889921 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.340696012 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.346866804 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425575849 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34907412 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.340841626 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.026580354 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.330954484 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.331675661 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.248353391 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.333062881 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.332790443 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.334305324 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.155682549 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.883539304 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.30889518 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.329579886 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.217594606 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.340686213 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.391951446 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.334123831 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.337943474 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.064050134 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.128514689 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.337305285 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.328167295 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.557152128 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.338050712 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.141938689 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.412376447 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.517314303 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.886241814 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.344793507 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.262484035 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.039402323 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.020319641 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.328431734 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.263588927 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.328324377 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.338172243 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.340010993 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.832214926 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.8857634 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.334618876 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.139955109 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.337669697 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.339740226 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.334971083 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.328830273 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.045191039 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.655264196 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.336729142 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.358045105 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473139998 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.343060094 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.264006303 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.333771041 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.335117794 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.330453758 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.329247183 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36165413 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.158694682 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.804079412 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.588678632 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.015674905 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.343402539 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.246862314 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.367078802 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.32949237 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.096774487 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.358667541 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.343620534 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34194788 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.341011868 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.15391911 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.994819066 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.899322546 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.027492885 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.841405249 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.242216335 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.346712635 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.335555318 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.763885122 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.267197356 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.888458056 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.511400942 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.760069474 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.27807081 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.523134817 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.499444444 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.068762534 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.344686268 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.558774007 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.23448806 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.105899263 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.360646464 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.542774548 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366920248 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.34085622 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.265734257 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.618599566 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.554478031 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.044569644 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.417313083 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.75949849 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.093362606 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.35244357 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.331608333 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.676311803 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.501640733 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.04960744 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.504368599 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.336371878 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.346595216 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.804912444 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.335324 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.55785679 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935763348 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.348365274 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.528855643 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.271833786 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.343804722 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.344674671 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.336089963 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.561076161 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.344568754 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.5883759 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.344704664 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.26773597 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.333114524 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.84477493 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.188902615 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.339927655 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.333916088 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.066501635 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.343365659 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.607050728 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.352086494 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.039359293 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.340639301 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.269224609 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.268443332 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.026614068 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.335197328 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.309005622 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.818856717 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.688792874 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.328359426 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.355197493 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.180758527 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.588758296 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.349408235 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.891747462 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.563491034 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.119471563 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.360295487 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.435305918 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.137888192 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.338430476 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.335356156 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.571429486 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.162856478 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.559553169 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.326249079 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.25060489 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.334214191 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.549181548 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.335202469 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.335332327 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.576461425 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.049507175 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.354826788 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.029931605 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365515702 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.342508248 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.25317603 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.705338529 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.345669937 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.415420179 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.346140839 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.346682266 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.347027593 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.503612234 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.345307577 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.340993182 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.350879873 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430612505 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.686755654 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.047972104 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.343135369 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.899541016 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.053485084 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.901388831 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.353337579 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.336963036 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.34554764 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.270918582 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.486062288 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.563031628 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.610969906 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468253903 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.775770348 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362495654 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.1693534 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.355858742 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.565549812 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.613380242 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.232588827 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.336740964 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.352046678 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.338392753 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.349920894 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.550299854 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.826446585 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.89386609 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4578675 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.347653474 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.765443602 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.614138512 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.338990709 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.338938286 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.92674747 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.342310147 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.670848393 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.34550179 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.343234204 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.489760145 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.348673533 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001752393 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.349937659 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.498625896 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.112642886 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.176217319 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.597587611 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.777660507 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.350451276 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.907235144 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.017553156 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.606514415 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.407280833 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.350028825 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.467770973 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.486702725 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.336951001 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.341524159 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.340798189 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.184491696 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.04964668 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.349966455 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.903447199 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.60483965 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.338580871 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.348856003 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366073253 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.35001013 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.564322286 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.049552025 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.567808186 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.349691045 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.342648974 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.156320552 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.905317452 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.354261986 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.275090723 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.345364438 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.577935425 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.58174314 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.365415834 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.794234921 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.052527663 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.904739452 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.31620112 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362947599 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.341374672 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.036811029 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.904744774 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.060604675 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.832996419 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.902432262 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.348609533 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.61568809 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.346839978 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.341905365 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.62084518 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.345485636 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.353117533 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.355788256 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.900930988 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.085071287 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.347340877 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.197428852 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.28127494 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.683023983 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.977243131 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.282014234 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.343438544 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.522393106 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.345600949 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.475224611 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.354258021 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.340991019 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353321742 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.077763049 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.615250246 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.349027326 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.337764048 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.220386951 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.357105276 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351547129 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.569010968 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.349798445 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.011781354 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.692713119 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.597506088 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.356558181 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.330323864 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.346559113 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.344325994 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.331111121 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.541572582 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.848000045 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.90021462 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.357043622 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.356931715 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.348410347 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.561205577 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.557063988 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.344961384 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.358987196 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353652728 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.361346037 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.249748816 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.844828758 seconds)
  done (took 1587.297307653 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.343920782 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.362983912 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.374748964 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.372743396 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.37168266 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.468304494 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.387955405 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.45915466 seconds)
  done (took 52.424834272 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.350770121 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.583797263 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.379245376 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.355267544 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.357135735 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.346218793 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.769132814 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.345705273 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.354496203 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.355093947 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.355855636 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.349826479 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.952946523 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.355024326 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.359166122 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.33619037 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.35587543 seconds)
  done (took 65.552278169 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.346460706 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.769327513 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.439284299 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.353933211 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.262363911 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.348260635 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.004395391 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.379407479 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.35624421 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.543682123 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.001368975 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.362699976 seconds)
  done (took 84.452866504 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.354463673 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.354567233 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.35609103 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.353822163 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.354889036 seconds)
  done (took 8.059512118 seconds)
done (took 2013.180005218 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.598954158 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.01485834 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.988050659 seconds)
  done (took 5.288619644 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.494230728 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.542845465 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.662940419 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.66891339 seconds)
  done (took 7.655191463 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.624095883 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.716014174 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.539444191 seconds)
  done (took 6.164738194 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.699399207 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.353544068 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.468477038 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.347306884 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.347885441 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.347398509 seconds)
  done (took 20.330711857 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.353143367 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.354629722 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.352952722 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.355547675 seconds)
  done (took 6.698759583 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.332934362 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.097853512 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.337762832 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.348863648 seconds)
  done (took 18.402551802 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.101139275 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.109948239 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.094489483 seconds)
  done (took 7.591232282 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.360031512 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.194365924 seconds)
  done (took 9.838519239 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.650320349 seconds)
  done (took 2.936913392 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.484655062 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.622160381 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.338862063 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.298640007 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.377170698 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.000965024 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.914121858 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.517681097 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.283953789 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.421727537 seconds)
  done (took 27.546305972 seconds)
done (took 125.862167229 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.010302162 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.348363928 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.553734482 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.979706824 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.586292826 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.550912426 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.560972334 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.944963092 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.487776718 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.479556348 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.980496386 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.585725131 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.720023436 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.597694129 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.72016477 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.596916179 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.581759604 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.059273459 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.667224543 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.906135676 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.561940037 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.62110569 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.814756518 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.773175675 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.585236377 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.505390355 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.217208187 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.599691993 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.834007929 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.36497399 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.506801323 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.075005349 seconds)
  done (took 191.66084783 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.351733197 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.352133778 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.353007013 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.351564281 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.365634252 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.354470784 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.352780108 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.353968914 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.352469412 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.353224675 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.362592951 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.37837054 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.351429153 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.353044621 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.35352427 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.352675565 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.351622562 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.354722521 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.350605253 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.377385084 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.352791749 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.36850892 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.352094928 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.351439255 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.361630266 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.354033091 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.351950224 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.352588948 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.366429862 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.352655664 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.355291087 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.354845033 seconds)
  done (took 204.692395562 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.352702621 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.354544672 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.353643547 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.354403115 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.353596755 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.354970809 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.366256447 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.352819967 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.366672229 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.355732822 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.354262208 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.356305283 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.356933132 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.35377198 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.360996229 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.353630358 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.3542839 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.356167438 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.36489242 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.353710434 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.354911118 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.357766812 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.354844705 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.379745708 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.355809725 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.355622065 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.353603008 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.353355455 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.3557511 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.35336463 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.372721184 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.356391542 seconds)
  done (took 204.726164003 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.556495125 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.361478838 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.362274859 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.314902016 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.362784069 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.362395395 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.356855922 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.558016226 seconds)
  done (took 14.527188056 seconds)
done (took 616.893244815 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.63108793 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.350104759 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.556330378 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.384286698 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.102849154 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.383362532 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.384018956 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.547734893 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.265061664 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.549577965 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.589353902 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.380309875 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.721725368 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.38046795 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.626753732 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.479916554 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.215789896 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.338312448 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.690251842 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.88514061 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.634716591 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.812377409 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.545174116 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.278392445 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.751740672 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.817964046 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.050968989 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.234050913 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.384621134 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.693581966 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.175193943 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.304376985 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.44243211 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.419681694 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.474850444 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.456821779 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.286824489 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.419771169 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.564456889 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.582123178 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.873478961 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.096726684 seconds)
  done (took 92.058693994 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.351520953 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.351951451 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.351420605 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.350363037 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.354397556 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.353284797 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.348998581 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.352751086 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.353352819 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.351305369 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.352807639 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.353094855 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.351947672 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.355574041 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.351812567 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.353618936 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.353561251 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.354151749 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.353941136 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.352790217 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.354291129 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.353368198 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.352122615 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.35451436 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.354185549 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.353359722 seconds)
  done (took 36.468902701 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.365838526 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.597181714 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.787608466 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.374324269 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.367530999 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.369991837 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.438831287 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.368993023 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.369215987 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.36962105 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.520327533 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.371716151 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.402785263 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.782513621 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.370588475 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.367103229 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.366795407 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.367468693 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.60593862 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.377436563 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.443080902 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.367643167 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.441460724 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.37823296 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.369651547 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.367641358 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.370491261 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.863412813 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.371930236 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.521332459 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.103604386 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.440815492 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.820088821 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.787901564 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.105348622 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.370981086 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.367834963 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.525281461 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.371371941 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.369023634 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.44194468 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.370434514 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.786334859 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.995793784 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.387899289 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.367722145 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.8873332 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.526956851 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.60638129 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.37862871 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.805028818 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.374100467 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.36953112 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.369655563 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.60613251 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.377980617 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.369319538 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.901773581 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.376053641 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.443096863 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.372089234 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.369099581 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.61233946 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.371519324 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.601388237 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.371902532 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.379880724 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.370018493 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.787350017 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.375158646 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.01197372 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.386067414 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.370009947 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.522673926 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.604462674 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.919338458 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.375333598 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.616264375 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.831828469 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.444207292 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.375563517 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.854583461 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.449422441 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.376444338 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.375822339 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.373048921 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.370605154 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.415358874 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.442855176 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.9396183 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.007120371 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.919399709 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.448286077 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.384858745 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.371611674 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.903851364 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.37393252 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.371735542 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.782538912 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.01364815 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.386392801 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.378253957 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.9992554 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.390434275 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.446798375 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.377461128 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.792852841 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.375285414 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.416365644 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.371285892 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.379822226 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.374801905 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.447408459 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.37680372 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.372050088 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.986203207 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.550904388 seconds)
  done (took 179.405518381 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.366684898 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.365084709 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.367438488 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.365691063 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.365576852 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.370429349 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.365975853 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.36580832 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.371933202 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.366087093 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.3669078 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.365851356 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.365869102 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.367163804 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.375689564 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.373393477 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.979343021 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.367097508 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.366385183 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.365352136 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.154568361 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.371072952 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.368540105 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.366144126 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.365788364 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.367173984 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.379910339 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.368790986 seconds)
  done (took 153.007164269 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.372274657 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.927143247 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.375973143 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.500139661 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.393853922 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.371317514 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.49726094 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.431740683 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.376049473 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.371295564 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.371499304 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.669632366 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.377511305 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.875976048 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.557386582 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.502627747 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.881023013 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.377208229 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.372977526 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.371974849 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.50083336 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.383256336 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.672607009 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.933401961 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.377506689 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.933203519 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.364579724 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.374703771 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.376060804 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.934632805 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.374869391 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.672633741 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.450309782 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.431977273 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.934868685 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.880975728 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.883683836 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.513007425 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.376892203 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.373135932 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.374343252 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.364472076 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.93284537 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.380103411 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.376382623 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.926302406 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.393128877 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.376119671 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.385502702 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.371907243 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.433046416 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.43410764 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.678837275 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.940876285 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.450751494 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.398424662 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.501404929 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.752053677 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.378563048 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.88318694 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.362108492 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.933576419 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.379389368 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.364240422 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.376267317 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.381015737 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.519427142 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.504125263 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.882926664 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.379371331 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.884922063 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.521524795 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.377182897 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.373883968 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.380294715 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.936102544 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.887430454 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.522018883 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.506726769 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.564678149 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.370577585 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.376189554 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.366391918 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.451404501 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.377150392 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.93741844 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.888747711 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.380749587 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.378279683 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.377534179 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.379619032 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.544142138 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.940290972 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.454411084 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.88137285 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.690148105 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.681155126 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.381323583 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.435170528 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.378746123 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.680081868 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.381654657 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.432908902 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.809612649 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.682216146 seconds)
  done (took 163.454088902 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.610565323 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.529843891 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.463942874 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.489906748 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.90924734 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.94754546 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.550407958 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.498894463 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.483072017 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.619205564 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.534558305 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.468568286 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.557958965 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.470462549 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.086995867 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.447307989 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.471186327 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.503583864 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.484799347 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.386424849 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.999968125 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.671157909 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.546259311 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.488837229 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.470991392 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.097638031 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.919132248 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.888633912 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.543006517 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.619923145 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.882003306 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.496652605 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.320323506 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.042660274 seconds)
  done (took 65.811698759 seconds)
done (took 691.497938632 seconds)
SAVING RESULT...
DONE!
