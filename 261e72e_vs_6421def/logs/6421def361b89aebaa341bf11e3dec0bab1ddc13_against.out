cset: moving following pidspec: 21935
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.290810716 seconds)
loading group "string"... done (took 0.581263404 seconds)
loading group "linalg"... done (took 7.16973131 seconds)
loading group "parallel"... done (took 0.16438387 seconds)
loading group "find"... done (took 1.124026936 seconds)
loading group "tuple"... done (took 2.000071072 seconds)
loading group "dates"... done (took 1.292009333 seconds)
loading group "micro"... done (took 0.239756042 seconds)
loading group "io"... done (took 0.967444083 seconds)
loading group "scalar"... done (took 38.782631225 seconds)
loading group "sparse"... done (took 12.31148449 seconds)
loading group "broadcast"... done (took 0.967405695 seconds)
loading group "union"... done (took 13.127452803 seconds)
loading group "simd"... done (took 4.412622181 seconds)
loading group "random"... done (took 8.937232195 seconds)
loading group "problem"... done (took 1.91546765 seconds)
loading group "array"... done (took 21.094448154 seconds)
loading group "misc"... done (took 1.912388661 seconds)
loading group "sort"... done (took 3.189517445 seconds)
loading group "collection"... done (took 17.833858882 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.533566138 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.1420424 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.118787246 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.139884781 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.1836357 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.132201137 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.146044402 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086256706 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.036964038 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.170544432 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.140812633 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.476794747 seconds)
done (took 5.068459612 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.203888424 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087427674 seconds)
    (2/2) benchmarking "String"...
    done (took 0.097405217 seconds)
  done (took 0.890228816 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066995713 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.1272194 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.081227457 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.06894646 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067617874 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.081586265 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068132066 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066903853 seconds)
  done (took 1.275957033 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075101407 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069809131 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.085243094 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068996492 seconds)
  done (took 1.013365092 seconds)
done (took 4.175149718 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.897023878 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.235302632 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.190217758 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.452417552 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.148953345 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.189164815 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.657767714 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.325262528 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.211247898 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.101013551 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.106584592 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.378241269 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.108248875 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.66249745 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077757929 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.106438429 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.158588142 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.431801701 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082667948 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083594956 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104520713 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142365108 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.101902523 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077767193 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.170147014 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070665472 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.14741815 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.096205998 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.06972911 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.245468153 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.190772824 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.678512986 seconds)
  done (took 10.449416315 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.100818727 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.11838497 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069999881 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140792798 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.102325963 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.08724643 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071959447 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.083465663 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.0926638 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.160333932 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.115064837 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.107576411 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.082884572 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071711406 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.101447244 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.212440591 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.107757648 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.087242458 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.087585307 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077271055 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121839009 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.083455703 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.094610042 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.079561307 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.152975815 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.196043135 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113850185 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.112494489 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070124651 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081191461 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.132344261 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.14266638 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067419636 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082699736 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.141295149 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.110995292 seconds)
  done (took 4.589400279 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.023214953 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.160579404 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.092226517 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.152945947 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.086556671 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.110196944 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.08381424 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099943324 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.246610704 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.07623472 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.461100623 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128717339 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102882907 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069416518 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.084705077 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069413569 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.507576904 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.14562797 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104243436 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.103723293 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.07495431 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.087995822 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.358628307 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069430441 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067624495 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086918609 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.062343907 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.149270782 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06895773 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.230965178 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.089828549 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.088526271 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102589263 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.197120033 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096109038 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.122836878 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082695936 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067618735 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.170349263 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074727626 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.084256209 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.089685338 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120823843 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.119874528 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.069776984 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.083469038 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.182056217 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068033392 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.099742814 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.877198897 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.167025779 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.096347436 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.086073336 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.275014491 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.104527364 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067036653 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.082320889 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.24472272 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.167487641 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069631511 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.068190086 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083628067 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069400462 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.368864704 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.083991046 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.785825912 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071950463 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077244778 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.086139114 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068049484 seconds)
    (70/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088999535 seconds)
    (71/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073139905 seconds)
    (72/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.1021941 seconds)
    (73/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068303553 seconds)
    (74/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.067794021 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.083832181 seconds)
    (76/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067496823 seconds)
    (77/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.084989756 seconds)
    (78/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.093162221 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.10232931 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.06803523 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.203455515 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.083012718 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068383545 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065367273 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.103191286 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11166328 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.072490567 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066519847 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116899905 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070021732 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.084273759 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.103258329 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08504192 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.099761318 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.071062779 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.128855724 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067923824 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.138281161 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.069818539 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.111789246 seconds)
    (101/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.078376137 seconds)
    (102/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114399725 seconds)
    (103/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.093673906 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065356709 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068095164 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.152505752 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.082148412 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.066952856 seconds)
    (109/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.06452117 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.083339512 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067839427 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067805105 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.08575995 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.081768559 seconds)
  done (took 21.020531456 seconds)
done (took 37.797715816 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.290784508 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.091887265 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.091969486 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075304095 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.09273677 seconds)
  done (took 1.433983915 seconds)
done (took 2.199357555 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120452389 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116709529 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064137536 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112969881 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065326013 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.116430208 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.114334504 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081891935 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118428736 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065758358 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112623547 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065186525 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064815325 seconds)
  done (took 2.014736649 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084932342 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085187033 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086486943 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083061317 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079736315 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082916954 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080927892 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104973636 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081761116 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089425685 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065366624 seconds)
  done (took 1.686746166 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084106996 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084517432 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085849699 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082416087 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079826745 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082950848 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08108401 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102478716 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082409196 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090162279 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065349987 seconds)
  done (took 1.681594162 seconds)
done (took 6.138626447 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.080989729 seconds)
  done (took 0.837905215 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.690875944 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.486936833 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.084214123 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.133706995 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.221111326 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.153452838 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.437493106 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.109862519 seconds)
  done (took 10.247646897 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.091923338 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.086967329 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.083958107 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.086091375 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.073052166 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.08845929 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073502542 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.07044891 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.087532027 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.072587972 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.087527061 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.070647054 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.087368967 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069319454 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.070311374 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.08559708 seconds)
  done (took 2.110705101 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.09554576 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092984012 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.09145981 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077394972 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.089989282 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.0746907 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.092235818 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075764503 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.087847613 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074187913 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.091836986 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075514455 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.088738221 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066727296 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.091197683 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077654448 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.088709041 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076418686 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.092396087 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077033824 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.09225011 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066911495 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.089154337 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076668031 seconds)
  done (took 2.870175488 seconds)
done (took 16.829009401 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.133350822 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.077317113 seconds)
  done (took 0.974542295 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.083768792 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.098163252 seconds)
  done (took 0.951348829 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084394944 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.081558065 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091247789 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.093830076 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.067737406 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.082108933 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.103302951 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067710911 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.082362704 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.067340702 seconds)
  done (took 1.589056815 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070668516 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.093939462 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071611747 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.097929728 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075456069 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.080899702 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.07428517 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.085155156 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.079025074 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.080014736 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.073096889 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.099497041 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072971684 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.101056093 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074749125 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.084710131 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.087871721 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069124971 seconds)
  done (took 2.24283985 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.068252388 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.069169738 seconds)
  done (took 0.909042682 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070768533 seconds)
    (2/7) benchmarking "second"...
    done (took 0.06649734 seconds)
    (3/7) benchmarking "month"...
    done (took 0.084638498 seconds)
    (4/7) benchmarking "year"...
    done (took 0.069336936 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.081676771 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.065670667 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.080519291 seconds)
  done (took 1.292833947 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.399965547 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110042582 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.243627954 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.088956947 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.104189246 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.262012189 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.084020578 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073020557 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.088682346 seconds)
  done (took 2.2660568 seconds)
done (took 10.992913833 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081709448 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087448528 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111206514 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.416487668 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106501867 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067326446 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.132598803 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.217869719 seconds)
done (took 1.995320687 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.12747689 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.61576866 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.401984272 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.212417523 seconds)
  done (took 2.011584534 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.371891915 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.092883214 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.075332511 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067597826 seconds)
  done (took 1.391150356 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068733375 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070442266 seconds)
  done (took 0.920505608 seconds)
done (took 5.233604725 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069903987 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.103310107 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067475236 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.065095001 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.084189466 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.065149104 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065186026 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.084528572 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067355309 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.067534468 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.082219641 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07020878 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080601847 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065076998 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068159179 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.080691722 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065441851 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065412602 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080324544 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.067744777 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065077297 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082652231 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065194614 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065610817 seconds)
  done (took 2.560731846 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.087567008 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084076196 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073470228 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088850477 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072300587 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.08916789 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.072798863 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068650097 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088192565 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.071000945 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086917293 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072674155 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.084850018 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072285185 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085716602 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.072334601 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088980546 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068391012 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07356025 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.087846325 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073824786 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083840484 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071861263 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08873852 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071618718 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087058301 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070596092 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.084643388 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073332882 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.087733988 seconds)
  done (took 3.166457172 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.073891079 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065135067 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.082268149 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072090668 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065526662 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.082661554 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.066004953 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.081402994 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.066455693 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.066062536 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.082485402 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065517847 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065883556 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.082227841 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066585732 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.084913107 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.082084454 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065635798 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.080635565 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066862262 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068655422 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.080755322 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065467054 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.080937357 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065374736 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065448245 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.080974795 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065298965 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.06693215 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.081219915 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068382881 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068811056 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.080849154 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072012516 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.084307534 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.06492476 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.069108847 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.081157299 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066447051 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.065021473 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.080599283 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.065985669 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.065155813 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.087147542 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065841689 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.082930322 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064680834 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.066576763 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.081832717 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068716708 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.080984042 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.065192868 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.067283349 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.081947097 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069211284 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.064664199 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.080973776 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.065240394 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.081458953 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065034762 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.06507139 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.080878663 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067544517 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.06591492 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.095761311 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072088726 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.080840869 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067077248 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.066840464 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.083177251 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067315573 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.079655375 seconds)
  done (took 6.035202753 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.119531132 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.0924957 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083628788 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067419667 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080277166 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065848354 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069752768 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082302795 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067189933 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08680843 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066333355 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067107612 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083286103 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078967142 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082035526 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067835521 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087421703 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06349345 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.06576134 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084541601 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066328355 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.085045593 seconds)
  done (took 2.503385551 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.187387784 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088142765 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.110153939 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091371447 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085813769 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07511605 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071599492 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087763135 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071686719 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086394171 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070175725 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087065726 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070328633 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085015576 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070039106 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086054181 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071954848 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085688106 seconds)
  done (took 2.370311379 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.080580596 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068175392 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.107170287 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067615068 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.085181629 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070704206 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088817162 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076786208 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086172026 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068338479 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092247285 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070127559 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.085777251 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068238879 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070253754 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083666274 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070327595 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083700374 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07723897 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08900653 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073623007 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092081487 seconds)
  done (took 2.546451725 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083781114 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06946492 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.102340583 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086935277 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064144933 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066788958 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.090163802 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068117753 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.089949743 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.070446326 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068227882 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.081857887 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.07274342 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.083986816 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.073166398 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083945078 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069623327 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067915922 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085748573 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064067458 seconds)
  done (took 2.334443562 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089385044 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084719119 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069542439 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092760505 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069479234 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084919929 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077415131 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.085102647 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068721178 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.109080066 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069540367 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.085160205 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077630216 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.089680219 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069129195 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093046631 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077441624 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093304265 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068905239 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084749551 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.217752166 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068970737 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093110755 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069155558 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084370475 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.06919885 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06939767 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089558804 seconds)
  done (took 3.196565927 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069640263 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067987178 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081504824 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065008805 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.06557162 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.081345509 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.06615652 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065256176 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083598449 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065864092 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067675214 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.083707095 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068413583 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.083325889 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067527014 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067939207 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083839913 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065056139 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066016295 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081820312 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.068539407 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067747721 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.084137405 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065777259 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081470139 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.067910014 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06582035 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08175715 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068055726 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065809348 seconds)
  done (took 2.956470746 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.078418126 seconds)
    (2/2) benchmarking "in"...
    done (took 0.091721927 seconds)
  done (took 0.969236339 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066714978 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081637494 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.082477644 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071908382 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088911704 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06918679 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.09137076 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072218874 seconds)
  done (took 1.422262552 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.084291888 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078896241 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085259354 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079743244 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.09580154 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.085553424 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.154878693 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.085948645 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.07433145 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.082826402 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082056172 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067188342 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.091103972 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068430911 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090522252 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074202246 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065753434 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.090092082 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070863128 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.082931964 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069401456 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092815853 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070195689 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.065169214 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085664474 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.077359139 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.095459116 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069548265 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087293806 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075649103 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073466253 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.078601539 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068352422 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.084422342 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065961237 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.093942814 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08300087 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087066746 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076371648 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069967713 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.094287287 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063889198 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.088628455 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074568592 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094051321 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.069262657 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.069005523 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.079978351 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065901247 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086353196 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063513229 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068169655 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.079716346 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074882867 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.087715271 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078630836 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.069392883 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.08537487 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.07039896 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.087701737 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074187863 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.085955728 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070938587 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.068344476 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09368066 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073047816 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092670259 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063879894 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.06255245 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.082369879 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077574924 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106177358 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074657892 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.085090877 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069543074 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.081974316 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071208241 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069959485 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089966738 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074740642 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.08455439 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074017413 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090916934 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068151666 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070647824 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.091957183 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.067105534 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.086750413 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065847027 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100617864 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.067920288 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.06622306 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.081705034 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077679794 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.08706527 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067923983 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081696347 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075009572 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062521256 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.085466766 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069667877 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084285267 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.078252422 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089956633 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07363666 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.092623866 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076309492 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067714119 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087772497 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.066602895 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085756512 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.068007225 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.075361762 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.079323885 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071065832 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.084608282 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.068459813 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076572228 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.083890169 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068729227 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091243221 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.07405437 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.08310258 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.065457495 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070512085 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.084369471 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071502765 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092475334 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067352495 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063589135 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.08024259 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071756383 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.084423648 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.07174854 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08908006 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070706558 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063560033 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.082908632 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072688087 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.093085995 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.06911784 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.06837018 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.089767179 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069010043 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.083876201 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074356054 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.08663047 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067640958 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074072751 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.085127674 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064411156 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087898482 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071196642 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066363673 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.08809461 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071799446 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.086807055 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069595136 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067154278 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.08943419 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06928813 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084076052 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068076232 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.082736298 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078633031 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069555452 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.07994621 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.066212192 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.091621013 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065860134 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067900732 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.083459626 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069967747 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.085781503 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.06631244 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.06735254 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.086579905 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079060941 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08868379 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070176638 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.090711595 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079513804 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.084832036 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070096239 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067672957 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086211481 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068790035 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.09271849 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073620892 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.08990382 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070320735 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.065108323 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090519612 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075110632 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.083551507 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065946575 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067095132 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.08795845 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074302256 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.088232685 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.069452769 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083226519 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068547581 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071957677 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087589733 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.068611235 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.083567748 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072879042 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.066652963 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.091418616 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069671595 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094931551 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071556857 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.080422857 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072108929 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08318972 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073348417 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.064563523 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.082268462 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067818303 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.068989006 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.084008099 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071956933 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.079117606 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075198903 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091940334 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068052619 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.06744754 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.084471099 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074534336 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.085525466 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07157685 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.071510117 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.090236016 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078405168 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.083507379 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071982126 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094350122 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068344313 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.063114631 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.089556117 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067540021 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.083781833 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067484292 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066367001 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087632881 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075999123 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091583683 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062690696 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.087061332 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.0672659 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067577086 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.080450777 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073260373 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070163267 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.085846261 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075080426 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085899023 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.06894434 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088356721 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067846412 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069894203 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.086325287 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071573866 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.085370511 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070660326 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067060788 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.087685774 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067385066 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082671002 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070345152 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068130512 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.085351071 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073938464 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.084572931 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06874405 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069842739 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.085242852 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068959226 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.08458167 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067753203 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070992468 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085785251 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068346298 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.087144048 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064560335 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074410066 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.08542491 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075248833 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.084498287 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.06556508 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.08983567 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070484347 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072289958 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.085277946 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.069732393 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.085537156 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.067810017 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070722222 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091707683 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066149725 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.095389908 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075657001 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085569533 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070721873 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068024617 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.086124476 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067353113 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.085139917 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069603351 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067637244 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.084766999 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073014577 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.087222988 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068446175 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069404422 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.085712256 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.06864204 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.086619083 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063213864 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067071953 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.084367408 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068274806 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094009339 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.069940452 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.084737172 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067312379 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069495132 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.084521519 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065636835 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.092804258 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076931903 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.086107093 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075361335 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067137392 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.086215262 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07799666 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.079189384 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.066521135 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.065461501 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.082654282 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074837486 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.085998688 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077653786 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.084512693 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067607987 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.065413757 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.085906892 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067678324 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062715291 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.082812709 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071834164 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.084696298 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067787513 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.06860498 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.088045557 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069439698 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094282516 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.068404522 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.085311964 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.069377115 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.065586017 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.083983845 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067579907 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070636799 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.086746776 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065856181 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.082848459 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.067695408 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068265249 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.086916227 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068422755 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.086147491 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075124437 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068213816 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.087465343 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071916169 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.083140585 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071272726 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.067621577 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.085307091 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067948452 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.088283986 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071584668 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085942418 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076922301 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067871376 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085546177 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069256527 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.083417542 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068133304 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067592241 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.085664107 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067427268 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.086470486 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076122987 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066492333 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.088211095 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068731308 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.085591658 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075024254 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.08678476 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071355229 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074523096 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.085583464 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069768608 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.092363719 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072267157 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088108062 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069652793 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069851913 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090669421 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067552104 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.091088811 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068545057 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.068598162 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.086139587 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066462702 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085301541 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.068704969 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066800892 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.090667006 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.069508517 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.084472465 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068098698 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.065652865 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.086260401 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071939881 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09257671 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070746015 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087887033 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.06420445 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066528616 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086018559 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066492404 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069519264 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.088559603 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073627724 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.087659452 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068702106 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.066722948 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.0941981 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073472806 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.088872409 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066326186 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088947117 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.06938795 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.07010336 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.08612344 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.06850939 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087034654 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072057413 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069032874 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.084554192 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074879249 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.088546651 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070084614 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.086197895 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069144033 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.06823256 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.081361069 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.07000665 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.087265749 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073332339 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070815818 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084987244 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078980496 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.082719457 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068686701 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071811532 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085848253 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072943968 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.081096228 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070448766 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086073833 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06948277 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064197716 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.085080861 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066698157 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070148939 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.084559088 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.06459844 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094877061 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077492051 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.088201077 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067068237 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06723261 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.081781405 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064043399 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.08453134 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069469275 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069823047 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.095152426 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067746832 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.083899534 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064440134 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068260756 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088427584 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071286106 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.083053756 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.06466042 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067611302 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.088460708 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074123728 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083924035 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068188953 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071192695 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.086975246 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066513731 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088679999 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065507188 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071225816 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097720057 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.069242775 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08567507 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07472255 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093045363 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069597535 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063381732 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.086423155 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071394701 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.085809047 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.070333019 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.086380522 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083353881 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088872408 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067008653 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067479497 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.08786533 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067720555 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.093484092 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069341229 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.069030668 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.089760029 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069985889 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.093986271 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070862573 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092866976 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071332139 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.07053316 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.085451169 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068991836 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.083302324 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067068222 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.069718319 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.086910653 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072795269 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.09267293 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067821128 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095582096 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076929705 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.087746613 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.065327765 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.068226487 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.085146899 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.064133574 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.06913351 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.084537504 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066916398 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.084636662 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.067364601 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068736656 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090742972 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.070181614 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.0869999 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.06869674 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.06275147 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.087664755 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.07043434 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086635358 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.065374218 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.068147933 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.085973325 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072648005 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088864646 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066163607 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069019619 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.087474121 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06935816 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.081286563 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074958271 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067922906 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.088080759 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06765481 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085739599 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.069254919 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07135574 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090768649 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070210667 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.08738529 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.077348749 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087884153 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.066414872 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.065716327 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.090405797 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.066649192 seconds)
  done (took 46.828523326 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108756417 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083256431 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064576294 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081762055 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077034018 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083102635 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064182846 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064376161 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.082006499 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067674863 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.081083261 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064013539 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.089991678 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087948101 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094270313 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068316511 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081630224 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065245032 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.0813385 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065191035 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091174274 seconds)
  done (took 2.495716446 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.078042279 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.091018425 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075320551 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.096543817 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070146266 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090897862 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.07515285 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090029152 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095698105 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07033251 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.095332129 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073414641 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.086571072 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.06924036 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086448833 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073932999 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.09526869 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070140175 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.089437905 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075110531 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089938687 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.07484053 seconds)
  done (took 2.657415124 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069242785 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067750182 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.08632061 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064133118 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067423497 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.080486632 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.071955743 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.083663832 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.071257834 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.074274571 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.084407954 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067692901 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.08697106 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063709595 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067478895 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.08285821 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.131459147 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.070936142 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066736585 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.087489603 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063396288 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.087701714 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064459584 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.064495611 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.084630609 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.072446908 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.086614122 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066291193 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067533934 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.084483365 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.068685069 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.083531987 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069091339 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068033094 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.08384674 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066931411 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.06756389 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.085902366 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064204331 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.083232284 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.0683666 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063665897 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.086246594 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069483801 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065135221 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.083151501 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.06966922 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.085096516 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063536597 seconds)
  done (took 4.534188776 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.087065068 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.131430385 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.08809218 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090773864 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.103259673 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.093213002 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071793845 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.111639701 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.06493638 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.085059162 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.085210398 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.104788163 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.08680466 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.072966768 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071205959 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.086021995 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069090241 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.08519494 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.072145799 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085088743 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.072026269 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.092339289 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.099919976 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.082342115 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.088643409 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067549468 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.085283035 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.073504966 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098847184 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.07419351 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.089954345 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073806544 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.101738122 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.073936318 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.085973692 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.070169002 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.10161942 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067311972 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087982298 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065968691 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087555142 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.072687933 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.092033059 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.084672744 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086337166 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.073521983 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085471938 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06599428 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.09958932 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.069950835 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.093700528 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.100575869 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071934926 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.086246916 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072961196 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.101141622 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067903208 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.083697696 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.071079155 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.098413639 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066433673 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089129636 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.082885595 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.08737374 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.075585361 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.100622038 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072996938 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089372542 seconds)
  done (took 6.699882505 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07684162 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.092466409 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083091284 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100904079 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092325471 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075745638 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.092007149 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074322933 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.092613085 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080356024 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.092283889 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113590765 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069781755 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.09465112 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074435948 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09332415 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073913444 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093081615 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074474766 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.092989783 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.092265776 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.083223285 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.092551049 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.100432901 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.104462417 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.087315064 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075224782 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.092480685 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083659357 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.092991022 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103592328 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075035967 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.092090246 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.101127317 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.086414224 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091891922 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067883194 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091955002 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075654615 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.092933871 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070252994 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100903628 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074433178 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.087578081 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074412793 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.093271154 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.100721022 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.085868879 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.095491555 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.09747336 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075389519 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.100625131 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074345162 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092871627 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.101081989 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.107548426 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102373831 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.100050867 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075386674 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.101267534 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.099636139 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.108502465 seconds)
  done (took 6.38615983 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088835305 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095310002 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.097923556 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064099783 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065737041 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.091068946 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066313588 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.084232003 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077218872 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095247986 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079101757 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090557149 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07540261 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097301331 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.09034848 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07633796 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08957497 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072273512 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094467185 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072613701 seconds)
  done (took 2.519635258 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076726033 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103713621 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069144732 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07347224 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.089802664 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073090513 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.089044906 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071318439 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087120371 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07174335 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096231671 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.078554487 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087459518 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074374048 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.095800728 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.07407553 seconds)
  done (took 2.170868195 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.080268473 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.097314616 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.082638345 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.086631895 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.06683617 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.084003069 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.068300152 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064094562 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.083116512 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.082653395 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.086935566 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070524721 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.086689474 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06664496 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064522827 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.089701216 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064881557 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.084957965 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.06890126 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.101028698 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.079642025 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.08539321 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069405462 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.069013673 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.087413092 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072610559 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.087229778 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065680781 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.084592015 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.06840233 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.086480775 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.075327545 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.082921601 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067606742 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.066803375 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083930476 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.068973672 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085860081 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070676562 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067587403 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.08532921 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067949128 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085600909 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069273442 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.082470032 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069424528 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064738664 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.092749011 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066716391 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.086992219 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.06823838 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.088936255 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069247917 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.077781283 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.090471086 seconds)
  done (took 5.131683969 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081693694 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070985041 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.082941247 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066862154 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089497072 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069917731 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071454323 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089219892 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06984591 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084370777 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070007656 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089555553 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070348045 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071584564 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.08799694 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07264328 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.082187409 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070164698 seconds)
  done (took 2.252600405 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075892354 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068496804 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.09403022 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068683979 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.086389826 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071492797 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064193916 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.085796472 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067614193 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086794217 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068368933 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069678624 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084864195 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.070705901 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085917936 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068540486 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070386124 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085446984 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06866856 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082162553 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071217994 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066675769 seconds)
  done (took 2.529554182 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.074119081 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.094702632 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.162919048 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.107187522 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.084027435 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.099955514 seconds)
  done (took 1.491839754 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093720753 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099728632 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06973698 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107423284 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077292075 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0880592 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071060218 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088070161 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079729963 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102445889 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070068464 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097968202 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097279077 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078624441 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094339526 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076783976 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089333226 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070603906 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087326831 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106908818 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071209359 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096952468 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070889647 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087999962 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071007737 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096755611 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07875809 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10195241 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08886227 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078509231 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094676857 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070357949 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097112759 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103022713 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071993408 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097244425 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071427652 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106756583 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075742619 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096738903 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071146231 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095009193 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097212454 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075176393 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097220506 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070476134 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09375006 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069103184 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089405367 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11232015 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075697298 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097344229 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093641656 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079162693 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097297364 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114755812 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083612227 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097302663 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093899307 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083385197 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09726034 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075490003 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09726526 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101042478 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076694831 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097528528 seconds)
  done (took 6.675471051 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088076009 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10697263 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070925778 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102887657 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097060187 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070756088 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087458384 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071098943 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088614887 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070775133 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129791143 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07073887 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097454577 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097937496 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070808628 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088656446 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071376125 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096491776 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069683707 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113521911 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088616088 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077872158 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097139923 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096982636 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084052735 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094627944 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070344606 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088369068 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070173641 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089165501 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074500522 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08961953 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096486751 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.07007851 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096526994 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069987448 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088535742 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076408406 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089512848 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07643228 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097874337 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105747437 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071111632 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088426807 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083437573 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088718059 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070046942 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088766464 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070585829 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088824638 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083322041 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102626987 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101943776 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097351243 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071159297 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08862051 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071194366 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088416573 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070690509 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093605936 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078552804 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088769875 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114364087 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070736402 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088801268 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078455867 seconds)
  done (took 6.560920098 seconds)
done (took 129.778359823 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.202851666 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.184537914 seconds)
  done (took 1.2592098 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.07122926 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.096404347 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.09822681 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129218859 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.086865027 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101490705 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.119211475 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.080183368 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.06756515 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086628967 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068523738 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087859689 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13269871 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.06776949 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.086742073 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070277937 seconds)
  done (took 2.325840681 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.105067142 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.194797387 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110639707 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067644688 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100445827 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080071686 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.085673783 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.078131776 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.094762182 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068222226 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.07914064 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096058669 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065824717 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095597231 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075629544 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.098217253 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067047766 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.097990429 seconds)
  done (took 2.54130613 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.105178843 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.140907053 seconds)
  done (took 1.122294344 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.20160407 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.123517165 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.201431775 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.415849045 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.205295681 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.275037514 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.173320948 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.171927743 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.157544312 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.168358351 seconds)
  done (took 2.968156154 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101686728 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.170517804 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.312877215 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.138980202 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.087625051 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.11683042 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.138904758 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.09058897 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.102372101 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.100793984 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.082694332 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.099134627 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098775326 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.096546303 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.07634017 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.098583255 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121270006 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076228344 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.0771958 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.097095531 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117893521 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068605742 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076487307 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.095807845 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.07920703 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.098069512 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067041027 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.086686404 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077054206 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095073049 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.080010924 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.114177842 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.098279419 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.130926821 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.083363404 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.130981121 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.099065402 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073723684 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.095998861 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073882018 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.097932147 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078792842 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.104135977 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.077967384 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.086921274 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.079129696 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.086909749 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067780129 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.100634285 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.078389536 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.10001671 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079854792 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.130715761 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.098382056 seconds)
  done (took 6.27339613 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.743814698 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.111801382 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094751176 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.800182163 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090354491 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105595213 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.70552208 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117542675 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.208915965 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.759053512 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.090335484 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.099172638 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.182211733 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.213464429 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.901957559 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.282939004 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.630512073 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104333048 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.109886672 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.132214529 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.140540627 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.175983047 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.150915124 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.436095853 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.076466561 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092639741 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.137476743 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.076236718 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.138363493 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.105431076 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093622377 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.154382794 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.226204071 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.154521254 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.096982483 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071768605 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091298638 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.147377409 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.220990048 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.189803494 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.157646013 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069864197 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091089872 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.139173125 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131029127 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069504021 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.13999333 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.152225061 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.168384238 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07507336 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.075228245 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.162112611 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.139105982 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.14348538 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.101386943 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.265702755 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.284544927 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070206824 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121170802 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.103430928 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.217737182 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.104712401 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.19838141 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.140082362 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.167674976 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090770947 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.732646256 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.147433051 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091837076 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.076299619 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118726309 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074580907 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.158303961 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.124468608 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.369546967 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.162563505 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.075486843 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070774941 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.228789607 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084868787 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091190159 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.141007855 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.077105386 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122315699 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.142083878 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.161691443 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.147653206 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.208965467 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.14336632 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.138569099 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.095322033 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.124766866 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.076606537 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.190795266 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.19409831 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.141131445 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.187720303 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.139014581 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.160964969 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.148942149 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077276629 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.150270417 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119551747 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100682455 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139483485 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.189347801 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.102569711 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.10470666 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073433293 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.159287182 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.124962672 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087493767 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.138219745 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.148696894 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.480619682 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.147125043 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069224021 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.108466022 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139288794 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.141287038 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096457734 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.213563596 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123034867 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.146907074 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120619739 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088745051 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.100237442 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.160626345 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.080257399 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122556827 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.138113842 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.097532528 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.214089254 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.169314523 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099281188 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.193706336 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.161616873 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.095595091 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.148244042 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119602406 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.146116508 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.079012337 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.137910786 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097971898 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.749048789 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.163760871 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121639369 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.075893543 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.1781081 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07187861 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103357474 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.084167929 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.089911457 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.729920356 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.106510607 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.080291659 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.104474135 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074452508 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121513635 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.156104141 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.075063253 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.139972001 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.20039168 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.076128007 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118540173 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.104438937 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.140600928 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.075701356 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.105464249 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.104078273 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.085247888 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121648878 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.093824813 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.085711299 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.146196948 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.140626971 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.193021746 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.540428314 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092154659 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.083415058 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.19954624 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091760457 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.242848028 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136141014 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.197914159 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.141557158 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.10206769 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.264611716 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.142833986 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.177818615 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.107120979 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.152502092 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068799015 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.156478161 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.142712727 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.07190076 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095844981 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.141711435 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.144917691 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.141379964 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.93631338 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071747423 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.203364384 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.089927356 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.151059097 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.0764155 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097847126 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.259737469 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072502429 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.146143368 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.143169464 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094740177 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.082973297 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.701850153 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.085098158 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.160140808 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075638826 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.192175868 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.142753696 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.13632994 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.137117096 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096514907 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.139886305 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.188127812 seconds)
  done (took 40.372544347 seconds)
done (took 57.742458907 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.259800963 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.183791094 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.241574836 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.145431789 seconds)
  done (took 1.809904846 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.146924489 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.105216552 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.11827768 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.086453271 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.104776799 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.087230492 seconds)
  done (took 1.551555767 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.404400802 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.265319615 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.229593925 seconds)
  done (took 1.803358688 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.260555458 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.214102932 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.445517016 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.298146435 seconds)
  done (took 2.253420869 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.176398549 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.114700609 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068609914 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.106987368 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.160447212 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.253838322 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.128517197 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.188480426 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080799589 seconds)
  done (took 2.230546183 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.196254603 seconds)
done (took 10.754002918 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.227531604 seconds)
    (2/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.122343874 seconds)
    (3/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.22181691 seconds)
    (4/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.191326166 seconds)
    (5/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.13721355 seconds)
    (6/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.21948282 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.109376409 seconds)
    (8/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.179262474 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.129667462 seconds)
    (10/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.245626964 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.07266685 seconds)
    (12/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.095808353 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.0673566 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.159164066 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.079127788 seconds)
    (16/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.203307325 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.099234442 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.158484403 seconds)
    (19/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.167150412 seconds)
    (20/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.259938364 seconds)
    (21/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.073405947 seconds)
    (22/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.075160814 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.121323194 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.06852069 seconds)
    (25/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.052283213 seconds)
    (26/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.261270574 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.135440353 seconds)
    (28/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.192009576 seconds)
    (29/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.212801578 seconds)
    (30/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.200966041 seconds)
    (31/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.100420021 seconds)
    (32/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.075541522 seconds)
    (33/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.08262156 seconds)
    (34/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.098847745 seconds)
    (35/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.137163422 seconds)
    (36/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.097091662 seconds)
    (37/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.074633469 seconds)
    (38/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.091924813 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.11231466 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.09603755 seconds)
    (41/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.193088937 seconds)
    (42/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.073532483 seconds)
    (43/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.066241676 seconds)
    (44/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.184762905 seconds)
    (45/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.182856846 seconds)
    (46/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.068530463 seconds)
    (47/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.213344408 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.172064002 seconds)
    (49/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.098870661 seconds)
    (50/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.092999158 seconds)
    (51/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.136604888 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.096774635 seconds)
    (53/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.080039777 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.115285029 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.150284997 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.0976264 seconds)
    (57/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.099749231 seconds)
    (58/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.080153105 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.09181185 seconds)
    (60/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.077046155 seconds)
    (61/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.182742922 seconds)
    (62/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.063335195 seconds)
    (63/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.096330296 seconds)
    (64/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.215307056 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.118418507 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.11795686 seconds)
    (67/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.093089039 seconds)
    (68/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.096909181 seconds)
    (69/309) benchmarking ("sort", Float64, false)...
    done (took 0.127137505 seconds)
    (70/309) benchmarking ("sort", Int8, false)...
    done (took 0.16481958 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.120296087 seconds)
    (72/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.053339978 seconds)
    (73/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.237882538 seconds)
    (74/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.121326033 seconds)
    (75/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.053645938 seconds)
    (76/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074826387 seconds)
    (77/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.077061502 seconds)
    (78/309) benchmarking ("sort", Int64, false)...
    done (took 0.068560938 seconds)
    (79/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.189900621 seconds)
    (80/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.135448649 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.089909252 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.117446351 seconds)
    (83/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.076558768 seconds)
    (84/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.064631554 seconds)
    (85/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.090187017 seconds)
    (86/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.138685235 seconds)
    (87/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.091715518 seconds)
    (88/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.112386522 seconds)
    (89/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.096346596 seconds)
    (90/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.052869395 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.118893299 seconds)
    (92/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.053510381 seconds)
    (93/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.200612402 seconds)
    (94/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.075849978 seconds)
    (95/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.054139348 seconds)
    (96/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.096318307 seconds)
    (97/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.108957882 seconds)
    (98/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.06171572 seconds)
    (99/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.075761385 seconds)
    (100/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.069034658 seconds)
    (101/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.131297666 seconds)
    (102/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.069606798 seconds)
    (103/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.178402561 seconds)
    (104/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.094979348 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.113350976 seconds)
    (106/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.169162828 seconds)
    (107/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.11494297 seconds)
    (108/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.200287511 seconds)
    (109/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.112252342 seconds)
    (110/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.077751091 seconds)
    (111/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.147244285 seconds)
    (112/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.165991456 seconds)
    (113/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.120475304 seconds)
    (114/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.097767765 seconds)
    (115/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.193160721 seconds)
    (116/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.05389362 seconds)
    (117/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.072032663 seconds)
    (118/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.101049893 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.079531494 seconds)
    (120/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.157523187 seconds)
    (121/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.073695077 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.11498574 seconds)
    (123/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.083772898 seconds)
    (124/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.158093643 seconds)
    (125/309) benchmarking ("sort", Bool, false)...
    done (took 0.160099143 seconds)
    (126/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.076300673 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.110125893 seconds)
    (128/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.053423681 seconds)
    (129/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.171520173 seconds)
    (130/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075388131 seconds)
    (131/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075307334 seconds)
    (132/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.089236794 seconds)
    (133/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.092670299 seconds)
    (134/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.161324261 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.111048687 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.072871156 seconds)
    (137/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074952536 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.137050472 seconds)
    (139/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.055099837 seconds)
    (140/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.104917797 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.068144333 seconds)
    (142/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.078410879 seconds)
    (143/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.09753889 seconds)
    (144/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.137794138 seconds)
    (145/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.202045726 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.074863144 seconds)
    (147/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.098809629 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.119461743 seconds)
    (149/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.195772201 seconds)
    (150/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.147713799 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.067645277 seconds)
    (152/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.104149601 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.067852081 seconds)
    (154/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.16010203 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.076374171 seconds)
    (156/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.053407664 seconds)
    (157/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.088698217 seconds)
    (158/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.100474815 seconds)
    (159/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.054865923 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.115386847 seconds)
    (161/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.067563006 seconds)
    (162/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.092309527 seconds)
    (163/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.101541219 seconds)
    (164/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.13293068 seconds)
    (165/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.078720568 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.116762121 seconds)
    (167/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.148302249 seconds)
    (168/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.095918402 seconds)
    (169/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.077174859 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.12115322 seconds)
    (171/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.077747383 seconds)
    (172/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.173169524 seconds)
    (173/309) benchmarking ("sort", Float32, false)...
    done (took 0.129737521 seconds)
    (174/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.161669551 seconds)
    (175/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.054466891 seconds)
    (176/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.077925652 seconds)
    (177/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.069025841 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.165738682 seconds)
    (179/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.055861587 seconds)
    (180/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.054181115 seconds)
    (181/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.161949847 seconds)
    (182/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.081994093 seconds)
    (183/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.076236005 seconds)
    (184/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.056174845 seconds)
    (185/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.054777955 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.089741379 seconds)
    (187/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.07475812 seconds)
    (188/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.053365102 seconds)
    (189/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.095850291 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.089776049 seconds)
    (191/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.201100214 seconds)
    (192/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.068004835 seconds)
    (193/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.074876005 seconds)
    (194/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.07332445 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.077904336 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.089285825 seconds)
    (197/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.070293099 seconds)
    (198/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.0748167 seconds)
    (199/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.074893098 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.126276569 seconds)
    (201/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.100029447 seconds)
    (202/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.055217146 seconds)
    (203/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.137428668 seconds)
    (204/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.269047804 seconds)
    (205/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.166645553 seconds)
    (206/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.088054902 seconds)
    (207/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.053461066 seconds)
    (208/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.160090039 seconds)
    (209/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.174785184 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.068397426 seconds)
    (211/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.192082459 seconds)
    (212/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.053581435 seconds)
    (213/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.067537823 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.111462163 seconds)
    (215/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.078888376 seconds)
    (216/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.089621091 seconds)
    (217/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.068845071 seconds)
    (218/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.052756192 seconds)
    (219/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.074695161 seconds)
    (220/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.077343357 seconds)
    (221/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.096703503 seconds)
    (222/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.068705164 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075019394 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.099323852 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.067897695 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.115174769 seconds)
    (227/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.078295828 seconds)
    (228/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.07327156 seconds)
    (229/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.103521932 seconds)
    (230/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.089732427 seconds)
    (231/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.074926571 seconds)
    (232/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.063226144 seconds)
    (233/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.068480496 seconds)
    (234/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.095936437 seconds)
    (235/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.053192263 seconds)
    (236/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074389064 seconds)
    (237/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.095920172 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.067030436 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.067509613 seconds)
    (240/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.074356773 seconds)
    (241/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.054428882 seconds)
    (242/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.067039273 seconds)
    (243/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.074635181 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.093792556 seconds)
    (245/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.134766673 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.141134279 seconds)
    (247/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.089915851 seconds)
    (248/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075485614 seconds)
    (249/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.052873088 seconds)
    (250/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.074965026 seconds)
    (251/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.053763619 seconds)
    (252/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.055090046 seconds)
    (253/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.072922487 seconds)
    (254/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.078241675 seconds)
    (255/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.053421182 seconds)
    (256/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.068550501 seconds)
    (257/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.08976575 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.091006893 seconds)
    (259/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.090729643 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.067545485 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.113692692 seconds)
    (262/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.05452095 seconds)
    (263/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.069480047 seconds)
    (264/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.138413775 seconds)
    (265/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.067194327 seconds)
    (266/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.061950821 seconds)
    (267/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.091552682 seconds)
    (268/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073341083 seconds)
    (269/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.09515144 seconds)
    (270/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.082550134 seconds)
    (271/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.066704904 seconds)
    (272/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.075633031 seconds)
    (273/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.063460575 seconds)
    (274/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.075543566 seconds)
    (275/309) benchmarking ("sort", BigInt, false)...
    done (took 0.207459227 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.08992085 seconds)
    (277/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.053812082 seconds)
    (278/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.06816588 seconds)
    (279/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.075467738 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.067368315 seconds)
    (281/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.113482188 seconds)
    (282/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.07165593 seconds)
    (283/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.062362102 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.127077301 seconds)
    (285/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.054236911 seconds)
    (286/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.088847254 seconds)
    (287/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.053766661 seconds)
    (288/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.068792004 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.097732738 seconds)
    (290/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.053577232 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.099161484 seconds)
    (292/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.200785767 seconds)
    (293/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.089590457 seconds)
    (294/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080740245 seconds)
    (295/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.069889974 seconds)
    (296/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.089088965 seconds)
    (297/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.055693683 seconds)
    (298/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.098141384 seconds)
    (299/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.052742513 seconds)
    (300/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.054667209 seconds)
    (301/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069925378 seconds)
    (302/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.076801525 seconds)
    (303/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.171560977 seconds)
    (304/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.09628481 seconds)
    (305/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.063803597 seconds)
    (306/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.053906994 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.097097673 seconds)
    (308/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.0912117 seconds)
    (309/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.095113528 seconds)
  done (took 33.473208492 seconds)
done (took 34.391709883 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.086560634 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115578005 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076192876 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.116051169 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081717058 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.101747019 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.07484484 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079927508 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.104730894 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.084244301 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.102798704 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056421684 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.098888128 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077353818 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.09879346 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092957781 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.10228996 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073863813 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.075399699 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.089020979 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075530517 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.089360524 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.0693006 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057411028 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.101241627 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074535566 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.07379358 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.098637837 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067708169 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.089345271 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.07082476 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074115372 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.08905379 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.080499214 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.095639529 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075122875 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.07721166 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.099814243 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.069853448 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.089447335 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075212073 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067607526 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.095612352 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075061788 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072790913 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.09460235 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075660849 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.10285094 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093274859 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091611318 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075140135 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.10033351 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078036919 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073781423 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.093351334 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075353441 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.094527765 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093262797 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.09797385 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070082314 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075554642 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.097859603 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072830087 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.075862056 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.098356671 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077629716 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.099780366 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073639767 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.098763811 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.07327674 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067130122 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.098107531 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071316044 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.067072952 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.09914842 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078804698 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.088701629 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073365139 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074008575 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.094993971 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067320291 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069466856 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.091431759 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.074844628 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091188048 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.056487112 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.072098703 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.096081835 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066906347 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075900361 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.096068706 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074530611 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.069227457 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.100964417 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067010994 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.095138422 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068169624 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067560577 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.091587179 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.072101441 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067195627 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091649724 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.076808172 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.091498503 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.074449771 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.082255766 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.089374853 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.07433825 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.066480509 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.0892337 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.084129693 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.099239753 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067682241 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091747101 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067419708 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.07495311 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.089250194 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067244365 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067259941 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.089666049 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.073201646 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067454181 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091024589 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.07552586 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.103951048 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.067909448 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.07091094 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092087479 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.067929987 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.07385972 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.089936749 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.068318386 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.069579064 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.08749179 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069194849 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.089203046 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.075398559 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069908666 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.097832226 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.069268512 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.076347911 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.095382365 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.073714304 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.094925687 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066487937 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.060470807 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092204807 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070083385 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.070047895 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.089592329 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.069157128 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067485501 seconds)
done (took 13.393935448 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069504847 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.171531837 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.127053363 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.097108204 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.111965953 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068135793 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.101484211 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.105330303 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.091788071 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.128416914 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.089296361 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.109690965 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.115637069 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.089795596 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068291626 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.071775191 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.091635661 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.090669563 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.125523113 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.110019527 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.118813269 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.089725694 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.122050672 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.091638064 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.112781019 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.095455658 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.090664934 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.072073159 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.071134536 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.126898141 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.110322472 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070825652 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068645026 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.123328522 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.118618637 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.087581874 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.089974091 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.086374226 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.089539224 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.06745595 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.115324058 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.101737889 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.105593641 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.083940782 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.096511454 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.070778121 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.091382999 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.087603945 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.114915529 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.082643957 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.112840933 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.135215711 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.071303209 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.106419491 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066935627 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.112215345 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.105610124 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.070934487 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.06883496 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.092839966 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.068385328 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071879511 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.112474404 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.117227457 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071729703 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.106905502 seconds)
  done (took 7.344795543 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.088025673 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.118052408 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.085389999 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.109013537 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067968276 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068668617 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.091116987 seconds)
  done (took 1.598887868 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.07120873 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091619541 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.113729414 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.091359303 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.110495669 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.089607819 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.100917967 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068672423 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.108470394 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.069952691 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089769427 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.128635203 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.070055658 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.099030574 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092308362 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.091249195 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092573209 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.091194509 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072106006 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.11508203 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072401966 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.089240718 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.093566342 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069059402 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.106335863 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.068874497 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.140156771 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074049241 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069886318 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.095007233 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06711 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.140555074 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.106193166 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079382873 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069247343 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.106003019 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.084100637 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089475621 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.08539994 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.096750336 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083257209 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069612131 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.093251867 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067955527 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.073876775 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.102038528 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.070618613 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.09210358 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.071711304 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08921344 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.092392103 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.083107992 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.091887373 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.072707711 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.070675149 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.097467734 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078831305 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.092572819 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.088897568 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070479835 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.108210135 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085586829 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.105914819 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085611883 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094401446 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.083784682 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.106176113 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072395548 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070578158 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.095579648 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.085350148 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.08953016 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.070074875 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.080105676 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.095694418 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.093304347 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.115857775 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070969688 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.101614968 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069593399 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.07015192 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.092161805 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.091927302 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095313623 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069491521 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072901549 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094996149 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.06721631 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.067817024 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.09524134 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068273323 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.070098925 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.094516998 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069597521 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.093929763 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.086012606 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069248822 seconds)
  done (took 9.438001784 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071663849 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.071987264 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.096859268 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.072215616 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.071572583 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.092836407 seconds)
  done (took 1.464029586 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.101959365 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.094352724 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.08301153 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.097814716 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.107952838 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.107246658 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.084579326 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.107131105 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087468162 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.104384586 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.084301534 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.10722222 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.08955308 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.098278839 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.084062191 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.09735109 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.085090993 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101579148 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081334472 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09876469 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.090225983 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.098946566 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075554624 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.08475178 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.09561196 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.075269174 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102348184 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082326365 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.10426318 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.084882594 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.097779251 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.072570587 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096547187 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.084769362 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.106889708 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074275221 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097791269 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074036301 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102133963 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.072232338 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.10764759 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076237753 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.080599469 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.096277212 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.107270719 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.07423869 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.074260797 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101248653 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.084631859 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.096914897 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.07375676 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096910878 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.072626113 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.096906816 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074058629 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.107273272 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.073005213 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.107737754 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.075420043 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.073778717 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.095059172 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.073498216 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.107735502 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.073029501 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105441526 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.073488892 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096129501 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.0752236 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098742697 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.075094251 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.07337023 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.094499304 seconds)
  done (took 7.452264734 seconds)
done (took 28.269273091 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.654499174 seconds)
  done (took 1.633897528 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.767121508 seconds)
  done (took 1.749953533 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.611350825 seconds)
  done (took 15.601459791 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.613797847 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.755478624 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.807547095 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.134796726 seconds)
  done (took 3.294746901 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.890540101 seconds)
  done (took 1.901248282 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.239153753 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.225051044 seconds)
  done (took 1.455254607 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.734120887 seconds)
  done (took 1.733209148 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.322657497 seconds)
  done (took 2.311161693 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.32867334 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.181595455 seconds)
  done (took 1.512351936 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.522715901 seconds)
  done (took 1.521210205 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.526254137 seconds)
  done (took 7.52882385 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.233337353 seconds)
  done (took 1.249707336 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.269395492 seconds)
  done (took 1.27465521 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.118510902 seconds)
  done (took 4.119868698 seconds)
done (took 47.877406473 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080988966 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083433981 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.105259986 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.08055462 seconds)
  done (took 1.348616165 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.081025496 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075167193 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.102251852 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.074751081 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.102360884 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.075741671 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.10067801 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.07924569 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07439722 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.098981785 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.075548876 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.09757949 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.077580947 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.099983652 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.073135607 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.077389893 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.101259908 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.075597643 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.100961172 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.075480459 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.072990074 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.100392326 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.077914068 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.09721731 seconds)
  done (took 3.07584909 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081529549 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075762101 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.099371887 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073509217 seconds)
  done (took 1.33279176 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.081324685 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.117989225 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.090542156 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.079699458 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.117677151 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.112298121 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072302756 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.072548033 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.097876179 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.080005845 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.093164208 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.100132507 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.112808459 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079496214 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.104260811 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.068283344 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.070603824 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.112630145 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.079762422 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.103797222 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073189293 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.081634823 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.093629172 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.092642522 seconds)
  done (took 3.199148156 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.081200433 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105645329 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.10360084 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091525385 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.117207932 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.068047674 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.101259509 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.094570215 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.150275414 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067735015 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.096092008 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068927237 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.09830702 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.067139401 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.079149853 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.134117061 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113149617 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.094297023 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.098810916 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.091157129 seconds)
  done (took 2.93578807 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.078476258 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072511615 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090178839 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070482925 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078614429 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.098218481 seconds)
  done (took 1.495822415 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.071604395 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069169477 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.092062486 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068452938 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.07359698 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.092658433 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068210555 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068726255 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.0921853 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069805503 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068309881 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.09079668 seconds)
  done (took 1.935193676 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.385257568 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.093543463 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.0707737 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.088979962 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073044122 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.091637082 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082171656 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069731209 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.116117771 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068669982 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.093038637 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.07061011 seconds)
  done (took 2.317686935 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267092285 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080679632 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.323329985 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168339226 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141726493 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156288783 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105911346 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141520449 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.198117654 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138978571 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201823669 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224469426 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134662311 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169558507 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116685254 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.134140186 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187672305 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224165135 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132900357 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201224888 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206456427 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158077677 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181115734 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129292763 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136210671 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151425675 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.074098672 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106139422 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23335037 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161621949 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200951249 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140098757 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099311632 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232218596 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22554066 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195219298 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162679128 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087281017 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.157733619 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.165050833 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254501594 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114654315 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194891452 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134405637 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107239178 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173689249 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146850734 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.14821512 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.138050982 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116434973 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173730557 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240591781 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.166402282 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113617317 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137637075 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143195695 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.144964865 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104809928 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267008787 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19608313 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16037018 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.09626931 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099330334 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210962077 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158771657 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.142022746 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.154163566 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120315455 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167818384 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.210685778 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147387921 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174181731 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.180103547 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091167836 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14762001 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195147698 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157384512 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228852002 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15566019 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.076193289 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153760033 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131101021 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108789 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.146176269 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102152054 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209189869 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126540333 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.140073955 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139634047 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137315508 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137835567 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196467419 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203249032 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132221122 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.067691874 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131595024 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.151092393 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176778892 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115384117 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135897904 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148073527 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.081709455 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191712034 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.07750426 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154033108 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.105145172 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15224749 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162694349 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078234206 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154910458 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128952544 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.128945042 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164112214 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219233217 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091893072 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108835617 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226669129 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155926466 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.133811517 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175901378 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.214082909 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.103465295 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130347263 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20559792 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241192197 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092346018 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223814006 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13549591 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085402066 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.113827628 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155014844 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140965618 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.150355638 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08498951 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.179161062 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2007684 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.101327202 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122072251 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166826037 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08458903 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108348033 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140960938 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128064728 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.098240038 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.127930468 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.134235114 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170556203 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178047353 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110491409 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178830495 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101866785 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226299191 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117078491 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.132004412 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107653792 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.09721051 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.166550768 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217088618 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082869423 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225605762 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.155965437 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132026175 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149124691 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086560662 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169833862 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105570986 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.073543043 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200272847 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139511756 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138506349 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.185052594 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131077723 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.156689773 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.153093583 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163170629 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186799419 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.162205923 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134561586 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.090205652 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141378034 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153902185 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.100513722 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.097087349 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.110444251 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132171506 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124265471 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08642767 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197908263 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156641226 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100871329 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14103244 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12436933 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180161953 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.10404945 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160115927 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.148345429 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122329273 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.185313295 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212609571 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164879633 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128053208 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199477582 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.07390652 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076295047 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.117791999 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156723891 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111081294 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086533198 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147108262 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205097777 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158454306 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168125978 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138783651 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150843644 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.213709317 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.074715305 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.145066274 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180140578 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153919474 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.156185261 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092949657 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.123817816 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174929699 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136720425 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270218279 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11914591 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183094311 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182898575 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.131537578 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082589275 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133701444 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167623401 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134116223 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.208174736 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126953687 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091205231 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138122154 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.108647713 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132856269 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156956942 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150018655 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164505623 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.143999554 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186896402 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080606878 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145391056 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152756089 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151167601 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.091287576 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149134704 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221234001 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097650451 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146257865 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210124544 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081888667 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.151811677 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236897485 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200060494 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086708316 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13741123 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15516348 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158491782 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146613948 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.194934284 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140054562 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165542756 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139016641 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.087685456 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115378843 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101041706 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134364075 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.123199768 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.139665923 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.147167657 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.122692449 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160889794 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14035212 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139513243 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147479282 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.101036491 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.118955535 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126481216 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208744422 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174465463 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234831917 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.103970377 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.205808679 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225513696 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078485828 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106922547 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.083802941 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169844371 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11216066 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162982832 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.123552687 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108027608 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180521553 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174732745 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122232756 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.07091817 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139085339 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165438438 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139276943 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125077932 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.134183443 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196354844 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.132034681 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081842781 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154001251 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132419841 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131502327 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234070001 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.063471904 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125285803 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078202541 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108724416 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159456014 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21436618 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.085738877 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.153848723 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147814861 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15036474 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159276803 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130070641 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125352553 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116615387 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207373656 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157758591 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.118100774 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141341086 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160298344 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215807227 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109116565 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.1238781 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23242313 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186014374 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.221729203 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.116883346 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145185921 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144852156 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137924502 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171914978 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111117511 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202015842 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110381117 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16686511 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132342553 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120721111 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159080213 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.140748649 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115562835 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180795999 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149117111 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110330244 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081994092 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146984686 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151596806 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134114131 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.102871577 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169537663 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.10048798 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169581633 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229817165 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084499628 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135623766 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12365069 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084844645 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137335802 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131948548 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114679642 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.122726482 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228036376 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.119345558 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181703693 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197532789 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143811263 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167092682 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128052951 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.663598338 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.106927313 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188388533 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149654943 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237975544 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127097557 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148630029 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139570117 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153231235 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17413653 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133701977 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.204751226 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161671626 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.150175201 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107886332 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131785435 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140289838 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.093824476 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134357537 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143191804 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146607691 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.129834087 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.150899051 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156343366 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.109172908 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122569996 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19146276 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147222244 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199516876 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172289745 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087243768 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148514011 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19733746 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107846823 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.152185638 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191852457 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137681783 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127988971 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.108805562 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.135374393 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206543806 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.10144597 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19617127 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178324415 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114104583 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14347197 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.174610739 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164453143 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137324409 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155696425 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124611419 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.141465943 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145956082 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088163776 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.105929346 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135462924 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142231656 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.102539696 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131121213 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.145606518 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184921454 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.098913664 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099588837 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131334343 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201262662 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240321211 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.091689608 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111520322 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149599963 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142467219 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.14608283 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156117691 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.084256046 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110642074 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.110442071 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.114786017 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.138173446 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143475284 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132167189 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140891381 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200936535 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.113612058 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.252641961 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098451098 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135302431 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070877566 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.108194512 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124564311 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100484942 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136730759 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126084555 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233854129 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.099895693 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.11869343 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121474107 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.07580849 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111218048 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160102411 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140661141 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152207047 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12638825 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.06639756 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138956717 seconds)
  done (took 71.739581892 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.134862656 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.10414126 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.117614182 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.173399538 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.146160442 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.238848339 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.182055754 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.222735631 seconds)
  done (took 2.418445156 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071511968 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.117475695 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.102924183 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.116717565 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.090643346 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069887103 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.294728553 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.110161662 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068587309 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.114215419 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.12006729 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.092773564 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.468905834 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068291474 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.095087091 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.085157941 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068878142 seconds)
  done (took 3.241680706 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.429098422 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.628188347 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.447804574 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.075219573 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.875102967 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.107947876 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.353072849 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.161706787 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.091539333 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.428466078 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.729999443 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.152031774 seconds)
  done (took 17.574391951 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.078666944 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.07150652 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.11087632 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084412567 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.099790271 seconds)
  done (took 1.544319715 seconds)
done (took 115.157470796 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.084030157 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.344783053 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.05447326 seconds)
  done (took 1.534058394 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.087115547 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085407421 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.111232928 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.084277914 seconds)
  done (took 1.475112307 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.078399053 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079266424 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.110547815 seconds)
  done (took 1.372185174 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.278757834 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.166858946 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.09024344 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.08585457 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079947776 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.10556929 seconds)
  done (took 1.378224012 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076449529 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076426259 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.100035084 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078167621 seconds)
  done (took 1.428407569 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079577132 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.054276634 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056660325 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.082934122 seconds)
  done (took 1.378524635 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.093160289 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.106369569 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.082207761 seconds)
  done (took 1.382062178 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.109240875 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.113287661 seconds)
  done (took 1.328961568 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084283156 seconds)
  done (took 1.181833457 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.095225908 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.141121169 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.156922787 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.136768953 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.16682772 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.136533836 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.088594777 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.115246947 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.105186371 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.090532093 seconds)
  done (took 2.338991292 seconds)
done (took 16.514827865 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080350326 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.393775892 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362891458 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118196422 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.687082923 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357843133 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.002402985 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.11934554 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120858377 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.09528043 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08541021 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.693268177 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.968742305 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.345298668 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.9537923 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.323915769 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.676113198 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069510993 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069256199 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095192533 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.963874612 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094515571 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068874305 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069220542 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.67499689 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.37189281 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094679134 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.317733632 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069076629 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09661308 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356189324 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095104529 seconds)
  done (took 15.985961043 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073477664 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.144553811 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075104123 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084717267 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.097461016 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071374192 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.098641624 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070359257 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.152547685 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069004694 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112027027 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069113871 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.098718492 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069904305 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088376157 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.095669744 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070009485 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06958125 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.095654481 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069276153 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112904861 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068982016 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069507754 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094789566 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070080416 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107573058 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069965995 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069337634 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095568201 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071207012 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.098070028 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070304606 seconds)
  done (took 3.878054369 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118661393 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.152595734 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075387013 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.12979114 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114706012 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.098097903 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.170901368 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094683207 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.155498546 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069362212 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112247227 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069324608 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.129330596 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070617843 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.115049071 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070505924 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071187805 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.095683979 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070240446 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.09544773 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087584252 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068829643 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095497068 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070347938 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.095850068 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08236967 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095669923 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070048027 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069400751 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097142415 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072922747 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.0701823 seconds)
  done (took 4.17059047 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075280411 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076279324 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.11010903 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084896554 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.097695056 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.073681068 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.074802526 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.097038803 seconds)
  done (took 1.805480404 seconds)
done (took 26.947421903 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081097731 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071327163 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.10094732 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.082937126 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.100437201 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079969183 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068993746 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.102173743 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078437751 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074078088 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.102872374 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068673241 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.098846665 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.068927431 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.077076043 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.094889167 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081165026 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.099717249 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080447271 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080983477 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.097841762 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.079009812 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.101798824 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.081206929 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.106671977 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081048082 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.084679022 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.101252764 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071506526 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.098059003 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077936338 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.085555731 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.096395374 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081206823 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.095805314 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.069903853 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.069919001 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.095572148 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080955319 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.10179096 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072281089 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.101860867 seconds)
  done (took 4.729102915 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090662278 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.093127624 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.113384422 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.067188377 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.098350013 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.066906917 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.116474464 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.064725797 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060540849 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.116328745 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.0574762 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060671073 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.091281509 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.055579465 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.061229119 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.058508062 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.089430586 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.058060681 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060505685 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.086860299 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.059972403 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.0557207 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.088224587 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064909177 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.057793655 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.089377927 seconds)
  done (took 3.099754379 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077947137 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084574823 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.115452972 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131061375 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.134691332 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.078305313 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.106231243 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.089189563 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.114237411 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.06900574 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073198174 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.125480927 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089466617 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.10155066 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069054458 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.114822393 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084104176 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070966897 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.102176145 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092116335 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.112607629 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.079821655 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.120596696 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.082393344 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069092407 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098437067 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073426527 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.108935545 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07472972 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.07899915 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.100095975 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.07243084 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.097643337 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.090506548 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.100291216 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.071239473 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.091780311 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.10505691 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079979953 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.096633052 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.07230734 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069596163 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.116175227 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.113492553 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.095696044 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.076774883 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.103953947 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079073389 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069158507 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.114885347 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078416172 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.096035338 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.072214293 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068897792 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.095694148 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083255711 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071143944 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.098044089 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078420642 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.099128842 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.081944149 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072676373 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.111461687 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.06858718 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.103290983 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068666246 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070101242 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.094653828 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092628404 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.096730047 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.109604755 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.096830356 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.071150257 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078368847 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.10285334 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075305978 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.095580111 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08395494 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079217173 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.098942116 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077804424 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.098880536 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.073117944 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.089407362 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.098900122 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071252318 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070653502 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.10286182 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071904734 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.097637232 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082207608 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069648357 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.098988506 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085898338 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.095622667 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071346862 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.076317382 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.100864895 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068999205 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107535668 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074260902 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.096336514 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078438486 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.070064449 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.098951896 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079272152 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.100086258 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067883686 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.0745298 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.101999709 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069916998 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070181134 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.098772121 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071339856 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.105064144 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075200756 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073474527 seconds)
  done (took 11.467159928 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.19404589 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.186376425 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071765783 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.179374581 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077448303 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.108674061 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.180908926 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.098008593 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.097152795 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069618663 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070397237 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.130923327 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.125400715 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.107125016 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.106585767 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.06969127 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.114996417 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.105316552 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.183643304 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.177629868 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.11679761 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077469336 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071103681 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.098032842 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071366387 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078663824 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.113447279 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.078025881 seconds)
  done (took 4.294996306 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.085388659 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.130187316 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076078093 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090041833 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.12105163 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.07051218 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.102177111 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071247058 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.10954551 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.081561764 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.096742318 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074960274 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07619202 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.107340587 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070158868 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.106647846 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079422279 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070806287 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.099680123 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074938496 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.10572804 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.081866568 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.100418371 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068724739 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.075891768 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.096619976 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066591378 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.113851251 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.06923055 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.117622888 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068116398 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074807911 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.109914594 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070192568 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.096081123 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.072853697 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.072634873 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.099734416 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070888558 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067725358 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.095238224 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.059476071 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068512306 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.108712878 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.076257323 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.088392809 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.074630261 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.074748892 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.101360073 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067209816 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.098636806 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071710129 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072043842 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.105428755 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074112675 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.074203261 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.100654905 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.068076579 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.104091881 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.072729456 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065860278 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.09503392 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074232121 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.068953296 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.104405609 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.07434169 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.094896917 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.07297963 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.074301705 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.103630052 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.073265531 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.072372494 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.094561078 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071741291 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.102373231 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074245247 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.073593435 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.095952414 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068895892 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.06973839 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.084589839 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069286277 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.055598648 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.100027838 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067797206 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067774439 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.099287123 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.075094255 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.109647962 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.070694017 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.102616941 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070529268 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067839499 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.09977834 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.06575861 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071987019 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.112952848 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.112877637 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069326205 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067885199 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.111312407 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074229326 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.06829479 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.086229192 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.07638396 seconds)
  done (took 9.975836468 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.098115932 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093401933 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.098508672 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084222431 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.124351691 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.095188482 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.104513724 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075832118 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.071555421 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.113164886 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.069567735 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.105248267 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.070166294 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078698805 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.12533661 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077748677 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.098736197 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078456214 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073299445 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.136790218 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084113446 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.11085925 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.08211933 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.097806068 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.074849828 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081238815 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.125032877 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.081446262 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.107480541 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.086696547 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.081251047 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.124104545 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.087397153 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.100640074 seconds)
  done (took 4.343110131 seconds)
done (took 39.02058586 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.210865033 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.412413606 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.185682486 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.048542879 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.220287765 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.212847729 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.199535847 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.188918392 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.379874774 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.189027224 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.445085063 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.819526292 seconds)
done (took 58.648872075 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.263075641 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.336027228 seconds)
    (2/2) benchmarking "String"...
    done (took 1.476125215 seconds)
  done (took 3.947699095 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.59425115 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.067427821 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.447972596 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.194841567 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.205733177 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.484674192 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.773565142 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.005421109 seconds)
  done (took 27.312740288 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.20425616 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.548097956 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.454782874 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.463194575 seconds)
  done (took 17.807063041 seconds)
done (took 59.062697184 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.186395847 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.228706394 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.236812495 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.177261315 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.294260542 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.211837188 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.463063915 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.43156326 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.199632189 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.199918346 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.192776476 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.190129712 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.192485174 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.53812481 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.190484514 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.194061389 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.222756567 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.693934222 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.563582021 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.196365296 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.207170473 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.191887206 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.213279544 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.198169727 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.234225963 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.191582611 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.202609496 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.205766253 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.349856561 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.197496597 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.279447817 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.685589338 seconds)
  done (took 191.096993894 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.194808511 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.196560109 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.278361507 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.216297883 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.660486175 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.393147848 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.331552276 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.720632278 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.211325428 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.206816668 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.524060778 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.194488173 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.585174009 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.15637738 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.20432298 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.300025341 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.466647731 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.532409178 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.206551874 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.456459465 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.208392238 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.434206876 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.353743262 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.436965666 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.207062965 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.229865613 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.209463556 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.198676613 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.383721631 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.390173111 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.213116769 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.220538337 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.759207396 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.05297948 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.206156643 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.226359382 seconds)
  done (took 149.904842459 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.463199119 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.196507213 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.195764469 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.196341554 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.226112426 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.197130932 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.712427052 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.703307369 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.6953326 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.358164271 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.255466505 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.403011239 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.194028249 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.285550296 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.20862533 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.198462585 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.211898102 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.220280342 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.195206951 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.198634496 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.715128377 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.209649181 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.321276187 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.203252852 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.196098392 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.226288559 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.589414471 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.195377695 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.225049594 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.50837459 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.238042705 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.195649796 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.473689511 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.3542579 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.305802314 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.197698054 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.227050353 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.195532597 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.465371953 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.196351357 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.198418117 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.201008667 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.754967583 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.197145355 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.71553306 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.199850763 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.0652962 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.196764306 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.199127284 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.590586428 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.581335742 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.195503912 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.195722148 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.198383366 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.196519878 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.196916261 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.225104885 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.464473691 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.289875827 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.196378848 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.199931364 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.224456819 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.196684159 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.200389212 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.196534655 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.770060691 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.254646155 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.311519544 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.715301594 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.199456394 seconds)
    (70/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.287815488 seconds)
    (71/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.313750097 seconds)
    (72/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.196934781 seconds)
    (73/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.196953554 seconds)
    (74/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.197521657 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.197474185 seconds)
    (76/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.301437465 seconds)
    (77/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.196051325 seconds)
    (78/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.196537031 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.579227848 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.194872227 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.203440341 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.197611211 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.256060474 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.290075111 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.19633561 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.478389757 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.200220773 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.196639462 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.884772428 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.287641098 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.197644541 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.196568342 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.197850291 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.575018135 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.705996751 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.358946154 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.198857075 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.503982919 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.197512114 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.590049333 seconds)
    (101/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.696314748 seconds)
    (102/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.755382183 seconds)
    (103/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.198189094 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.198241912 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.304527116 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.203123418 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.199128798 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.197687054 seconds)
    (109/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.200303672 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.199924529 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.227384896 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.199356908 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.25597125 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.596805499 seconds)
  done (took 343.769655234 seconds)
done (took 687.372411457 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.881995602 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.859151938 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.967625288 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.860415273 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.842192525 seconds)
  done (took 10.552954043 seconds)
done (took 11.695827724 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.375795592 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.375655925 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.254844081 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.378527024 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.226593085 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.396260277 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.356372446 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.219336468 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.296639461 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.269531352 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.294269945 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.247491754 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.226963332 seconds)
  done (took 18.061372163 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.49819562 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.49600802 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.265542471 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.494258516 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.241762706 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.503439857 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.39016414 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.399289632 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.392118472 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.21608656 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.214838275 seconds)
  done (took 16.257006382 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.506862108 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.497507569 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.265826492 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.512136158 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.241712379 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.502946963 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.389657143 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.399467056 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.390837438 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.218110964 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.215795307 seconds)
  done (took 16.28532593 seconds)
done (took 51.749298972 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.209076563 seconds)
  done (took 2.351644356 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.240643584 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.405501963 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.225814841 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.213651218 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.212139004 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.211076858 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.215695297 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.211092892 seconds)
  done (took 11.081830637 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.208603464 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.210445053 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.208060053 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.208511843 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.211463087 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.210235253 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.211387589 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.208794159 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.211550527 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.20524355 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.210747853 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.209063631 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.209110663 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.207352799 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.207901601 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.210465001 seconds)
  done (took 20.496201664 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.210989251 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.209563953 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.210541946 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.208617083 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.21039797 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.211107069 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.210172509 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.207303044 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.209399083 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.210638193 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.20907962 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.210132389 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.208857139 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.209250121 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.210692546 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.210491728 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.20951646 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.208579058 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.213815181 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.208363846 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.210422726 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.209388317 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.208375927 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.209345091 seconds)
  done (took 30.18490507 seconds)
done (took 65.257016322 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.210941724 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.799551653 seconds)
  done (took 9.155818619 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.212323142 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.212626745 seconds)
  done (took 3.574825605 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.212682133 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.21123818 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.212792032 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.211024721 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.211754631 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.212934463 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.209238528 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.212063264 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.212662878 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.211580803 seconds)
  done (took 13.265638126 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.212733791 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.213511437 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.211437761 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.213110983 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.213118518 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.21040514 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.214094989 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.213381329 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.212483306 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.211492557 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.213434205 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.21156114 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.213270937 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.210791803 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.214213644 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.210126985 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.210827771 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.211315968 seconds)
  done (took 22.968491297 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.210868996 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.212490406 seconds)
  done (took 3.572011507 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.210215616 seconds)
    (2/7) benchmarking "second"...
    done (took 1.211286616 seconds)
    (3/7) benchmarking "month"...
    done (took 1.211861914 seconds)
    (4/7) benchmarking "year"...
    done (took 1.211260919 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.211648781 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.208024552 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.212623366 seconds)
  done (took 9.625849134 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.214217994 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.384702443 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.46858308 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.784436952 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.215492119 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.218122434 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.066540029 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.218489421 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.219093143 seconds)
  done (took 13.939342483 seconds)
done (took 77.248904118 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.207272938 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.208255181 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.014583509 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.211971814 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.223014543 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.548943633 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.250437785 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.339961426 seconds)
done (took 37.152521305 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.219164802 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.929556384 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.934505567 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.208558063 seconds)
  done (took 11.222192621 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.206167158 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.110346501 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.20283667 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.207480949 seconds)
  done (took 17.878929098 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.811095153 seconds)
    (2/2) benchmarking "read"...
    done (took 1.543092707 seconds)
  done (took 4.50578314 seconds)
done (took 40.974831993 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.215277474 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.215173626 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.213816247 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.213013652 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.214472335 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.211156685 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.214009113 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.213323381 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.215473172 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.215434891 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.216234083 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.216732407 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.213797234 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.213911887 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215635286 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.213247404 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.215070341 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.213507779 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.211269312 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.217465141 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.214811063 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.213070984 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.213674574 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.21399993 seconds)
  done (took 30.294867326 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.217986656 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.215153746 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.21719487 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.217617749 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.214553575 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.21685854 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.217641396 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.215128494 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.216748615 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.215948412 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.21685453 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.215618527 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.217081294 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.215509439 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.216574704 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.214042729 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.216231685 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215262047 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.217715717 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.21562919 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.218519735 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215425717 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.216280054 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.218095536 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.21616286 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.21638371 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.218360226 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.216648792 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.21868705 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.214456395 seconds)
  done (took 37.646442071 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.224195167 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.226010306 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.218168706 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.218221619 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.2172814 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.218079925 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.21806192 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.217495358 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.218480406 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.21836201 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.217256833 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.218993574 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.219391801 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.21989624 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.220237899 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.219653422 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.219292228 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.219542646 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.219224579 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.219797067 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.219973944 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.219518213 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.220109197 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.220293039 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.21998963 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.221979655 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.220694224 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.220104257 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.220883462 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.221606194 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.220665474 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.221787268 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.22077234 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.220357023 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.22222126 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.221171593 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.225279815 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.228380535 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.218764033 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.223579714 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.220336851 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.221618013 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.222004477 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.220905308 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.221424036 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.22001494 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.220838381 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.220515543 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.21947149 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.220284629 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.2213119 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.220652486 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.22089981 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.222359633 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.222737877 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.222208976 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.221826159 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.221392949 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.221545052 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.221240503 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.222137855 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.220649619 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.221432875 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.22192968 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.223064847 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.221564742 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.221152722 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.222837517 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.223451354 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.221633164 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.221872461 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.222780166 seconds)
  done (took 89.059197947 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.223157925 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.220492287 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.221503411 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.220030816 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.220588381 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.221531502 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.219086699 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223120461 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220112156 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.222273126 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220764218 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.22119287 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.219887571 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.222562198 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.220263879 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.219476224 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.223223936 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.220836897 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.222401118 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.222593375 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.222033119 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.220521592 seconds)
  done (took 28.024890027 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.222581346 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.22394353 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.220227563 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.223924554 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.221269548 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.223101699 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.224292169 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.224278953 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223830405 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.223778066 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.221157889 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222458826 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.220532438 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.22031939 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.22170246 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.220394021 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.224721022 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.221444366 seconds)
  done (took 23.161134602 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.222785898 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.2221638 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.225346637 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.222056998 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.222256087 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.225713152 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.222532599 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.224982221 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.224273868 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.220907355 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.224190497 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224329352 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.225626299 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222460225 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22548963 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.220781548 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.224229129 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.22252065 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.225813085 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.222131281 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.223255396 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.225534423 seconds)
  done (took 28.078975643 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.225448491 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.226369689 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.223258349 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.224766877 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.223526489 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.225438029 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.225960592 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.223134397 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.225189304 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.225866037 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.222657311 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.223514704 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.223212552 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.224603256 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.222768485 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.223342592 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.226700875 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.223780844 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.225551433 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.223211688 seconds)
  done (took 25.648098314 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.225906326 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.225372919 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.226764657 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.226648538 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.226748838 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.226450915 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.22696232 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.226450463 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.227367541 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.227719947 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.226627079 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.225201329 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.227722533 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.227185298 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.226372255 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.225499542 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.228411726 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.229251655 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.228401111 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.228263761 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.227357633 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.227421425 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.229832775 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.228908179 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.228771228 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.229261213 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.228360691 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.229016392 seconds)
  done (took 35.529091797 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.22981459 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.227766321 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.226514195 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.22590702 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.228275508 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.225970761 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.226987422 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.227997787 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.22934767 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.226847589 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.228404537 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.228523699 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.228821078 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.228878599 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.230339106 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.22946681 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.227913985 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.228323154 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.227001447 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.226122136 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.22920842 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.229940234 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.229040464 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.225421718 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.226269622 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.228765369 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.226069618 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.226691906 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.231156388 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.227809278 seconds)
  done (took 38.003026993 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.249355997 seconds)
    (2/2) benchmarking "in"...
    done (took 1.247939814 seconds)
  done (took 3.659934172 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.227359369 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.229285701 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.22972385 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.226295434 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.227114225 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.229538501 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.229914566 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.228497031 seconds)
  done (took 10.991125001 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.228298978 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.229504406 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.23038035 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.230152235 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.231550777 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.232245668 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.241098154 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.247662139 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.232276537 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.233054399 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.236936055 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.240360395 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.235603313 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.230913889 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.232443211 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.234693479 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.232124978 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.232755462 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.232270482 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.232741772 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.23283431 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.234918291 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.234385131 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.229143423 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.23276293 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.245892068 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.238779886 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.231411416 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.231792492 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.237886669 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.231817875 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.22941839 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.232518209 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.231863094 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.232292146 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.231788438 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.243576192 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.251212947 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.240489488 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.232142922 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.233664755 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.229311845 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.235250975 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.235548183 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.236047988 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.232819834 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.233395329 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.230395366 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.231501432 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.235307725 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.238497016 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.231833742 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.230151456 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.2386126 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.234836671 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.243144185 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.249359688 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.236334152 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.241358893 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.245867672 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.249613833 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.239210967 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.235401401 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.232866743 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.242271909 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.254920343 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.24197142 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.250557132 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.230388024 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.233267683 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.242071457 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.249533173 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.244822991 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.234633983 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.233592624 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.235831681 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.235618739 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.234986547 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.244092958 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.255560841 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.234300663 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.234743456 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.243957823 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.256819069 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.233396418 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.233531475 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.23439461 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.235502325 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.236163235 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.246077255 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.251025278 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.235833763 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.234140368 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.234062467 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.238311896 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.236620648 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.234241997 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.237260409 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.233968054 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.237295946 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.235878344 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.2398951 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.245832305 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.23603042 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.236315552 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.246597355 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.236241658 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.235029669 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.246727622 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.236868766 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.235378311 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.237172719 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.243774046 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.231930973 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.237115214 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.245779096 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.235940203 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.237270183 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.236919778 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.237973204 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.247153797 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.262481645 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.236342418 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.234997404 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.240829706 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.247067351 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.237282426 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.24089684 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.238594134 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.235382725 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.234156845 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.239621382 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.238047288 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.238818653 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.23874953 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.240874551 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.235812736 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.238693235 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.237476968 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.240376076 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.241085806 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.238384556 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.239925677 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.241062212 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.238885551 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.241694283 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.249080316 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.240586536 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.241340054 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.241106071 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.237352488 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.23788757 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.240476342 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.239063544 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.241262023 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.2400023 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.238610366 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.239207937 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.24118261 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.239572922 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.24094402 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.239981437 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.241790383 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.240454026 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.2456716 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.238821442 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.237632274 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.241644829 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.239468485 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.239717405 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.240197244 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.238484306 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.244021188 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.24803446 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.241116569 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.239640568 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.24594701 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.241503865 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.241807704 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.240776856 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.245102748 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.248905946 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.240117672 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.249017929 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.241545492 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.241957943 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.245055302 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.242235501 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.239275842 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.24023958 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.244985824 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.248461818 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.255183599 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.251206213 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.242703871 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.245425158 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.241626531 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.2452495 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.249736968 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.241684639 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.242948522 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.241173458 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.242100849 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.241619705 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.245871462 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.242144315 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.242002138 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.242656479 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.241843487 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.241423176 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.24430093 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.243000864 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.243498878 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.239273126 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.243170565 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.242967644 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.242550232 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.240203679 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.241243473 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.242003269 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.24440218 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.241440347 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.254480851 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.242490412 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.244796136 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.245336672 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.243982769 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.241855584 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.24387011 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.245752662 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.244435536 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.253580045 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.262041097 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.245388914 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.253393085 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.261281218 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.24340754 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.248410265 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.24540557 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.240899912 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.245575177 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.252318936 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.243815752 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.244673212 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.245155024 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.245446868 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.24590324 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.254840691 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.244510418 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.243715361 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.245568298 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.248308916 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.243446645 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.246942703 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.246079856 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.24681796 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.247920616 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.244686645 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.245475128 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.247414936 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.244617145 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.245899668 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.247439252 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.247548742 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.251938069 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.252091597 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.245746012 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.24784676 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.247028512 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.248682991 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.246894412 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.245770634 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.245681382 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.260792864 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.256116769 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.25468658 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.250095139 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.247018003 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.255187843 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.249386885 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.250862061 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.246979643 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.249535252 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.247626864 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.246716204 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.246389449 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.248366619 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.248308188 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.248150144 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.248661226 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.252386189 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.248649896 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.246280455 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.247749832 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.248157995 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.249353707 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.246606532 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.247433931 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.25296703 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.251101007 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.249351279 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.247521719 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.25591162 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.265610368 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.249878211 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.247072205 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.248604713 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.248574296 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.25002763 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.247440442 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.251095944 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.256348023 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.251687559 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.260774711 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.250580915 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.260636424 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.248897936 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.252766435 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.256146704 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.246846637 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.248120237 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.249497952 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.248530803 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.258322503 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.265808427 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.249493588 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.253469433 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.249592284 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.249753269 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.250111992 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.247711994 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.251375254 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.24860128 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.2611693 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.266843772 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.254408667 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.253448633 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.248459956 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.248229736 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.250181951 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.248910073 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.256356272 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.250338546 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.252573682 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.249046721 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.2504213 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.250297693 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.249388136 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.251745244 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.246776775 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.250844737 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.257224453 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.267901901 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.252639741 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.25062251 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.263070736 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.251333474 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.260177341 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.268988086 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.251449694 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.250842614 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.252192106 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.252016938 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.251707714 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.253407985 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.249964123 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.252887885 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.255269348 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.250745599 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.25328564 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.254132374 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.249866434 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.25091807 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.26000833 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.275358806 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.253633268 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.25652097 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.248724248 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.252878762 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.257004037 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.252011388 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.252451342 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.253648458 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.262896783 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.259517408 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.251707518 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.251915851 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.253028851 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.252206154 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.253023247 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.253719555 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.250705886 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.253817663 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.253672519 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.254008101 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.258982385 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.254958765 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.254325615 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.254625325 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.253849783 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.26616655 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.25314836 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.257639377 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.25366645 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.253438229 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.256571919 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.255375896 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.253938197 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.254961764 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.254359622 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.255849006 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.262264055 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.261032852 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.257204391 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.253718618 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.253811235 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.254851645 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.254324735 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.254649807 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.253809891 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.254826243 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.257649158 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.254690624 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.257550343 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.252977657 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.256002231 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.254391346 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.255881028 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.255977472 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.259640289 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.253239069 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.252642477 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.254833476 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.256514069 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.254551437 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.255580884 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.264765084 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.259736507 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.265961072 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.263717282 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.259853371 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.255531892 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.259369124 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.264006034 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.25558922 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.257243534 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.254528211 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.258754446 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.257157213 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.259315084 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.253860419 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.266254386 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.255570689 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.254173618 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.268033066 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.274679948 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.255585093 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.257957728 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.261152274 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.257422196 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.25409944 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.257755467 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.256800927 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.266761264 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.276314453 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.25631863 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.258982876 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.255598021 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.258994079 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.260602026 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.257370348 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.256570774 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.255369543 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.257626317 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.256262183 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.257255965 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.254905153 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.256615536 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.256145156 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.259221146 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.263725924 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.255127701 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.260521899 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.258019282 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.258808628 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.258071161 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.259845765 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.255508406 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.254804409 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.25904883 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.258270922 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.258777139 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.261015398 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.258804969 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.257897132 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.260403408 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.258835742 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.261544158 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.26820926 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.268268724 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.256487123 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.258653447 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.258690148 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.263376195 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.26022837 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.259222289 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.259527498 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.261563578 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.259533724 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.259330458 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.259725607 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.263107049 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.277395468 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.27622871 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.260173222 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.259689769 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.266416206 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.260593275 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.256229554 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.260879039 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.264436046 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.262540061 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.268463746 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.260295019 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.268407371 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.278222177 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.262528599 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.263980974 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.263745181 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.270313917 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.263877318 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.260574353 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.260714485 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.266662398 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.278626606 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.261070154 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.271720518 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.293521796 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.278350239 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.262550582 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.260806987 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.260943819 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.260812426 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.264538872 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.262038219 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.261872814 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.261818579 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.26089366 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.262133859 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.267862013 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.262945684 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.26237357 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.26290135 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.263062833 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.264812386 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.259595242 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.261602217 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.262997754 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.262351684 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.263270426 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.262891567 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.263294203 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.276569941 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.275690057 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.262962821 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.263129051 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.258518799 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.267693479 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.267094655 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.273661255 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.271365224 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.261968848 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.262313107 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.264376068 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.263429521 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.261076109 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.263500449 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.263428372 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.261188401 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.260025663 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.277594657 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.273335058 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.270123051 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.265000493 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.262620541 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.263304373 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.265818461 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.263363452 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.263664477 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.267429617 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.264908234 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.267989453 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.264185852 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.263142854 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.266831915 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.273381189 seconds)
  done (took 746.257277433 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.262592526 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.262738651 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.264151533 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.262440844 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.262718609 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.263089822 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.262770282 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.262906695 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.263449315 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.26318043 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.265229371 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.263310075 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.263116919 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.263616384 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.262099084 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.26460049 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.263869537 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.264226761 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.263846206 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.264573514 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.26462155 seconds)
  done (took 27.728906732 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.26593354 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.264014812 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.264295917 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.266045883 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.263396412 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.265542938 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.264056735 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.265744292 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.265380567 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.263020459 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.265958051 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.266433978 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.264041649 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.264586315 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.264177136 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.266032478 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.265787033 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.264320717 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.266177931 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.264051955 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.267386866 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.264561351 seconds)
  done (took 29.028196641 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.264281226 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.267478235 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.266751897 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.26388087 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.268383206 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.263720392 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.267651505 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.268086473 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.267307882 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.268908358 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.266284092 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.268293661 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.273985659 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.272278671 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.271971296 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.268690398 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.411805325 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.26834616 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.26788297 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.267235668 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.266109921 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.274678587 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.264785514 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.267352352 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.26643665 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.266087483 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.267523659 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.267223672 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.269658393 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.267945058 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.27051827 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.267901418 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.267137499 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.269503824 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.267896954 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.269183746 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.272549243 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.268206881 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.266402899 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.270111455 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.27877224 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.288589355 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.269082331 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.276035968 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.268927471 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.269475039 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.272452642 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.275965132 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.266498138 seconds)
  done (took 63.536374012 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.269762487 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.26864511 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.266261922 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.271305483 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.269248389 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.269811462 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.270798618 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.270811114 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.26808841 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.266579895 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.270869553 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.270153551 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.269305703 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.271069987 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.270681196 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.268411219 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.267663851 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.269259923 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.267900164 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.268676203 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.270562486 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.271483166 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.27115932 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.269182615 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.272895192 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.267992966 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.268555721 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.271406618 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.269727969 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.269248081 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.270616691 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.271239605 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.270658253 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.26988251 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.268749433 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.271329066 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.271757434 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.26934616 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.271182933 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.270214213 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.272061048 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.272746975 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.273083723 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.272688257 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.269588007 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.271223683 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.269412182 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.268590495 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.270315897 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.271988221 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.272486895 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.270532236 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.271388449 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.269965725 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.272919742 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.272475269 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.270917214 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.269800277 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.272243141 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.271772498 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.270095706 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.273187999 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.271510576 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.273268492 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.273045327 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.271350592 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.271644042 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.274946753 seconds)
  done (took 87.599708866 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.273924504 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.273650366 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.2732655 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.27317733 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.274075085 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.272445474 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.272165529 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.273248744 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.274389592 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.273695128 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.274165281 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.273430966 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.270815865 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.273888449 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.272456525 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.27138232 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.273053052 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.27303613 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.273596987 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.273768629 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.272764497 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.272580765 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.273403795 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.272968949 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.273677074 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.272766106 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.272059082 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.272847732 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.272771363 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.274606907 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.272855583 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.273800232 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.273506377 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.273289952 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.275029157 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.274268508 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.274653682 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.274003061 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.272967093 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.274114805 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.272974988 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.274091991 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.273106418 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.274147767 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.272221005 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.274088095 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.27432445 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.273336604 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.275808475 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.274391752 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.273910465 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.27434066 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.274298516 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.274583519 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.274035329 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.275428568 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.2751725 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.27404783 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.276549109 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.275002535 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.27527516 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.275912574 seconds)
  done (took 80.176751464 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.277544669 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.275259371 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.275281058 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.274108498 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.276934442 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.274088344 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.278278615 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.277135046 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.275939491 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.275627753 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.27623343 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.274870077 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.274579231 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.276488534 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.273541509 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.272694566 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.274593818 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.275625595 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.276913334 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.274578209 seconds)
  done (took 26.716835687 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.275233243 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.277870432 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.275163487 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.274576377 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.27690453 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.274837886 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.276949332 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.278943394 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.274119304 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.277355254 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.277609537 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.279366892 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.277136233 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.276137676 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.277438501 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.27602589 seconds)
  done (took 21.634651048 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.275082743 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.277913683 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.277321971 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.277491902 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.275521192 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.276601192 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.278384796 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.276542475 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.276259091 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.278836711 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.278700141 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.278766318 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.277281474 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.277777679 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.277499212 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.279155333 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.276014351 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.276171453 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.278492316 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.2774479 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.278019775 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.276869866 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.279132599 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.279691356 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.2786758 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.278649252 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.277232562 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.276096464 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.276616763 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.282219217 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.276730722 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.278199855 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.27788862 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.277640242 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.279095105 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.278088954 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.280451823 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.279882838 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.279797935 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.281359641 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.280994466 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.277463087 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.279631419 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.280602355 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.279185504 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.281235904 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.277352803 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.278795318 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.278691772 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.279071238 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.280846679 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.279716595 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.280099174 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.282533223 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.280149003 seconds)
  done (took 71.528847323 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.281196751 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.280971213 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.278811085 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.28239722 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.282630284 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.278873182 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.282895222 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.279741656 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.279293338 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.282503732 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.280002278 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.283409614 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.278453996 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.281996453 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.280210363 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.281629978 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.278859801 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.278689516 seconds)
  done (took 24.261942922 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.280884945 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.280193469 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.28109885 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.279124669 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.279929447 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.283097485 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.278965441 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.282357061 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.281306593 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.279509776 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.280339485 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.281181581 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.281525439 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.283011887 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.279761231 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.279357293 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.282404785 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.283278472 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.279762967 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.278918893 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.282662488 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.282413222 seconds)
  done (took 29.393337856 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.28007967 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.281014302 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.299916905 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.327119569 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.308457119 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.280094381 seconds)
  done (took 8.98930595 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281395265 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283341167 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.280440004 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284947911 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283283434 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281959287 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280271949 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28078127 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283637339 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281305393 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281097458 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284622919 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283786744 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280748912 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285390944 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283999012 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280623292 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282285044 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282866201 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28307301 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281734634 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284503506 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281274652 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281664688 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282616967 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279997852 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283961306 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281183108 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280473232 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283158992 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283213976 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280702821 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284259098 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28186788 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285128578 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284894602 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279711459 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284776698 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284092215 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28255892 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.286118919 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283955276 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285425617 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281407134 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285317714 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281526719 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28405359 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284082103 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282790675 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285065788 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285076971 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281982873 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288257007 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284910688 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285548222 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285784789 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284119794 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284037839 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286345109 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283171758 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282892261 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285589638 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283790756 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284356459 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286284388 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282606487 seconds)
  done (took 85.911952309 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282830955 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.283784655 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285099648 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283997149 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284078592 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284624226 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284490694 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283887769 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284065391 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283926966 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286599624 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283148512 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283380221 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284955953 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284324646 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285014109 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284995378 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284666378 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284694056 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288070106 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284724026 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284528144 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285811782 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283591083 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28502233 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287574873 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28505484 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284847122 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285242665 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284457665 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284020546 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285527041 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284740949 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.284600868 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284874927 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285615048 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283572421 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284797245 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285395087 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286120323 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284563815 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287095329 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285026524 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284296658 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285818311 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286121524 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287462073 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286813352 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2864688 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286763547 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284684592 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286075587 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287190552 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285634107 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285790519 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285152841 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286148972 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28657084 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284762101 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289775104 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287093641 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285976248 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291031381 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288232755 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288159759 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287435045 seconds)
  done (took 86.059731549 seconds)
done (took 1740.071026444 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.309066648 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.404903387 seconds)
  done (took 13.932817837 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.450563694 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.403682385 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.284865866 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.316552258 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.284389584 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.290998206 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.293459553 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.28523847 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.287678504 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.287727573 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.2889221 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.475921662 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.284169589 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.282455928 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.287669298 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.380611226 seconds)
  done (took 42.415590507 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.316550205 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.29511561 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.402444737 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.312494957 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.314405684 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.472988199 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.345608371 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.294054261 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.458688294 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.329803695 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.809306826 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.31338264 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.292961819 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.369254279 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.30659242 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.469886484 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.534004835 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.81230572 seconds)
  done (took 29.671681362 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.729457617 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.320109525 seconds)
  done (took 9.271055589 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.310167195 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.305985582 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.306182761 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.319559917 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.319274472 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.285812011 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.288169092 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.286323749 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.297656328 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.379671036 seconds)
  done (took 64.331257522 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.311802963 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.293123299 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.294197115 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.293249408 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.284044656 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.295212634 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.291844087 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.28740788 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.815757497 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.416203748 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.308112174 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.301312114 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.294587987 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.293354957 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.28960954 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.329217242 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.420600414 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.288227111 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.290857098 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.299322591 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.293706471 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.421418626 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.329596406 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.290949788 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.415557721 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.840932538 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.297882304 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.299795791 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.41276008 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.290112922 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.293573384 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.293541185 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.296045398 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.858015918 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.786082804 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.301740653 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.316083979 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.304374509 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.291930759 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.472734602 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.295828458 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.302722187 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.287490804 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.769412467 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.453669556 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.401447678 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.532720341 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.292676913 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.29604225 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.357571985 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.296627092 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.294605426 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.322505694 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.042000394 seconds)
  done (took 108.974761008 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.324257428 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.775185787 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.458096137 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.312658425 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.080423084 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.950444578 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.287717387 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.570877537 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.301945318 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.286892302 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.61772566 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.781479108 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.287507657 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.302234584 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.401732846 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.291330841 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.28816824 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.057965729 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.28713152 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.289929453 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.703266683 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.301946485 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.287655109 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.350827312 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.324852164 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.74605663 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.721886648 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.705487166 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.291900761 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.287441824 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.745844645 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.286635338 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.290757681 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.29084042 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.565966481 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.641531407 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.616824419 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.291722483 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.309968432 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.285914139 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.317362078 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.743758022 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.624665024 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.286706529 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.286620288 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.746672242 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.287675764 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.298876402 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.29760193 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.490321545 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.289379316 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.288836783 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.730227967 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.288555079 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.644428776 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.332347544 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.36281638 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.777060246 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.288837558 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.367799331 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.293679421 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.289221461 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.294016197 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.292409402 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.287256769 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.630321001 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.719722917 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.295340028 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.632968456 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.737456777 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.289005293 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.803876212 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.221247694 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.300377795 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.335026957 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.292081503 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.86280251 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.773075658 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.309860424 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.289369544 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.617622886 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.292775318 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.6101013 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.3095275 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.288675442 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.715254036 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.303704173 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.331538204 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.290518357 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.30389051 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.925639758 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.293348548 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.557229343 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.332715946 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.292600185 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.293584313 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.294334496 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.29034088 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.291676632 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.296288727 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.808724256 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.297363868 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.600820736 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.314226065 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.29093524 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.304154154 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.29645494 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.295215362 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.511759988 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.839689423 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.293556464 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.294960702 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.290181394 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.304829322 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.58208063 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.293046227 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.593097187 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.292424583 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.294434862 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.295686719 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.993580091 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.327324025 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.291720981 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.294535139 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.150173439 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.507140216 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.314597838 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.291942207 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.29661516 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.304947382 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.619462876 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.293212619 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.327524623 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.297291568 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.989587959 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.301370671 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.3299233 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.957918972 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.306335449 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.257007129 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.318006694 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.293668495 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.59861755 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.572549022 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.622466619 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.294360976 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.303488224 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.966824508 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.32152216 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.427106579 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.315954357 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.306418854 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.495244058 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.621633833 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.29644497 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.875701568 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.296507076 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.508775514 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.310528198 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.612005195 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.774874281 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.294226099 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.304158289 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.990721825 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.974038544 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.910647119 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.301624622 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.626352986 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.309101046 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.75261649 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.298305593 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.298798791 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.741392901 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.297217148 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.300382177 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.297973692 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.299888349 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.356220459 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.475172273 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.720987047 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.298311915 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.75217242 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.309544425 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.294877885 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.301137024 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.302111974 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.655299464 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.375420094 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.303820677 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.321391295 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.296529376 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.300558516 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.763158829 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.192216534 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.295499787 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.454007227 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.923724275 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.295511597 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.300142909 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.993893717 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.585903195 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.799701364 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.359208757 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.602397221 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.297113272 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.340174669 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.021631362 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.31382117 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.762497781 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.299036026 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.295665108 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.891394005 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.296618208 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.360514282 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.296444721 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.300193204 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.818782406 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.296878193 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.302475203 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.631932888 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.297528029 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.545438211 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.301007612 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.350126743 seconds)
  done (took 1102.191582393 seconds)
done (took 1372.010328143 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.303424184 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.308173784 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.28940015 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.299660264 seconds)
  done (took 26.438480052 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.308937187 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.305787155 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.30531039 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.306302476 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.307221176 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.306595093 seconds)
  done (took 9.078260435 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.463278608 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.300809726 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.300518896 seconds)
  done (took 19.302793606 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.517944499 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.546221154 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.664488041 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.446713862 seconds)
  done (took 10.413368198 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.310211486 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.30690792 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.308147198 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.31048756 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.311323025 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.311921595 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.31131141 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.310651445 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.311778224 seconds)
  done (took 13.029743943 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.196564533 seconds)
done (took 84.697611793 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.657262362 seconds)
    (2/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.325139633 seconds)
    (3/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.30403352 seconds)
    (4/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.493801133 seconds)
    (5/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.329605956 seconds)
    (6/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.044550557 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.94064512 seconds)
    (8/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.607472592 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.659187841 seconds)
    (10/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.864067439 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.547903873 seconds)
    (12/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.428828434 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.713842612 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.386993214 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.344012471 seconds)
    (16/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.950357518 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.329973919 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.325711789 seconds)
    (19/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.301155283 seconds)
    (20/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.094914636 seconds)
    (21/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.522876218 seconds)
    (22/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.397211837 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.346406023 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.881541023 seconds)
    (25/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.658465732 seconds)
    (26/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.724000642 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.406031696 seconds)
    (28/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.303268714 seconds)
    (29/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.655788577 seconds)
    (30/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.291674174 seconds)
    (31/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.316965358 seconds)
    (32/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.288583078 seconds)
    (33/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.411993428 seconds)
    (34/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.428853946 seconds)
    (35/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.306004968 seconds)
    (36/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.417544522 seconds)
    (37/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.055296585 seconds)
    (38/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.363409432 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.42520251 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.450654425 seconds)
    (41/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.303598831 seconds)
    (42/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.682679349 seconds)
    (43/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.55192705 seconds)
    (44/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.71872298 seconds)
    (45/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.491273241 seconds)
    (46/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.301207717 seconds)
    (47/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.133475058 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.407418934 seconds)
    (49/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.519873759 seconds)
    (50/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.428389845 seconds)
    (51/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.597804524 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.412663152 seconds)
    (53/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.307206714 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.56731431 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.289686674 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.353747088 seconds)
    (57/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.302250748 seconds)
    (58/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.335731738 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.36057857 seconds)
    (60/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.302095865 seconds)
    (61/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.793641169 seconds)
    (62/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.658048048 seconds)
    (63/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.491931345 seconds)
    (64/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.884387152 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.797417632 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.235682853 seconds)
    (67/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.384675611 seconds)
    (68/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.330501973 seconds)
    (69/309) benchmarking ("sort", Float64, false)...
    done (took 5.596090927 seconds)
    (70/309) benchmarking ("sort", Int8, false)...
    done (took 4.362424113 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.354351411 seconds)
    (72/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.786245708 seconds)
    (73/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.320850889 seconds)
    (74/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.329896305 seconds)
    (75/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.143632972 seconds)
    (76/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.327562476 seconds)
    (77/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.877587252 seconds)
    (78/309) benchmarking ("sort", Int64, false)...
    done (took 5.462452841 seconds)
    (79/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.499767 seconds)
    (80/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.294798723 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.791906282 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.376697066 seconds)
    (83/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.32901722 seconds)
    (84/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.766853273 seconds)
    (85/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.873583493 seconds)
    (86/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.536877001 seconds)
    (87/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.384248002 seconds)
    (88/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.664786396 seconds)
    (89/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.355223047 seconds)
    (90/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.13631817 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.216944709 seconds)
    (92/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.679278291 seconds)
    (93/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.300909942 seconds)
    (94/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.314372555 seconds)
    (95/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.911129191 seconds)
    (96/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.138029147 seconds)
    (97/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.761753044 seconds)
    (98/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.684991433 seconds)
    (99/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.883988736 seconds)
    (100/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.343230557 seconds)
    (101/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.583668168 seconds)
    (102/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.389656189 seconds)
    (103/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.365045406 seconds)
    (104/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.519770783 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.252025663 seconds)
    (106/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.289682839 seconds)
    (107/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.345592414 seconds)
    (108/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.299239318 seconds)
    (109/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.914453578 seconds)
    (110/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.308856821 seconds)
    (111/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.307278773 seconds)
    (112/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.443194343 seconds)
    (113/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.322858515 seconds)
    (114/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.388239049 seconds)
    (115/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.381023607 seconds)
    (116/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.868464547 seconds)
    (117/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.384936103 seconds)
    (118/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.4448432 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.950777226 seconds)
    (120/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.625308171 seconds)
    (121/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.05627859 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.81168256 seconds)
    (123/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.681341659 seconds)
    (124/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.67917902 seconds)
    (125/309) benchmarking ("sort", Bool, false)...
    done (took 1.81776692 seconds)
    (126/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.332851701 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.70255419 seconds)
    (128/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.747329761 seconds)
    (129/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.30511548 seconds)
    (130/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.562454227 seconds)
    (131/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.334874152 seconds)
    (132/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.307976334 seconds)
    (133/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.342454463 seconds)
    (134/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.887200837 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.724553355 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.096755146 seconds)
    (137/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.569839397 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.384910477 seconds)
    (139/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.099202512 seconds)
    (140/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.03089888 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.979308809 seconds)
    (142/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.411668678 seconds)
    (143/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.335373358 seconds)
    (144/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.610006827 seconds)
    (145/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.30368641 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.415338172 seconds)
    (147/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.334666735 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.412375308 seconds)
    (149/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.309170627 seconds)
    (150/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.330698327 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.944459149 seconds)
    (152/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.429669767 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.069176295 seconds)
    (154/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.084356883 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.332316978 seconds)
    (156/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.448190747 seconds)
    (157/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.062559158 seconds)
    (158/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.933516316 seconds)
    (159/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.20654157 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.15848124 seconds)
    (161/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.430731973 seconds)
    (162/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.373889095 seconds)
    (163/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.684512985 seconds)
    (164/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.785217576 seconds)
    (165/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.327764555 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.125149836 seconds)
    (167/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.505457921 seconds)
    (168/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.415320349 seconds)
    (169/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.333551512 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.30997499 seconds)
    (171/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.447363367 seconds)
    (172/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.295492556 seconds)
    (173/309) benchmarking ("sort", Float32, false)...
    done (took 5.318920552 seconds)
    (174/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.885154976 seconds)
    (175/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.327045826 seconds)
    (176/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.370008675 seconds)
    (177/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.362332118 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.414233807 seconds)
    (179/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.29460219 seconds)
    (180/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.304967855 seconds)
    (181/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.333676156 seconds)
    (182/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.5767838 seconds)
    (183/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.148272409 seconds)
    (184/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.064381852 seconds)
    (185/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.924200574 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.717814019 seconds)
    (187/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.348673057 seconds)
    (188/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.969286239 seconds)
    (189/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.338042139 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.300914911 seconds)
    (191/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.306539566 seconds)
    (192/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.069849569 seconds)
    (193/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.579937582 seconds)
    (194/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.77788647 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.658911854 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.734517312 seconds)
    (197/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.382237517 seconds)
    (198/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.336395569 seconds)
    (199/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.857658099 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.359988663 seconds)
    (201/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.351188632 seconds)
    (202/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.188245133 seconds)
    (203/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.862571041 seconds)
    (204/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.310688878 seconds)
    (205/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.331235868 seconds)
    (206/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.754493284 seconds)
    (207/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.721864377 seconds)
    (208/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.592775315 seconds)
    (209/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.116644523 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.249210257 seconds)
    (211/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.871830286 seconds)
    (212/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.325356054 seconds)
    (213/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.370660805 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.797167985 seconds)
    (215/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.394576828 seconds)
    (216/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.313063862 seconds)
    (217/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.313744861 seconds)
    (218/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.892979503 seconds)
    (219/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.65630525 seconds)
    (220/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.419758475 seconds)
    (221/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.325233341 seconds)
    (222/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.328678282 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.529021864 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.860123735 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.726923287 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.680601318 seconds)
    (227/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.319739816 seconds)
    (228/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.33122082 seconds)
    (229/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.546119892 seconds)
    (230/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.327710078 seconds)
    (231/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.618680873 seconds)
    (232/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.673394405 seconds)
    (233/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.31702175 seconds)
    (234/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.338805522 seconds)
    (235/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.631834022 seconds)
    (236/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.338362869 seconds)
    (237/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.341987453 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.355264962 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.178007437 seconds)
    (240/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.477691617 seconds)
    (241/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.840385492 seconds)
    (242/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.167467938 seconds)
    (243/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.596886158 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.682253353 seconds)
    (245/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.298013851 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.359703866 seconds)
    (247/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.761611204 seconds)
    (248/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.322632839 seconds)
    (249/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.546535315 seconds)
    (250/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.628975986 seconds)
    (251/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.476439819 seconds)
    (252/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.315269958 seconds)
    (253/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.446646386 seconds)
    (254/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.302062989 seconds)
    (255/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.135104196 seconds)
    (256/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.408784463 seconds)
    (257/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.316499759 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.860636798 seconds)
    (259/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.937287214 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.213986805 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.16874039 seconds)
    (262/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.30113513 seconds)
    (263/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.343287607 seconds)
    (264/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.156535658 seconds)
    (265/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.527236784 seconds)
    (266/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.69218702 seconds)
    (267/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.361318794 seconds)
    (268/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.340341426 seconds)
    (269/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.342091341 seconds)
    (270/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.680645994 seconds)
    (271/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.714282656 seconds)
    (272/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.924350757 seconds)
    (273/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.675270384 seconds)
    (274/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.702032461 seconds)
    (275/309) benchmarking ("sort", BigInt, false)...
    done (took 6.315831552 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.91274633 seconds)
    (277/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.161699103 seconds)
    (278/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.397879173 seconds)
    (279/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.236290033 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.236241434 seconds)
    (281/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.314610733 seconds)
    (282/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.38921468 seconds)
    (283/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.703775732 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.386552005 seconds)
    (285/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.15961369 seconds)
    (286/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.395786014 seconds)
    (287/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.554717641 seconds)
    (288/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.326377922 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.409623039 seconds)
    (290/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.6920195 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.377865882 seconds)
    (292/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.315365652 seconds)
    (293/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.39651864 seconds)
    (294/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.034643191 seconds)
    (295/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.47205054 seconds)
    (296/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.434276127 seconds)
    (297/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.304608538 seconds)
    (298/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.479945365 seconds)
    (299/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.908491268 seconds)
    (300/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.69497284 seconds)
    (301/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.382582105 seconds)
    (302/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.306706215 seconds)
    (303/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.346339146 seconds)
    (304/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.361711586 seconds)
    (305/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.113151647 seconds)
    (306/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.875130881 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.336767593 seconds)
    (308/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.316216944 seconds)
    (309/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.390520979 seconds)
  done (took 918.454196765 seconds)
done (took 919.695836191 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.347369521 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.341755068 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.322698097 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.347389208 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.436764314 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.354862681 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.33653004 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.329245529 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.373897486 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.376099781 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.325279809 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.354776293 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.327799303 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.324420153 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.325119131 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.341207332 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.330909882 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.325296479 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.342510693 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.337051571 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.342482256 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.325583729 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.375992281 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.35545295 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.330665353 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.330034903 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.330499388 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.345464781 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.438698886 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.328549605 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.329658917 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.338516978 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.336091925 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.322274356 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.32134315 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.345684845 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.337597979 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.337346229 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.331627083 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.357779538 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.729022585 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.324988393 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.32751171 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.329050796 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.327738066 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.33142813 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.329242352 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.333920392 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.340839834 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.344169114 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.727967191 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.342298096 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.333456704 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.331309179 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.3423159 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.331676631 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.334365327 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.347869498 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.351355178 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.347466673 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.340324098 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.331925189 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.33125977 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.345054528 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.334754985 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.761709047 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.323297084 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.331966852 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.735584497 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.331012053 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.763487768 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.334966038 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.329680221 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.34214357 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.361545152 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.354461826 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.324201523 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.328330177 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.336535637 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.328398268 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.339251922 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.344212202 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.334411305 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.331563265 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.34334815 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.360190424 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.341961054 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.331290314 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.339071819 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.349633984 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.337276269 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.34124161 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.332742173 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.325710938 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.340084554 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.333143979 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.331827885 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.332720693 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.335710905 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.34108704 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.739897926 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.345258468 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.326472286 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.32751258 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.332099925 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.344821412 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.747489002 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.329877061 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.351772154 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.378611738 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.332108587 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.369361113 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.334533023 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.346394022 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.33976344 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.333309224 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.327114993 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.370833866 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.806682862 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.348335054 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.333942846 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.330395391 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.346729369 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.333256069 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.329991648 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.383778184 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.335264756 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.346123365 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.452029272 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.342635038 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.364588809 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.329729239 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.334171897 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.362164131 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.347531978 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.364923926 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.334237159 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.347866205 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.34793838 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.327920687 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.344079216 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.342892911 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.335115545 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.33866561 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.326686559 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.365826598 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.344928497 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.344715596 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.355658958 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.453867132 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.330981225 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.333493206 seconds)
done (took 224.61416182 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.400246643 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.326378619 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.439751453 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.33295336 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.439416669 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.435388353 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.330069894 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.330885131 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.329597222 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.710732474 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.33019123 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.328990317 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.329759554 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.329731776 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.419471637 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.332124122 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.328310845 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.693348532 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.332983368 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.410312109 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.325169317 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.330245537 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.331344877 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.734152679 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.33232834 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.3281924 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.401498675 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.332323332 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.679653397 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.330325256 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.326599192 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.695238371 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.421764238 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.349719775 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.34536799 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.341464642 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.439390604 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.351222935 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.416912919 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.416646951 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.441136411 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.371111915 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.325669698 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.331533808 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.335307061 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.332392426 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.331911957 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.360862985 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.326053234 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.333564653 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.675244492 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.342196801 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.333037299 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.330580505 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.329317971 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.36233706 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.330968563 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.334599091 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.427463686 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.335064116 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.401516597 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.717312722 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.734893157 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.333772458 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.332649606 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.33158545 seconds)
  done (took 148.543543569 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.400976661 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.40638266 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.448006963 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.334509681 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.38327914 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.452371116 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.336867805 seconds)
  done (took 11.026991251 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.342593162 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.337580348 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.38452597 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.384911633 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.333739883 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.482070889 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.335243366 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.346222905 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.335178577 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.387912285 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.338843508 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.337275815 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.342040096 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.331105809 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.383594001 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.348112844 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.452081629 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.335316138 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.338179763 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.490168729 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.3337988 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.343363599 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.387724346 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.347552788 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.338158714 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.341995125 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.900628291 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.337532354 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.336501931 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.337418759 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.33558508 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.37456723 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.337302919 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.338087857 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.334181803 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.453598051 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.336899842 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.335455247 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.339136624 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.33283504 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.337377513 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.337597114 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.338526116 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.336168982 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.33748335 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.361587022 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.339226471 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.338361354 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.338627615 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.339005419 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.388269296 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.338349731 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.334927936 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.33604783 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.393330043 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.346066502 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.338637545 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.337437729 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.339291936 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.338286935 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.492333211 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.389527042 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.339175627 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.386758133 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.339385159 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.341600562 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.340897782 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.343083714 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.394027395 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.338516261 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.385840343 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.337703483 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.492882384 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.362621931 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.340137111 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.342599214 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.341459403 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.337938746 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.33679491 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.346440808 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.337859942 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.341226567 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.347323528 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.337750882 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.338144025 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.441807034 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.447911536 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.338046011 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.352637952 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.346050493 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.337648687 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.393052009 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.340776373 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.339954291 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.391933291 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.454191629 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.391325211 seconds)
  done (took 153.659366166 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.348430282 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.34841372 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.342815507 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.356423174 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.340966644 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.340861906 seconds)
  done (took 9.347048976 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.344652995 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.342715416 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.34254561 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.342114821 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.341733216 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.343269384 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.34126801 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.341431271 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.345897719 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.34360926 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.343024889 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.344932759 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.345043492 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.343396111 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.343220508 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.343636564 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.343074247 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.341642991 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.344199996 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.342116481 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.441038544 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.344053626 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.343695301 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.344746377 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.348519913 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.345348303 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.350519212 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.344805692 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.343328146 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.351836097 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.345048875 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.344768434 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.346638589 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.350640101 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.346965981 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.345098683 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.34996329 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.346869312 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.34235488 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.345688002 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.348421048 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.347077695 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.34502529 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.349321128 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.345785746 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.348114529 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.351860369 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.353883524 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.346438589 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.350294672 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.348591286 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.345316504 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.346802392 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.349470359 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.349629125 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.352322157 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.353959136 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.34600759 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.345503618 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.348732674 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.348474862 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.348476277 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.346185712 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.350697443 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.353522558 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.351012844 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.347810471 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.350609369 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.346269014 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.346557397 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.347940614 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.342792002 seconds)
  done (took 99.310560708 seconds)
done (took 423.149045349 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.797790463 seconds)
  done (took 8.073057382 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.438170107 seconds)
  done (took 7.715868143 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.076776999 seconds)
  done (took 21.359960707 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.34872165 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.375429623 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.350351169 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.338505345 seconds)
  done (took 26.689815412 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.823782477 seconds)
  done (took 8.100209836 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.340111943 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.349832357 seconds)
  done (took 13.967616415 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.422948714 seconds)
  done (took 7.697853381 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.828892479 seconds)
  done (took 8.110935204 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.352810721 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.356658358 seconds)
  done (took 14.254521772 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.324926761 seconds)
  done (took 7.602229508 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.314580792 seconds)
  done (took 8.592046046 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.340609241 seconds)
  done (took 7.617176526 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.350858235 seconds)
  done (took 7.626222969 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.186459828 seconds)
  done (took 9.46420804 seconds)
done (took 158.149662789 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.339183121 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.34285105 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.340655719 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.34136961 seconds)
  done (took 26.639265801 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.381261112 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.380374659 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.382321001 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.390896207 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.383577868 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.381752239 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.373681187 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.373794762 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.392512659 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.384626567 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.384078442 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.383197855 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.379811457 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.375506813 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.385865911 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.384886248 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.39152852 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.384893829 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.374021218 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.385297009 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.350602824 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.393784382 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.383802643 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.34914293 seconds)
  done (took 34.40953883 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.546033954 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.419888629 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.501304536 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.398329002 seconds)
  done (took 7.143353205 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.401229177 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.400828597 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.413827414 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.453262554 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.47877616 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.412232089 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.375637903 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.369528387 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.356764455 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.402844931 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.480193855 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.421637767 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.486518643 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.349524348 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.536590204 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.351700775 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.350688943 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.401194413 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.455833719 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.469185722 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.34823902 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.403524568 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.405938278 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.418463069 seconds)
  done (took 35.2227163 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.349182135 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.356940625 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.355915044 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.34994723 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.348045401 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.349729738 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.354932676 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.35156879 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.370630939 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.35101775 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.348638866 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.349267846 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.349070354 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.349908454 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.34848353 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.361443965 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.363974481 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.349061552 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.353163841 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.356847989 seconds)
  done (took 28.345987846 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.342893299 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.197514139 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.693488348 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.59922802 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.343463287 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.343018896 seconds)
  done (took 27.79947268 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.419297699 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.549438146 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.34922789 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.720373403 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.788037421 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.347738898 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.350274602 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.587333256 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.893147873 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.90996122 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.402330726 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.419835638 seconds)
  done (took 20.017958018 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.356377367 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.346026157 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.347278408 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.362036282 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.407042228 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.3562284 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.359192394 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.34549153 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.408697947 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.415644517 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.356689363 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.408010156 seconds)
  done (took 37.751110538 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.434701317 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.396166324 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.381694982 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.180773566 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.7317768 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.555488467 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.254697763 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.788820399 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.348573631 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.621210186 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.350071501 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.438721731 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.604571456 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36036976 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.350326426 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.364831504 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.571821116 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.854516358 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.351991665 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.344022968 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374050538 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.349473961 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.446700316 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.376341089 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.56136477 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.482150853 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.609159005 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.347203349 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.632834508 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.361312013 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361116637 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.349038782 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.62330814 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039765109 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.442847638 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357502519 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.212522972 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.064564479 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.355157533 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.346340166 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.361673391 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.351060539 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359539689 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.349052996 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.282779854 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.347759848 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.800288243 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.356982417 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.059594393 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.348759205 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.359584082 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444654482 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.352394504 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.165946747 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.417353713 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.347704821 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.345934707 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35622591 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.925513789 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.895467247 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.352954113 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.287699723 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.825499882 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.350280973 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995265928 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.452804305 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.35370519 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.354278672 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.285983386 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.350329642 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.369360881 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.488122105 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.370284614 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.013497584 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.091672693 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.357066974 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.284071199 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92447491 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.353681611 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.301210287 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.580913567 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.349146075 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.289101301 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.309051514 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.285503211 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.068633711 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358717969 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.787458824 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.358492609 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.790940088 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.364926107 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369427585 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374275519 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.576110287 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.236362823 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.354558216 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.351587417 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490054576 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371038076 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.796297744 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.289428307 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.355374362 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.610099452 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.562413549 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.361527656 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.371320428 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.559595486 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369422033 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.370969776 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.368548264 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.363764557 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.942412062 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.366094531 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.901293088 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370110369 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.3538064 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.120904229 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364985906 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.454669018 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.353725044 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.602689006 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.154624468 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355780257 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.436647093 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.356037042 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.354820122 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.483617377 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.874464777 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.353892508 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.357514257 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.363900223 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.365025305 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.352682309 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.315069312 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.34846823 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369608008 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.356804783 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.579088106 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.369314316 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.629955064 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.288974274 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490728497 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.453755861 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.574986677 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.595288796 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.354512795 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.61516379 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361062767 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.365157254 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.366489046 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373933314 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453085587 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374031571 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.370814459 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.612168523 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.357285784 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.360153523 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.92771586 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.358758171 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.358501991 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.358939359 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.246518705 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.944196384 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330663763 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.363504786 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.250455192 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.371539683 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.419567432 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.360256543 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.364571393 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.22075025 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.312566197 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.362284223 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.356743396 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.581573013 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.368021704 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.38710159 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.437507561 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.559557928 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.962682073 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.371091791 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.289023734 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.06713886 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.049051235 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.3568442 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.290745707 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.357605248 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36611972 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.366077845 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.996117538 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.953167521 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359128852 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.374979448 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.362319411 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.367706862 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.363223449 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356435187 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.207051299 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.926745696 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.360837074 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.369768211 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.501029584 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.371083591 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.290968552 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.359689643 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.36092417 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.355746599 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.35787669 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389089224 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.380023886 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.849162929 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.617151526 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.194907881 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.371127028 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.484624487 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.388829782 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.363127343 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.373421153 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371193132 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.365182552 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365734104 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.367629198 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.387976662 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.026492047 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9279225 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.125535301 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900328883 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.321189816 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.361971827 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.358284022 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.81108263 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.29623113 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.917410117 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.551522696 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.80667586 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.316354603 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.563674579 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.604286306 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.14650799 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.368692439 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.588548559 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.313612665 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.3648948 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.371694896 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.571365947 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393191666 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.362050777 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.290187086 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.641627284 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.595050523 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.359169574 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.443229828 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.808279149 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.362287966 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.364070698 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.360018825 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.761570712 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.536723036 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.080378363 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.538701971 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.36315522 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.375485827 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.851936714 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.365985719 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.590099729 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004813193 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.362835543 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.566318402 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.302201392 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.371557111 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.369696432 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.360336032 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.726687387 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.361469985 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.618033003 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.371366969 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.294752072 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.360064166 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918148313 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.216237241 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.367202992 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36079736 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.1192265 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.361323682 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.665403248 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.363825168 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.205167738 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369870803 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.294118701 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.294846499 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.053339191 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.365103316 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330775038 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870154238 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.777562703 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.414270118 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.380451191 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.215528122 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.618208747 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.375432872 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.957609993 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.590865522 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.290013728 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385878575 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.461281158 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.374234694 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.350179781 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.363148042 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.600204634 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.249029625 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.587850105 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.431156702 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.271044826 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.361876206 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.576582828 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.363104722 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.362329459 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.617795464 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.074083039 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.377347614 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.141516481 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389438649 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.37789221 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.284727242 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.83137805 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.37211809 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.442765696 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.375505518 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.373794755 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.373419693 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.541517901 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367164893 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.381567966 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.376344689 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457120469 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.958626233 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.195173438 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.365756334 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.968177544 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.142105699 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.966170473 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.379535856 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.363861475 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363120244 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.299613355 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.509781659 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.593042774 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.638950791 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48527261 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.916125547 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387560049 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.363807846 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.378108881 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.577962402 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.639437787 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.263416331 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370323113 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.378417204 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.365432076 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.37681843 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.57794227 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881466476 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.953192464 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493561095 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.376531604 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.812972155 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.641763321 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.366047216 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.366013457 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.959166614 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.365236842 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.792887253 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.37242936 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366332043 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.515050022 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.376631359 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.059699201 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.378168703 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.524892203 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.140051868 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.41506248 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.62668552 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.854503118 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.377742665 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.977459899 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.089681194 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.634053681 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432893993 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.376719735 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.494155778 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.513603109 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.364003662 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.382713696 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.367155278 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.218426943 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.0768324 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.377879 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.97156092 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.635040703 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.363613039 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.378085169 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39116525 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.37781857 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.592229398 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.09508524 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.592920781 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.376831346 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.37224692 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.190723934 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.971335667 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.383604755 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.300709145 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.371335426 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.618296935 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.604602517 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.390864781 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.821443372 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.079141675 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95615204 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.345244429 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391138599 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.380326861 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.095134169 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.974826644 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.237015478 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884499478 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.932012414 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.367940412 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.644906424 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.373006201 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.380199415 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.646969644 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.372458919 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.369399612 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.381361277 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.970472597 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.162352315 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.370741238 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.450154009 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.304865681 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.713968327 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.066964815 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.307046584 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.371395895 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.560098814 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.371461828 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.49369444 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.380562496 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.36719984 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404634458 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.10326393 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.649304532 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.374622015 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.371606802 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.365718657 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.372984338 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37710547 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.609610208 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376178621 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.03926436 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.721576673 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.626832034 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.378614717 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.356970573 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.375373251 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372361031 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.36765182 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.578417417 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.012592688 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959403516 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.379420837 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.383481798 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.37489385 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.587691692 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.584488905 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.373249362 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.386246567 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375768343 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.387099307 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.276610783 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.880564634 seconds)
  done (took 1611.504932171 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.377433672 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.420206052 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.381579903 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.454662017 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.401139297 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.395646296 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.416320735 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.38774266 seconds)
  done (took 52.54186427 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.37258585 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.591206967 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.405976273 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.374782283 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.378937901 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.375135281 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.823941131 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.373469027 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.379700708 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.381253535 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.383617715 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.37694399 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.020886858 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.381893247 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.373182223 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.362585808 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.382285057 seconds)
  done (took 66.0518058 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.372357317 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.522135138 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.387679287 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.378142474 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.670603974 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.378599331 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.522176496 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.410238895 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.381762097 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.463056014 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.049226604 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.396890937 seconds)
  done (took 80.241895854 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.381932419 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.380707749 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.380038112 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.380030246 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.381968753 seconds)
  done (took 8.21426963 seconds)
done (took 2037.162049155 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.627145925 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.095322885 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.100595426 seconds)
  done (took 5.504669576 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.51893752 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.569420912 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.741537786 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.714108569 seconds)
  done (took 7.852787418 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.655775685 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.758245437 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.563412818 seconds)
  done (took 6.283574347 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.827125204 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.397664151 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.498358409 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.370712002 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.375020356 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.375213887 seconds)
  done (took 20.431702701 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.37715838 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.379886196 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.376573182 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.380853137 seconds)
  done (took 6.823393308 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.359675521 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.143755589 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.362370276 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.375206715 seconds)
  done (took 18.549476473 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.124624121 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.136879996 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.120627322 seconds)
  done (took 7.690436208 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.374491856 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.218428045 seconds)
  done (took 9.901918501 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.674185754 seconds)
  done (took 2.9821946 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.510450105 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.649478948 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.42614901 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.377094009 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.446035718 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.320832036 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.089720705 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.647638537 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.364913878 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.652403978 seconds)
  done (took 28.795232989 seconds)
done (took 128.47618549 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.266566049 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.387370189 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.5798798 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.240364659 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.780134719 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.581286787 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.653576552 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.205323267 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.750180968 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.739901815 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.245173285 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.742332452 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.606419586 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.391452052 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.608224093 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.380449102 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.604527344 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.307379053 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.930343627 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.13347327 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.654733275 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.878424609 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.077209011 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.897529078 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.603469081 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.529877855 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.47823461 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.381941151 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.106136256 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.493859941 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.532012832 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.308315777 seconds)
  done (took 192.387046174 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.375598821 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.374463561 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.387584515 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.375326461 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.377815572 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.374295448 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.375471695 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.375069623 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.384748003 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.374404754 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.375690992 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.374599814 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.376554163 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.402250415 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.377025453 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.403869632 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.375368467 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.37648785 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.388333794 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.375306635 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.376706147 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.386837851 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.380531234 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.376209764 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.376016181 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.376807852 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.37615563 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.375641278 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.375810086 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.390206369 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.376255417 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.382952746 seconds)
  done (took 205.463917856 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.377477669 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.374127801 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.391352142 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.376958124 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.37656287 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.375959517 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.379883177 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.37706506 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.390914248 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.387716109 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.375435838 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.392672641 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.382038407 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.381016862 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.376295997 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.390625107 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.378024546 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.377014147 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.376515548 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.377615336 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.383518242 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.377807007 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.377308559 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.380914244 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.377139035 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.38012175 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.387321315 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.377759022 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.37883083 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.378742551 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.391682857 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.378397375 seconds)
  done (took 205.500835546 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.583410954 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.387275036 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.388060384 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.343532566 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.386945138 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.386156283 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.380638991 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.585675483 seconds)
  done (took 14.75859398 seconds)
done (took 619.421779545 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.790984759 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.44778069 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.595514026 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.411309197 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.171290322 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.410805469 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.41181959 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.589355342 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.320100605 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.589866809 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.714855433 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.409623124 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.847850613 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.409063284 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.672408873 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.511337842 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.330093509 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.453025664 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.734834036 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.977823575 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.673186865 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.874485674 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.586819483 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.333377435 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.8120545 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.874285309 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.10195556 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.32594061 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.409501444 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.739044757 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.156969706 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.473137245 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.474231227 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.453282964 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.506904076 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.491411553 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.340948413 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.450488374 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.598088176 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.631403046 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.977225318 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.136639882 seconds)
  done (took 94.537897287 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.382066946 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.378962006 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.378331414 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.38039877 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.381180565 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.37999893 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.380207612 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.378761066 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.379683356 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.379565603 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.378971716 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.381675536 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.378878616 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.382343477 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.379228068 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.378755862 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.381319836 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.385366294 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.38019369 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.37871029 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.380811716 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.379669847 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.381484217 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.381522186 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.381276581 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.381001612 seconds)
  done (took 37.210292818 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.394449927 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.635154798 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.823089495 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.402108245 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.393200985 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.397129006 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.47327546 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.395920728 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.396962666 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.396613663 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.554945215 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.396755241 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.432409949 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.831654928 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.398852868 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.394604665 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.39412581 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.394100553 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.642308048 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.406657394 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.475874357 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.396135832 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.47599755 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.405311043 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.398113071 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.396845856 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.399665222 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.894740912 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.397420855 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.557543508 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.192675826 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.472867145 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.852387421 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.848233177 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.19857155 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.398231498 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.397034101 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.560092212 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.395701612 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.398141387 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.475293396 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.396059457 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.834279574 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.036755129 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.414282471 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.396881359 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.918498801 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.560433299 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.655059797 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.406862373 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.856678793 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.401683924 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.398744983 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.39987951 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.654830848 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.406737061 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.396807282 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.942814377 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.404373221 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.477299682 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.400376447 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.399340247 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.652911028 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.400232297 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.641098415 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.40083023 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.405482491 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.397849995 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.835205803 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.402301495 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.050181296 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.416069368 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.400136924 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.557303904 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.641195918 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.954498489 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.403016007 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.656821401 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.864202826 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.475547202 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.405505981 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.888430633 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.480922422 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.402210613 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.4020122 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.403232084 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.401841661 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.44733526 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.476126841 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.986656743 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.048476112 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.959282328 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.479024387 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.410613232 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.399806703 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.937023325 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.399238235 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.400599074 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.829091232 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.048335119 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.406865936 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.403339294 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.028627629 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.410637963 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.477079662 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.39967933 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.8395101 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.403758224 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.443897245 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.400158494 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.408697283 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.403352118 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.478964406 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.405469965 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.399851813 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.031011488 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.578723111 seconds)
  done (took 183.307585487 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.400033428 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.390842103 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.397733258 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.393778675 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.392009327 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.39848081 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.393420023 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.392604474 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.398316341 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.392567947 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.393877501 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.396075651 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.396141996 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.397912626 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.403266754 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.400308073 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.004213941 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.39267193 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.400029686 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.390757698 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.192299736 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.398036942 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.398247987 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.392668272 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.393951461 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.394564282 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.401395273 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.396580333 seconds)
  done (took 153.822462855 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.403926315 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.977516439 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.402266558 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.53701789 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.422688331 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.399864376 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.534904081 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.458746376 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.405980325 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.398900766 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.400840879 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.717146887 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.401667479 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.929690179 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.592886476 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.535974885 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.929116182 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.40136366 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.399945975 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.400732576 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.53954232 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.414400605 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.713383606 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.978617361 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.401482102 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.99087334 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.389699463 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.401780734 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.401768532 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.009106171 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.402802056 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.729055189 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.48182536 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.463375188 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.986741257 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.952240206 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.953320015 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.550890979 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.402321284 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.400793635 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.401619751 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.390191113 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.985950281 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.403296161 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.40298269 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.978620757 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.415855205 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.404150681 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.413129988 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.403120401 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.464405893 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.467864395 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.720024629 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.990926285 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.480778987 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.424132988 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.537945076 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.789984398 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.405118802 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.936948573 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.391062085 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.991590062 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.404768854 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.393156334 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.40682542 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.409278149 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.560611376 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.539072079 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.956925585 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.407362568 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.956442053 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.560125224 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.402590433 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.403894971 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.405248913 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.988159829 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.955513956 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.560984325 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.544786827 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.603002174 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.395693338 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.404273314 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.393337057 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.484091835 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.405385449 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.987948955 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.939196098 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.405994213 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.407455367 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.407252766 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.407071208 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.584045217 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.988485018 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.485197778 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.934623625 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.730998497 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.717113659 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.406109721 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.467241963 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.402808562 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.720536317 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.406191515 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.464793842 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.854681973 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.721006885 seconds)
  done (took 167.330289715 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.654427456 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.618343371 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.496700439 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.521444423 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.948374612 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.988943007 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.669104724 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.532284406 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.519753476 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.655316976 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.586198213 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.497087587 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.599963297 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.507145156 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.117645025 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.478336739 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.499535526 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.534493519 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.517818621 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.425480368 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.039101153 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.700412134 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.584757728 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.62108296 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.501152965 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.180834411 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.965481641 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.91984017 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.580121476 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.673773031 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.911314952 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.546314707 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.364122393 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.079029668 seconds)
  done (took 67.372740313 seconds)
done (took 704.89723812 seconds)
SAVING RESULT...
DONE!
