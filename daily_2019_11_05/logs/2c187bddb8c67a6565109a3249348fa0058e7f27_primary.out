cset: moving following pidspec: 17657
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.340786281 seconds)
loading group "string"... done (took 0.543086692 seconds)
loading group "linalg"... done (took 7.032612585 seconds)
loading group "parallel"... done (took 0.162712834 seconds)
loading group "find"... done (took 1.093384686 seconds)
loading group "tuple"... done (took 1.845271762 seconds)
loading group "dates"... done (took 1.206791041 seconds)
loading group "micro"... done (took 0.213503976 seconds)
loading group "io"... done (took 0.905876816 seconds)
loading group "scalar"... done (took 36.572862168 seconds)
loading group "sparse"... done (took 11.141194416 seconds)
loading group "broadcast"... done (took 0.898655919 seconds)
loading group "union"... done (took 11.760324332 seconds)
loading group "simd"... done (took 4.108262414 seconds)
loading group "random"... done (took 8.469155897 seconds)
loading group "problem"... done (took 1.849730046 seconds)
loading group "array"... done (took 19.721927243 seconds)
loading group "misc"... done (took 1.623878298 seconds)
loading group "sort"... done (took 3.067944598 seconds)
loading group "collection"... done (took 16.357686355 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.485167881 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.12285389 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.114663819 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118620511 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.145232451 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.11488986 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122733877 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083727015 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.772530804 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.147546003 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118213274 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.415003123 seconds)
done (took 5.059763189 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.173006229 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083012158 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080903088 seconds)
  done (took 1.295788805 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064715634 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.12078651 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066282802 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.06671489 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066475118 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066123736 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065537006 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065898218 seconds)
  done (took 1.651133277 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072847722 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068601009 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068963335 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.06799272 seconds)
  done (took 1.412066894 seconds)
done (took 5.74037321 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.763908775 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.201236679 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.183647014 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.397739692 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.12893045 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.154397394 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.632984123 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.296987544 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.182943937 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080911486 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104184493 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.316902879 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107064144 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.627309591 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074997492 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090486012 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.138331379 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.404157351 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067080554 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081947113 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088758338 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128054812 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.085296102 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074466332 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.146287489 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067433457 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.134315301 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080382205 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066537316 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.207761017 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.17258761 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.651915378 seconds)
  done (took 10.110961982 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096001496 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097131869 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.06839894 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136751719 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.096254813 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069565926 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070929779 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067091898 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086712088 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128041657 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088718801 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100822082 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065352747 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068637396 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084482585 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203698101 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080441294 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081232851 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070129014 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075309716 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.118745422 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077844093 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.0780136 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077622265 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128345285 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.178942206 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096416967 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097194115 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066665016 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.08032406 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114709195 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125657708 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065376501 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066133693 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124121104 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094367951 seconds)
  done (took 4.592568293 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.292581325 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.140131239 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090099028 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.132260409 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064436209 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.107151367 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065302943 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080486259 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.199877476 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.353006048 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.572671714 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110953652 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104021798 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067374066 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068429144 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066927563 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.344921062 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.107235206 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104782323 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081199601 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070561618 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068393069 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.340094392 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067475181 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.06373922 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067836759 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057820447 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.123740491 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06776608 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.925583293 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.125745763 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06710604 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100438661 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.169213753 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087313918 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.272990172 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068560727 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064307717 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.150906474 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070344575 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066283654 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.08367013 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104324073 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113400443 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.06513427 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066966392 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.1625238 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065054893 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079285744 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.005879071 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.15233888 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.094760563 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064144101 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.244553188 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085474601 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069399746 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064954446 seconds)
    (57/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.09136137 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.181188041 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.134441145 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067658848 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066150298 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067573721 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069342536 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.364034983 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068317537 seconds)
    (66/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065203951 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.0675333 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076960641 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.781309906 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070966584 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069019818 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073038676 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074957326 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.084953571 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066102562 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075266647 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065490887 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.06547216 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066825366 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084569425 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.352424077 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066081314 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067939396 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.06437646 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085355731 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096353223 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066200496 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064946499 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099905155 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068039899 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.169520082 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.106402722 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066821226 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084635621 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068659074 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112692977 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066229648 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.067226853 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.06793714 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064733093 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.068398878 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096951798 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069776683 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099529597 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.081639985 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067518273 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.396082317 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065588872 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065432279 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068145266 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064864563 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067617606 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066272801 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078963721 seconds)
  done (took 20.945848991 seconds)
done (took 38.074866907 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.234639772 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.076478453 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075783993 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075429842 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.07544299 seconds)
  done (took 1.7650241 seconds)
done (took 2.974130088 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119905875 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098608055 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063763534 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095133515 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064056338 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099916176 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.099047346 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080166724 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099256051 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064121793 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095802175 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.06430732 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063830455 seconds)
  done (took 2.332774195 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081903755 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083005482 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068912788 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082211149 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064228728 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081638916 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080560851 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088047002 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080181595 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071678186 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06360449 seconds)
  done (took 2.047640387 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081541199 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083892249 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068899507 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08117621 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065805723 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081255666 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080385305 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085258167 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080864089 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073004276 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063660193 seconds)
  done (took 2.043116171 seconds)
done (took 7.617805824 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077445201 seconds)
  done (took 1.265936128 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.589844176 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.11202497 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081348073 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.112060838 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.183218902 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.119765433 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.280471049 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086844877 seconds)
  done (took 8.931006669 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.089337996 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.082058249 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071019229 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069543732 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069265799 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067974187 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071815413 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.07168233 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070924964 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069355268 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069080147 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072141402 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.06855258 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070630191 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071862139 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068081333 seconds)
  done (took 2.412448315 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091261662 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090558561 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074286216 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074797511 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072208261 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.07184696 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074771 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073017318 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070861038 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071805667 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.075044567 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073492812 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071415973 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065069611 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074342987 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075786491 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070718927 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074414081 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074962836 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074507075 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074773543 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064810085 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071295359 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073873024 seconds)
  done (took 3.073983993 seconds)
done (took 16.880191984 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.114582067 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071788992 seconds)
  done (took 1.381643026 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082743751 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083454591 seconds)
  done (took 1.371886509 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083936342 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065314971 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092775204 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.079452698 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066419721 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.066598953 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.090269702 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066382815 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066151246 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066199212 seconds)
  done (took 1.949336245 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068660698 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.080101256 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071159441 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.08181715 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074426054 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.06429711 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073271107 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.068288943 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078531361 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062947311 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071631964 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082678872 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071837659 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.08474942 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072567001 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069197706 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071585093 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.06772995 seconds)
  done (took 2.520888931 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066085608 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067458843 seconds)
  done (took 1.343339044 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067424702 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064579222 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067996147 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067060306 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063697962 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062632886 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.064082611 seconds)
  done (took 1.662862475 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.382489301 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109879576 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.296925008 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.07056893 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081295487 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.248299612 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065249258 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070151908 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070867478 seconds)
  done (took 2.645085299 seconds)
done (took 14.083896578 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078502032 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085328846 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.094542068 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.360932361 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091753349 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065939776 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.11374099 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.189525093 seconds)
done (took 2.301214206 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.214582045 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.613150322 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.3868013 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.196904203 seconds)
  done (took 2.413189702 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.327991113 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.085645605 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058557106 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066586646 seconds)
  done (took 1.763158444 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065395164 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068607399 seconds)
  done (took 1.356066163 seconds)
done (took 6.967730737 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066085121 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.084414429 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.064098379 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065550307 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.063279558 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065738242 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.063564361 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063556672 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063697384 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065934554 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068430951 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.065655877 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.066100837 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065976536 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066976482 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063715913 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063763917 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066156107 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063381205 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063375331 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063575908 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065684322 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063433864 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063554668 seconds)
  done (took 2.830796916 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.08273502 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067215751 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072136841 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071881026 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.06998311 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.07431201 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.07131775 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.06612619 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071227715 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068198438 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069932198 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070322508 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.06827045 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070024029 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068143236 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070373483 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071553798 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066518128 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067930213 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070181646 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071233565 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066364089 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069695622 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071448398 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069691501 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07084044 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068224252 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066447594 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071323999 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069814151 seconds)
  done (took 3.333943045 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069293132 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063859365 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064022905 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070813752 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064216615 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064700536 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063477521 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064083745 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064258215 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063303967 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064660969 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063711854 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.06339675 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064961551 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064804145 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067009868 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.07852166 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064026935 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063423339 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064262375 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066907944 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063413429 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063476254 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063279773 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063534972 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.06297981 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064206889 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.064272328 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.0640486 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.175544553 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066636965 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066558975 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063656563 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069849887 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067330481 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063052861 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067385541 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063351271 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.06467466 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062739586 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062718542 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062891714 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063086433 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070000863 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063400488 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064887509 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063823685 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064578371 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063775994 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066537333 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062865867 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063181503 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065063139 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064441275 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067341123 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.06278291 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063971983 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062734451 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064426269 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062906587 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.06255169 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062628316 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065879655 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063544672 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077586455 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.06960565 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063391315 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065264887 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064287979 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065471343 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.0647738 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076223277 seconds)
  done (took 6.035354478 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090754055 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087422439 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065001575 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06499612 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061871455 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063832566 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068023742 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064602892 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065541956 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069851745 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06390136 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065468393 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065919038 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076601665 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064437902 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065212187 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069988751 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062245555 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064232569 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067977754 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064202514 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067443874 seconds)
  done (took 2.742407264 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.154480765 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069632657 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.10510755 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073400487 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067964332 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073232852 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069782899 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070505184 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070245979 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068252324 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068139787 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069965492 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067869081 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068261144 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068009106 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068092496 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069843486 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068182599 seconds)
  done (took 2.606579405 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077560504 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066393536 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085765705 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066165863 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.066012044 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06830038 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071147075 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074361902 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068404147 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066057236 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074491742 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068247543 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067992682 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065695775 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068189096 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065819833 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068372416 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065943604 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074075664 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070833242 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070626262 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073919771 seconds)
  done (took 2.78061733 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079410261 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06783164 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082354888 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06870851 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062402017 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064254833 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069909037 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06568085 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070321655 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067917018 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06587796 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064857995 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069329724 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065821361 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069100509 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066610037 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067625078 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065904019 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067474087 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062189297 seconds)
  done (took 2.601607527 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087152909 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067838691 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068473737 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076576348 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067540305 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067424522 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075141716 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067427313 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067037865 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086825379 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067265347 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067132784 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074877168 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071855843 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067112878 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075028032 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074912681 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075157758 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066809398 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067014062 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087026742 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067048808 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075383076 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067458455 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066976118 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067069925 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067069974 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072432925 seconds)
  done (took 3.249276926 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067031369 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066169487 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063745341 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063385863 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063679286 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063366714 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063602444 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063360719 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065813284 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063142235 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065442143 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.0657163 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065825098 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065441803 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065402752 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065984393 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065717481 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.06327381 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063281696 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063152409 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065346448 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065602689 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065527549 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063565657 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06332694 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065545515 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063220669 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062910887 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065694046 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063101716 seconds)
  done (took 3.179203787 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075040123 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072704267 seconds)
  done (took 1.392101975 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064018696 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080449923 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063272145 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069653408 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069887786 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066779216 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073417177 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069914722 seconds)
  done (took 1.799140887 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081514247 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077003956 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.068245022 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080978783 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076632405 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082419724 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131649035 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.067363507 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072667893 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064282762 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079850824 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065743135 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072024578 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066274161 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071387831 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072325742 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064004281 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072161233 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068420353 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064664405 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067367413 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07458398 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068426457 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061469074 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.06726474 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087424463 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076473503 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065451622 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068548655 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.072834368 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071383395 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060161579 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065959779 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066666658 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063784696 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075650942 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080969126 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069167537 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074644924 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067046327 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.077088093 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061346047 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070269046 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.0720837 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075473278 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066332255 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066973861 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061123503 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063937578 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068447403 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061700664 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066082794 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060902489 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07515416 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069436231 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076380054 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.06502529 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067578999 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069167522 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.0691493 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072635954 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067725561 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068086487 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065519972 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075275986 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070640468 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074957197 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060939652 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060013543 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064185609 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075445724 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08842705 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071892735 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066666335 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066853643 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.064087083 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068680347 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067003754 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071347301 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.071944451 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066125105 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071437586 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073107097 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066178875 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068462484 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.07453186 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.0642135 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068809828 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063659002 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082180597 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064753982 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063822804 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063556742 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076030821 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069660916 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065927512 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063866961 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073058674 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059807324 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065936832 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065807884 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065429396 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.074807857 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069120475 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06999617 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073136882 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072316503 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065654198 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067906848 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061788806 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065892397 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064010106 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071819254 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059042774 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067558459 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065498449 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065403547 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.199761903 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064983288 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066444799 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074157129 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072785136 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065357986 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062861854 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069097701 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066806433 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069900339 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074165788 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065035185 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061197418 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062078853 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070703784 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066717236 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070207372 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071495283 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069810506 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061012586 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.06468412 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072167732 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.07500108 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067500841 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068155961 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072774295 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067463223 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066392374 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.07293151 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069112122 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065795976 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071627407 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067387548 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061736766 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070772161 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.0695704 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064845491 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069766824 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069510178 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068502607 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067658924 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064898328 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074085269 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067642308 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065934069 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066963868 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064912365 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077257116 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068266754 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061707076 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063835226 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.076182095 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065273572 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066499146 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065216646 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068328497 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067088525 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064234057 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065178857 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068210275 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077857597 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070811088 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067781755 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072197107 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077608217 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065977981 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069755475 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066194361 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06691671 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067387985 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074772775 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071294905 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070321171 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.06824885 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062974339 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071471816 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073317115 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065092074 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064424134 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065029208 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070432577 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072102746 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070680956 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067087345 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064485226 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066631169 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069354317 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068678095 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065771743 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064955837 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072690431 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064148576 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073126296 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066814131 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075724378 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069055953 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061335332 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06916881 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063943886 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071880954 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061287531 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063936758 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065177585 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066598497 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.063949052 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067148787 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059366002 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07125645 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071818769 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.064867279 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.06417285 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064673977 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071096778 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066465897 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068434983 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068339062 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070587712 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07481538 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064351694 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068028558 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.202759226 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.06672288 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060472206 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072592014 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.064979988 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065284323 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065467692 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064802825 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069638199 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076461958 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073783157 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061187226 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069338303 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.06495177 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065609292 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061964234 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071335208 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070249986 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067926881 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073793005 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067498977 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067727803 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070270521 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.06615588 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067514456 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067181851 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069637881 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067357471 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.06804608 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066480029 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.06965095 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065318631 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064635589 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068275247 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066715594 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066537298 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071718182 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066072667 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067370633 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068593685 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.06752272 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067204982 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066899837 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066128643 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069531014 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067384189 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067179701 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068890603 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061501153 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073111079 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066920391 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073503386 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066871007 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062959446 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073789122 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.06934897 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071560996 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067165623 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067114873 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068277112 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066854949 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069918442 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07308134 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064236341 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077049657 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074187778 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067355349 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069163616 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.06703358 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067846758 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.06509166 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067209064 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066913311 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066388407 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066384397 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070728292 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068449336 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066271446 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067602328 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067328217 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.06610508 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067061435 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061004625 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065207799 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065627475 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065807385 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075579806 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066695032 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066168545 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064832841 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067514679 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064831455 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063501171 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074534607 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075616316 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067295018 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073767467 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065513442 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067551194 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076624779 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060297102 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064302104 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063795539 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063918277 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073518981 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.067036347 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074979539 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065510878 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064906326 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063197671 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065617917 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063452669 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059631293 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062826287 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068225234 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064489676 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064215149 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.06497246 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067160366 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065550788 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073865857 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064267226 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065644747 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065096498 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.193944025 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066161257 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066143298 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069681152 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067415874 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064725948 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063579094 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066518217 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067515184 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.0685745 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066799767 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068016414 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076538008 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066887992 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069359768 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070543716 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061236839 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.06951115 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066850958 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.067060884 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065456251 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070701891 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069571281 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068099976 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074921572 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066770347 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067739175 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06700923 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.06492644 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066705358 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066326661 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066677201 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065971504 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068721022 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074332081 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064710969 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069985228 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066452389 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.06764788 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073304079 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067771841 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069160789 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07373644 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066340152 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068319145 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074049998 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071260655 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069933075 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06823191 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068175464 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07330039 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066139393 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072832105 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067010372 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067933437 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068015167 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065215473 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066549767 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.06576961 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065314166 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072805158 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067804703 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065688371 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065290258 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064946836 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067594151 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070812418 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075018963 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069656914 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069472435 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061608531 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063377879 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067952609 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064596083 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068075902 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068562431 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071574499 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068162444 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066322802 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064986092 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075179727 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071364452 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069551262 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064012997 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069571594 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066849578 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068251926 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067211243 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066487851 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067574045 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070022257 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.06772318 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065235808 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072913006 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069782958 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067439523 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067769909 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067074874 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066602884 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061615188 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067220337 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068887656 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071599259 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068664709 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067028881 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076895264 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064004478 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066522596 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069451483 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065590172 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070039897 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061297845 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067392097 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065946296 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065837975 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060395878 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064389074 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063136564 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.066935738 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064356075 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060472229 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075586835 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.07333655 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067902077 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06378597 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.196523786 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062918718 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062155922 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.06598701 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068095929 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068985461 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076426039 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065559767 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065670001 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062070237 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06661892 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070327397 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070276937 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064684204 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062077071 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065949924 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.06975804 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072102454 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065568594 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066586026 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07052384 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069163755 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065324366 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070853108 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064122717 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070976671 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079326868 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067437657 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067477971 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073224649 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07464525 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067633139 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062340275 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067722325 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069466625 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.06692255 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067447397 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068005546 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081371008 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069930807 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065832008 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065803281 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069131743 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065909884 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075096353 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067856388 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067053558 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071076351 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069080714 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075740079 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069405397 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07454087 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069963748 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069849964 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065410387 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067907694 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065102544 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065733433 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067503184 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067570461 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071919522 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075677833 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065900555 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076625808 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075279327 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068121562 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063197898 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066162677 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066415138 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061907517 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.06753046 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064812634 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064414525 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064227937 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064711413 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066827171 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071717247 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066876751 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.06677016 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065659319 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060333254 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068363924 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068403738 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066702625 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063279087 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065861623 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.06679369 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069894517 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069790124 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063781084 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067441239 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067772924 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066997111 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061602686 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072242384 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065215894 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067930488 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065276136 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066463767 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067034664 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069717357 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071209831 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067160479 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068759364 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069654081 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068890681 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.06331753 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063651226 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070824446 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063807593 seconds)
  done (took 42.465868986 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099690712 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063646512 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061826759 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06176967 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07362986 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062627397 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061541618 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062646415 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062991646 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065773524 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062092595 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061698182 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071440165 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077762538 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073966292 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066781328 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062008283 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062754005 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061992938 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063044885 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070973223 seconds)
  done (took 2.752176638 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073588713 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070420441 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072976749 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076252276 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067170581 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070560477 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.0725728 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071186986 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076075688 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067001031 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076010226 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070806001 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067296342 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067063927 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067011223 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.0711582 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076150027 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067373975 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070768666 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072577958 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070883491 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072513918 seconds)
  done (took 2.884752228 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066225665 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066193614 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067549044 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061429256 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066633829 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061312331 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.077803194 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063869913 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069606622 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065306205 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064730077 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065055402 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067358417 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061048385 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065290021 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063785784 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.108226392 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069449295 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065528787 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.06635346 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061450379 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067203758 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061601497 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061680832 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064975234 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069195605 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066515991 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063859366 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065489537 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064694778 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065757924 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063392847 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067010222 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066706928 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064576376 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064895913 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.06521254 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065784518 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061042345 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063550921 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066078677 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061644193 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065662765 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.06711077 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063698671 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063954197 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067993397 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065196951 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060917794 seconds)
  done (took 4.560143426 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081010185 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108910264 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068117357 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087856213 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.080336376 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075779328 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069425544 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088817675 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062980522 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064216053 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081376985 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079452133 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065435529 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070752789 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071852335 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065755254 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066573229 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064337913 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069641504 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065237298 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069855564 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.07210334 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.07987015 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.07842463 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.06958904 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064748493 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064996405 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069988016 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078187721 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070071449 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069810657 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071173538 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.08048569 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070701291 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064823964 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067409177 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081826009 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065701423 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068151332 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063617447 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067631639 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070056185 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.07210401 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081884108 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066099509 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071161153 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065233251 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062701161 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078034423 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067729633 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.07306964 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079937187 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068913055 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065660617 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069967566 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080551137 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065285265 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064056822 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068371185 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.07790606 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062880778 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069093214 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.0791636 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067111315 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072503756 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079745613 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070578088 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069209601 seconds)
  done (took 6.350488938 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074334473 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.071913763 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081310885 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080528136 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071978572 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072337081 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072166992 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072495105 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072186497 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077070222 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07225447 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.093010489 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.06767238 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074746975 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072177748 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072316237 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072515135 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072244449 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072557808 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07246282 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072712213 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080225454 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072356001 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080274728 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.098021155 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067229242 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072181237 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072431817 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080334169 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072550926 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079691278 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072115224 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.07269962 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080110505 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079246288 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.072336223 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065009445 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072268948 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072493685 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072082235 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067018379 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080294353 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071846607 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067256658 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072200322 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071758055 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080252642 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.0790029 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.0751475 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07705166 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071965455 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080260215 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07170008 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071990457 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.080274608 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.104591788 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080072987 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080203463 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07222275 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079749611 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079959888 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.08638249 seconds)
  done (took 6.036738373 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083144049 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074767045 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076575991 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061244141 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064034866 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069876839 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06395168 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063967247 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074453432 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074352235 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077149838 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069846171 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072705691 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076946087 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069599524 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073104374 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06941801 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069501848 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07417271 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069667716 seconds)
  done (took 2.770742164 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074142244 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082964447 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066942585 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072280869 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.06846091 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072073787 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068078966 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0684266 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06705715 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068535948 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076069173 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075696124 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066548449 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071929184 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075448577 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071527867 seconds)
  done (took 2.47997733 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.075619106 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072609945 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.078992875 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066419232 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064457622 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062658272 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065607157 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061453536 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062182075 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077997841 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.06578627 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068453028 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065740477 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064212644 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062777114 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068697344 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062148544 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063088235 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065610099 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077673413 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076863204 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064391686 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066286681 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065603001 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065658666 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071081197 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065121674 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063403663 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062802328 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066041571 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.06614906 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.06938792 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062910417 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06380667 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.06464345 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063199728 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065816349 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066105541 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068236127 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.06551458 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063713872 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065266637 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065733477 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066548994 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062052702 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066012871 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061916656 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067583726 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063761795 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065701247 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065306854 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068124644 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066445999 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072149033 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.06887849 seconds)
  done (took 4.999143635 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079219429 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069116442 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062302428 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06384288 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.06878394 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067250522 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069129824 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067720441 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067585486 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063965652 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067646806 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068507439 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067349502 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069350039 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067315188 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06917936 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061959118 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067155922 seconds)
  done (took 2.56463642 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071224882 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065289756 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072466865 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065771662 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065821885 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067825344 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061823184 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064127872 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06429504 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065708493 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065775289 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068088037 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064359709 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068023284 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065761437 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0654853 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067830543 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064416363 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065796112 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06161532 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067880365 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064149627 seconds)
  done (took 2.793343174 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.091616957 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.081054824 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.136496642 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078332484 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.082900664 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071187395 seconds)
  done (took 1.882162882 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089898522 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079605475 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066949646 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087851678 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073322384 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06735217 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067365639 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067618104 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076050739 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076265949 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067652148 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075865137 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075802999 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075511128 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07302172 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073223604 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067271462 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067407317 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066026159 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084027967 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067337975 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076054765 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067421053 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067052346 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067308357 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07530111 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075750159 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075985795 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06708786 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075891926 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073062441 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067244653 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076007984 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07611968 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068740234 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075885126 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067659977 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084417993 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073363229 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075494233 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068443938 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073690742 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075930842 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072297709 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075926523 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068082829 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072457343 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06752796 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068067296 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086284148 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073374896 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075768056 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073615938 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076938016 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076019844 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086992378 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075940895 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075598596 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073317598 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078707801 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075513924 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073346238 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075306145 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076424537 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073088362 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075302306 seconds)
  done (took 6.221107931 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08273544 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085323842 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068361237 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075918163 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075228797 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067695234 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06782252 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06781154 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067401804 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067204791 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107868011 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067928425 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075658643 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076115492 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067813439 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067665298 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067921042 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075584559 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067237306 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08655729 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067716508 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075709443 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075925172 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075863028 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075985862 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073433824 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06786991 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067773395 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067616411 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067558146 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072682488 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068315315 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075793355 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06688309 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075593841 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06754722 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067386664 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072259362 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067688402 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073289753 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075664321 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084265406 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067663694 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067353534 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076251213 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067542069 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06760265 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06706406 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067667789 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067012772 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076656061 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075855825 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076210078 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075521005 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067565005 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067856553 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067818592 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067682636 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067384041 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072731989 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075396101 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067180227 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086218893 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067372188 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067461201 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075653677 seconds)
  done (took 6.132726563 seconds)
done (took 128.663799126 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.18193034 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.165062486 seconds)
  done (took 1.687111329 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068823777 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.096971879 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076470296 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128339018 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066194643 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099684514 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098927532 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077584205 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065708494 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065949774 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065931593 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068431679 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131647039 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066018359 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066225631 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068551114 seconds)
  done (took 2.664393209 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.096287109 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.155619936 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099281856 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064733956 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096100486 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072899471 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064362163 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.07473615 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070706542 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064926804 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072657186 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070227845 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064843378 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070238876 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070717672 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072885933 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064717586 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072749555 seconds)
  done (took 2.775672236 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.10077587 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.090829795 seconds)
  done (took 1.548364646 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.154433207 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.104971403 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.149627904 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.345469282 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.167075181 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.227919466 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.12674017 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.127476303 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117736025 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123066233 seconds)
  done (took 2.998055345 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.09773067 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.15075708 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.253440051 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115251052 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072357693 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.09527416 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115538408 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077792779 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081023082 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080394217 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080314086 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076053077 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098229125 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073695803 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073066097 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075930724 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102426739 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072099524 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073787869 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076821281 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.098583979 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065503928 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.07344154 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072266278 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.07717373 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077505166 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065493955 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065818559 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.07652043 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073853784 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077241716 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093961115 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077232063 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.107366678 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070227443 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.108376117 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076442718 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073681062 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073692462 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073698129 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078826674 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078878933 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071961618 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076013761 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064886935 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076375776 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065019604 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065451342 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077791422 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066613808 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077712348 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076954487 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.107612308 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066592521 seconds)
  done (took 5.955846305 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101114735 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.10445896 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071339589 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.111162276 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099577881 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072001968 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.100812938 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093004114 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102800223 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069859444 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067667264 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069978277 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082326924 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.0826851 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.11266151 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.104025615 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073418249 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071050022 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.104040676 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102350792 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06808082 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094431013 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.089250653 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101399777 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067470864 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069988037 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068289934 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070457607 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077211942 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.079625908 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069507452 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080856127 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.08497376 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078594688 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067065712 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067645302 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068136403 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079737593 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07944557 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078775406 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.07779987 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067354894 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067485187 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069042852 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069936197 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067137456 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078790711 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080657016 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.07879589 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069154595 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069867049 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067705731 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069397155 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.082269805 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077837968 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081044086 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081025542 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068162661 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068143252 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072539406 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081043659 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079878908 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079488526 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069181234 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079082365 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068181102 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080682211 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083928791 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068166946 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.06977416 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068271031 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069593374 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069455541 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078367775 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078296326 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069454905 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069121553 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068042563 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081009775 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078855822 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068086781 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077029093 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067015067 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068057841 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069117496 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069424804 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.07809684 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080289828 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069566223 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067878332 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068922746 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067509074 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066089358 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076026506 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.0787891 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077980918 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077327187 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.0684418 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077826005 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077919137 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068907662 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.07827523 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067085808 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.197507655 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069866681 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079937108 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.079230038 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081312239 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070327741 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068572118 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078645817 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081380917 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068225812 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.080302269 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080604758 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080298481 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068206188 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081903369 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069558291 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080262989 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069992949 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079795118 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06870485 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081000365 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068664547 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068103115 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068680467 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080289553 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070341582 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068549103 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070377588 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070249184 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079283524 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083698234 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070577076 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082248108 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078886899 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069545955 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.07880155 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069015528 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079852797 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070032326 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069869904 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06705841 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082399887 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068760812 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068234914 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.0692553 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081109806 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068505142 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081131743 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07926187 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067909814 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082420278 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080793761 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077375195 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080777713 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071024602 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.075141015 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068660388 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069248345 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078202869 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080127155 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070138796 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068499998 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.079533396 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079786436 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067105013 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078428183 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078426637 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078826725 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068537049 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069323326 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080391911 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081144626 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078649412 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077995002 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078639829 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068233712 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077875056 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078452412 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06772461 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084168208 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067897093 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082638457 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079373948 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077146592 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078830313 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080813417 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080806187 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080421772 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.083593188 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068475241 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068259 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.08030894 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067852451 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068866805 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077446983 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068589591 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068377946 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081922847 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067347041 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078258009 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066751287 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077390696 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066061911 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069049056 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082110118 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.198730134 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069377731 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.08034856 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070129393 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078597401 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081764078 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079165764 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068423588 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069625413 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081157999 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.080201281 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06826104 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068647722 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070564201 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079578532 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078925325 seconds)
  done (took 18.65509045 seconds)
done (took 37.64812113 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.208250087 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.150404711 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.198074012 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118408289 seconds)
  done (took 2.134274834 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.122595894 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100189442 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.095457357 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064523961 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102265312 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064585011 seconds)
  done (took 1.948268504 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.312506723 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.213285061 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.182411833 seconds)
  done (took 2.104297194 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.200443038 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.187562896 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.390737359 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.253379305 seconds)
  done (took 2.537741496 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.143702078 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089675284 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066715258 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082802615 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.1354267 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.162000198 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101980275 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.126104486 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.07756341 seconds)
  done (took 2.435742141 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.147204483 seconds)
done (took 12.70291515 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.24297582 seconds)
    (2/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.169424379 seconds)
    (3/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.098551954 seconds)
    (4/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.165424296 seconds)
    (5/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.101059986 seconds)
    (6/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.213742996 seconds)
    (7/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.07329554 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.071580383 seconds)
    (9/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.162332526 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.145628985 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.105189028 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077374106 seconds)
    (13/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.153594575 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.089287878 seconds)
    (15/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.17987068 seconds)
    (16/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.108285784 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072253699 seconds)
    (18/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.16919224 seconds)
    (19/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.072781581 seconds)
    (20/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.153884925 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.108084242 seconds)
    (22/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.158659657 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087990591 seconds)
    (24/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.0721513 seconds)
    (25/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.064452429 seconds)
    (26/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.087979823 seconds)
    (27/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.108541571 seconds)
    (28/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.075409103 seconds)
    (29/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.10855063 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.089845715 seconds)
    (31/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.081156216 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091093315 seconds)
    (33/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070511948 seconds)
    (34/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.174476712 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.093651253 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071298165 seconds)
    (37/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.181754718 seconds)
    (38/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071966525 seconds)
    (39/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.182507294 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.064663673 seconds)
    (41/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.150531481 seconds)
    (42/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.075261205 seconds)
    (43/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.081400832 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.106041106 seconds)
    (45/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.172896737 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.098035052 seconds)
    (47/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068860114 seconds)
    (48/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.231164482 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.110496463 seconds)
    (50/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076010949 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.092045632 seconds)
    (52/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.136742037 seconds)
    (53/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.194758117 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072747874 seconds)
    (55/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.07450027 seconds)
    (56/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.072309914 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072176295 seconds)
    (58/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.156146379 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066628383 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.119195331 seconds)
    (61/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.191860276 seconds)
    (62/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.074560282 seconds)
    (63/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.166080156 seconds)
    (64/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.100125709 seconds)
    (65/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.075282758 seconds)
    (66/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.157324032 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.06493372 seconds)
    (68/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.051217144 seconds)
    (69/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.195187713 seconds)
    (70/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.070954478 seconds)
    (71/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.079544759 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.08672651 seconds)
    (73/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.075676328 seconds)
    (74/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.092079526 seconds)
    (75/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.200273177 seconds)
    (76/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.112649494 seconds)
    (77/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069607641 seconds)
    (78/309) benchmarking ("sort", Float32, false)...
    done (took 0.125633463 seconds)
    (79/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.072046904 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.064471116 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 0.065413186 seconds)
    (82/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.156563035 seconds)
    (83/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.214765234 seconds)
    (84/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.19340349 seconds)
    (85/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.071628792 seconds)
    (86/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.10610594 seconds)
    (87/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.16145546 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.133150949 seconds)
    (89/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.368415151 seconds)
    (90/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.062635467 seconds)
    (91/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.075475109 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.090916635 seconds)
    (93/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.100337802 seconds)
    (94/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.052639642 seconds)
    (95/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.159272759 seconds)
    (96/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073522633 seconds)
    (97/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051864501 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065466964 seconds)
    (99/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.07288017 seconds)
    (100/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.150945599 seconds)
    (101/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.089966413 seconds)
    (102/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052757029 seconds)
    (103/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051545909 seconds)
    (104/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.065926377 seconds)
    (105/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.087638244 seconds)
    (106/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.090567267 seconds)
    (107/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.052049831 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.089867216 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.13579283 seconds)
    (110/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.184948434 seconds)
    (111/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.052428342 seconds)
    (112/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.088933519 seconds)
    (113/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.078656819 seconds)
    (114/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.069914548 seconds)
    (115/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.051323179 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.106196665 seconds)
    (117/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071171574 seconds)
    (118/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067520088 seconds)
    (119/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.06698314 seconds)
    (120/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.195787865 seconds)
    (121/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051648968 seconds)
    (122/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.051879437 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.107169188 seconds)
    (124/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.096800224 seconds)
    (125/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.149925776 seconds)
    (126/309) benchmarking ("sort", Bool, false)...
    done (took 0.132677467 seconds)
    (127/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073707131 seconds)
    (128/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.084661232 seconds)
    (129/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071694082 seconds)
    (130/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078114102 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089026647 seconds)
    (132/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.165690688 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070125297 seconds)
    (134/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.09867523 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071498211 seconds)
    (136/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.072997978 seconds)
    (137/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.135674269 seconds)
    (138/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.050792781 seconds)
    (139/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.050928971 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.064723113 seconds)
    (141/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072436516 seconds)
    (142/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.149138849 seconds)
    (143/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.050924788 seconds)
    (144/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071521092 seconds)
    (145/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.052414224 seconds)
    (146/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.050814245 seconds)
    (147/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.066158338 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064456517 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071868928 seconds)
    (150/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.051351757 seconds)
    (151/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.061487161 seconds)
    (152/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052202845 seconds)
    (153/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052038711 seconds)
    (154/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.147676476 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.088186652 seconds)
    (156/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.166976197 seconds)
    (157/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.072984385 seconds)
    (158/309) benchmarking ("sort", Int8, false)...
    done (took 0.138822441 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.110054079 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088571261 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.092796875 seconds)
    (162/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.05246226 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.07298763 seconds)
    (164/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072239881 seconds)
    (165/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072049806 seconds)
    (166/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.060256075 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.089136751 seconds)
    (168/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.062694218 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064916343 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088617964 seconds)
    (171/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053576671 seconds)
    (172/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.05093213 seconds)
    (173/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.07136204 seconds)
    (174/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.075912393 seconds)
    (175/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.149848076 seconds)
    (176/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.064767974 seconds)
    (177/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.066750985 seconds)
    (178/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.071594176 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.117587396 seconds)
    (180/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.135648046 seconds)
    (181/309) benchmarking ("sort", BigInt, false)...
    done (took 0.182652385 seconds)
    (182/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071145069 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.090502933 seconds)
    (184/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.050745354 seconds)
    (185/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.105704623 seconds)
    (186/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.074269838 seconds)
    (187/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052120897 seconds)
    (188/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072914168 seconds)
    (189/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.050741902 seconds)
    (190/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067355825 seconds)
    (191/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.173164517 seconds)
    (192/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.076271199 seconds)
    (193/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.068746953 seconds)
    (194/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.129772887 seconds)
    (195/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.217761921 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065947332 seconds)
    (197/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.066816351 seconds)
    (198/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072674855 seconds)
    (199/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064299061 seconds)
    (200/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.159700306 seconds)
    (201/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.094687157 seconds)
    (202/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.071843474 seconds)
    (203/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.072507082 seconds)
    (204/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.185088632 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065105131 seconds)
    (206/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.073035126 seconds)
    (207/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.07983245 seconds)
    (208/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053523729 seconds)
    (209/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.06394781 seconds)
    (210/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.065596694 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074054777 seconds)
    (212/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061641097 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.071968202 seconds)
    (214/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.06556977 seconds)
    (215/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.080289367 seconds)
    (216/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.088856915 seconds)
    (217/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073332125 seconds)
    (218/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.07536536 seconds)
    (219/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.052071713 seconds)
    (220/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066679038 seconds)
    (221/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.146161421 seconds)
    (222/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.052568665 seconds)
    (223/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.075495636 seconds)
    (224/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.053137623 seconds)
    (225/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079336597 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.07062064 seconds)
    (227/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065466761 seconds)
    (228/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.052040272 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064188793 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066234685 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.092454488 seconds)
    (232/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.051465794 seconds)
    (233/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.075227586 seconds)
    (234/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.052204779 seconds)
    (235/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051671764 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.131143238 seconds)
    (237/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.071489362 seconds)
    (238/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.066539148 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.090664054 seconds)
    (240/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052336331 seconds)
    (241/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067666077 seconds)
    (242/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.05216453 seconds)
    (243/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.050999329 seconds)
    (244/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.114162942 seconds)
    (245/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.06546056 seconds)
    (246/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.06540291 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.089711605 seconds)
    (248/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068370635 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.091037564 seconds)
    (250/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066958629 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.108183693 seconds)
    (252/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.07030488 seconds)
    (253/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054767025 seconds)
    (254/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.050996023 seconds)
    (255/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.172644033 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065148887 seconds)
    (257/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.137274251 seconds)
    (258/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.053389713 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065009999 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.12534148 seconds)
    (261/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.050676327 seconds)
    (262/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051515792 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.064653577 seconds)
    (264/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.064544293 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071308962 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.13678494 seconds)
    (267/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.051649333 seconds)
    (268/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.051119112 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.07295865 seconds)
    (270/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.086105938 seconds)
    (271/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.171902004 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090027457 seconds)
    (273/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.053500624 seconds)
    (274/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065749421 seconds)
    (275/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051571462 seconds)
    (276/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072025555 seconds)
    (277/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.053249826 seconds)
    (278/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072388281 seconds)
    (279/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067877546 seconds)
    (280/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.06499628 seconds)
    (281/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063691395 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.064645396 seconds)
    (283/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.050872893 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063891371 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.12398993 seconds)
    (286/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.149629127 seconds)
    (287/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.171704692 seconds)
    (288/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.061670738 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.0720284 seconds)
    (290/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.051562911 seconds)
    (291/309) benchmarking ("sort", Float64, false)...
    done (took 0.124427885 seconds)
    (292/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.062698258 seconds)
    (293/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.0513811 seconds)
    (294/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.066696878 seconds)
    (295/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.06054982 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.07018239 seconds)
    (297/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.117026297 seconds)
    (298/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052298183 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087882344 seconds)
    (300/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.051464406 seconds)
    (301/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.065843832 seconds)
    (302/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.050988964 seconds)
    (303/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.066171561 seconds)
    (304/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.078400104 seconds)
    (305/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.051832486 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.069640517 seconds)
    (307/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.051588901 seconds)
    (308/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.065463321 seconds)
    (309/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.06672074 seconds)
  done (took 30.309468331 seconds)
done (took 31.716893819 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.086781371 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094136426 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076393888 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.094723976 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081389189 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.077431515 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073334985 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079192793 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.08121209 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082639561 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.079353703 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055205188 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074985696 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074638758 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.07516811 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091600913 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078467431 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073019574 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073338847 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065312653 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073169967 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066096638 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067441652 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054807664 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077629305 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.07179356 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072403329 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.074254687 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066041943 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06585484 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069517551 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073512572 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065479732 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078626199 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072668557 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.07368963 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.07524196 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076520753 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067941577 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066270288 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074833968 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066428335 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.073126605 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074000511 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072238157 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071621638 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073673093 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078420813 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091724173 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068457026 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.07459742 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075976542 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076933729 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072915548 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069596989 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073007805 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070690036 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091343148 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.07361513 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068020731 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07365289 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074151484 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071342041 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073027353 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073200233 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075217027 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075484181 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071142742 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074941423 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071086077 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065580639 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073071252 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068962337 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065994652 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075865352 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076827819 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064745241 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071309005 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072382297 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071378431 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065022866 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067534553 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067367008 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071641724 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067554762 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054518325 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069671889 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071758384 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064654747 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072997821 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071237913 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072010854 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067358545 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.07531357 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064934381 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070414354 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065567209 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.06559154 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066913205 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069700331 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065504287 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067703512 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074174801 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066914614 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.07155163 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078945798 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065790731 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.07141184 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064442385 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065044331 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079622545 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074209035 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065523358 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067660473 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064332507 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.07232122 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064354701 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064950325 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065062866 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.06497188 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070275804 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064808566 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066571867 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071293821 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076439922 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064138097 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068036152 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066515894 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064454029 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069484734 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064270863 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.200006374 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.069019075 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062874071 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068843804 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066267563 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073733457 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068624932 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073129088 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.06801654 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.07429807 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070617944 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071348543 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071771113 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065687414 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059251153 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068295042 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068083514 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067879443 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066549415 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.068191017 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065615003 seconds)
done (took 12.504429082 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067774255 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.144170931 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.100079689 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095522172 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086383546 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067450353 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076770402 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.10254492 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068073425 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.103350721 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087953925 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085335349 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.113063428 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065198798 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06585949 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070129352 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067799186 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.082463615 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101311739 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086828967 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116755754 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065832785 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.095363001 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090321017 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.088011059 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.09320688 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067904728 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070682606 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069631026 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.100760584 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086669354 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070310807 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067486477 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.101369881 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.093714952 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.084112926 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066537661 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083037539 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067317307 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066637562 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067900609 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.09881292 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.08025364 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.08088853 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070265291 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069713563 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067476612 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.08378588 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089518893 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078961458 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.087114121 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.103495167 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069344204 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.066357315 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06485378 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085649172 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065638861 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069058194 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066458487 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068522948 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066465883 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069331386 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081520882 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.082943838 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070124141 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080734162 seconds)
  done (took 6.835946179 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083761631 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.09088118 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083560578 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084607493 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065969838 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066772271 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066907582 seconds)
  done (took 2.047403165 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066966104 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088839658 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089878367 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089522144 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.085307262 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087704055 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075983785 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067185242 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.081375583 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068145475 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087709673 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102901436 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067500158 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.07325454 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090785154 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066947628 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090475067 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067389478 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.06996982 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090362956 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068793284 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.082554172 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070191069 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.06729448 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080932548 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067374109 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.114100368 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071261437 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068495551 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069773336 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064844593 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.107530498 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080580079 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075811967 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066507589 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08113797 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081297775 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065467997 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082907319 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071272559 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080012194 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066868581 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067056766 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064284339 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071104955 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076553323 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.0673633 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066744858 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068655866 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085649365 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066745126 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079634032 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069829631 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069256486 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067868708 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070176005 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076002681 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067197931 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086016587 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067655173 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082597368 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082977549 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080097553 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082442553 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069527888 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079888238 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079863325 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069091824 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068153491 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070078032 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083418441 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.065308426 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068090244 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076868231 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068490171 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089100618 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089326285 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067904452 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075264837 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066647389 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066770045 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.06643446 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089093592 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068723814 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066058038 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070283761 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069578673 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064774282 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.06534424 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.06996256 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064461188 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067976926 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069033595 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069220123 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068769236 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082735129 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069107492 seconds)
  done (took 8.781063712 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069466784 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068703481 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069711727 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067844067 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067734534 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068383033 seconds)
  done (took 1.938656626 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.094518936 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069461839 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081185164 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.07270949 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.10462346 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087379219 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087281085 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079396407 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084130913 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079226109 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087028588 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088736429 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.09344733 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073262853 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.087136978 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072508288 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087027246 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076702893 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078661717 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073498823 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086911962 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072569424 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073328295 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081886505 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075673257 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072108473 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067273349 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079007989 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078660375 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079229123 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.073187843 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075770038 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.071016386 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078644316 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087331589 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071186469 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072125296 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077251863 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072580185 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075690623 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088535617 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073114885 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.075051564 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077495959 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078570868 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070793047 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077248274 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076232868 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086753456 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077377077 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077287445 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.072142908 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075441695 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077248979 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070723136 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078549126 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.07716535 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086924259 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072096182 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070233662 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069316108 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.076033727 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077926258 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075965545 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.0789769 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076953075 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070788642 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07232256 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07268955 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071578838 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076743723 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068996792 seconds)
  done (took 7.112507465 seconds)
done (took 28.203929139 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.539775957 seconds)
  done (took 2.033550365 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.60774601 seconds)
  done (took 2.128243485 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.629155809 seconds)
  done (took 8.142605307 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.3928691 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.475061059 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.688034655 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130599978 seconds)
  done (took 3.244990239 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.673895397 seconds)
  done (took 2.20261476 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.211516581 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.195678006 seconds)
  done (took 1.948381508 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.377040903 seconds)
  done (took 1.895521914 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.108304786 seconds)
  done (took 2.625618193 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.262936776 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.163510533 seconds)
  done (took 1.944693795 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.458958818 seconds)
  done (took 1.978001301 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.843095627 seconds)
  done (took 6.361914014 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.213466002 seconds)
  done (took 1.780606848 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.241394118 seconds)
  done (took 1.764590222 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.684493198 seconds)
  done (took 3.206821513 seconds)
done (took 42.787112823 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.08125887 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081279355 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081318177 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077933473 seconds)
  done (took 1.828514849 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076928031 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072873482 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076986971 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072872369 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077508286 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.07274451 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074455124 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076761938 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07267631 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072912475 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072877619 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072658032 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074870593 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074402335 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.07116283 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074917167 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076702088 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072473258 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.076003831 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072893931 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071337231 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074908728 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074999992 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072223456 seconds)
  done (took 3.305822395 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078565207 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072614055 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074692041 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072571383 seconds)
  done (took 1.831074261 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078367458 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.092138964 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.090121729 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078779443 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092278663 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.087021845 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069511288 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069371399 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073379829 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077000421 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068830702 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096070486 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088183182 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077250251 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079465931 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066080297 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.06871068 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087205765 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077169577 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078222802 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070184443 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077397045 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.06861241 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088583755 seconds)
  done (took 3.428018511 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078935974 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103873633 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078996184 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087818913 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090247424 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065424244 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074483984 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089452938 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.123301415 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065504712 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070500638 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065771379 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.073011356 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065505964 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076633382 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104819199 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.108534731 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.069125812 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095831704 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065771642 seconds)
  done (took 3.194188013 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074206207 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069518814 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065856086 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068593531 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076936996 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072885138 seconds)
  done (took 1.966639065 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068781847 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068626501 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067978965 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067180828 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072295037 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067177905 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065679525 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067388249 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067550467 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067114685 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066649958 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066182675 seconds)
  done (took 2.34776623 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.182653323 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068745896 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069842245 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065993805 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070878299 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066532966 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080153899 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.06839323 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090644729 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.0664906 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066616048 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068937815 seconds)
  done (took 2.504655036 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208088684 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076608154 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239019048 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137981447 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112445501 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116075523 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104293637 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114155705 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.14494615 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102685732 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169353784 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166924431 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107862372 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137862694 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089457235 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.09789818 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156802933 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16294879 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103997622 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166345651 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144848709 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124924855 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148174178 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102097578 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107039067 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122907606 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071952047 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080953656 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172344255 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133371507 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147918785 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11214032 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094520168 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178203648 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173066307 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143327072 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134960988 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084281385 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.102955853 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.133195522 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202676589 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089096141 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162955158 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247969035 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081650612 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135481995 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122366637 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.121214579 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.10835152 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090310603 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147478482 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185420661 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.140076687 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088392771 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113056787 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116051547 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.117663061 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104173722 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184207188 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162418038 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129213204 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.072318384 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09999035 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155482168 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132373715 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.109822378 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.127756765 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095472283 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135379378 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155359654 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119699659 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144796934 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.129557875 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089540646 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120211484 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140678424 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129596275 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171519312 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125677329 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073233459 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126829431 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104392039 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082035528 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.140961626 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075414119 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175462116 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098808244 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.106408102 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113606768 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10906906 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109363146 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162112454 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.286010271 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105194792 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065921237 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104915921 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.121755124 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148704426 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088846903 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109752559 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119048453 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.07934352 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141051375 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075059364 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125278956 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075776688 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125976177 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13447385 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076063628 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122509931 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101590602 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100534491 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135000542 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162985745 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089662933 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082375441 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168827816 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122634687 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.105367024 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145235 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157449879 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.100157827 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103920872 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151771343 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182147046 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090147396 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16431362 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108519487 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085081976 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087641787 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124894593 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113614137 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.122989514 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082634505 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.119705861 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169804672 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075435528 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095761834 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134006148 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079444221 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080914663 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103883024 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10071035 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095196093 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100738455 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.105013947 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137746883 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123809814 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.248732579 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128672741 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100104261 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171560957 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089314702 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101392346 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10489529 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.071005005 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.139352908 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158608391 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080099313 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166615244 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.12484639 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106548259 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120018802 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083773316 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141755249 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078970575 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070630778 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145372452 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110867115 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111803682 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.152251411 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105902869 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.128418261 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120270074 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135424841 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133345356 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.130202434 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105499997 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.08869499 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112701949 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126422129 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073559166 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.092183513 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.08128548 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105278208 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09641732 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083638415 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144196854 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125957426 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10102643 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112923357 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097544372 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148016295 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077275783 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129818005 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.118997422 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094482701 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.152221033 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152535516 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131943281 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099125017 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14475561 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069900124 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.217220894 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.09200257 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125583037 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084630213 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084733081 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119101297 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148186216 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130810973 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140044658 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112852189 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122764244 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156797073 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070574889 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116274744 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148910822 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123547781 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.105019513 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090538181 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099837858 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143058764 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11004553 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183151254 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116027907 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126758991 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154190234 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.100151522 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080336389 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103231789 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136337758 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105768124 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14589036 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100565687 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088322894 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111112104 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074813205 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101188306 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12865616 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12103069 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142298334 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.115409182 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134439015 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077534525 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118112575 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120912108 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123101275 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064158636 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120310173 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162040677 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093923115 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118971484 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15364845 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079236485 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.124566437 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.323356997 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147508703 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085632684 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112078073 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12006425 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129216317 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12077732 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14154096 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110616925 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136514659 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11040634 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086586848 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088067183 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098004983 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106170562 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094907103 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.108005327 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.115437961 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095130538 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133770206 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104194634 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110462105 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11978314 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096814141 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.090401254 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098011632 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176107102 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120930014 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172673504 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099007317 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.146345637 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165216065 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075005203 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079702963 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078782875 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140948736 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084312088 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132010435 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.098252406 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106373803 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125361909 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143494503 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095762736 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069001826 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109601588 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135690945 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112506729 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098365316 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104649082 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163168971 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100528381 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079955668 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113594042 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104854382 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101928497 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.318044775 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.062402377 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09854922 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076466346 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082171089 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128258602 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155774226 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.082564327 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103763 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120977067 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11126963 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128585486 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102895161 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100437971 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115029461 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151350285 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130542326 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090443535 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113133401 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130849261 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159226552 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106294482 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097015331 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174949329 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153762184 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.161229972 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089239048 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115495266 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114383909 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109406884 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140824846 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083848337 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165485455 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08244752 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137558948 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104974798 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091320381 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131722632 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.116979514 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089226096 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149665668 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118764485 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082868325 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078525519 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11853792 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120346118 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107208996 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075388021 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139483262 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.07316249 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132944966 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168599631 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227117821 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106119064 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097887074 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082590786 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109751983 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104772286 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091460493 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.099584273 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175601268 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089731221 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150978051 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142566398 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114803951 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138892331 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100890317 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.636992762 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078651002 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15347368 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119156186 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173997877 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097937626 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119280802 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110394755 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126681237 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145843231 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106381668 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.176882148 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133993106 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116778197 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082872887 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104284637 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103976327 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089501017 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105716072 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114843431 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117038518 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094592801 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.117115188 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124820623 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082765903 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096249209 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157260842 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118327317 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145678906 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141049062 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084514998 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118617977 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138936944 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080177049 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.122758548 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152487906 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105100299 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243678578 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081815517 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.104858542 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173463408 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074151604 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166722238 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122219117 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110516348 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114575053 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.11692844 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134032483 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11027588 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12305782 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095341103 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.112804954 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11402056 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083098418 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077523814 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105807085 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114144914 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098166183 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100467006 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.098806849 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152237805 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072259593 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097559193 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104089979 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14776265 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175826651 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088507161 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082925345 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121278411 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113833733 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.114527343 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121627881 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080577128 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082952273 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082571377 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.07781467 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.10889685 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113259524 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105780427 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112553992 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166302569 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083842966 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.223683956 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096014589 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105413007 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069961168 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079302023 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096670028 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097777209 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107661607 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099733708 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169001414 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094290116 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089708724 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091692711 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072555157 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081601684 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125559434 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108685784 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116793325 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095357749 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.061845815 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107127865 seconds)
  done (took 59.203034698 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.112786044 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.083228915 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.098655371 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.151450709 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.123908449 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.213601662 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.158953475 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.200353615 seconds)
  done (took 2.824645379 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069366006 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094340578 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100669941 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.084249536 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066810376 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.06882398 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.22764444 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081549368 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066823911 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088647173 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.080630737 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069556795 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.421997713 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066536193 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068164775 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.063774674 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067396023 seconds)
  done (took 3.425706586 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.368314668 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.602422161 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.374149046 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073814494 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.87350431 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.091099903 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.046610827 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.130061349 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.075449391 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.540275916 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.702254215 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.12511856 seconds)
  done (took 18.651705699 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076248299 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.07136449 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.085353046 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084158393 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073584201 seconds)
  done (took 2.037829563 seconds)
done (took 108.130725563 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080749848 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.406025343 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054329224 seconds)
  done (took 2.135937145 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.085097258 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084826773 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084686182 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083332758 seconds)
  done (took 1.990973484 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.076109871 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077063457 seconds)
  done (took 1.798507276 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.225782052 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.159821788 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087407735 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083668472 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078627683 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078609609 seconds)
  done (took 1.894204749 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073787058 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075350627 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073331775 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076264947 seconds)
  done (took 1.94590943 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.078314352 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053183173 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054965763 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.056743747 seconds)
  done (took 1.892794842 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088171855 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079835129 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079071231 seconds)
  done (took 1.896763094 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.102741753 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085473499 seconds)
  done (took 1.838679594 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083213656 seconds)
  done (took 1.733718426 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.100590075 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.11463399 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.132018357 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.111280536 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.139721967 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.109872452 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.086246227 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087355405 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077830889 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.088418414 seconds)
  done (took 2.698036373 seconds)
done (took 22.02342554 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080395393 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.367333003 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361235152 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090786404 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669480956 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357325121 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.019623877 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092892292 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.114198997 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068560457 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084452166 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648989555 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.980569047 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.323895323 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.972152489 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.324481927 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650984233 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068640917 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068475664 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068749891 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.014110094 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068194325 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068201774 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068928005 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.648218288 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371407371 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068488527 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.323862374 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068220003 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069842741 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355315853 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06885278 seconds)
  done (took 16.240385584 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073220845 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.118200368 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073640082 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084288192 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.07160632 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070190707 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071677248 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069348651 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120747352 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068319562 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085142502 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068165082 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072308628 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069121076 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087802411 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068378566 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06916627 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068945475 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068591627 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068672215 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087346108 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068384451 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068696041 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068782909 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068529458 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080355452 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068784403 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068255595 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069161468 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070231276 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071211979 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069252494 seconds)
  done (took 4.07027563 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117777624 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125182882 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074818147 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103549588 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113646242 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070504737 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.144023238 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093155795 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128560685 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068508761 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085000018 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06867275 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101576458 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069135467 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088202044 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068899331 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069517491 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069344992 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068901343 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069267108 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087988541 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068534587 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069234677 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069564588 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069288965 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082084654 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069396069 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069138146 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068896368 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070387365 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072433767 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069661632 seconds)
  done (took 4.329637895 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073493164 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075559189 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083819726 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084332876 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070632642 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072490092 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073494408 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.07033762 seconds)
  done (took 2.272659121 seconds)
done (took 28.570092214 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080662134 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069716009 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073242889 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.082025591 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.074112301 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079291062 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067856013 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075039022 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072797146 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073401658 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.07570133 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068311685 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071499565 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067466822 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074188557 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068441918 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080141401 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072141528 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079722467 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079601168 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070429382 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073628337 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074846835 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079773568 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079978643 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079540791 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077916224 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073776379 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069653302 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070921612 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077775016 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084724018 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069016709 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079761605 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068428203 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068594064 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071801422 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068304712 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.07990209 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076926863 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070548785 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076859209 seconds)
  done (took 4.771832054 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090047489 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091654723 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085851851 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061751914 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067518167 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065326291 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088699943 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059901365 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059994556 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088167876 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056399802 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059724356 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062722467 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.05457211 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060061913 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057150349 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061949996 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056273236 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059749571 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059686603 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.088833892 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054562571 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.077768068 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.06352931 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.05991329 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.06198237 seconds)
  done (took 3.431946748 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076330353 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084968084 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.08836306 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126649304 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.103817376 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077428691 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.08001722 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092746012 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.08587656 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067303611 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071309524 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093443976 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087953322 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074404805 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068217682 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084917375 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.083038111 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.06901383 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073994963 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.093404037 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.086144085 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.085096896 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092798359 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081071482 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067141447 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070131926 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072016985 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081608346 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072282514 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076763693 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071913903 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071331853 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069775901 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079417836 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071558138 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069752983 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.091117999 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077775417 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078038342 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068364944 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071459623 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069346658 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.09172854 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.127398396 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067569935 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.07454777 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075752842 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076957037 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068076739 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086599942 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078886949 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067510037 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071040395 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066887356 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067798979 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080650289 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069970311 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070222652 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076875963 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070760468 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.089777366 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071878032 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083454193 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067407607 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075382949 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067189146 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068980509 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067127126 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093157202 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069577244 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108867589 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069048419 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068874784 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076928729 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075296265 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073658177 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068253819 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083030198 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07796337 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071481113 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076392331 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.07155884 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070633027 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.088292947 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070224775 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069535791 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.06929556 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074243128 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070764732 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069601398 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080950121 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.0681553 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070770289 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084801277 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067344402 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069171431 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074358783 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072865336 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067364063 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079145697 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072986835 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068839401 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.07715102 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068167005 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071063051 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079828209 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074137781 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067414421 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072578985 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073981228 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.06841751 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068988633 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070442974 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069912125 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076048625 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074099705 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072129736 seconds)
  done (took 10.647594133 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.164995582 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.157836644 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.07112826 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.145469885 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077164329 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.080000943 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.148222753 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095264382 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068713675 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069481633 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069254695 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.111496694 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106694759 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116429004 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079453434 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068331841 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.084097199 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114686533 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.150729736 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.143884545 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.084644401 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077455726 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071000701 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069483572 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071068707 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078722814 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085982414 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077344816 seconds)
  done (took 4.45430726 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083594658 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.09790341 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076122483 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090226506 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.092151052 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068595277 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070920885 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070131278 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.081139068 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079671458 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068104899 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073927838 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075493394 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072109316 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069389956 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.07509728 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075820782 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069989983 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071665612 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073273194 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078260402 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.081437165 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071845799 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067641207 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073210363 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067650679 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064974032 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.08536309 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068875234 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.091422021 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066879432 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075293963 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081927404 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069113167 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067852183 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068229144 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068229404 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068345912 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069718725 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067073312 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066904663 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058142914 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067334975 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080461274 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074882652 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056947778 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073120984 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073503332 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073351549 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065731946 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071222311 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070713535 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.07166351 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075319341 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073191519 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073337874 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069378773 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.074694167 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.07592733 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068159745 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065158842 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066567699 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072935956 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066723826 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075967835 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.07251099 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.06636692 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067757675 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069646802 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.074133363 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067796272 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071236139 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065501149 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070221078 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072455683 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069965946 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068837303 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066587575 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.06764611 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068508232 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055859562 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067905254 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054009822 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070792744 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066246925 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066800454 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067762195 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072679225 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080519566 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069174822 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073740023 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069044732 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067322425 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070928133 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.06105109 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070525869 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083154086 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083617434 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068497949 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065902661 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082315316 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072808593 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.06716885 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056417696 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075208951 seconds)
  done (took 9.228485432 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091734609 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.071412172 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084186318 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.091616185 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087240671 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075673514 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077043117 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069662242 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.083216069 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.07480948 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076924161 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068805129 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.07753234 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077605307 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070729722 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.07740809 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072420095 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083288585 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082517222 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068822247 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.07605515 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080570022 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089724451 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.08071419 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.079164252 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.080672318 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089840257 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.072619316 seconds)
  done (took 3.930264009 seconds)
done (took 38.123959726 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.751551934 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.922066784 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.744539102 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.103645189 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.022323652 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.845432654 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.848724983 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.740491849 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.0966884 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.784318699 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.020762215 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.803698385 seconds)
done (took 65.370530426 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.769649286 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.887036165 seconds)
    (2/2) benchmarking "String"...
    done (took 2.011895645 seconds)
  done (took 5.577443641 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.039345142 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.336992114 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.971469792 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.739938372 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.743515014 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.971412039 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.546141195 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.276736985 seconds)
  done (took 30.267064251 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.882334034 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.974179386 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.422915812 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.459553083 seconds)
  done (took 15.469641741 seconds)
done (took 62.892395769 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.753865762 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.775403032 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.747788949 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.723105342 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.798131416 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.75996541 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.028652157 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.77227685 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.739718926 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.730284847 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.741074494 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.173694484 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.747106332 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.015243392 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.738287141 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.739691544 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.803457742 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.380256595 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.896661053 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.75260721 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.739843634 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.745090392 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.744338176 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.743476483 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.755483752 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.740477376 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.15869353 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.749498944 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.355687211 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.744143974 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.772801105 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.158039277 seconds)
  done (took 202.903478874 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.742556148 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.970845997 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.989093034 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.746672127 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.427535048 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.921033179 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.859193428 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.46109159 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.74168689 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.766488955 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.068725186 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.740758861 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.090602552 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.690317552 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.776616695 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.843981433 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.015156941 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.072545958 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.778602598 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.919157151 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.760442995 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.881140687 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.836088352 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.03087239 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.750287644 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.744548048 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.756698001 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.768239853 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.930577991 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.984194795 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.756537048 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.768111799 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.872126599 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.614230391 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.757381439 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.764155431 seconds)
  done (took 170.279846658 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.90497481 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.74514925 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.743169519 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.743495908 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.748872705 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.744568119 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.863338939 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.865204082 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.197124823 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.242584298 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.794967517 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.551238214 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.740942539 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.810432026 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.755043939 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.743089671 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.758540197 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.770541843 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.743812232 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.744702452 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.86469473 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.7541757 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.768464379 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.749903669 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.7436633 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.750274003 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.114951129 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.743829343 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.751611245 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.990294917 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.74327687 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.744437775 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.633058953 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.136495812 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.983230041 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.746090416 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.751536141 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.744411313 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.973457351 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.744831174 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.745102154 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.747616279 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.999603949 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.743326346 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.865645514 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.744322714 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.247562905 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.743830213 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.745356025 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.498945017 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.445259522 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.743282514 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.745995631 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.748384803 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.745638541 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.745024602 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.750731998 seconds)
    (57/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.743700278 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.581953571 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.823419181 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.747236555 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.750050794 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.75292743 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.746066388 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.954359035 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.744875494 seconds)
    (66/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.746525999 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.800600423 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.96598606 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.043885689 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.867290344 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.747211507 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.81392239 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.841062869 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.745188114 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.746184394 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.74578018 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.745919924 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.827951361 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.746334292 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.893299361 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.753623693 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.748042114 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.798765445 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.819016373 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.746063862 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.642430047 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.746555354 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.746410746 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.065472076 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.81336412 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.745969898 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.748319935 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.747652368 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.87779716 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.868336878 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.527252883 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.749155397 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.652578139 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.750067074 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.748085358 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.746600518 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.903344845 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.748266752 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.932525941 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.74703369 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.830568506 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.751557695 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.749478301 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.747497944 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.781177074 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.749610601 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.809148238 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.7479919 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.117887271 seconds)
  done (took 400.22190588 seconds)
done (took 777.048951536 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.424044246 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.377941917 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.494328635 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.401021487 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.370680577 seconds)
  done (took 13.756717213 seconds)
done (took 15.444561972 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.842139591 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.844978398 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.775428363 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.842425316 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.772605812 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.841257227 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.823002329 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.780304684 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.808584504 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.777503635 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.80923427 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.777200594 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.763645639 seconds)
  done (took 25.145914288 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.989548968 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.990780326 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.82629248 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.979868367 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.801296882 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.991290502 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.917371482 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.905524569 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.903178472 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.769846647 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.768076963 seconds)
  done (took 22.533972434 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.991444404 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.985260581 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.831473013 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.987078402 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.804384199 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.989905309 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.914256892 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.907042338 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.906966244 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.76995776 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.765592564 seconds)
  done (took 22.543333955 seconds)
done (took 71.912077088 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.760741232 seconds)
  done (took 3.449100439 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.783758662 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.919866328 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.767566925 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.764032478 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.761471809 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.763256727 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.763956408 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.758326527 seconds)
  done (took 15.974274275 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.757433074 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.762158058 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.761173904 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.759340231 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.75931443 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.760440462 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.762537918 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.763810221 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.761604651 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.759740186 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.760167095 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.763054566 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.758870355 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.763303078 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.763538471 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.75917034 seconds)
  done (took 29.867944727 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.761549132 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.759110751 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.760927267 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.760769927 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.759849541 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.762916496 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.76168741 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.759636279 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.76024114 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.759756903 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.761122419 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.758226795 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.760156142 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.758908815 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.760300522 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.760273192 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.760033657 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.760082166 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.763817968 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.761533834 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.759640712 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.761103378 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.761981079 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.76132763 seconds)
  done (took 43.950285665 seconds)
done (took 94.931532242 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.65206239 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.161703119 seconds)
  done (took 8.50580873 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.763406614 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.764275444 seconds)
  done (took 5.258479114 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.763110827 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.762024299 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.764479359 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.763299972 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.764400273 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.763097012 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.764085321 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.763994174 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.765488365 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.766008578 seconds)
  done (took 19.332618473 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.763111692 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.763498412 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.761733621 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.761903239 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.763517971 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.761791542 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.764593107 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.76566823 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.764665624 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.761486697 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.762596151 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.7602645 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.765277751 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.762970484 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.765787221 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.761541684 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.762520225 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.762621297 seconds)
  done (took 33.429157915 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.764997021 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.763605983 seconds)
  done (took 5.223569403 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.763148989 seconds)
    (2/7) benchmarking "second"...
    done (took 1.761923966 seconds)
    (3/7) benchmarking "month"...
    done (took 1.762465829 seconds)
    (4/7) benchmarking "year"...
    done (took 1.761837196 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.761063065 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.762377001 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.762780291 seconds)
  done (took 14.029398375 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.765912015 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.925769834 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.00140225 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.409901184 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.76784307 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.769867593 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.742005708 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.767456719 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.770404016 seconds)
  done (took 19.614952816 seconds)
done (took 107.086824727 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.602578523 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.759584939 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.101152608 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.819088203 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.811663849 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.101461815 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.797904427 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.971751757 seconds)
done (took 42.662510144 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.843240514 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.328349932 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.36746168 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.102472871 seconds)
  done (took 12.495526747 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.742724315 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.288448521 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.801623736 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.360843958 seconds)
  done (took 19.905040022 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.131243901 seconds)
    (2/2) benchmarking "read"...
    done (took 2.1351168 seconds)
  done (took 5.969992496 seconds)
done (took 46.913481299 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.765818149 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.766640348 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.764434105 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.766048331 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.764233123 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.768764727 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.763434313 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.763935665 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.767148375 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.767709095 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.767787864 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.766845833 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.767821814 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.768039767 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.768382121 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.764763813 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.764954377 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.76780598 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.76401417 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.765121443 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.76493147 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.76821861 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.764955302 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.764894864 seconds)
  done (took 44.081887098 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.769297659 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.767216036 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.768208052 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.768170693 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.768467794 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.768441983 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.767797588 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.765090111 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.769081294 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.769263279 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.767274481 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.767142414 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.769507836 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.767084218 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.770118699 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.76851066 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.769766706 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.767269388 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.769829683 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.76872001 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.770475725 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.767632282 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.766956553 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.769258814 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.765927235 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.768188631 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.7699678 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.768935138 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.769899373 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.767893988 seconds)
  done (took 54.75048087 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.774935959 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.778494832 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.76963447 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.772091903 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.770235724 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.770416044 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.770459041 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.77089269 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.771266588 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.771026868 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.771613546 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.771378696 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.77057398 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.771601555 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.769497482 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.771049398 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.77157954 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.77249681 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.772999789 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.770640856 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.771070495 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.772381155 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.771689026 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.771270299 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.771500391 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.771586662 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.772242278 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.770593275 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.774350767 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.773030225 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.771832106 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.772084154 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.772989883 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.771209191 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.772181846 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.772683564 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.778116776 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.781956871 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.773380688 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.773428654 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.7730009 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.772490619 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.772590326 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.772986015 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.773067929 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.773293871 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.772629487 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.771726868 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.774349693 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.770604487 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.770646013 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.773078836 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.772789201 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.770798422 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.772969975 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.774529128 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.773871154 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.771850455 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.772505223 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.772516647 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.772580966 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.774227177 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.772388683 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.773055667 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.773501983 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.776066612 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.774751645 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.774325255 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.773862285 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.774758209 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.774488107 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.773518508 seconds)
  done (took 129.333961607 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.77395165 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.771888805 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.772819992 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.771619432 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.773647289 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.774468311 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.772079157 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.773747949 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.772049402 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.775593021 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.775544109 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.773217091 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.772590521 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.773511317 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.774506131 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.773657939 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.773360605 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.774396084 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.773724803 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.776548388 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.774129361 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.772048888 seconds)
  done (took 40.723769642 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.774275334 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.77539542 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.772927369 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.77767257 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.772852536 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.776338344 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.775320603 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.775431497 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.775641032 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.772982022 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.774821062 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.776715767 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.77372549 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.772289132 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.771957512 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.773343382 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.776491043 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.773190986 seconds)
  done (took 33.646875042 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.773330849 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.774223083 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.775798687 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.772773369 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.774765798 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.777468428 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.77339692 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.776289892 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.776671504 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.772899909 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.776389665 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.77711454 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.778121009 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.774405992 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.776665618 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.774466154 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.778642048 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.773842533 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.777164967 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.775207578 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.773938515 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.778541531 seconds)
  done (took 40.76780607 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.776232406 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.780142391 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.77551653 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.777447669 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.775932712 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.778845615 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.779705027 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.775410155 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.779134441 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.779213556 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.773966307 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.778265313 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.774851313 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.776091524 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.775414095 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.774755494 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.779540496 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.777971505 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.778904681 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.776157925 seconds)
  done (took 37.252957136 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.77744209 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.778167171 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.779628971 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.780318503 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.778217432 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.779616672 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.77985602 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.778654516 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.779385458 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.779234928 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.780148697 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.780422138 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.78188336 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.778552798 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.779171251 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.778473937 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.779986392 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.780469592 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.780062566 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.779610045 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.780967639 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.780967297 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.780345912 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.781438279 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.780852917 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.780204713 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.781061104 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.781174506 seconds)
  done (took 51.54677957 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.778394392 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.781350041 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.778566921 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.777418406 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.777148243 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.777057894 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.777909902 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.780734322 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.781343812 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.778267812 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.781786584 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.77948064 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.780088844 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.781553169 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.781792828 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.779652445 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.780764465 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.780065316 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.778143817 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.779290673 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.781748024 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.782440367 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.780927465 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.779236983 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.780760974 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.781430995 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.778396537 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.780010302 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.780577987 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.778432338 seconds)
  done (took 55.104787946 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.798022635 seconds)
    (2/2) benchmarking "in"...
    done (took 1.799907929 seconds)
  done (took 5.308782112 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.778109932 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.781759416 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.781075786 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.779130935 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.781361268 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.782109941 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.783155968 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.77989809 seconds)
  done (took 15.957399874 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.779628862 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.782571806 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.783368674 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.782985234 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.781737543 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.78010197 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.787831163 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.781851304 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.782751519 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.78299897 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.790540519 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.791721039 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.785899668 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.782243847 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.782100472 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.784152449 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.782071099 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.786170746 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.783692773 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.783121578 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.78446335 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.786098042 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.786687952 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.78207613 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.784605423 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.792561108 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.787749181 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.784211759 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.783773942 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.789084428 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.784246003 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.78105638 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.784862279 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.785136067 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.785009908 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.784902362 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.790354224 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.784002625 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.788170526 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.783070439 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.785705128 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.782156489 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.784176026 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.785472069 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.785472552 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.783891214 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.785716454 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.781849257 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.783078848 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.786938853 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.791105855 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.784057521 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.782028092 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.788468164 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.786264351 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.792647125 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.786026005 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.786702609 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.795876234 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.794668104 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.795465755 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.793445128 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.786354588 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.786661176 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.795682464 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.812758128 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.789820844 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.782516017 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.78367477 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.785637173 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.792187617 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.798756754 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.797046543 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.787336257 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.787416841 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.788269371 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.788294425 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.789106505 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.793034998 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.790752709 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.788045714 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.78796098 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.798729092 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.814747721 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.786456047 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.788806018 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.786132288 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.789214564 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.78820922 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.800652335 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.789239304 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.788878291 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.788811064 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.789083809 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.789615656 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.788516484 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.786402363 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.789408567 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.785209844 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.788661207 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.787093227 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.791755318 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.798607292 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.787684666 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.787960477 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.793571483 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.788176662 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.788258061 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.794774207 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.787865191 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.789917616 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.790244567 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.795962009 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.786905503 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.792862822 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.798623897 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.788499428 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.79023985 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.789067581 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.78839682 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.798741727 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.81792039 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.790154339 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.790629368 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.795371807 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.804051697 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.788993677 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.79237884 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.791565263 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.788862783 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.787912524 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.790925177 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.791496418 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.790990682 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.792285303 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.791632201 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.789469005 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.790514129 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.790917746 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.791265884 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.792485836 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.791542303 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.79218109 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.794290659 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.792304001 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.792497687 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.796035729 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.790774828 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.792610976 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.790451969 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.788014884 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.790938592 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.791656963 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.790914046 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.789975933 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.792549915 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.789642743 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.790371329 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.791118104 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.790697485 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.791346276 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.791194653 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.794579573 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.790905133 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.792288229 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.789931558 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.789761305 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.791312244 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.791995373 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.7900876 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.792096701 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.790173684 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.79315551 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.802850457 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.791651292 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.790867105 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.793536519 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.791996142 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.791994819 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.792059461 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.794170841 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.801191995 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.792365194 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.797309379 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.79340624 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.7928714 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.792136512 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.791783333 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.794448859 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.793479415 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.796052884 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.802613438 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.806911575 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.803077721 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.795963707 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.79827071 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.792735616 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.798346588 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.796685646 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.793730529 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.793482261 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.792918391 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.791749163 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.792695342 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.792923183 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.792621201 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.791835869 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.794275669 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.794297597 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.793277254 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.792914651 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.793610598 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.794730234 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.791404055 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.792629352 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.794397692 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.79277127 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.792072612 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.793561033 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.793595618 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.794219064 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.794958951 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.79958539 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.791762604 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.796437354 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.795363884 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.795269627 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.794592678 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.796140373 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.796855897 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.79583732 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.801504671 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.793433126 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.797409989 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.801416292 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.796651319 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.794429174 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.79778863 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.796244235 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.79234045 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.798427481 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.806315125 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.796748187 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.795888998 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.795286257 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.793970564 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.79775577 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.801007386 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.794055937 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.796636421 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.798825066 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.797868024 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.794314663 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.798426752 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.797467414 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.797817674 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.799793191 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.796739235 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.796821751 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.797736555 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.798506259 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.795093309 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.797533236 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.799252427 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.806156337 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.800232963 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.79615405 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.7998873 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.798118384 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.801867005 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.797330166 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.79770585 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.796480913 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.80964929 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.806547014 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.801836688 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.80019551 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.799839708 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.801953125 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.800344074 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.802052328 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.798547548 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.800203541 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.796948775 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.796370016 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.797842844 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.798602306 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.799537448 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.798924559 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.799210132 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.804260735 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.79843703 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.799340553 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.799590299 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.798049095 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.797668924 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.799149902 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.799235632 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.799817621 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.800129276 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.797030048 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.79810917 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.803493699 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.798344762 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.799217814 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.798253668 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.79815759 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.800225498 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.799573952 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.799058673 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.802340122 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.809133877 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.803216546 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.809025469 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.801196968 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.807615977 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.800344581 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.801745585 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.810654735 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.795664353 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.797622021 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.798320057 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.79935071 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.805377494 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.799946958 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.799515145 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.804894972 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.798998521 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.79966218 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.799758729 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.800141839 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.800773585 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.800741706 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.805827604 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.802086698 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.804491159 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.80231568 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.798347789 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.800754831 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.799576582 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.800571462 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.803117117 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.800116193 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.801002545 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.799722874 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.80013998 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.800954404 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.801611445 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.801990605 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.801584441 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.800874086 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.807501643 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.801818555 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.805872031 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.800092863 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.808432081 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.80210545 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.807062323 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.802470083 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.801005042 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.802766778 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.802876129 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.802569615 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.801046324 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.802471935 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.803789293 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.802417177 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.806628331 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.802436472 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.802563969 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.801123688 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.802857645 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.801616634 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.811860744 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.830950786 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.802378278 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.807740568 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.800142357 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.805456345 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.807685469 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.802604477 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.80118434 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.805075311 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.814765692 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.811472412 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.803182506 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.80225548 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.803077451 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.804694847 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.803353927 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.803616892 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.803639047 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.80394194 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.803626018 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.804502442 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.806068256 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.805807135 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.802860782 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.803699671 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.80533305 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.813397464 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.804999341 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.805295626 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.803970941 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.804338981 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.803464444 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.804908492 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.804704203 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.80436149 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.805595036 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.806488033 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.811718153 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.812349677 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.806262234 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.803582691 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.80534263 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.804123114 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.80525454 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.806334587 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.805521712 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.805539324 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.8055124 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.80462832 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.806438065 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.804955844 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.804559545 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.804985686 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.806530572 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.807588527 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.814010453 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.803989184 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.802358116 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.804200098 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.805210696 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.80409004 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.806140606 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.812166626 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.807592104 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.817171312 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.814410219 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.810706991 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.805053983 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.808452279 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.814269496 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.803553936 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.806019882 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.807575499 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.804613738 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.806441615 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.80967936 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.806789609 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.810672673 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.806609265 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.806156022 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.813401444 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.806724966 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.807049695 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.806960146 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.810124638 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.806354909 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.803672422 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.806932299 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.806087528 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.813272396 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.808507053 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.807703707 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.808508926 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.806681325 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.809139723 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.811717972 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.808105986 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.80658535 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.80565169 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.808620535 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.808231341 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.808069561 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.805198452 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.808183842 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.807880227 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.811544137 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.817395087 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.806162574 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.810486427 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.808101659 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.808647703 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.808869221 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.809031531 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.805577815 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.806973116 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.808131703 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.808513618 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.806212031 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.810977051 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.808349568 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.808627961 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.810153294 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.809204443 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.811306557 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.82062427 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.818449412 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.806692775 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.809317816 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.80891749 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.811044344 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.811351001 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.808005447 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.809864049 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.810150228 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.80955837 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.811119761 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.809601071 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.812951318 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.825494812 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.81202231 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.809514142 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.809426956 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.813301636 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.810410823 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.807541357 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.81132068 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.81129738 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.814030249 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.820664288 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.810920531 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.815905156 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.812066927 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.813975876 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.814901507 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.81494603 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.820606472 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.815705275 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.811594161 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.81190208 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.816589894 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.828989792 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.812046632 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.821814572 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.843466574 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.811077469 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.812541819 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.81167894 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.810645526 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.812216397 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.812929027 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.812500446 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.810369558 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.812379896 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.811371107 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.811251398 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.819466202 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.812793945 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.811215852 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.81139329 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.812330416 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.813127111 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.808462387 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.812174162 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.810986872 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.813627889 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.811001065 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.812112668 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.810748042 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.825604977 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.824594422 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.813386015 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.812573089 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.810193642 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.814825168 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.815158192 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.824449301 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.822242696 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.81360966 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.812498773 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.814008822 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.812974766 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.810494031 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.813576457 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.813073936 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.813708465 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.811126606 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.824286974 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.823762568 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.816207072 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.811998695 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.814988096 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.813311081 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.815525561 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.813367148 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.813019442 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.814831779 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.81625221 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.818217876 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.814370382 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.814193013 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.816886923 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.821959579 seconds)
  done (took 1074.740488706 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.812219593 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.812049588 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.810103624 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.811771776 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.81145093 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.811712121 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.811872219 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.810392542 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.812159969 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.81229801 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.811438571 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.810763899 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.811460443 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.811311854 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.812228515 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.812307114 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.812408369 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.812739469 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.812967726 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.813631729 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.814117504 seconds)
  done (took 39.793336632 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.815570713 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.813482612 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.813501984 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.816616382 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.815157541 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.815881735 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.811002557 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.816447869 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.815015518 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.813785265 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.815724894 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.816452987 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.813320854 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.814667658 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.812128762 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.816303536 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.817579296 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.814289278 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.816388422 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.81420451 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.818828909 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.81440812 seconds)
  done (took 41.674204079 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.816296093 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.817684245 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.816014737 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.816634563 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.815871089 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.815582167 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.817510299 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.816709206 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.819500704 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.817275816 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.816316101 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.818766318 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.824335614 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.82443172 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.819247593 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.817629108 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.962405867 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.817714911 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.81853352 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.817627074 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.815818246 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.822934467 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.816433497 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.815766689 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.816931882 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.818134282 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.817874166 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.819899633 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.818356 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.818006089 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.824430111 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.818089469 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.818048992 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.82078033 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.818662194 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.819436646 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.823652429 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.81989385 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.815985957 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.817774619 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.829203664 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.845220574 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.819573437 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.823754891 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.819972551 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.817803398 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.821791211 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.829977186 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.815986844 seconds)
  done (took 91.052706889 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.818576639 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.819608342 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.817514719 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.819319466 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.81806815 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.818507746 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.819680634 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.818912692 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.816750623 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.81631693 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.819147131 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.815856385 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.816389436 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.820002423 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.81977299 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.817064824 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.816140911 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.816829578 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.815543067 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.817095187 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.814657197 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.818970088 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.820741946 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.81604498 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.821969837 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.816289544 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.8175227 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.820984058 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.814815046 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.815340858 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.817654482 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.821286417 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.823194221 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.814377183 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.816565172 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.819110653 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.820811312 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.815163998 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.817709609 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.818815098 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.816793456 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.818356387 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.816065392 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.816863659 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.817006407 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.818596177 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.819928095 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.816005175 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.818195122 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.821885918 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.819868726 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.816919564 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.819674019 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.817082797 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.817996314 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.818738591 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.814230611 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.815343756 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.81710832 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.813264237 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.814342654 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.816930652 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.814359047 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.816794756 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.816760011 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.813043423 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.812972354 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.816986652 seconds)
  done (took 125.340377537 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.816526175 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.814359679 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.814456546 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.815681894 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.815958544 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.815541066 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.815553609 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.814252557 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.815365253 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.814925278 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.817195984 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.814847213 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.81565239 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.814328484 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.815570801 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.815176548 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.81598251 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.816417986 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.815418409 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.816424884 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.816607321 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.814917566 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.816138925 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.817634467 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.815759084 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.815300391 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.816787177 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.817476013 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.815866328 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.81654326 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.816598419 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.816278329 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.815774713 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.816363085 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.817590468 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.81863763 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.819171362 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.815538541 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.818928103 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.817956032 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.817975673 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.817942058 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.817307746 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.8182172 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.817729175 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.817914663 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.81682455 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.819772681 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.81743114 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.816779546 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.815895009 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.81861028 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.81833702 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.818459547 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.819352077 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.819826584 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.816997514 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.817056806 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.816932874 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.817470983 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.816389928 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.817826615 seconds)
  done (took 114.385703079 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.817398666 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.819310954 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.818915032 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.816024013 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.819695461 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.817579706 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.817884113 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.819194585 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.818866664 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.819574508 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.817515603 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.816179709 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.816122591 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.821255077 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.816897688 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.816128306 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.817833142 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.817038262 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.81936971 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.816409689 seconds)
  done (took 38.107344685 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.815827158 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.819595956 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.815766345 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.817836546 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.817162121 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.815592035 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.819887993 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.819151055 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.81743318 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.81844787 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.819333117 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.820831018 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.815481066 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.816330044 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.819534363 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.808043254 seconds)
  done (took 30.824538452 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.806221393 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.808771489 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.810552268 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.810027263 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.804838155 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.805338911 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.80841715 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.806621735 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.807996327 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.806277546 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.808090763 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.808047206 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.806312707 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.80900696 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.805433027 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.806124335 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.802767706 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.803991352 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.805901462 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.810882991 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.80166067 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.802086243 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.805282286 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.805236225 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.803034356 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.805304824 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.802230101 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.802804344 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.801707577 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.806214113 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.801877618 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.804323407 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.801933394 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.802416263 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.803811325 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.801073136 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.803934545 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.804401727 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.804763564 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.804641786 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.806458734 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.803440564 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.806115761 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.807380463 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.803054676 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.806159862 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.801373182 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.804889295 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.803016524 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.801517608 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.807510097 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.806916008 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.806890295 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.804165185 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.806702388 seconds)
  done (took 101.025913392 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.805209454 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.809703422 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.803684698 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.806943749 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.80400557 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.803121552 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.804051846 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.801525186 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.803316824 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.804697281 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.803303997 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.803839849 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.802793903 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.807705279 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.803971785 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.808454962 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.804077342 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.801048422 seconds)
  done (took 34.219324919 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.806128944 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.802671598 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.805097017 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.801972072 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.804221197 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.805906549 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.803144714 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.805551181 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.805895256 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.803862916 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.804034002 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.808675958 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.805980821 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.807783321 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.801338433 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.80175014 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.805441521 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.808650333 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.803311167 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.804095714 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.805208373 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.80465004 seconds)
  done (took 41.441864628 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.801709505 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.802379766 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.821242537 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.828621912 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.82653453 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.841267037 seconds)
  done (took 12.657849511 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.80387917 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.803128385 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.803078334 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.807769083 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.806359417 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.801818054 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.802060751 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.799911321 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.802954879 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.805373036 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.801876735 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.80579186 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.805754268 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.800580369 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.803481399 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.803832231 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.800927523 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.799250998 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.803063493 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.801488862 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.801864541 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.802763711 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.797368883 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.799873091 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.79856601 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.800361652 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.799766779 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.797361795 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.795824277 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.801559657 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.798821321 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.799222107 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.798203655 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.797580899 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.80148654 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.798382126 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.798400273 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.798671775 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.802238589 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.796924261 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.801288932 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.799431198 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.805782124 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.796272662 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.797800175 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.797124701 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.797722039 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.799371073 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.798021716 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.801121243 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.800702724 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.796086771 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.801776029 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.804334235 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.798303472 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.798583091 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.798140411 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.795933156 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.80201097 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.801692501 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.798508349 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.797974226 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.797530053 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.799408289 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.798847605 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.796351543 seconds)
  done (took 120.563128503 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.796037219 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.79741832 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.793948395 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.800492966 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.793477732 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.794802365 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.795348946 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.79493971 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.794892271 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.796916947 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.797299729 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.795542398 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.79639846 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.797704477 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.796669011 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.796325744 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.79487853 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.793887757 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.795580219 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.796294917 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.795750523 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.795089601 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.798187778 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.795040231 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.795827573 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.80021906 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.79347803 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.793198423 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.79694603 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.795328296 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.797310115 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.799178419 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.796692704 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.795137672 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.797570159 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.794354017 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.801893178 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.791251784 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.793272049 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.798620069 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.794777286 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.800761629 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.796959263 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.794310345 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.793855922 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.79632445 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.794288664 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.799385069 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.792968444 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.797734696 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.795648196 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.794198322 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.792251465 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.793768841 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.791621904 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.793470749 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.797974843 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.792979526 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.792374245 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.798193084 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.793167315 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.795802152 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.796744695 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.794414083 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.797598422 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.793934765 seconds)
  done (took 120.250946572 seconds)
done (took 2496.251389929 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.812847535 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.858930211 seconds)
  done (took 15.395505636 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.953508581 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.908808351 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.795010554 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.812804323 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.790782487 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.811399311 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.806756949 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.791011009 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.792131793 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.796153614 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.794452443 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.982296318 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.799219432 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.79082714 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.794096503 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.888881835 seconds)
  done (took 51.037419789 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.797597832 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.797443927 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.809599201 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.796480785 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.798567868 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.807740283 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.828492461 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.798750307 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.829560146 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.811330154 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.863167821 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.807357928 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.793642752 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.845454514 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.811323959 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.810634653 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.886596724 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.870131851 seconds)
  done (took 34.48830507 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.871223664 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.798060194 seconds)
  done (took 10.405072329 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.824618348 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.793238138 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.816723958 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.801471437 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.811587503 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.816340197 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.790972481 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.789669415 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.81446889 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.786154859 seconds)
  done (took 69.773087066 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.798018398 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.795160771 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.793075084 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.792527529 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.784721734 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.788947783 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.791756176 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.786873031 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.472109525 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.828401477 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.799470041 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.797516956 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.79422955 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.795638193 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.791295492 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.818084544 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.952710454 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.790585419 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.789437801 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.796531224 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.799089911 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.845358747 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.807014807 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.795580091 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.826833247 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.477130545 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.804362346 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.800753718 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.902418908 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.79391224 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.79404955 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.798424134 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.797871414 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.181963126 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.117969732 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.793266286 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.801041814 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.803237754 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.793214596 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.916567377 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.794999382 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.800576451 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.740231902 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.115644667 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.879467888 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.83556717 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.152376184 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.797439041 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.800563915 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.824436237 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.794793815 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.795160178 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.810886549 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.31296168 seconds)
  done (took 128.589003806 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.78898439 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.077012582 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.941915963 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.7927567 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.064766045 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.996968072 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.789068463 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.84134463 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.790794151 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.994321381 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.954256163 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.901412263 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.790902981 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.790405316 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.787213467 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.793165108 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.952389892 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.860893518 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.792464623 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.787468717 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.817215723 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.0004799 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.919295922 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.79510719 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.812933291 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.002966869 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.914670105 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.89986826 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.080716355 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.790933971 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.85916298 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.792168388 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.789154021 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.792463103 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.94797743 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.889747087 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.880384559 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.791655678 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.792569206 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.790691876 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.456666754 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.989460908 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.889510063 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.937205675 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.037993778 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.996676469 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.439112275 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.79149187 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.430173791 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.954692988 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.010523342 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.000538603 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.915785243 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.79276184 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.152858371 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.789947316 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.789156604 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.028399854 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.032849754 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.892619139 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.795062214 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.791194167 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.790163515 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.034901553 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.79189677 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.888748381 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.799696889 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.79095517 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.89087242 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.894660985 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.039707727 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.009312617 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.82536822 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.094117191 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.26540893 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.009724126 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.85985508 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.026149702 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.792923585 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.790877291 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.882337313 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.543498184 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.95135905 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.041520878 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.018269932 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.828395736 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.431123424 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.792445117 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.98781813 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.979241568 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.986312073 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.041100644 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.942817258 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 4.990202164 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.792200699 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.79403636 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.001709221 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.931459842 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.794028598 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.151325219 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.026738277 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.357645361 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.825665882 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.092283487 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.928230799 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.159572384 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.421225699 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.796278309 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.962294955 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.835947472 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.796070963 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.79349751 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.985921627 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.605081071 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.792369821 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.315969137 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.86091883 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.799706627 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.998536644 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.79519073 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.003229605 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.797787099 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.031940013 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.048350109 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.830426581 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.040528171 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.038225671 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.58371183 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.041683569 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.041809129 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.917631528 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.019138144 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.390214552 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.796863052 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.069586506 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.797497904 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.793204746 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.961851038 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.798515398 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.032288137 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.797222524 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.023716988 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.821882894 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.953283927 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.796482994 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.0380918 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.831891827 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.852118975 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.798100085 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.928663699 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.802821043 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.681198524 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.950691569 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.800625609 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.796621579 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.482483452 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.797451009 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.944212139 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.034928525 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.818983116 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.868269841 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.322113946 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.797060212 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.885372436 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.824958814 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.54007987 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.798393164 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.953453022 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.767288774 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.247105926 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.795889992 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.038955436 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.98379817 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.804193728 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.796777385 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.539681307 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.502441581 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.800981121 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.958405789 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.523631535 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.451195556 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.999507067 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.800412775 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.925986174 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.801062431 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.877317525 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.151908461 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.798593626 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.798800672 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.800603233 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.797853509 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.799562717 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.08180392 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.829991517 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.324974355 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.937168939 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.0164256 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.108338666 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.018983042 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.845634059 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.806772331 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.047503144 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.803570199 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.864359338 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.802210047 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.823023907 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.032189565 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.800886541 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.010226648 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.054444007 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.73598954 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.849938569 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.801775447 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.801604075 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.797052645 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.9516086 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.890424742 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.800343286 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.798225579 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.909141101 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.929410367 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.991388242 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.39115871 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.975445371 seconds)
  done (took 882.697766451 seconds)
done (took 1194.110540054 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.799042497 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.798824229 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.789286772 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.805800838 seconds)
  done (took 28.930531241 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.812224806 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.810157856 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.811798707 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.810771512 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.811551526 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.810924764 seconds)
  done (took 12.609578526 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.842149909 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.807824244 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.806125091 seconds)
  done (took 21.199457699 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.878807135 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.216132243 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.919658728 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.247842709 seconds)
  done (took 10.006672088 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.813712329 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.812166432 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.811980221 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.813784735 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.81239079 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.814996336 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.812993119 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.813399941 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.815487066 seconds)
  done (took 18.064053214 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.265886517 seconds)
done (took 96.812532291 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.272426613 seconds)
    (2/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.11879161 seconds)
    (3/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.5013528 seconds)
    (4/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.989235554 seconds)
    (5/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.039741589 seconds)
    (6/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.202615727 seconds)
    (7/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.841539599 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.972666562 seconds)
    (9/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.126025984 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.916207169 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.04991427 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.856376484 seconds)
    (13/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.905745113 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.058020411 seconds)
    (15/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.41804658 seconds)
    (16/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.731069073 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.839343611 seconds)
    (18/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.909386124 seconds)
    (19/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.915155791 seconds)
    (20/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.797683866 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.486144163 seconds)
    (22/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.975952165 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.790212507 seconds)
    (24/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.851222977 seconds)
    (25/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.894312319 seconds)
    (26/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.822363537 seconds)
    (27/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.114125563 seconds)
    (28/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.899597445 seconds)
    (29/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.897510193 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.196053178 seconds)
    (31/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.383708914 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.61533108 seconds)
    (33/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.838947751 seconds)
    (34/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.211892816 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.866517815 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.941606751 seconds)
    (37/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.976098725 seconds)
    (38/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.844816696 seconds)
    (39/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.830067617 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.115906822 seconds)
    (41/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 8.012117746 seconds)
    (42/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.797545254 seconds)
    (43/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.043185468 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.803109936 seconds)
    (45/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.040293458 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.73959179 seconds)
    (47/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.888801668 seconds)
    (48/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.023839821 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.890906162 seconds)
    (50/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.839545857 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.60500657 seconds)
    (52/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.823409122 seconds)
    (53/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.603502078 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.012150491 seconds)
    (55/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.923549611 seconds)
    (56/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.060108613 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.088504894 seconds)
    (58/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.284538246 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.879663002 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.888890716 seconds)
    (61/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.101221457 seconds)
    (62/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.908250909 seconds)
    (63/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.317930034 seconds)
    (64/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.95233042 seconds)
    (65/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.829420649 seconds)
    (66/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.30492339 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.121697666 seconds)
    (68/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.122526172 seconds)
    (69/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.802881972 seconds)
    (70/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.901545087 seconds)
    (71/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.815880418 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.795935169 seconds)
    (73/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.910372527 seconds)
    (74/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.816445726 seconds)
    (75/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 3.579124798 seconds)
    (76/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.805463514 seconds)
    (77/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.912709002 seconds)
    (78/309) benchmarking ("sort", Float32, false)...
    done (took 5.563567519 seconds)
    (79/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.349131538 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.217387702 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 5.520352295 seconds)
    (82/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.403952159 seconds)
    (83/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.80387357 seconds)
    (84/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.076582245 seconds)
    (85/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.915374974 seconds)
    (86/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.990719442 seconds)
    (87/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.060209553 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.926909986 seconds)
    (89/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.802639441 seconds)
    (90/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.028415795 seconds)
    (91/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.966232273 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.141019536 seconds)
    (93/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.955845687 seconds)
    (94/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.310642915 seconds)
    (95/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.008831429 seconds)
    (96/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.832699906 seconds)
    (97/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.180817853 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.138830126 seconds)
    (99/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.033919994 seconds)
    (100/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.119023483 seconds)
    (101/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.881659255 seconds)
    (102/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.289608301 seconds)
    (103/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.200961067 seconds)
    (104/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.988084403 seconds)
    (105/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.839202657 seconds)
    (106/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.335595168 seconds)
    (107/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.969648053 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.201002205 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.822150981 seconds)
    (110/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.182847613 seconds)
    (111/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.037043843 seconds)
    (112/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.850334434 seconds)
    (113/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.907311633 seconds)
    (114/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.322919193 seconds)
    (115/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.926952798 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.958292085 seconds)
    (117/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.994188458 seconds)
    (118/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.8197114 seconds)
    (119/309) benchmarking ("perf_sum", Float64, true)...
    done (took 3.41970355 seconds)
    (120/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.263804151 seconds)
    (121/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.111496311 seconds)
    (122/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.804277276 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.46093994 seconds)
    (124/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.058833037 seconds)
    (125/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.928174163 seconds)
    (126/309) benchmarking ("sort", Bool, false)...
    done (took 2.26266646 seconds)
    (127/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.844494848 seconds)
    (128/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.660248871 seconds)
    (129/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.086612258 seconds)
    (130/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.500014286 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.795166509 seconds)
    (132/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.832836807 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.042471895 seconds)
    (134/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.972327584 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.110259744 seconds)
    (136/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.108713706 seconds)
    (137/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.826035191 seconds)
    (138/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.427934375 seconds)
    (139/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.109529626 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.163207274 seconds)
    (141/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.835041189 seconds)
    (142/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.029968746 seconds)
    (143/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.11311285 seconds)
    (144/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.959603137 seconds)
    (145/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.405876441 seconds)
    (146/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.894842564 seconds)
    (147/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.938530595 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.05952504 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.850972904 seconds)
    (150/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.807520254 seconds)
    (151/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.125421896 seconds)
    (152/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.217447435 seconds)
    (153/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.424888723 seconds)
    (154/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.902610193 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.743220456 seconds)
    (156/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.830798251 seconds)
    (157/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.807816807 seconds)
    (158/309) benchmarking ("sort", Int8, false)...
    done (took 4.892772871 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.897878387 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.088514171 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.851605898 seconds)
    (162/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.810634565 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.890282164 seconds)
    (164/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.849284403 seconds)
    (165/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.849474075 seconds)
    (166/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.017597191 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.471654022 seconds)
    (168/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.205458979 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.21362472 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.979547857 seconds)
    (171/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.811050567 seconds)
    (172/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 3.801392761 seconds)
    (173/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.943199429 seconds)
    (174/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.849112052 seconds)
    (175/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.929964152 seconds)
    (176/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.968064469 seconds)
    (177/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.877972655 seconds)
    (178/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.90822641 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.848181916 seconds)
    (180/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.826302314 seconds)
    (181/309) benchmarking ("sort", BigInt, false)...
    done (took 6.825794289 seconds)
    (182/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.856330253 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.51069445 seconds)
    (184/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.223389041 seconds)
    (185/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.326491059 seconds)
    (186/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.908619851 seconds)
    (187/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.81015498 seconds)
    (188/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.868840562 seconds)
    (189/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.016082442 seconds)
    (190/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.895909673 seconds)
    (191/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.824544223 seconds)
    (192/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.825289783 seconds)
    (193/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.02888921 seconds)
    (194/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.823821105 seconds)
    (195/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.939153371 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.120956736 seconds)
    (197/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.419409312 seconds)
    (198/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.962899415 seconds)
    (199/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.880948752 seconds)
    (200/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.02454705 seconds)
    (201/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.926846806 seconds)
    (202/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.235449843 seconds)
    (203/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.16405769 seconds)
    (204/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.178166014 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.105689075 seconds)
    (206/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.95321874 seconds)
    (207/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.665084367 seconds)
    (208/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.815997131 seconds)
    (209/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.99081724 seconds)
    (210/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.824738126 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.692033638 seconds)
    (212/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.103946487 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.045338509 seconds)
    (214/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.442166539 seconds)
    (215/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.850449622 seconds)
    (216/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.833633272 seconds)
    (217/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.909711769 seconds)
    (218/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.828846915 seconds)
    (219/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.229502095 seconds)
    (220/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.849715266 seconds)
    (221/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.016590209 seconds)
    (222/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.813013272 seconds)
    (223/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 8.25173768 seconds)
    (224/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.367143049 seconds)
    (225/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.342768782 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.858599098 seconds)
    (227/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.234628989 seconds)
    (228/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.958941497 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.870099877 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.204202257 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.496780947 seconds)
    (232/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.031495157 seconds)
    (233/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.588779924 seconds)
    (234/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.094464842 seconds)
    (235/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.012417484 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.719838507 seconds)
    (237/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.972853892 seconds)
    (238/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.831597185 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.927685874 seconds)
    (240/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.81442243 seconds)
    (241/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.282196104 seconds)
    (242/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.348475509 seconds)
    (243/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.430478049 seconds)
    (244/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.354641196 seconds)
    (245/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.044610663 seconds)
    (246/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.830423807 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.51365795 seconds)
    (248/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.899964071 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.890829599 seconds)
    (250/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.831834451 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.901287624 seconds)
    (252/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.887498732 seconds)
    (253/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.814061853 seconds)
    (254/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 3.375980764 seconds)
    (255/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.832040209 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.500181818 seconds)
    (257/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.828514407 seconds)
    (258/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.816001574 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.930458626 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.951894867 seconds)
    (261/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.990381064 seconds)
    (262/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.134877547 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.166644066 seconds)
    (264/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.172184999 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.860803181 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.851562707 seconds)
    (267/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.049091647 seconds)
    (268/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.455600376 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.215461769 seconds)
    (270/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.847912829 seconds)
    (271/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.829819657 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.230816518 seconds)
    (273/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.810404657 seconds)
    (274/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.919878902 seconds)
    (275/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.752204957 seconds)
    (276/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.858457364 seconds)
    (277/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.815623775 seconds)
    (278/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 3.290213957 seconds)
    (279/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.892615105 seconds)
    (280/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.10522347 seconds)
    (281/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.919347047 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.429477797 seconds)
    (283/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.095088414 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.968967246 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.927377275 seconds)
    (286/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.923548716 seconds)
    (287/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.832362849 seconds)
    (288/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.087963444 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.622014461 seconds)
    (290/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.001896002 seconds)
    (291/309) benchmarking ("sort", Float64, false)...
    done (took 5.667958971 seconds)
    (292/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.096367081 seconds)
    (293/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.826190873 seconds)
    (294/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.928846591 seconds)
    (295/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.002528783 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.87963904 seconds)
    (297/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.834929649 seconds)
    (298/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.308840363 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.093605721 seconds)
    (300/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.047908423 seconds)
    (301/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.838573031 seconds)
    (302/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 5.620311661 seconds)
    (303/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.939415141 seconds)
    (304/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.980159069 seconds)
    (305/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.486854161 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.855763145 seconds)
    (307/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.179916464 seconds)
    (308/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.83508125 seconds)
    (309/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.043068027 seconds)
  done (took 1004.368072427 seconds)
done (took 1006.378095348 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.866101477 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.860055414 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.843662096 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.867747488 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.9603509 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.878485542 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.853694297 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.847027357 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.890732702 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.895304273 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.844391405 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.877289385 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.848042411 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.843236956 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.843209133 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.861155127 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.153664812 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.873300477 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.861038482 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.852911805 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.86341968 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.843940804 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.894060424 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.878367644 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.84898524 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.84910143 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.847920894 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.863497545 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.956734097 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.84910957 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.848067713 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.858714641 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.1545533 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.871520331 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.839648264 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.865521948 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.860333663 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.854487438 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.84905437 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.877910789 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.296662554 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.851809039 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.846893643 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.845734085 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.845851492 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.852494487 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.847860992 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.853095024 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.860606239 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.8601605 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.292375853 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.865912385 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.851574322 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.846615673 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.856470425 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.847299684 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.851267218 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.864100976 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.86621815 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.864254783 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.144890127 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.878288976 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.849830464 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.864208063 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.854333104 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.330696801 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.847237347 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.856026119 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.294267668 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.855977482 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.330768624 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.86208397 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.85135667 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.862017504 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.880886429 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.156114861 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.867524927 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.847970039 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.859073342 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.844988026 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.857182196 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.862301776 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.852853947 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.852467082 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.863187756 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.882317972 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.857040526 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.848398133 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.857856367 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.867613933 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.857671353 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.860598153 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.851895928 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.845821774 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.859901504 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.852623643 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.853478075 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.852150406 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.852665528 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.862221448 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.293531706 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.871952984 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.847364515 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.844164029 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.849476933 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.863718358 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.296312278 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.857962375 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.871331146 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.898612909 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.851167064 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.149277165 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.880262604 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.865657804 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.860668241 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.852881831 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.843442991 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.147722768 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.322788416 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.871459285 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.852091442 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.850726706 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.867499876 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.850324252 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.846247808 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.159217399 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.878832456 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.864056419 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.972834876 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.860765015 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.884698391 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.847797368 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.855714955 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.884784633 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.869093865 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.883387621 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.854699338 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.866926877 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.869119127 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.849517331 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.865823962 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.865072961 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.851879573 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.857983286 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.845717043 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.884230862 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.868291177 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.865654268 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.872266048 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.971415311 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.849674688 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.152040625 seconds)
done (took 290.785772998 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.921867022 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.847243637 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.950910788 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.850128634 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.940128487 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.937410069 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.84762158 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.847537998 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.847665927 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.226038615 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.847507833 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.852650849 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.850598548 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.850203469 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.939548382 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.85021991 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.849539937 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.189217059 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.853897685 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.92422798 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.845631011 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.84922825 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.850387742 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.230514731 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.842304489 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.847674692 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.926046262 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.849382936 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.195515493 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.846795275 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.845967833 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.198619398 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.940704629 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.867796606 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.860642164 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.858679457 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.934584963 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.85782981 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.932552299 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.932205658 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.949378085 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.892401836 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.848456444 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.845304226 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.854275381 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.852474102 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.848937002 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.881216921 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.841795735 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.850070789 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.190681067 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.861145593 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.848956767 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.849974514 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.849201357 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.883313533 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.847487663 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.852486086 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.941233322 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.85254433 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.914126931 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.232706489 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.228513091 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.850493243 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.848303693 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.849015482 seconds)
  done (took 183.08204686 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.918730835 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.930808806 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.921877385 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.854668905 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.902051268 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.923943865 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.859713885 seconds)
  done (took 15.092388053 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.858605253 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.850692077 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.901477162 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.900356103 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.855435132 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.003551734 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 2.281320024 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.863140577 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.848875126 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.906143833 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.852949648 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.852687123 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.858092933 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.848141378 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.900437025 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.863761044 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.966994311 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.855511043 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.853197998 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.005305576 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.850084277 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.85839523 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.907846845 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.863340139 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.853811887 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.857913719 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.456090017 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.854176861 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.850207205 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.852168177 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.848965769 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.898041881 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.852618547 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.851396784 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.850463347 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.969044958 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.849590406 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.846787116 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.848555024 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.844228929 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.849971432 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.849194847 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.849188707 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.851456823 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.851559073 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.874192164 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.851092547 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.850579815 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.84974546 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.852113915 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.905392642 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.851109383 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.848373913 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.847853412 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.906485921 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.858485689 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.852467856 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.848209652 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.851486275 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.848015764 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.004776262 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.900209296 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.851232131 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.899349583 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.851701074 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.851081978 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.851270839 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.852024743 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.946389368 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.851056081 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.900345127 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.84858687 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.00974231 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.875236586 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.852625562 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.853862662 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.855181183 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.853158364 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.846392967 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.857709036 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.849528229 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.853158957 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.858425084 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.849664019 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.849956556 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.967978178 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.985686144 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.851436296 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.865618815 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.859245657 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.849825861 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.909204654 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.852275293 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.850040066 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.906915939 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.968621908 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.909540454 seconds)
  done (took 204.571325078 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.85804714 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.861265533 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.85473089 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.870366925 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.853848136 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.853582818 seconds)
  done (took 12.935091782 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.855578706 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.854410654 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.853799226 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.853065354 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.854738988 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.854050377 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.854295025 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.85557894 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.857621493 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.854501824 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.854665622 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.854314888 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.854891744 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.854292515 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.85446293 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.853680977 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.856046643 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.85178504 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.854657834 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.854361877 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.997479924 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.85494546 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.854624391 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.856156953 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.858751205 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.853610208 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.862028548 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.854479228 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.85414948 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.863757615 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.858769232 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.854991805 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.855193851 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.859863158 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.859072549 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.855846598 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.858590579 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.857646716 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.85243268 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.856018458 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.856336666 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.855787596 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.855657645 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.856999953 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.856663579 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.860807618 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.859909019 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.864333238 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.856814051 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.855231113 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.856415288 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.855784099 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.857361735 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.858080417 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.858166524 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.861802617 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.862066528 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.857611584 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.856505081 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.856635171 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.856575696 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.856437532 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.857494852 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.860448368 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.864062756 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.857091564 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.857953912 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.861519859 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.857075554 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.856641432 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.859395928 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.853931626 seconds)
  done (took 136.612390404 seconds)
done (took 554.086614136 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.104366603 seconds)
  done (took 8.891275393 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.051672471 seconds)
  done (took 8.940031107 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.455582334 seconds)
  done (took 10.242299821 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.870197132 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.883634223 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.859791247 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.857359996 seconds)
  done (took 29.267775926 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.871543339 seconds)
  done (took 8.658746896 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.863296324 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.84967939 seconds)
  done (took 15.533673179 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.901681452 seconds)
  done (took 8.688962596 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.931114243 seconds)
  done (took 8.720549082 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.863643163 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.863894223 seconds)
  done (took 15.528040383 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.836234941 seconds)
  done (took 8.62377107 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.606843126 seconds)
  done (took 11.404335572 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.86301181 seconds)
  done (took 8.66393102 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.862191704 seconds)
  done (took 8.650718004 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.994598068 seconds)
  done (took 9.782234653 seconds)
done (took 163.384406342 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.854050691 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.856050489 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.854813438 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.853968661 seconds)
  done (took 29.206516051 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.891837533 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.893023951 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.893604496 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.902077305 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.895855653 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.892528655 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.883224615 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.885935653 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.902158996 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.894291322 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.893918899 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.894487605 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.891956131 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.885603856 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.894732366 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.894582406 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.903350411 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.894495869 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.885106519 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.89575842 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.860065381 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.903765597 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.895934127 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.859438922 seconds)
  done (took 47.176499164 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.059053427 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.930016397 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.013128693 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.911810071 seconds)
  done (took 9.702264696 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.911935555 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.910833262 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.929131023 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.963110851 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.98892845 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.923020954 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.886194676 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.881308122 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.868437372 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.913149099 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.989855821 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.93038153 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.997264531 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.859738161 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.075344978 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.860639088 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.860822866 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.912234323 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.963439585 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.977206316 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.861294039 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.911545141 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.916546283 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.92991377 seconds)
  done (took 48.0126322 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.859610199 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.868634632 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.866467232 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.860116234 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.86011794 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.860747238 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.866196682 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.861733702 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.881541303 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.861730383 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.859341692 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.859539761 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.858935138 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.860956223 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.859715533 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.873169126 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.8750653 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.860490225 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.864667125 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.867321544 seconds)
  done (took 39.077475794 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.854244595 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.708963046 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.206709342 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.111781535 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.855710541 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.855359058 seconds)
  done (took 31.384056695 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.87489751 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.867555414 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.860933241 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.918471606 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.002789406 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.871721593 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.861608057 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.871972633 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.908036438 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.925745957 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.882942349 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.889386611 seconds)
  done (took 24.529681521 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.857715158 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.859045495 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.858032485 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.875489929 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.873157355 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.870544456 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.869821086 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.85582794 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.877122202 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.88026283 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.870256553 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.87477433 seconds)
  done (took 44.218101621 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947886943 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.900047189 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.889608041 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.536318372 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.234542395 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.069055598 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.384211012 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.192524573 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.861550166 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.131234981 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.853776793 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9651407 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.113497931 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.377275229 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.891045679 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.313359692 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.148968257 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.069275661 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.883509232 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.515965357 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919311679 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.071996877 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.58488348 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.912542347 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.069254219 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.987664237 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.119294409 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.858574959 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990025694 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.892411641 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870097599 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.858981584 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.134487159 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.229831809 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962918508 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86896585 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.477993532 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.572468792 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.852781691 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.584965767 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.542823921 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.977134719 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870726259 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.859320917 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.794061887 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.037090281 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.241801595 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.865527299 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.571586909 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.858690714 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.870900538 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94975674 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.864021164 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.674945278 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.778773417 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.862495058 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.857751186 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868009339 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.430336158 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.954631005 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.072310376 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.834821929 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.954032654 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.521409744 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.244062065 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.004803198 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.865278028 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.865007477 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.795850025 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.519480171 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.912922168 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.189862987 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.882508263 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.512140068 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.163404033 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.88778928 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.802740135 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.132372238 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.417248647 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.835913601 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.089231103 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.862291527 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.797170688 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.89659463 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.795543415 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.130558325 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897418302 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.617480285 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.901319446 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.194945904 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.874439927 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88253237 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886438015 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.086535141 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.746280743 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.862298958 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.602743814 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.006144111 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884654495 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.197908699 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.797354921 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.867332121 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.11899919 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.07483997 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.960808512 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.355589102 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.0146415 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.453255194 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.916298897 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.037748728 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.911724165 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.129875805 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.916697067 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.95468496 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914294018 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.863452762 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.177044072 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.474636415 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.002051187 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.875096878 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.98939884 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.19661907 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.890012937 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.929525711 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.867209124 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.864735286 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.599242066 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.412314844 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.864807013 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.866618275 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.965804478 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.91251706 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.865019811 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.813612674 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.493346908 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.870551759 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.87971492 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.088480131 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.468840437 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.177377156 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.800325609 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.193737578 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.920479029 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.088230108 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.502993384 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.932030556 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.126386613 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.963805562 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.000676245 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.913741889 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883792879 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964580442 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887662776 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.03619716 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.159436294 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.869796295 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.8700115 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.612584311 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.898378016 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.872994555 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.871684709 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.617364407 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.136641409 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.885143819 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.8746135 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.755834396 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.88103909 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931736344 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.872171691 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.877540955 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.406242238 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.597318049 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.873552304 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.455096265 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.094130923 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.877849374 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.525477472 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.976951189 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.949329156 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.135512654 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.923348283 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.80175522 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.57864429 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.560478304 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.867703989 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.802963756 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.867801516 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877442785 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.87822628 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.064793244 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.140730624 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.907551579 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.523263619 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.906758136 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.878357615 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.873297766 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.868193574 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.380475198 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.95754018 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.082576093 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.91550442 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.012215509 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.882245187 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.802554214 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.872490414 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.873499438 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.870298307 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.869287956 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902191876 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.532291116 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.241902742 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.130662458 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.479334724 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.883087673 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.551808272 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.92443383 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.932077216 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.625642571 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.068336245 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.901770833 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895143724 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.881594401 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.528816488 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.573876049 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.437077415 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.187223901 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.168718826 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.303379069 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.107829242 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.899869971 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.206710179 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.803869718 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.426456608 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.92857897 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.210730849 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.819029047 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.956194361 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.508923263 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.206179506 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.885846458 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.098992994 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.256817115 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.546969556 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.033572309 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.082670446 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906245017 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.058424824 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.833651533 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.395288797 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.013855885 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.522429003 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.06906032 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.203102905 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.498798625 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.990830629 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.871485853 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.554500399 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955038517 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.583024386 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.043568385 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.084734848 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.76768138 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335663645 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.881314941 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.098650575 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.229427095 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.051227198 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.994942712 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.808721263 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.885004048 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.88377719 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.874856704 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.872178948 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.74782772 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.129838719 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.884623823 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.807760949 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.007592898 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.163256364 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.771851463 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.878904115 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.873734832 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.187873517 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.440238494 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.038298255 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.994296749 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.393033469 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.881729574 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.808690885 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.807544035 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.566950797 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.881279863 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.850721649 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.084658437 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.973748746 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.792875021 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.981990065 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.955813433 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.130375034 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.888675421 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.142014129 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.144645747 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.572520421 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899621733 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.975504569 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.494782405 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.978061824 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.875907521 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.11060081 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.629200106 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.102025469 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.910779878 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.832220035 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.87460157 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.089688611 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.875957624 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.73338504 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.098095524 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.597230854 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.880386785 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.204278668 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946231388 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.73379934 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.914016097 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.967423617 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.887556764 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955431308 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.886205248 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.887329406 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.887762688 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924161998 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.757751348 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.993863647 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.890824323 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.967952032 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.978877545 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.398667622 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.882844725 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.146801072 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.220840402 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.201217077 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.931663921 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.877338085 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.877171157 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.810517796 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026040291 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.102598818 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.15186143 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.006658294 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.993123736 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902533886 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.53010377 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.104124505 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.11952237 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.15368606 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.773584266 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.410229809 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.919193354 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.878134911 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.889351082 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.089413559 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.091433791 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.177650188 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.019823168 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.985631887 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.244826498 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.153279159 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.879484076 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.879391796 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.472329275 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.882705344 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.569985788 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.918942151 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.763749433 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.148390665 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.889402174 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.260537731 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.899978666 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.038960557 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.397005706 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.578789053 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.1677509 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.862721158 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.934956063 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.149304314 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.262512489 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.188751256 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948482302 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.891914592 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.985624541 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026702022 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.77962227 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.88053039 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.880541672 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.92903512 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.591067893 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.891557721 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.157956449 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.185528103 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.878419163 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.776043767 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904915238 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.890923043 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.104768726 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.149683185 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.129811631 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.892093416 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.888532854 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.697145238 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.152614059 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.935147124 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.816029909 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.885527803 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979389849 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.128254487 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.905072693 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.335311527 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.593523474 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.161168576 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.879889813 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904836752 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.074299144 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.249614515 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.197298072 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.412824986 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.093311694 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.4670913 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.484775018 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.184711226 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.887743204 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.06290946 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.18677279 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.886903896 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.990007745 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.922096152 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.148058937 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.18844957 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.89668384 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.551874401 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.848713949 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.224362987 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.435625229 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.822223021 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.89194828 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.943459554 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.884627642 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.011684048 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.894480593 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.755632187 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.071718797 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.666618783 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.164975716 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.889066335 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.872298474 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.545165947 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.186448957 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918582623 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.026146803 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.892190446 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.600084374 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.244732301 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.140343827 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.992205085 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.893868378 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.888133566 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.885211051 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.872736612 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.081593555 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.082435854 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.160358492 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.019888269 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.922602149 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.889086303 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.101114927 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.096491898 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.734636909 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.014238853 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.991671627 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.927989414 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.797807079 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.39382522 seconds)
  done (took 1673.873993816 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.901216444 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.912510536 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.93603512 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.911106633 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.897761121 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.931009209 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.917833169 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.900123235 seconds)
  done (took 57.128563669 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.893541866 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.082721714 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.895989556 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.887019075 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.895852553 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.887154753 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.057513952 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.896594759 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.899168699 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.896468716 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.88810248 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.895558186 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.209288593 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.90990192 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.887383256 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.885855273 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.902841407 seconds)
  done (took 74.706626127 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.92744684 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.963734011 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.911774111 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.900656138 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.870139009 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.899156566 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.769056872 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.918428579 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.890608873 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.122017187 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.521415028 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.911584679 seconds)
  done (took 90.430218784 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.898122842 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.894386854 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.894666646 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.894210981 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.895487097 seconds)
  done (took 11.304562765 seconds)
done (took 2182.565791425 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.202757363 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.107160001 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.121271317 seconds)
  done (took 6.051967461 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.038472526 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.085131992 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.206273926 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.211061918 seconds)
  done (took 10.367177399 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.179469027 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.27176845 seconds)
  done (took 6.274340285 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.28296933 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.894306382 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.269594699 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.88789035 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.891730124 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.890403125 seconds)
  done (took 22.498010369 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.892810284 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.895094442 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.892227624 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.895433664 seconds)
  done (took 9.399302443 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.873336277 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.592603872 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.875776508 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.889175958 seconds)
  done (took 21.055838764 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.640889854 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.651655453 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.636692199 seconds)
  done (took 9.753812888 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.357474853 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.781944653 seconds)
  done (took 8.963344815 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.157080651 seconds)
  done (took 3.982143551 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.024744605 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.202455182 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.403665715 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.405098865 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.494352895 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.619470755 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.213968777 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.138837855 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.301764573 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.325797469 seconds)
  done (took 24.956063063 seconds)
done (took 138.776129418 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.279926481 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.133408723 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.092776607 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.232963641 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.119042206 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.095111949 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.30965196 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.214897291 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.74561587 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.739659186 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.232686856 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.118434439 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.049067133 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.125810438 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.048988516 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.132514163 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.117214052 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.301471489 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.965053984 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.128239859 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.328592407 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.875635209 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.077329943 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.893134725 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.119820581 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.047111486 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.453923651 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.137920942 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.119638941 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.463068482 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.049167333 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.281005909 seconds)
  done (took 173.854616782 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.809976639 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.892347452 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.894903965 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.893218255 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.502105057 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.892315346 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.895049269 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.892915787 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.319614793 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.303397266 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.897355838 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.498790816 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.893823378 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.892913926 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.90983533 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.893341871 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.42725586 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.846131376 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.892792269 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.894071424 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.896751973 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.426517263 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.893346424 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.412807048 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.384091737 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.894112253 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.893572201 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.899562638 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.894827418 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.897597211 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.902335038 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.89446897 seconds)
  done (took 210.461875891 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.894052321 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.89720233 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.896483798 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.895392813 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.895227031 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.89399078 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.895539404 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.895513355 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.661780281 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.655272606 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.893654742 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.895661304 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.895347137 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.896039128 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.899260174 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.896020181 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.904268704 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.904877858 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.902655477 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.905908241 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.909674684 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.737207702 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.911821272 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.722011192 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.902215522 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.900630695 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.895003018 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.905563976 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.906867429 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.907711592 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.910282123 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.897460498 seconds)
  done (took 221.818519135 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.097552907 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.902817815 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.903193246 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.857135047 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.903163199 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.902338939 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.897266565 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.091774315 seconds)
  done (took 19.399823727 seconds)
done (took 627.372890245 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.349501967 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.188521956 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.076614113 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.926051272 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.177608016 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.957281165 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.922829912 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.984343579 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.648676034 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.987894707 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.579841553 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.940348294 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.658146617 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.94618356 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.05020478 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.980050843 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.458118979 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.546299289 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.107487896 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.001289461 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.093935945 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.854651709 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.000267951 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.662008498 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.682719954 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.898461831 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.106253253 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.465315416 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.932982587 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.090707809 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.680328397 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.30748008 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.93276047 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.919862094 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.975021203 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.95532298 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.271790086 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.933251915 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.043918128 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.654294374 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.997966695 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.530091727 seconds)
  done (took 104.309141081 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.893956674 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.892137429 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.89232905 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.892553774 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.893799419 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.893376709 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.892700418 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.892364162 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.892854154 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.891654124 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.892631286 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.894153994 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.892832109 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.894629891 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.892355696 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.892343299 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.893405081 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.895036003 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.893219249 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.893023656 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.892638209 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.892625303 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.907402652 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.893574103 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.894787522 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.893737072 seconds)
  done (took 51.078800793 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.9067128 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.050413632 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.130156223 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.923595231 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.905913442 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.910135946 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.923192081 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.910694629 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.908386925 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.909292578 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.001706546 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.911928897 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.924809015 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.129924459 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.920208728 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.906281846 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.908045787 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.907655889 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.054909641 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.92181005 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.925257145 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.91171572 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.925819421 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.918866997 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.908761541 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.907913884 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.910120955 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.381648517 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.915444084 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.002609322 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.950079202 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.928038457 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.344936629 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.14044835 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.960266692 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.91384135 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.908366466 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.007358409 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.913628325 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.908155282 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.925677391 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.912800635 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.129099361 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.408603487 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.920455807 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.908975117 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.393056082 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.014459284 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.949610047 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.920631889 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.132589432 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.923595983 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.910168808 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.909610632 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.945474993 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.921054779 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.909162275 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.272485197 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.920111436 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.928267193 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.913148286 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.909955272 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.064157107 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.917002318 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.053205704 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.917348528 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.915451281 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.910212621 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.132760576 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.924029682 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.414027675 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.92191021 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.910487436 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.00597735 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.059667445 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.418393989 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.922597061 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.066222329 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.36148764 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.93288375 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.917519834 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.374172136 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.93593118 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.91734329 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.912520742 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.913129015 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.911396242 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.954907256 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.926573206 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.348920058 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.416300375 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.284782964 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.935281275 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.926040942 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.91147499 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.272972118 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.918514473 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.911730546 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.127184289 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.424108539 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.92360477 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.91910557 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.402713335 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.924234783 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.930574062 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.919966766 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.139414905 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.925820984 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.956957803 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.912326825 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.918841013 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.915238354 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.931002813 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.91969982 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.912284311 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.389564991 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.024524312 seconds)
  done (took 236.721207792 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.906237015 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.908251448 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.905841087 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.906383537 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.905289119 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.911350328 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.906065463 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.904621303 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.911787316 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.905817221 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.906518918 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.906019345 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.906965738 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.909827479 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.401141683 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.917043881 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.521266432 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.910726958 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.908910987 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.924651853 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.589181891 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.92146901 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.910832112 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.910597287 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.910502613 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.910940222 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.916097362 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.956075175 seconds)
  done (took 169.154018686 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.916786689 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.099188047 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.935834236 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.953598986 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.929054797 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.915026416 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.940527552 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.938041328 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.92212782 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.915601337 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.915459218 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.978241823 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.931162097 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.058786846 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.95000176 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.948199436 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.025000305 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.925666472 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.915514921 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.915278649 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.946356805 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.914328434 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.97781198 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.047700444 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.935403259 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.034946028 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.922354656 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.918927358 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.916535757 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.035690403 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.933756225 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.977827849 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.949786172 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.940699635 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.041559415 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.038840923 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.027981389 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.947306152 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.924903514 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.916517493 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.915774922 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.905139878 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.034389339 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.936950553 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.918412338 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.026814918 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.939878577 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.920905942 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.927815045 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.917206307 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.932903729 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.937257712 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.98508763 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.054993876 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.952976707 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.948034611 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.942625402 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.191359524 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.929141763 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.019790434 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.913224325 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.038969726 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.939573137 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.90683772 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.91819184 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.92342168 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.946512421 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.952120712 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.025416879 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.928571104 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.020161837 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.954955866 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.92766745 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.917694522 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.919682647 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.035463037 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.04119575 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.954898299 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.959584305 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.954888359 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.917892414 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.919546167 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.907390677 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.937289639 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.927114477 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.038845221 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.03925634 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.929275122 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.92050675 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.920582534 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.921141846 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.945121724 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.051805399 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.956684317 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.022614891 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.98826516 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.995459691 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.936090333 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.933526076 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.928332851 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.984203584 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.935417223 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.931918043 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.242588889 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.991898117 seconds)
  done (took 207.965881002 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.404364802 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.977441126 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.980072488 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.207414964 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.34580654 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.807551013 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.971939041 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.973551883 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.998813379 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.157891134 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.031686746 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.982163603 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.960459973 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.946661255 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.970778582 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.991264119 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.974390976 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.271703545 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.091012074 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.103741929 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.955093243 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.274515849 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.287855243 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.345399308 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.008180642 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.308088206 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.653411794 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.214370165 seconds)
  done (took 63.052264297 seconds)
done (took 834.111725192 seconds)
SAVING RESULT...
DONE!
