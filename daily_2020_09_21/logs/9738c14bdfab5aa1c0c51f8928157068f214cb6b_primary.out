cset: moving following pidspec: 4213
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.630888498 seconds)
loading group "shootout"... done (took 1.111462724 seconds)
loading group "string"... done (took 0.411561442 seconds)
loading group "linalg"... done (took 7.678408786 seconds)
loading group "parallel"... done (took 0.157567026 seconds)
loading group "find"... done (took 1.286599054 seconds)
loading group "tuple"... done (took 1.89316837 seconds)
loading group "union"... done (took 12.40763121 seconds)
loading group "dates"... done (took 1.308243724 seconds)
loading group "micro"... done (took 0.201390058 seconds)
loading group "simd"... done (took 4.31325473 seconds)
loading group "io"... done (took 0.997879501 seconds)
loading group "random"... done (took 8.624170313 seconds)
loading group "problem"... done (took 1.44790018 seconds)
loading group "array"... done (took 19.234871148 seconds)
loading group "misc"... done (took 1.46036932 seconds)
loading group "scalar"... done (took 38.920422156 seconds)
loading group "sort"... done (took 3.12618534 seconds)
loading group "sparse"... done (took 11.64494199 seconds)
loading group "collection"... done (took 16.934836738 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.491626888 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.116232922 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.121101622 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.112919586 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.191883857 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.116120793 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.118437829 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.080241765 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.839127513 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.133157318 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.106799291 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.412820954 seconds)
done (took 5.195063069 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.167455302 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083236878 seconds)
    (2/2) benchmarking "String"...
    done (took 0.074426796 seconds)
  done (took 1.298352776 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.060822789 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128895672 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.061645905 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.062711198 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.062492225 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.061783441 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.061431301 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.061508385 seconds)
  done (took 1.641891939 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.067206463 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.063120631 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.060920179 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.06277558 seconds)
  done (took 1.398859669 seconds)
done (took 5.7313592 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.231267035 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.094861412 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.27615041 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.378177354 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.457701588 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.090442723 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.069979821 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.065815516 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.123217869 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.313015572 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.099944339 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.173196429 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.084909156 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.164543333 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.95971775 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.113046298 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081928842 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.117515176 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088835004 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127628726 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.370117622 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.072761568 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.069002227 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.065742619 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.063645896 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.639412908 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.656538993 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.124882132 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079135017 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.094865657 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.112112579 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.652320497 seconds)
  done (took 10.287953525 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.087846286 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.084760882 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.064412819 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.11884848 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.08715178 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.065442347 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070329641 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.062983748 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.082417149 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.11731006 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.086562398 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.092445578 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.061999709 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.064528752 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.069498457 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.189857259 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.074764331 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.07607987 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.062985983 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075967543 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.100350797 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.072509089 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.073367396 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.072588057 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.123021845 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.164246007 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.091932613 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.093538586 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.061268272 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.073716168 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.110885004 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.119926681 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06265137 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.060742094 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.117882423 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.090682219 seconds)
  done (took 4.377379026 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.932555821 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.088315471 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.094346414 seconds)
    (3/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.087263097 seconds)
    (4/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.585172303 seconds)
    (5/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.061465405 seconds)
    (6/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.142055426 seconds)
    (7/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.225058128 seconds)
    (8/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.068018317 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.37509606 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.108428358 seconds)
    (11/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.141060952 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.139351287 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.112535295 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.064601917 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.155584235 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.11066996 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.454061417 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.063772302 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.06230932 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.06171147 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.063986256 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.063369413 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.05955015 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.064620681 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.089569603 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.081818949 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.147359636 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.911342566 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.272962963 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.063106405 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.161158951 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.080395738 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.352384143 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.065788522 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.077401553 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.401101513 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.117331074 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.061014933 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.159547377 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.110895654 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.0604871 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.113347144 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.073444052 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.064717909 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.064849056 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.06446874 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.066964846 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.074005393 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.098932388 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.063338325 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.060852782 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.160882102 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.060567197 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.06192791 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.062980219 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.145638049 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.060650159 seconds)
    (58/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.133380684 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.059988961 seconds)
    (60/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.064406681 seconds)
    (61/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.096060847 seconds)
    (62/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.064278197 seconds)
    (63/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.081859787 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.089722308 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.330756983 seconds)
    (66/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.068261431 seconds)
    (67/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.063734761 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.208775593 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.072720181 seconds)
    (70/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.061777739 seconds)
    (71/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.06580367 seconds)
    (72/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.061946557 seconds)
    (73/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.063486372 seconds)
    (74/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.062536453 seconds)
    (75/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.067514025 seconds)
    (76/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.065321783 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.064741153 seconds)
    (78/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.103428146 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.06234115 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.079412911 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.065329404 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.062462053 seconds)
    (83/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.059789443 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.067060416 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.092949832 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.061112059 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.463685598 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.09575546 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.061781947 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.071078406 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.100613348 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.062955494 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.06647139 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.062936039 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.062587284 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.062117729 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.062912404 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.065096142 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.090874598 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.065686524 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.108832957 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.1388476 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.064925519 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.062715412 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.067790878 seconds)
    (106/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.060021658 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.065018131 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.065040506 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.062175963 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.064985629 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.064262529 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.061122236 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.102979597 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.062109313 seconds)
  done (took 21.24145325 seconds)
done (took 37.982778445 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.236583509 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.076013471 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.073783581 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.073911476 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.073580876 seconds)
  done (took 1.775144926 seconds)
done (took 3.006005994 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.102083445 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.059904325 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.093952685 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.092691048 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.059657636 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.059703158 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.094754468 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.060077118 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.092494748 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.093218371 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.095464424 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.094196729 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.059913082 seconds)
  done (took 2.296661547 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.065795499 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.076818641 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.078310781 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.058339893 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.067409408 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.076435825 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.058334646 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.076129093 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.081958376 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.076715594 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.076684937 seconds)
  done (took 2.018463029 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.065512443 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.076274789 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.078279889 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.057693382 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.068390263 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.077090038 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.057479837 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.076175685 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.078861422 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.076904697 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.07643528 seconds)
  done (took 2.007399864 seconds)
done (took 7.543104903 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.062233515 seconds)
  done (took 1.265575546 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.486946658 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.09995148 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.063785762 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.081136904 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.177612367 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.086745159 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.194686916 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.06617268 seconds)
  done (took 7.625357231 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.090006632 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.064147964 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.065622159 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.066454667 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.064252733 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.063092652 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.064446726 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.064866744 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.063789252 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.063791851 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.064364494 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.064121233 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.063486318 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.064734 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.063032433 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.063368867 seconds)
  done (took 2.355034979 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.0928311 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091359831 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.067291786 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.067641855 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.066223311 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.065808915 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.068931823 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.06734176 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.06475726 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.066494089 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.0681707 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.06656323 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.066369895 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.058269603 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.067561568 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.06837556 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.064914545 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.067393927 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.068319867 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.069118026 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.068307299 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.058116583 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.066496802 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.066981023 seconds)
  done (took 2.968762997 seconds)
done (took 15.433716894 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.168767489 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.069616615 seconds)
  done (took 1.449406159 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.064142225 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.0639234 seconds)
  done (took 1.356880375 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.06857866 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.05668779 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.073804615 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.065424284 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.057502757 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.056754231 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.071935242 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.05745898 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.057211647 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.057520602 seconds)
  done (took 1.851185581 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.058534154 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.064630714 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.062826199 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.064001604 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.062245709 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.057949139 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.060060573 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.058205203 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.064065246 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.057409229 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.061419209 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.076413839 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.060661563 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.077603513 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.061046045 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.061176466 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.062885078 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.060415796 seconds)
  done (took 2.362711848 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.057296354 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.057601303 seconds)
  done (took 1.352666145 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.060327765 seconds)
    (2/7) benchmarking "second"...
    done (took 0.057818452 seconds)
    (3/7) benchmarking "month"...
    done (took 0.060079747 seconds)
    (4/7) benchmarking "year"...
    done (took 0.060119198 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.05743137 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.056751574 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.057489544 seconds)
  done (took 1.639940582 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.386041321 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.114187286 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.318756047 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.063888227 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.071103091 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.237935983 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.05940673 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.063449651 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.063654681 seconds)
  done (took 2.650555375 seconds)
done (took 13.900916588 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.076161499 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.167181352 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.083098211 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.392479009 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.086309345 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.062182895 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.108157676 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.158364066 seconds)
done (took 2.385377563 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.223741511 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.249023671 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.858840544 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.064759571 seconds)
  done (took 3.412665769 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.306688603 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.07405805 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.074110487 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.062700838 seconds)
  done (took 1.767610889 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.060906978 seconds)
    (2/2) benchmarking "read"...
    done (took 0.066880181 seconds)
  done (took 1.37227403 seconds)
done (took 8.0271065 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.060318223 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.05967511 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.060317288 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.060425666 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.086835973 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.060128115 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.059474678 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.059044922 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.058970566 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.059463726 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.059373446 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059176275 seconds)
    (13/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.05954057 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.059507276 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.059521125 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059158559 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.059721944 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.059577923 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.059481174 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.059696773 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.059852423 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.059547415 seconds)
    (23/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.059569064 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.05916303 seconds)
  done (took 2.729479424 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.07432911 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.061555077 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.062283959 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.061974394 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.062778184 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.062358296 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.062275798 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.061130761 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.062672135 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.061129814 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062493312 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.062732438 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.06069748 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.062608255 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060979357 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.062879037 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.06233066 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061372029 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060691342 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.062580833 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.06236298 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061375143 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.062254363 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062118069 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.062845205 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06273489 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.061043936 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.061422772 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062097729 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.062715811 seconds)
  done (took 3.131716775 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.060532844 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.056039069 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.056714671 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.065141142 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.056580205 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.056178135 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.056988371 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.055897427 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.056174713 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.057467632 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.05649803 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.05579101 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.057120336 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.055593093 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.056183916 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.056408196 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.059958924 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.073200533 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.055994167 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.055819264 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.059673123 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.056089107 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.055695102 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.055877236 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.05654306 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.056780147 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.056120932 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.056124841 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.05596512 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.056812984 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.055938126 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.059549644 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.060720752 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.05643398 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.06528568 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.069582944 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.056180271 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.059666758 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.056812993 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.05548982 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.055634872 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.055544312 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.055800271 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.055834694 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.06513204 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.056315373 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.056814414 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.056482589 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.055875286 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.055591723 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.055700343 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.057332149 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.060877078 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.056916866 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.055662017 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.056585129 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.055527274 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.056718089 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.055774348 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.055714017 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.055450313 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.059371041 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.057348765 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.056559461 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.073383178 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.057132132 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.064914554 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.058515955 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.056315902 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.05931456 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.056391875 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.071511572 seconds)
  done (took 5.441979983 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.076715507 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.080481291 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.061328528 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.060625019 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.056702895 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.056284115 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.063149765 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.056562091 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061330036 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.074966486 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.056432521 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.060624586 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060418715 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.060301545 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.056332062 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.060812177 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.063563098 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.056179875 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.05671839 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.060314619 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.056424422 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.063438951 seconds)
  done (took 2.632937034 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.130693637 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06197372 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.098029565 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.070032013 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063866082 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069346746 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.061378666 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.061378012 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061550031 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062439963 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062184472 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061575728 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063905168 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062025563 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061948902 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.061965868 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061758087 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062162054 seconds)
  done (took 2.501699509 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.071568186 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.061756198 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.081031794 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.061930486 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.061489718 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.062218617 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064625517 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.06509278 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.061019133 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.061699418 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.064965794 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061653413 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.061103807 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061551491 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060665559 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06155738 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.060743754 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061146277 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064780494 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064654915 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.064521228 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064978839 seconds)
  done (took 2.670410866 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071554081 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.060590582 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075189112 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.061976071 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.056773738 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.056863928 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.061218597 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.060498108 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.061522867 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.060302919 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060483157 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.056257966 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.061756324 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06103982 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.062327734 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.060518928 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.060079166 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.061021681 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.060536581 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.056806591 seconds)
  done (took 2.493252367 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080294264 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.059050401 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.058694701 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076770476 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.058897389 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.05873268 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076989539 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.058757106 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.059198356 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078994344 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.05870976 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.058439491 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076978801 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07671645 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.05861064 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076551616 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076648489 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076440723 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.058535546 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058193633 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078627589 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.058794793 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07648806 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.058794161 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.058809983 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.058545351 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.058890568 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077395207 seconds)
  done (took 3.135635977 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.059898348 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.058947875 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.059054244 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.059709957 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.059797571 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.059410955 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.059353981 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.059416934 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.0592991 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.059874169 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.059243736 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.059544409 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.058849777 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.058969021 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.058959679 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.059346181 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059357754 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.059614628 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.059290863 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.059627763 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.058897999 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059372515 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.058784796 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.059395207 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.059807579 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.058860605 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.059447069 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.05936919 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.059621052 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.059416494 seconds)
  done (took 3.052329337 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.06871282 seconds)
    (2/2) benchmarking "in"...
    done (took 0.067033312 seconds)
  done (took 1.407264822 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.058145572 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072668702 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.056263227 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067300736 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.064514302 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.059914719 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.064541332 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06538818 seconds)
  done (took 1.776029316 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.062637964 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.083939429 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.058118334 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.05899019 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.061047739 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.113192227 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.069617024 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.071389656 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.070345771 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.060484608 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.058012904 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.069285809 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.057283962 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.069479542 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.059337689 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066093061 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06445412 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068979736 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.068924365 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.056333312 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068825889 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.058181054 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.056794751 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.058368966 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.057335445 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.063861458 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.072029049 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.068809988 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.065148197 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.055588861 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.074953459 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.056422091 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.057378955 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.065347271 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.060473138 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.057031885 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.090392358 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.056802928 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.061280461 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.056346002 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.067504778 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07558505 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.069486993 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.073440565 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.058074094 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.058397053 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.056281872 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.058086297 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.059700652 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.065155225 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.056229448 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.063700926 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.056160326 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.057589824 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.066068087 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.056717255 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.061393888 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.065311715 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069022913 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.066408407 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.064802481 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.070677265 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.064697354 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.06369336 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.05716259 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074313158 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.058079732 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.068348694 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.070022875 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.057604843 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068905329 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.056434958 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.055642446 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.056326969 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086764269 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.057832615 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.057277844 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.05633019 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.056446024 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.057647339 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.065279532 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061239217 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.063212697 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.059579739 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071205963 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.064920193 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.056285237 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.062265982 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.072680168 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.059695123 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.056419152 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.070975576 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.059360595 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.055977271 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.072198987 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.065091217 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.057521963 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.056979716 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.059444533 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.068907551 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.05769414 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.055854937 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.064506071 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.057761691 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.059092424 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.060613716 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.063362714 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.056541883 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.065200767 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.060983689 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.057977202 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.054871564 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.060068409 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.057418598 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.054649898 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.064445493 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.0559487 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.069080568 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.061291657 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.068172101 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.068609055 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.065220304 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070175866 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.055055864 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.054207017 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.071468226 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.063786716 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.056280502 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.071375559 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.055318958 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.065002532 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.187995657 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.059527653 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.066484148 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.056957784 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.059219617 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.057267176 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.062520403 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.058906238 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.058499116 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.061507384 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.065385808 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.068878581 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.057869725 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.064935405 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.057411001 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.071159871 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.066223928 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.061165308 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.060654492 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.058103593 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.068091951 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.062937692 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.065638521 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.056383718 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.057586634 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.057168491 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.06663881 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.065676299 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.058684545 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.063946752 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.060887714 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.057536204 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.057357919 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.058441944 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.060410173 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060266115 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.058046514 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064020404 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.065247842 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.072806414 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063274893 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.065193282 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.056248128 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.056251303 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.058503776 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.056610631 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.061301433 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.065409281 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.071725442 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.067294486 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.075934244 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.056571045 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.06581518 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.057650835 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.072198801 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.06884114 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.057845752 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.061170445 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.055849791 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.058469365 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.065342787 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.067290073 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.069266112 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.070233118 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.061124503 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.060802744 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.05639671 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.070158214 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.056886349 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.064493994 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.065474847 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.061004063 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.056725374 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.058339056 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.065063654 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.060899893 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.057096967 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.070753015 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.062492081 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.056425364 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.069732139 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.056910452 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.066903448 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.05690159 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.060234714 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.061623078 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.058593077 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.065731767 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071106519 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.056023135 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.057175995 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071181845 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.058551045 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.058140496 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.064333261 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.070898176 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.061127877 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.064054095 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066279571 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.066026497 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.060916597 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.065325944 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.05754465 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.065142869 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.059672254 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.067495016 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.056632493 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.073259501 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.055966754 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.07036496 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.056837804 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.06677098 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.056872019 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.065075407 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.057779118 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.072031119 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.057970002 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.056656675 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.066761934 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.055125238 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.064645935 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.055742116 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.060960441 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.062061118 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.064281606 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.057121632 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.063692076 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.056961956 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.063793034 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.059810683 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.062816879 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.064019353 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.0597326 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.054980934 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.063060364 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.065641198 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.201325609 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.060080196 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.059874414 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.058463994 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.066615455 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.059143517 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.059011342 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065012236 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06186077 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.062713301 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.05863693 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.058961913 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.058997206 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065084772 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.065777135 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.073799925 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.065389296 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.064050133 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.06575094 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.056762874 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071785745 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.057295357 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.064676853 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.056170112 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.063095867 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.066205242 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.057058584 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.073897293 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.058325553 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.064267858 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068632547 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.064808226 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.060031432 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.073829607 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.060307557 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.065199179 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.064741978 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.061608461 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.06335353 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.058506694 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.065442013 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.066453299 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.067252237 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.058103399 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.06383596 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065266884 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.058637085 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.064359156 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.059049391 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.064785256 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.058328193 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.055876208 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.060909124 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.06766517 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.061647066 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.061796563 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.057065502 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.056180633 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.056771084 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.06302528 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.061032243 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.064652858 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.070557368 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.056271995 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.057392814 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.056439015 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.062854018 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.073921461 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.065874245 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.064172715 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.06125104 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.056048469 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.057963004 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.058435979 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.057031435 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.059918675 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.056006411 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.056381009 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066833088 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.058056139 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.061088579 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.057212196 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.057822761 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.065647965 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.061446361 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.057184814 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.062999433 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.056198745 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.061736298 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.055818148 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.058204596 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.060964578 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.056458816 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.060200316 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.066722698 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.071704275 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.062672686 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.065092727 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.057921595 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.063797029 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070782239 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.063502833 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.057983179 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.065930922 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.056314729 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.073417546 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.065185505 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.064511148 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.065406198 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.057664693 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.071798195 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.060913616 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.065699507 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.070509645 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.057202109 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.062585804 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.055979885 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.070153862 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.060397473 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.055910717 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.063621482 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.063845978 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.062051238 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.067078166 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.056890169 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.063505212 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.060400548 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.058874064 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.057273845 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.056938648 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.063447814 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.069990279 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.05636391 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.059012374 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.062857133 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.063346708 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.201832009 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070378168 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.065788619 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.05890675 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.059258736 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.061674745 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.058110585 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.068030757 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.057840714 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.061380978 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.061408999 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.057221145 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.063658105 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072012384 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.06578781 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.066069903 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.056550007 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.056641373 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.073316512 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.061058964 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.060546116 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.064723291 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.065682403 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069212835 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.065970982 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.07215797 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.057573356 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.06211649 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.068722582 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.058585341 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.057155912 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.060868871 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.05881892 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.065432335 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.066071469 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.063949768 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.059005549 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.063044745 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070056672 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.058201897 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.061599156 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.061632891 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.057353496 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.066338512 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.064877356 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.065776912 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.058600975 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.056731459 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.060348235 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.064912644 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.064226533 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.065258146 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.057701076 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.062646504 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.069298311 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.063683143 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.059564899 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.056272864 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.059751856 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.065451252 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.060923773 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.05697368 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.0609812 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06014949 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.063366427 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.065080507 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.060978215 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.056590928 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.07252556 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.064467306 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.065496133 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.05868514 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.058619061 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.057284129 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.056939357 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.067622413 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.056776231 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.058453031 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.061181607 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.058424481 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.072731813 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.064928845 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.071599656 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.057840437 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.06111588 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.056848415 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.065664828 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.061396514 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.05680945 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.066419205 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.055947098 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.070791189 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.067678705 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.065134369 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.056475252 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.061530673 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.064538824 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.070827763 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.065422381 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.064916327 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.060029434 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.06581535 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.058425575 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.067041043 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.056886419 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.055687593 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.065834338 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.064652963 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.067925606 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.056481878 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.06556477 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.058492767 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.06421486 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.06411751 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.058208576 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.057999806 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.05812931 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.064938214 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.061040714 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.064965767 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.060701975 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.071254958 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.057208558 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.066170879 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.064691541 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.066332474 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068739088 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067428953 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.063253572 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.056421013 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.062961354 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.063605169 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.057110192 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.060818768 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.058590741 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.074956042 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.197265167 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.060224341 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.071554337 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.063916661 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.057748934 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.065398892 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.061582495 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.067026074 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.058331899 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.066712968 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.06115787 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.057907374 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.061245096 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.062009495 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.05624467 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.05655191 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.057423555 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.066381063 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.061218557 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.057243877 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.074377998 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.058660551 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.064987851 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.067501525 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06364526 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.058331903 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.056312163 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.058185601 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068975413 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.071904987 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.060355893 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065133529 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.058820872 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.066300981 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.056113699 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.06504736 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.064298221 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065193276 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.057258053 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.05777747 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.08804537 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.071302001 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.061370366 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.066153162 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.065380035 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.059038971 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.077641651 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.064936599 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.057503325 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.067274269 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.059288228 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.056571571 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.056141155 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.058184067 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.067490242 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.056732956 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.059127331 seconds)
  done (took 39.164942299 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.092894983 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.057693287 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.056814172 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.056491342 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067162313 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.057339203 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.057360316 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.057747188 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.058070792 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.059364459 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.056732328 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.057146874 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.066864352 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.068840112 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066475682 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.060309989 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.056867899 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.057747103 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.056704233 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.057428794 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.065894116 seconds)
  done (took 2.674135774 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.063344364 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.071251386 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067253171 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.072083646 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064456544 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06085929 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066942312 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060672936 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067427806 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065435169 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.067697629 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060521205 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.065750621 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.065383081 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06550242 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.060520638 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.067832603 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064764678 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.060399935 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067077441 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06053558 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067148034 seconds)
  done (took 2.795618211 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.057956112 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.057013688 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.064716774 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.056842929 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.056621916 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.059436591 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.056574931 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.060671968 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.06076818 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.060379085 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.065058665 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.057625122 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.056515241 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.061736462 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.0559188 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.05695484 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.095994759 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.057422628 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.057328918 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.056189622 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.061779641 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.065529854 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.056330513 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.05640887 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.060150159 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.059429078 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.056425253 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.05861963 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.056902519 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.060324126 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.057071569 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.056031027 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.064525015 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.064330271 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.060642159 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.060530434 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.058060954 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.057325235 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.056160683 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.056421987 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.064040962 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.057714787 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.056559608 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.05778172 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.064962968 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.056484114 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.05658291 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.064818932 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.056097036 seconds)
  done (took 4.297216117 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.066363261 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.104472661 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.062223844 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.085868186 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.068572922 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.062066545 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.061896933 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.087287093 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.057238888 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.057962935 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.069101583 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.069335798 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.059478228 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.060928902 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.061996521 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.059223458 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.059790226 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.058181849 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.061512711 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.059297268 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.061561148 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.06300404 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.068048967 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.068716999 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.059756774 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.058280638 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.059301083 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.060094152 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.068541878 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.062514275 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.060559514 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.061196441 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.06861779 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.063736726 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.058547823 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.059507739 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.069068472 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.059582821 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.059129961 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.057508129 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.05880415 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.060337283 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.063088951 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.069928726 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.059356987 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.063785412 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.05926254 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.057615482 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.068942804 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.05889676 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.062675875 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.06975598 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.060373423 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.059695839 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.060630041 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.068895932 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.059913709 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.058290741 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.059601875 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.068440765 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.057953672 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.059987277 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.069768499 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.059154546 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.062248775 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.069545818 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.063527715 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.059807839 seconds)
  done (took 5.809024962 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065652457 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.089546113 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067476775 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067081779 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.0662576 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.066633561 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066505606 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.066735275 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.066178194 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.067044074 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066246624 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.103152374 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.062953768 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.070688913 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.066160369 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066284647 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.066638344 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066488218 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066582781 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066724117 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.066252529 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.066750617 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066834987 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.066834872 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.068715724 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062809411 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06647615 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.066061937 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066996337 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.06623736 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.068985732 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.06677776 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.066153169 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.066898146 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.068591762 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.066050959 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.05809054 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066570386 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.066525822 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066392 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062858442 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067352104 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066143569 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.062747828 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.06635322 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.066381165 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.067159296 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.068879606 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.072757693 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.067044378 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.066656192 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067022474 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066099858 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066626956 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.067026332 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.07293848 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066867489 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.0671872 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066755073 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.067507023 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067046667 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.072866435 seconds)
  done (took 5.599149001 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069752161 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.063353609 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.074277852 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.059318703 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.056337601 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065244061 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.056524066 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.056924579 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.063170529 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.063295973 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064628128 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065661943 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067145682 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065143572 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065162703 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067472099 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065553727 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065309262 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063265695 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065014235 seconds)
  done (took 2.677963435 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.070872679 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.074339633 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.063206369 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065091233 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.061748495 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.065412316 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.061812885 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062079657 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062180672 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06213898 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066527739 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066524549 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062492379 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065029771 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.066291036 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.065545248 seconds)
  done (took 2.423979478 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.063027466 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.063728789 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.063626416 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.057926792 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.061507892 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.057205751 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.057539671 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.05635275 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.056717197 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.069975457 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.057630228 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068431127 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.057406722 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.056386113 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.057442325 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.063141274 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.056929435 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.057650711 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.057392129 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.062344188 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.063347285 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.058134766 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.060900036 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.057694694 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.062672495 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.063781035 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.058913064 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.061020731 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.057325579 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.058130069 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.062788262 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.063544089 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.057385561 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.057889805 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.056866707 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.057442867 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.05752427 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.058158082 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.062952211 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.057609536 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.056805044 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.06250345 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.057505103 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.058224392 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.057497818 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.057680636 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.057193642 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.062905426 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.057740815 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.062549751 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.057572332 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.058895998 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.057968742 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.063991606 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.059698178 seconds)
  done (took 4.670119299 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072489184 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.061320844 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.056557064 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.056759437 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.061293756 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.062147183 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.062023097 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.061760631 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062166843 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.056405691 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.062315886 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.06107293 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061912975 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.061722761 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.061922786 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061606708 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.056232621 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.061652725 seconds)
  done (took 2.49838014 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.067234503 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.061631004 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.06541197 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.061589539 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.062075272 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06082809 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.05694003 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.056755535 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.056829967 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.060854426 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061399157 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.060481373 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.05702099 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.060876559 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.061663142 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061610162 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.060790649 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.05676841 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.061364861 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.056947999 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06078597 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.057022725 seconds)
  done (took 2.717478607 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.082852409 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.078974802 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.119313417 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.07514173 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.082329585 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.067465312 seconds)
  done (took 1.896807133 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087121083 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096862183 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061394396 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.061242573 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069328989 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064408041 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064027635 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064615292 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069458648 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068017992 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064545056 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069685428 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069506285 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066197719 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069590231 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071535233 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064285075 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06412521 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.061263476 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071586169 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064382368 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069288356 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064841625 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064066236 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064360811 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066128575 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07215332 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068056996 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066642872 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069131874 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071426092 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064877678 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069263254 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068110117 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.061477624 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06955745 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064529838 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072292933 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069314665 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066022007 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.061301157 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069758278 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069571934 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065868782 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071864612 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064648242 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06660607 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064713783 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065168561 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074126595 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070137568 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066372076 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070162471 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072129784 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072296358 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073905975 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068556312 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066136219 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069838596 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06827835 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066423688 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069918725 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066035037 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068134248 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072309845 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066376148 seconds)
  done (took 5.903851525 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093236556 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061759921 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.064419137 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068681705 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066109721 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064441513 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064807158 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065119504 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06445241 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.062040178 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098139205 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064674998 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066734649 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066238246 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064617012 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064549499 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.064515129 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066552307 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.062429393 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073843755 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0647917 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066482114 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065915063 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065896555 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068028943 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073718894 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064167056 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064268548 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064413751 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064391508 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066389462 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06501224 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066033628 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.061928022 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0658527 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06497816 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064345713 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065925398 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064407377 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069351026 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066120134 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072049344 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064613451 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064677676 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068327226 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06452713 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064605031 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.062218371 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064639482 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.062085326 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068408844 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068227983 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068531471 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066254984 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064934458 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065444104 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0644925 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064610108 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064499847 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071925033 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066382702 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064711351 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074112573 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.064315324 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.064448738 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065753765 seconds)
  done (took 5.822690398 seconds)
done (took 121.173679803 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.208373844 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.184525474 seconds)
  done (took 1.774277232 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.06988293 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.090685907 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.071151406 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129745882 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.067459883 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100577043 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099751881 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.070829301 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067080589 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066869729 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067134463 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.06906112 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.132366337 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.067292867 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.067079849 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.06923865 seconds)
  done (took 2.70742975 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.100509454 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.173109765 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.106649948 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065168527 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100083083 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.071488543 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065192247 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075227965 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.068793331 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067610966 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.071670407 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.069843565 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.067264593 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.069963414 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.068424282 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.071219617 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.066901284 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.071472108 seconds)
  done (took 2.854396266 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.08859559 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.081024728 seconds)
  done (took 1.576256716 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.14819161 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.10134091 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.137550596 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.306930119 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.12498883 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.121193451 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.124593597 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.120070854 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.105053048 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.116497984 seconds)
  done (took 2.808355696 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099971709 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.16830368 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.295774546 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.113043818 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071421169 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.093738831 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115218105 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.07709528 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.074473957 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.074259261 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.076719674 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.071715726 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.09480836 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.071084446 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.070156436 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.071373766 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.098262079 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.069254687 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.070087931 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.07115025 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099010395 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066724896 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.071257536 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.069400936 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.072757479 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.072782077 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.06751055 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065720116 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.070707196 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.070302079 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.072987418 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.090059488 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.073132325 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.092869028 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069857335 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.093572404 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.070044919 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.069022662 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.069820654 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.068903463 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.072037244 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.071613723 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.07421531 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.07179819 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067171305 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.06966873 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.066888642 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065268239 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.073410008 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066183544 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.073101594 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.072431802 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.092650713 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066220086 seconds)
  done (took 5.865350494 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101672761 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.099918702 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066173922 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.10543218 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098653483 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065424763 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.09789003 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093565158 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102008417 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.065034113 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.064915412 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.064780546 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.071560074 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.073843991 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.109012005 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.100505247 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066878366 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.065099114 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.101007193 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.100577382 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.064194837 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094547484 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.09323941 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.09959231 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.064090243 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.065331882 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.064283141 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.064383341 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.069258193 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.07038842 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.063866219 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.071192683 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.076427965 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.07055148 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.063680325 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.063836611 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06382142 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.07100983 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.071480235 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.071738587 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.069966603 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.063484418 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.064110248 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.064193802 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.064851836 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.063416026 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.069748199 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.07121492 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.069836616 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.063991209 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.064451509 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.063765361 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.064312827 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.070612121 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.069956502 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.07173172 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.070765458 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.063423183 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.063503927 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.065585339 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.071537895 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.071414066 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.071279397 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.064886866 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.072231784 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.064511897 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.073068079 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.075307091 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.063880867 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.06430262 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.063781171 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.063899075 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.064201688 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.069613614 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.069858586 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.064520702 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.064498822 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.063649977 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.072046123 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.070018558 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.063754967 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.069125206 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.063727433 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.064080654 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.064176393 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.064927311 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.069322999 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.07102976 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.064744334 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.064044406 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.064204448 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.064135579 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.06343638 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.068924451 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.0700052 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.070275314 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.069854443 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.064345591 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.069954307 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.069564973 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.063960862 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.069517886 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.063569547 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.064199759 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06401335 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.069270594 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.068590476 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.07007627 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.062931206 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.062665848 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.068463337 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.070744052 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.062946136 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.068325613 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.070889741 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.20487915 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.064914946 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.077732183 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065410396 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.072922964 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065032082 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.073024206 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065159826 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.07091399 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.064881181 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.064192711 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.06494672 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.070822073 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.064882828 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.064892789 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065008724 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06437626 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.070840574 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.073531169 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065225229 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.071168598 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.07110518 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.064695938 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.070653428 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.064440285 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.071693906 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.064079125 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.064689625 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.063919225 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.073367519 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.064760846 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.064408724 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.064633992 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.072922528 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.064251387 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.072910203 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.070013838 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.064481036 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.073873182 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.072013295 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.070267777 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.07280299 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.065465735 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.064083144 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.064925986 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.064557993 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.069450754 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.071326102 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.064614175 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06418145 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.069309879 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.072112528 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.064304245 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.070069644 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.06978885 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.070360896 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.064265699 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.064049234 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.073366701 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.071994996 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.069889791 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.070136291 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07026703 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.064170399 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.069814277 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07003924 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064032514 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.075976202 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064496757 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.074367398 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.070152285 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.069372295 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07092276 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.071793847 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.071938815 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.072133561 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.074498672 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.064168039 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.064337515 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.070410583 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.063833997 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.063986318 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.069730671 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.064738561 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.064332787 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.074602497 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06414054 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.072304506 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.063777339 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.07103743 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06359023 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064598619 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.075327763 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06446574 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.064715503 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.070115115 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.063991308 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.069728787 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.072319152 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.069929713 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.063623284 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.064217259 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.070376149 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.070973302 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.063795244 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.063566327 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.064069379 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.069243157 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.068368829 seconds)
  done (took 17.180143542 seconds)
done (took 36.185886596 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.195603714 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.153063997 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.187798028 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.109466914 seconds)
  done (took 2.152091314 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.08664809 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.094392088 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.071576076 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.061036269 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.075371949 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.061112978 seconds)
  done (took 1.901626756 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.25077812 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.177326207 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.163806817 seconds)
  done (took 2.036701157 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.204254263 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.180845891 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.459515742 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.278817878 seconds)
  done (took 2.665699194 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.12101548 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.073258362 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.059453957 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.068887119 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.098803938 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.126313322 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.080392428 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.101698561 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.070008223 seconds)
  done (took 2.307723152 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.122665334 seconds)
done (took 12.657155816 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.115829225 seconds)
    (2/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.101252653 seconds)
    (3/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.26829354 seconds)
    (4/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.197838302 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.06718218 seconds)
    (6/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.069728224 seconds)
    (7/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.070345973 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.063673058 seconds)
    (9/309) benchmarking ("sort", BigInt, false)...
    done (took 0.249919375 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.114243703 seconds)
    (11/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.195154835 seconds)
    (12/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.070181189 seconds)
    (13/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.241543199 seconds)
    (14/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.072642281 seconds)
    (15/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.063119287 seconds)
    (16/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073502693 seconds)
    (17/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.228074314 seconds)
    (18/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.297431344 seconds)
    (19/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.061944618 seconds)
    (20/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.071258724 seconds)
    (21/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.137203534 seconds)
    (22/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.174973638 seconds)
    (23/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.18915635 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.086127905 seconds)
    (25/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.196519412 seconds)
    (26/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.157671586 seconds)
    (27/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.068837751 seconds)
    (28/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.157435774 seconds)
    (29/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.210900782 seconds)
    (30/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.064518122 seconds)
    (31/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.071554026 seconds)
    (32/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.071838433 seconds)
    (33/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.069383744 seconds)
    (34/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.060299215 seconds)
    (35/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.136052358 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.14436072 seconds)
    (37/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.18203844 seconds)
    (38/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.061389094 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.082402362 seconds)
    (40/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.216621991 seconds)
    (41/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.067932831 seconds)
    (42/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.072175012 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.08566348 seconds)
    (44/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.082376716 seconds)
    (45/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.066096582 seconds)
    (46/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.185712322 seconds)
    (47/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.067940747 seconds)
    (48/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.061276957 seconds)
    (49/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.068164687 seconds)
    (50/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.221734911 seconds)
    (51/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.148277024 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.069157466 seconds)
    (53/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.068698028 seconds)
    (54/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.123422203 seconds)
    (55/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.05979918 seconds)
    (56/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.154162984 seconds)
    (57/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.164719359 seconds)
    (58/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.186991378 seconds)
    (59/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.134519538 seconds)
    (60/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.161444697 seconds)
    (61/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.06286307 seconds)
    (62/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.078520333 seconds)
    (63/309) benchmarking ("sort", Bool, false)...
    done (took 0.140336526 seconds)
    (64/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.060318864 seconds)
    (65/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.070425197 seconds)
    (66/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.169137237 seconds)
    (67/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.072498325 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.082110299 seconds)
    (69/309) benchmarking ("sort", Int64, false)...
    done (took 0.062063127 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.08490116 seconds)
    (71/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.069987531 seconds)
    (72/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.068386245 seconds)
    (73/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.062078249 seconds)
    (74/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.101559242 seconds)
    (75/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.060290379 seconds)
    (76/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.068833317 seconds)
    (77/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.150288148 seconds)
    (78/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.070497213 seconds)
    (79/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.063278319 seconds)
    (80/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.076217021 seconds)
    (81/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.139102109 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.0602285 seconds)
    (83/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.058680338 seconds)
    (84/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.159999613 seconds)
    (85/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.062107843 seconds)
    (86/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.296178499 seconds)
    (87/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067685939 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.062786933 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.085209836 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.094319382 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.124038541 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.085095873 seconds)
    (93/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.073387763 seconds)
    (94/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.143121069 seconds)
    (95/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.07965742 seconds)
    (96/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.191778898 seconds)
    (97/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.061910748 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.124934281 seconds)
    (99/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.060966551 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.110815713 seconds)
    (101/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.061509894 seconds)
    (102/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.156692163 seconds)
    (103/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.212536667 seconds)
    (104/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.217394572 seconds)
    (105/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.07393308 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.061513071 seconds)
    (107/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.140785956 seconds)
    (108/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.070992909 seconds)
    (109/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.069349521 seconds)
    (110/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.220819631 seconds)
    (111/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.061509615 seconds)
    (112/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.069265825 seconds)
    (113/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.203672082 seconds)
    (114/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.069064578 seconds)
    (115/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.060859724 seconds)
    (116/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.172090153 seconds)
    (117/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.060855615 seconds)
    (118/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.073046985 seconds)
    (119/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.087377115 seconds)
    (120/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.064012766 seconds)
    (121/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.061478697 seconds)
    (122/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.062031174 seconds)
    (123/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.135071606 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.115027807 seconds)
    (125/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.085900765 seconds)
    (126/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.065502318 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.083586755 seconds)
    (128/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.071102739 seconds)
    (129/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.06983114 seconds)
    (130/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.121568228 seconds)
    (131/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.060761106 seconds)
    (132/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.07005794 seconds)
    (133/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.061078674 seconds)
    (134/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.062220267 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.117896823 seconds)
    (136/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.062726455 seconds)
    (137/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.061959546 seconds)
    (138/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.062013284 seconds)
    (139/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.144328081 seconds)
    (140/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071101586 seconds)
    (141/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.068526525 seconds)
    (142/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.062679475 seconds)
    (143/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.070721778 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.061596953 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.082683851 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071258276 seconds)
    (147/309) benchmarking ("sort", Float32, false)...
    done (took 0.128223774 seconds)
    (148/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.06084594 seconds)
    (149/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.076660735 seconds)
    (150/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.0613739 seconds)
    (151/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.186744696 seconds)
    (152/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.069172373 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.1391798 seconds)
    (154/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.067743453 seconds)
    (155/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.061733987 seconds)
    (156/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.070111215 seconds)
    (157/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.069362797 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.085619593 seconds)
    (159/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.132984087 seconds)
    (160/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.089026039 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.136150326 seconds)
    (162/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.059950178 seconds)
    (163/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.181469913 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.061183465 seconds)
    (165/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.155858893 seconds)
    (166/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.061497317 seconds)
    (167/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.168585336 seconds)
    (168/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.085763873 seconds)
    (169/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.083583767 seconds)
    (170/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.137725444 seconds)
    (171/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.139967215 seconds)
    (172/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.060531886 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.115724208 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.061015214 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.140379421 seconds)
    (176/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.062274319 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.061442745 seconds)
    (178/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.062040789 seconds)
    (179/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.064837918 seconds)
    (180/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.06775595 seconds)
    (181/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.061942367 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.123899071 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.112926325 seconds)
    (184/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.158515618 seconds)
    (185/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.139124886 seconds)
    (186/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.060093017 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.139254862 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.078963039 seconds)
    (189/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.137771527 seconds)
    (190/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.061493057 seconds)
    (191/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.084105087 seconds)
    (192/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.060986633 seconds)
    (193/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.071953695 seconds)
    (194/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.148091304 seconds)
    (195/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.072177302 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.245673485 seconds)
    (197/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.06432911 seconds)
    (198/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.061133887 seconds)
    (199/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.062491436 seconds)
    (200/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.060727669 seconds)
    (201/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.061809995 seconds)
    (202/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.061698714 seconds)
    (203/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.062607549 seconds)
    (204/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.062984274 seconds)
    (205/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.066864357 seconds)
    (206/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.068441931 seconds)
    (207/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.06266849 seconds)
    (208/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.069730578 seconds)
    (209/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.060971334 seconds)
    (210/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.06844306 seconds)
    (211/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.062647084 seconds)
    (212/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.069197199 seconds)
    (213/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.061611393 seconds)
    (214/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.06302508 seconds)
    (215/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.068737975 seconds)
    (216/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.203807156 seconds)
    (217/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.179909927 seconds)
    (218/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.069053376 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.08610455 seconds)
    (220/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.061962193 seconds)
    (221/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.064099163 seconds)
    (222/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.06273972 seconds)
    (223/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.068402525 seconds)
    (224/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.063757259 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.13057772 seconds)
    (226/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.061217456 seconds)
    (227/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.069849414 seconds)
    (228/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.062144394 seconds)
    (229/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.156824726 seconds)
    (230/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.073200642 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.06170101 seconds)
    (232/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.071225829 seconds)
    (233/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.073093618 seconds)
    (234/309) benchmarking ("sort", Float64, false)...
    done (took 0.128407678 seconds)
    (235/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.061268287 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.143969594 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.135927073 seconds)
    (238/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.069545741 seconds)
    (239/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.061266485 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.061603989 seconds)
    (241/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.062052672 seconds)
    (242/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.069384197 seconds)
    (243/309) benchmarking ("sort", Int8, false)...
    done (took 0.158480957 seconds)
    (244/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.060817514 seconds)
    (245/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.072413583 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.06159511 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.141434051 seconds)
    (248/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.061367079 seconds)
    (249/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.061698411 seconds)
    (250/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.062672918 seconds)
    (251/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.072198433 seconds)
    (252/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.060612058 seconds)
    (253/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.062032294 seconds)
    (254/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.073089541 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.083040179 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.085023612 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.080531783 seconds)
    (258/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.060672196 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.110146859 seconds)
    (260/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.06202436 seconds)
    (261/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.062151455 seconds)
    (262/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.059803968 seconds)
    (263/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.061485335 seconds)
    (264/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.19916137 seconds)
    (265/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.062313848 seconds)
    (266/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.061747661 seconds)
    (267/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.173585989 seconds)
    (268/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.149581034 seconds)
    (269/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.060819467 seconds)
    (270/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.067723184 seconds)
    (271/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.060863848 seconds)
    (272/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.065705637 seconds)
    (273/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.068175836 seconds)
    (274/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.060423042 seconds)
    (275/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.062282513 seconds)
    (276/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.060993461 seconds)
    (277/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.062058563 seconds)
    (278/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.068323321 seconds)
    (279/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.062498405 seconds)
    (280/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.062004893 seconds)
    (281/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.059957304 seconds)
    (282/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.135315869 seconds)
    (283/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.059702186 seconds)
    (284/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.165654044 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.080100889 seconds)
    (286/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.060851336 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.071822049 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.08432377 seconds)
    (289/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.0603133 seconds)
    (290/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.061834294 seconds)
    (291/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.062673021 seconds)
    (292/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.063438956 seconds)
    (293/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.073651786 seconds)
    (294/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.060319864 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.068497608 seconds)
    (296/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.06139212 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.084150903 seconds)
    (298/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.061267861 seconds)
    (299/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.060136072 seconds)
    (300/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.063245347 seconds)
    (301/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.061627407 seconds)
    (302/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.068442899 seconds)
    (303/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.063789332 seconds)
    (304/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.060802039 seconds)
    (305/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.062418575 seconds)
    (306/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.063853715 seconds)
    (307/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.060558963 seconds)
    (308/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.069325488 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.108210205 seconds)
  done (took 31.360814363 seconds)
done (took 32.82842135 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082247297 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.084426606 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.06944485 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.080102128 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.076470015 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091479387 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.069359959 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.07348375 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.075896385 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.074301251 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.073858121 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.068182487 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.070397699 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.070513731 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.068568546 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.082791874 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.076051526 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.069306353 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.069475803 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.060234868 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.069839251 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.061821267 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.060538106 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.06770318 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.072700867 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.068189012 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.070088927 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.070190773 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.061695624 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06155514 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.066590627 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.069796036 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.063862321 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.072512907 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.068928349 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.06939866 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.070435584 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.073469514 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.060259659 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.061689328 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.071535842 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.061299724 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.069599715 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.067760575 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.066515627 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.068936172 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.069645478 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.072591847 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.082691689 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06552595 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.072165293 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.072490206 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.072151664 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.066783394 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.066462609 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.0696613 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.06753714 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.082712619 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.070108014 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065285171 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.071431958 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.070364989 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.068252881 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.069538488 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.069434938 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.072583831 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.071973515 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.068372858 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.071505221 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.068941497 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.061260415 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.069219789 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.066198439 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.061238959 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.072169987 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.074781126 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.06006438 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.065477943 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.06918839 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.069516643 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.06096435 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065590636 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.060508652 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.066260192 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06548425 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.067658783 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.066852062 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.069313745 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.060547335 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.069477486 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.068556177 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.069008117 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.060266898 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.072633264 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.060886176 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.067539391 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.061773043 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.061376238 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.060417184 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.066897144 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.061163457 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065236878 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.069358456 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.059823464 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.066222696 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.07381027 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.06159382 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.068824968 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.060127379 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.060655317 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.071346776 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.07170186 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.061787743 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065567279 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.06063498 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.066833678 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.061127814 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.061157283 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.061399265 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.061501676 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.065580544 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.061338987 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065576812 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.066944848 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.072406725 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.06116552 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.066349837 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065261305 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.06168914 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.067441812 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.061269395 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.061184969 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.059969522 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.073852794 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.064905904 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.061593903 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.066204923 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065329449 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.068459837 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.059641019 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.0686316 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.066058005 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.064852599 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.067052222 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.059336744 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.071553668 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.064604825 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.064480273 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.203891908 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.062596246 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06134941 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.061989047 seconds)
done (took 12.016385896 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.063209012 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.099038087 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.068619382 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.076738065 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.073711686 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.062996767 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.06524566 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.07700609 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.064635097 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.07975269 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.085390122 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.081570266 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.087037132 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.060766055 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.062025984 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.06278226 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.060575392 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.06870951 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.075389745 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.083128222 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.088298149 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.061682583 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.069770167 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.077035849 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.071688469 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.077158582 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.063336636 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.062274086 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.064515298 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.078271512 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.085622453 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.061919368 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.062919286 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.074675499 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.075139952 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.068365467 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.062378707 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.065632561 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.062851298 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.062027208 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.063838237 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.075299213 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.068194092 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.065567994 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.062808552 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.063231413 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.061904914 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.06512064 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.074661134 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.064857673 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.068995857 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.072570313 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.063648746 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.061784711 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.060206236 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.065748366 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.062200072 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.062701722 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.062475576 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.061930767 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.062013537 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.06430285 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.062778576 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.062818362 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.065323249 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.064695922 seconds)
  done (took 6.07136359 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.079227677 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.088182844 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.077619858 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.07752554 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06249461 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.063064648 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.062703035 seconds)
  done (took 2.082519903 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.063176338 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.074105817 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.077270643 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.07685689 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.069384096 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.078989012 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.063360515 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.091322965 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.062345999 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.073645009 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.104737056 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.077773421 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.065508488 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073154445 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.06268906 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.069004612 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.062922414 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070681687 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069437788 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.077251508 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.066036659 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.089484322 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.075866751 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.062768069 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.081299717 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.066165411 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.061749346 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.062868861 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.063188473 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.063222529 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063371081 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.099061576 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.065581169 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.073486 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.063510044 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.062287108 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.067899126 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065518543 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.064541556 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.070560102 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.066860949 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.063374677 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.061210974 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.063492944 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.064217021 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.065939074 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.061439537 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.06303027 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.062976947 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.072878436 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.061940839 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.065841875 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.065058025 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.066481006 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068912769 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.066421258 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.070906609 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.06430715 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.073324468 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.069573202 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063570466 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.070221022 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.069722427 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.067130243 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.069684116 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.099623855 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.065653599 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.066865892 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.062874913 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.064653411 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.064009249 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.069670579 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.061914795 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.063952099 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.065138078 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.064123 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.066132426 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.077885307 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.077729851 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.074205945 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.064442218 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.064187028 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066326876 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.077755357 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.066439351 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063676893 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065682099 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.061941108 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.067381776 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.063687134 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068585957 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.063340113 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.070247122 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.065076168 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.065932887 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.07013352 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.062488318 seconds)
  done (took 8.239885883 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.065714194 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.063722136 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.064913656 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.063532168 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.063462401 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.064552827 seconds)
  done (took 1.990051354 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.083948341 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.06378388 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.07747408 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.063108975 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.0966937 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.069047077 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.069031176 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070284757 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.075014591 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.074785654 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.06900599 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.071787115 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.06903781 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.064394278 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.068523892 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.063826418 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.069202573 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.065719846 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.074465313 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.06492087 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.074985504 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.06432972 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.064234291 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.073570139 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.065109657 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.063633615 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.063800844 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.074393625 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.076499067 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.070053463 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.064367532 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.065572518 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070704507 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.069910272 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.06930132 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070168332 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.062895698 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.067826216 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.065064109 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.064824932 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.070863605 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.064449103 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.064995264 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.067642491 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.069589404 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.07011942 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.067874834 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.066265285 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.068156392 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.067650043 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.067479936 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.06319357 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.065406479 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.067733075 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070672111 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.069619441 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.067994273 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.068948779 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.064358034 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070469137 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.062752385 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.065353174 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.069746486 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.065017501 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.067005619 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.067670165 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.07039791 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.064309799 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.064711697 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.062752893 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.068141497 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.062968701 seconds)
  done (took 6.500795911 seconds)
done (took 26.442004166 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.881008585 seconds)
  done (took 2.433647971 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.552261833 seconds)
  done (took 2.143400086 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.856869387 seconds)
  done (took 8.443573973 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.283573225 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.298046281 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.698074419 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.125097908 seconds)
  done (took 3.025000111 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.718743563 seconds)
  done (took 2.313604759 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.226901185 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.217600316 seconds)
  done (took 2.052615229 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.337336816 seconds)
  done (took 1.924177015 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.075213556 seconds)
  done (took 2.660150877 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.215778316 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.151948476 seconds)
  done (took 1.961300845 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.459288433 seconds)
  done (took 2.04682628 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.089194784 seconds)
  done (took 5.68263518 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.226245103 seconds)
  done (took 1.85888887 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.227771211 seconds)
  done (took 1.823716105 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.776647227 seconds)
  done (took 3.368121568 seconds)
done (took 43.335013067 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078293652 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081408094 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081529272 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077251331 seconds)
  done (took 1.887122812 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.069232739 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.065718532 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.068596273 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.069081443 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.067445123 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.068411691 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.068420276 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.065246553 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.066949098 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.065019986 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.063976392 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.065257039 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.068077219 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.065302458 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.067485833 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.068655169 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.065508129 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.065474812 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.068169427 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.06522705 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.067892303 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.065129832 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.064021793 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.065536625 seconds)
  done (took 3.191104344 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.073977839 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.068574265 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.071209768 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.067265327 seconds)
  done (took 1.881968697 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.071481743 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.078747532 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.080354773 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.084759723 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.07184216 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.071856127 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.077482079 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.078993732 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.061488784 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.080576033 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.064050935 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.062787657 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.062978623 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.080319694 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.077662833 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.058508067 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.060129092 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.071523938 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.07074156 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.072952399 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.064121562 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.0611199 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.071582952 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.070976026 seconds)
  done (took 3.308708691 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.074739886 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.061629206 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.073695405 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.085857671 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.087462303 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.061794688 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074395323 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.087399776 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.117072562 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.061543551 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.067438485 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.061892135 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.098348929 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.061389434 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075304696 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.099491736 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.102296108 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.065642654 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.092121366 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.061720953 seconds)
  done (took 3.180559585 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072103218 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.065679678 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066569956 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.061539737 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.072480206 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.068539289 seconds)
  done (took 2.018971428 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.064645704 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.063978971 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.06358644 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.062603749 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.067839309 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.063565239 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.062067393 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.063798551 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.063803406 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.063325746 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.062670923 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.061925839 seconds)
  done (took 2.369320595 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.154246036 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.065573144 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.0672244 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.064738557 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.067071601 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.062060937 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.076450613 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.06424778 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.079824321 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.062592287 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.062876601 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.064426398 seconds)
  done (took 2.498711329 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.093180448 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.094565821 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.137763891 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.110021954 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088141032 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.085193637 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.150036275 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.128734578 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.110000452 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.06521312 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08144019 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.094125294 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093550785 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.125722472 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.105848345 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.068492445 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.104977311 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075716021 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.107847373 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.115043166 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108434038 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.115174578 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.087689887 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.092624375 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.100502735 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.110912099 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.067006278 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.0665863 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.140208399 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.094231109 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.086636694 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.093054961 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104988757 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.065104384 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.080666025 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.099338765 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077959867 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.113893333 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.082184704 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092682697 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07570833 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.124225973 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.099805272 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096790305 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.124483817 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.086872159 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.103334824 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.099387165 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.077240704 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.111905538 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092181851 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085560126 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075194081 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.14955393 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.083666454 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.10418208 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105829602 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.07650497 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.0831153 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.094248384 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.120360004 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.097666274 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.105202394 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.252980633 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.08664352 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086530237 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.124732835 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.079846505 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.094716054 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.12341011 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.087357031 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.071060747 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.089894571 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.065418812 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.090463839 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.100788256 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.087461665 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10567482 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.072684533 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.12008005 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.102156858 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.068602864 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.110501542 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093051081 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.147408615 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090172032 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.095374418 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085864441 seconds)
    (89/481) benchmarking "5d"...
    done (took 0.141364558 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079575864 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.075285291 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092077654 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.12140837 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088327516 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.090399571 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.121070778 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09103248 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.081868729 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.071203731 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.083783638 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09560072 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101540175 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09573985 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08387015 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.081924957 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090177144 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.070737371 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.075705608 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.09504752 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.081988676 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.116964196 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.102839514 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.116690134 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.074217942 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09893565 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.090637865 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.121746985 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.111008528 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.079253349 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102045843 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132693671 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.107139427 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.079788745 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.095119096 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104348281 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101166698 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.089889758 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.12862701 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109528004 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083417166 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.087238068 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.242855033 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.107290861 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.147645071 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08576806 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.09930209 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.131979859 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.107476889 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.088327731 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.079333872 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.0897042 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09943556 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.134121472 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.090433103 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.066626291 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087425601 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.124499821 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.071916831 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.093597497 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.086995086 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.078657879 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.077310492 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.064381548 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.098444251 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.129812514 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.107821989 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.093288641 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.098741617 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.065568954 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.095238779 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098677441 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.134181023 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.110243386 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092495056 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.092882561 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098250447 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.074808751 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.125935459 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.125912632 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086321038 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.085392724 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.116873244 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.090127036 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.098654542 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.107830857 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097867887 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.094778203 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.133859936 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.113537206 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.117005773 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098918651 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.117277249 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.077382872 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109998236 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.070235056 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097892649 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.072393838 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.099643742 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.074039038 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.103746235 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.073810004 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.09371221 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.064529428 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.068647039 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.261364648 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.085260123 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082281581 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.127491422 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.123737685 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.076713278 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.096211857 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.095440351 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096661234 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.103567228 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.085188359 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.086325342 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.074305807 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.075773388 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092659856 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089040174 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.102561903 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.073920063 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.071548098 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.132062286 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097793814 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086095051 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089489864 seconds)
    (218/481) benchmarking "4d"...
    done (took 0.112927738 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.083854963 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.082740939 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096910123 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.131134043 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.111046136 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.0757376 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.085667211 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.065468766 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.079660419 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.071117505 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102696093 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.070232138 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.105963097 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.064854206 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.12199591 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082016561 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.095601415 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091560853 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.121477448 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.085571906 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.121780001 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082065286 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101323704 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087909124 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.089496328 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.10303214 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.090038667 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.099324052 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.104807501 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088226016 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084165651 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.113690385 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09927748 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.11030839 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.100603678 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.128222575 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105397067 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.070636364 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098261327 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.093974778 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.147071026 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.093688293 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.084224786 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.089426449 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.097477416 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.075677019 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.29105728 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082620557 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.081513748 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.108132603 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.085350315 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.090988242 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072221048 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.095886287 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.089055313 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.10750746 seconds)
    (275/481) benchmarking "3d"...
    done (took 0.092512662 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 0.087524045 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103394522 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104916227 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.081627469 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.082045313 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.118045764 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.12263537 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.096437445 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088556598 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083604157 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.094713069 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089835648 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.103491171 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075694391 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.071788256 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.064347478 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.068389101 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.111271392 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103426383 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092537435 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092632113 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.096740798 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.068012006 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082126081 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.085857893 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.078200702 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.084444735 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.107849643 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.097415552 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.121783988 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.09662186 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087803217 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.133610956 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.122616208 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084860642 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08668777 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095491978 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.072771322 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.140026286 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.112090947 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.073277204 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.07788248 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.07238488 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.081445326 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.067556377 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098013067 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.097770833 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.070908046 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.096870958 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092517322 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.117033797 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091497663 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.071672555 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.074715544 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.070641021 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.070640516 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.096596036 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.072306952 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072164257 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.121320646 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096278125 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099591624 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.077578001 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.227007053 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.125886459 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.065971778 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.126163607 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.078570811 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.103548738 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.076350779 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075585676 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.08551262 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.101135194 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10034206 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.107982541 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.066980221 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.097528943 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.147409282 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07160566 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.071319618 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.070383074 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.105513672 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082681096 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.13615009 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084591525 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087530539 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073127419 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.121353915 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.097195138 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.078185773 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.120769659 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.074843007 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.067290867 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.08076041 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.104770063 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.068276827 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.070409603 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.108787649 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 0.625625376 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.085258077 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.07160415 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.083634914 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.121278259 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078408716 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102493296 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.112007301 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.10084433 seconds)
    (383/481) benchmarking "6d"...
    done (took 0.175475454 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.069872967 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.086302996 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.098049982 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.092034878 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086756542 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.075160198 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.082685135 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082549826 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.079726489 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.100424623 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.075722433 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.085576734 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.075437223 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.097570792 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.122566547 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.081313773 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.095588909 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082527482 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085298943 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092712867 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10479742 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.099120614 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.082019666 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082105034 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.101336058 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.236270006 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.075025652 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.09526728 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.073041336 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073708072 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111780025 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.079318662 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.088955183 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09818235 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.084267905 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.108086737 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.111833249 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.10530626 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.092420391 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07460545 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081196686 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.083092783 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.069870685 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074429309 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.070910867 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.067239357 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102168658 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080816277 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.077445029 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.0943636 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.103602323 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.095225038 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.100712261 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.085705738 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091909741 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.094935841 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.120469734 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.14748051 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.094474454 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.116500375 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.12526837 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.072819348 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.071296459 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.076171816 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.124672617 seconds)
    (449/481) benchmarking "2d"...
    done (took 0.07607915 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087430312 seconds)
    (451/481) benchmarking "7d"...
    done (took 0.225966633 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.07386742 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.076652618 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086471443 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101824683 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.078371957 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076285253 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093209876 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.10507625 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.079991311 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076939265 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.088316616 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.100360928 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.122105469 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.084303005 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.071147997 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.103315656 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.096498287 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.117358814 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.069618438 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076594611 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.122193403 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082787838 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.098922051 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.075626003 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.118920055 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.124952033 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.069149165 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.083369224 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.066052402 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081581052 seconds)
  done (took 48.582871446 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.145130359 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.138800986 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.078809501 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.09392397 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.182117374 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.190457133 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.114284467 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.090268237 seconds)
  done (took 2.79770044 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.064554972 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.078430325 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.094841804 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.078321157 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.062845172 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.063866016 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.1901155 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.076090761 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.062965339 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.100635696 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.070835944 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.064555605 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.343044549 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.061874317 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.063185403 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.070312615 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.063161781 seconds)
  done (took 3.32505503 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.35099901 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.600549752 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.31249377 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.070643854 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.717526978 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.084708965 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.106920492 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.132244193 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.076784567 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.515228436 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.365356815 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.126925096 seconds)
  done (took 18.185908831 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.071239835 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070430928 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.07329796 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.07330663 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.070150464 seconds)
  done (took 2.080808739 seconds)
done (took 96.923295137 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.07752187 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.160466797 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.064028775 seconds)
  done (took 1.979342277 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.077470835 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.076056116 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.076215036 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.074168744 seconds)
  done (took 2.033257984 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.070761052 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.072004832 seconds)
  done (took 1.865003294 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.2224929 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.157292336 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.085655575 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.077816984 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075625417 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.07570456 seconds)
  done (took 1.964867219 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.067501123 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.067011353 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.067558672 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.068009606 seconds)
  done (took 1.992899085 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.063903664 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.06222472 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.064523157 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.067580874 seconds)
  done (took 1.983276354 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.078190936 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078937025 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.074072154 seconds)
  done (took 1.955812735 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.10339241 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.091705841 seconds)
  done (took 1.919055981 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.075263047 seconds)
  done (took 1.803824601 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.084216914 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.090380331 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.135991305 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.101837462 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.134908483 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.120349744 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.072122599 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.072872535 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.069352687 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.06816117 seconds)
  done (took 2.675934625 seconds)
done (took 22.437486938 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074305857 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.361631219 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.355696927 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082116621 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.665516678 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.352943861 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.984289359 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.085499315 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.093682201 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064117343 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.079914147 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.691517692 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.975261864 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.326184029 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.963374196 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.324388764 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.644915658 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.064425781 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.064075213 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.064004835 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.969745265 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.063623447 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.064150973 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.064144841 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.645728868 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.368136067 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.064646245 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.324662637 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.063827399 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.066074154 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.351822069 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.064817237 seconds)
  done (took 16.133868311 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.066106058 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.115669412 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.068906358 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.079828069 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.066732909 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.065715818 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.067796856 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.064670672 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.103804132 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064033274 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.080456078 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.064220967 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.067627597 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.065219171 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.083345328 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.064916871 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.066231798 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065918542 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067660069 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.065683314 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.082278307 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.064438678 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.065848206 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.065586959 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.065526798 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.077008908 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065989562 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.064699471 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.064966825 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.067024289 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.06796431 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06640334 seconds)
  done (took 4.013714312 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115336019 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.120106047 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.069126528 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102772822 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112397995 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.066278062 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143001023 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.085708114 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.107110604 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064685556 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.081167116 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.065167233 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.098968816 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.066313265 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.084364289 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.065177929 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.066418557 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065686179 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.065056674 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.065558441 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.082745756 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.064507148 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.065153752 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.065358587 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.065641128 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079226256 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.066106652 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.064831748 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.065310886 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.067230344 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.06912694 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.066076571 seconds)
  done (took 4.27475719 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.066263846 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.068424875 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.075306686 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.076223472 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.063046664 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.064752452 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.066121938 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.063389606 seconds)
  done (took 2.288467713 seconds)
done (took 28.454839209 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.075265923 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.064671449 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.067306915 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.08313457 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.069811113 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.066472597 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.061302857 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.070278617 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.067889014 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.067564275 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.068641171 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.062938151 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.065793518 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.060981219 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.068340581 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.062496186 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.068770114 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.066314308 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.067293251 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.06844905 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.064792128 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.067920764 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.070790901 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.067080232 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.067207244 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.067462986 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.071391928 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.068232051 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.063260799 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.065759 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.065356302 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.072885625 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068775782 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.068987826 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.063119341 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.062561238 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.066727615 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.065418172 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.069312755 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.071840322 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.064725175 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.071436767 seconds)
  done (took 4.551266526 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.080817428 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.085407022 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.078841534 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.0786886 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.096265245 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.07853267 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.08188511 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.075157021 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.074046401 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.080704152 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.069721683 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.075139855 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.074924268 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.068794352 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.07401722 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.070376489 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.075587748 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.069541061 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.074884526 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.074593876 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.082753979 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.068149005 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.074712922 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.075832721 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.07064212 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.075691212 seconds)
  done (took 3.737326404 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.068521807 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.082856185 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.08690344 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13289916 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.103750271 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.078007892 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.077873611 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091331078 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.095142321 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.064513236 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.067770983 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.089246786 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090048782 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.070693619 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.101126162 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.081410588 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.07484085 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.065544705 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.070595486 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096887968 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.086568396 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.082147465 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.095461349 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.082870618 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.064404198 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.072764921 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070010175 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.078142093 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071280572 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.075528321 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.067445445 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.067274859 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.064488452 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.074782833 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.067468193 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.061860143 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.084788625 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075311105 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.076867226 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.102638318 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.073055364 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.065013856 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.091525962 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.124384814 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.063388546 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.065924337 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.067252255 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.075234556 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.065048148 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091664327 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081354819 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.063660106 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.081551575 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.065094411 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.06495503 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078758889 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.065008264 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.06557577 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.075395579 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.069867003 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.083019183 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.068007467 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082367416 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.063918034 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074388008 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.065138946 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.065202681 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.062531047 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097395827 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070504623 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112124653 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.064970816 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.061533358 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075186312 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074051943 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.069727946 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.063526245 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080926901 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.074964332 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.067407644 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.074852122 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.066754841 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.067210841 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.097574617 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.06280172 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.061802953 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.062005144 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.065997201 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.067039271 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.064163653 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.076495561 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.063216199 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.066691163 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.07730761 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.063960604 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.064474345 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.066350357 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.065102231 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.063018378 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.07374968 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.067144506 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.065379517 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.075402833 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.065030167 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.066658987 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077572537 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072537047 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.063384043 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.06515152 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.065627476 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.065465411 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068361325 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.067281354 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.06601854 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.069296419 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.070445496 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.069077033 seconds)
  done (took 10.469279295 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.154520095 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.143981651 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.065393448 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.139039425 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.072271448 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.068157671 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.139790366 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.082301707 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.064185152 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.065448915 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.063679676 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.090549736 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.085892594 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.097162853 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.068152052 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.06461805 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.088789851 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.095521861 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.141397667 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.136768368 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.086017661 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.071213821 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.066457446 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.06553298 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.065832254 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.075957765 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.080305699 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.072374613 seconds)
  done (took 4.301732932 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.071834565 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.104490053 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.068412788 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.086705147 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.082030467 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.064775437 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.066303446 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.065767065 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080253315 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.070970916 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.064367725 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.06883848 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.067909109 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.0668297 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.065120668 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.070463484 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.070702535 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.063343038 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.06823182 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.0690122 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.073935356 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.088169484 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.06807858 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.063987039 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.066302085 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.063771122 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.070784526 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.073644923 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.063840874 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.092448922 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.061593761 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.068111785 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.077291991 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.064865738 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.063860244 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.064896685 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.06441737 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.064385039 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.064599429 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.062453725 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.062206674 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.06867952 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.063230443 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.070082644 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.077426691 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.070619479 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.065030827 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.066591646 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.066384318 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.061204659 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.066896179 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.067340839 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.067054304 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.071687357 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.067370144 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.066955581 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.067870157 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.08878546 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.069945623 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.063653636 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.063729076 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.062590182 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.065059753 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.071527294 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.079670808 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.065128277 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.063276289 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.064518485 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069261355 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.077398557 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.063965951 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.069019081 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.061445512 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.064491301 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.066325728 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.066792688 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.065623906 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.062919594 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.063693943 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.064407859 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.064354985 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.06390385 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.06372665 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.066830565 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.062316867 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.062644529 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.06446582 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.064987456 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.070120895 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.062981452 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.066797989 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.065027413 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.062947999 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.066859677 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.069453977 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.066794768 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.08258055 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.072171371 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.064478678 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.062278409 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.077608471 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.065699688 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.063532943 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.069806668 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.068522473 seconds)
  done (took 8.97474894 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.085684199 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.065606518 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.082895555 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.089098172 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.074476876 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.069719409 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077292075 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.066287595 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.079190286 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.063671673 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.072974975 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.062643553 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.075811488 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.072107963 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.065265437 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.073890693 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.066777733 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082898939 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.078145839 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.063046548 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.072237402 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.07605796 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.076505328 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.08045077 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.080502808 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.080888262 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.075426706 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.067201625 seconds)
  done (took 3.876274894 seconds)
done (took 37.648194028 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.825307505 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.993089918 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.81519367 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.01226519 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.997518718 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.929445308 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.855930481 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.811871201 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 8.042611949 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.849460403 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.131678844 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.256557452 seconds)
done (took 67.335749191 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.835388008 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.963411866 seconds)
    (2/2) benchmarking "String"...
    done (took 2.027465655 seconds)
  done (took 5.743834782 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.940543147 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.460905622 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.077269387 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.813621906 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.818770905 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.223169548 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.58143752 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.251989735 seconds)
  done (took 30.980308393 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.907105984 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.040083099 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.480745594 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.510270958 seconds)
  done (took 15.729116415 seconds)
done (took 64.074183695 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.844126054 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.814988068 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.857134758 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.845705291 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.818417376 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.817246445 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.820864287 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.818072575 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.841908833 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.939288784 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.814714483 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.819483777 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.817349409 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.832141933 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.501917483 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.875178061 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.837587338 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.831025071 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.828284608 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.819883765 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.818292542 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.818387268 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.303276297 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 2.005121034 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.423245502 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.011708435 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.250861378 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.225853641 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.817600818 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.817677482 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.897521899 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 6.992425044 seconds)
  done (took 205.531011012 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.815793992 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.847559173 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.917035671 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.864488353 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.386728857 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.990465588 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.91149483 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.427333346 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.819082891 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.822854483 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.935284414 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.817515789 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.939578027 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.763566987 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.853076797 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.917221155 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.095503916 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.946722947 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.855615271 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.965890924 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.828817801 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.871234448 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.771396447 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.928378045 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.852920437 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.894087493 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.827495202 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.821436444 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.003562588 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.08408006 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.839009941 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.836675833 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.984594121 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.687042442 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.844158176 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.829161865 seconds)
  done (took 171.553106499 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.005061472 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.823625351 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.818078552 seconds)
    (3/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.817031011 seconds)
    (4/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.872527151 seconds)
    (5/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.940346325 seconds)
    (6/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.818898256 seconds)
    (7/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.461183853 seconds)
    (8/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.82664373 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.610900634 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.820239643 seconds)
    (11/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.819457587 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.818220816 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.819581964 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.831479153 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.898385338 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.820098936 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.833529464 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.820191021 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.844843891 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.818097371 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.81822913 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.817859712 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.818271249 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.81833325 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.818632212 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.81940374 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 21.984856851 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.05907568 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.819679471 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.819453585 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.86099947 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.829091298 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 22.229908396 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.824594228 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.910708778 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.875950287 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.928857331 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.819693062 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.037334491 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.893258542 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.820252432 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.819584434 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.883802051 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.831305614 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.820527428 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.821177934 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.826231958 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.885177715 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.062962951 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.821416813 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.942776657 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.302357106 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.820382403 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.819943284 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.820452654 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.388368928 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.819784725 seconds)
    (58/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.821081543 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.826738027 seconds)
    (60/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.826080307 seconds)
    (61/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.820625627 seconds)
    (62/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.820959372 seconds)
    (63/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.208045234 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.891803969 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.939122294 seconds)
    (66/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 21.955553882 seconds)
    (67/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.821893085 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.331851698 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.0157904 seconds)
    (70/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.82001764 seconds)
    (71/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.820765516 seconds)
    (72/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.820939847 seconds)
    (73/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.821968452 seconds)
    (74/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.820069376 seconds)
    (75/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.823803858 seconds)
    (76/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.944507244 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.82935022 seconds)
    (78/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.927843442 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.902540614 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.821582187 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.943638185 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.824795255 seconds)
    (83/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.821726602 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.830852112 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.663693306 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.889878375 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.857494383 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.643496127 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.822358097 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.194949162 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.582484199 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.822074177 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.822535069 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.836557543 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.822485734 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.822353688 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.82611482 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.901898382 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.823606568 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.945572439 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.550175453 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 21.966921595 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.823190972 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.821784783 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.828941791 seconds)
    (106/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.822880789 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.902764072 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.944825132 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.825704462 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.888102922 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.828406823 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.824176 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.903243769 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.823381052 seconds)
  done (took 406.307589766 seconds)
done (took 787.208768645 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.429381214 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.404543098 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.498823685 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.423077353 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.395365256 seconds)
  done (took 13.911375641 seconds)
done (took 15.673264343 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.836609252 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.829409263 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.881433193 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.908409589 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.840615689 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.841905138 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.904504468 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.844042428 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.873659398 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.876166743 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.907722328 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.908728717 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.847297498 seconds)
  done (took 26.062952652 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.832842718 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.96687616 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.044068393 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.863235545 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.834207713 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.045809917 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.889227836 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.959434344 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.96673448 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.058683415 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.045804924 seconds)
  done (took 23.270963297 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.833367165 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.969434747 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.045460871 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.868150704 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.835538879 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.048845923 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.895016275 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.961423769 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.973907298 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.046275736 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.057336442 seconds)
  done (took 23.305141589 seconds)
done (took 74.400833611 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.828205595 seconds)
  done (took 3.592174373 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.846134997 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.97300311 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.829223433 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.828546458 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.828158899 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.82941269 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.829080027 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.82881184 seconds)
  done (took 16.557828441 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.829372221 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.829819404 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.82894185 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.830529483 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.831233708 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.829983456 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.829674821 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.830147997 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.830808996 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.830158332 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.831193678 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.830304242 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.829946227 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.830164478 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.830950469 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.830375928 seconds)
  done (took 31.049407618 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.831941857 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.830746995 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.829385683 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.830987666 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.830153189 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.831703153 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.832837231 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.831917072 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.830625699 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.830568915 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.83107325 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.830394602 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.830822303 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.831790781 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.830959185 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.832333715 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.830309284 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.832374592 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.834957457 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.831219602 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.831442355 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.832076415 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.831961801 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.831705102 seconds)
  done (took 45.720980741 seconds)
done (took 98.691341088 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.551956707 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.84452181 seconds)
  done (took 10.16268336 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.833212076 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.833392352 seconds)
  done (took 5.437964723 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.833182205 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.833658721 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.832942344 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.832497717 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.832827092 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.832626889 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.833508691 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.833527312 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.833794862 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.835341406 seconds)
  done (took 20.101745703 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.835963841 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.835349185 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.836567943 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.835164369 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.835436294 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.835648216 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.835807232 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.83581651 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.83611304 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.836364941 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.836561528 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.83561137 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.83577889 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.835958342 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.836082856 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.834973556 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.836386829 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.835799078 seconds)
  done (took 34.816040849 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.835636378 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.836337944 seconds)
  done (took 5.442380664 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.836360344 seconds)
    (2/7) benchmarking "second"...
    done (took 1.837102865 seconds)
    (3/7) benchmarking "month"...
    done (took 1.836390531 seconds)
    (4/7) benchmarking "year"...
    done (took 1.836519207 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.836402569 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.836397249 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.836746819 seconds)
  done (took 14.627201273 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.837192275 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.982168288 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.033062609 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.446415647 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.837273831 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.839015983 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.688908967 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.838309513 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.841063476 seconds)
  done (took 20.114622201 seconds)
done (took 112.470031732 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.656348543 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.837108809 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.109865654 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.957562068 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.856543694 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.174250871 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.872899555 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.48558386 seconds)
done (took 42.722806274 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.866195322 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.833436411 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.87628158 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.880356817 seconds)
  done (took 22.36112208 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.835500171 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.140086082 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.857270196 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.686610431 seconds)
  done (took 22.304575816 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.212190557 seconds)
    (2/2) benchmarking "read"...
    done (took 2.181363633 seconds)
  done (took 6.168961582 seconds)
done (took 59.47578816 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.835964328 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.836553771 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.835940888 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.836703033 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.836053496 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.836355047 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.836364156 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.836927107 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.836494792 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.837424865 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.837477372 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.837423846 seconds)
    (13/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.838744257 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.838203283 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.837155265 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.837080619 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.837839695 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.837402949 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.837336305 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.837402907 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.83853812 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.837489763 seconds)
    (23/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.838115075 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.837843626 seconds)
  done (took 45.86427345 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.838012377 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.837945362 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.838990858 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.837512014 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.838364392 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.838339254 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.83807834 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.838049383 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.838311433 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.83798606 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.837468121 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.838309241 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.838731297 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.837545348 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.838651927 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.839564587 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.837734816 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.83907027 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.838591269 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.838481098 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.838526565 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.8381962 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.838864747 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.837790232 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.839766103 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.838645003 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.838375037 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.838805893 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.839350092 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.839578991 seconds)
  done (took 56.928220883 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.838558153 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.839836449 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.838621993 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.839750941 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.839538378 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.8399173 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.839825337 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.839325459 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.839701408 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.840456173 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.841033138 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.840304171 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.840246836 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.840564917 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.840370607 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.841098699 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.840468432 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.840560275 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.84012535 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.840700988 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.839629395 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.841691558 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.84091221 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.842245783 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.840709795 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.841618968 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.841246176 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.841522035 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.841028184 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.841684834 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.840925256 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.841235303 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.840983032 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.841158396 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.841913399 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.841795946 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.841307096 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.842095805 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.840850734 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.841643872 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.841738612 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.841937957 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.841299677 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.841762823 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.840937736 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.843007577 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.842174508 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.842243758 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.84344757 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.842928813 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.842649968 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.843763211 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.841705996 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.842422102 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.842131033 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.843161534 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.842860531 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.842995314 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.842808201 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.843708443 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.84172252 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.843042535 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.843400669 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.842870739 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.84438372 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.843414802 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.844150128 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.844023581 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.842840486 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.843849256 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.843583517 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.844299494 seconds)
  done (took 134.374762743 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.844057558 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.843995041 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.84383378 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.843904776 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.842959324 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.845013326 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.844051276 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.845044968 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.843655491 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.845658503 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.844136936 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.844423827 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.844133779 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.843722638 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.842810121 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.843850535 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.844141583 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.844998001 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.844410449 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.843935406 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.844971478 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.844877361 seconds)
  done (took 42.351204132 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.843949091 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.844112164 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.84465788 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.843880336 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.845421654 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.845017129 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.844541369 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.844023772 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.84545035 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.845084222 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.844945703 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.844302324 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.8458526 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.845592395 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.845500606 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.847069653 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.845878766 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.845851362 seconds)
  done (took 34.989973751 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.846064009 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.844914175 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.846083754 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.846236724 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.846187432 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.846666503 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.846708971 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.846263738 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.846846282 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.845315757 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.846162226 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.84731189 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.847521332 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.845787862 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.847172363 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.845474231 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.846724987 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.845867427 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.846075884 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.846323972 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.846413966 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.847167937 seconds)
  done (took 42.399391198 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.846267916 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.846442828 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.846622027 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.847066249 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.846931584 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.847040729 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.847063863 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.84723318 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.846035267 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.848063848 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.847965419 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.848103771 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.847258079 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.847034518 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.848074044 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.847862208 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.846917541 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.850238921 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.84777307 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.847786328 seconds)
  done (took 38.729435327 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.847143879 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.847472732 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.848565328 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.848456192 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.847625503 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.847810572 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.848392064 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.847282934 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.846724105 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.847780684 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.847286746 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.84802545 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.84908136 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.848396317 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.848571212 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.849486866 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.849278558 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.848814705 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.849033357 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.848312847 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.848638981 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.84890874 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.848430459 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.849453886 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.848355235 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.849485901 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.848667542 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.84955994 seconds)
  done (took 53.538058181 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.850044396 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.849513063 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.849876416 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.850461397 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.850101342 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.849534249 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.850664952 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.850074545 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.849751311 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.850293623 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.848763807 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.850734702 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.849962322 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.850087163 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.850643778 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.850158688 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.84972584 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.850409814 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.849985979 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.85150717 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.851360812 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.850542574 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.850688823 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.851080992 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.851103062 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.851614055 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.850844128 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.851228805 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.849961506 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.85060177 seconds)
  done (took 57.296124987 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.870482835 seconds)
    (2/2) benchmarking "in"...
    done (took 1.871323189 seconds)
  done (took 5.525325696 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.851119283 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.852097236 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.852139031 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.852538325 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.851965172 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.852432918 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.85181098 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.852439604 seconds)
  done (took 16.601852552 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.851989482 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.854553763 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.853449649 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.852929166 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.852049093 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.85900466 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.85454151 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.852868364 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.854901553 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.853564554 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.856473282 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.855848989 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.860752373 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.857088423 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.853754511 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.853034391 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.853541103 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.854531704 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.853799761 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.853084826 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.854711703 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.852435541 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.853497315 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.852669449 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.853557555 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.855268899 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.862610408 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.854957004 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.853755374 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.853808639 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.859718309 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.856160219 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.852653769 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.853922502 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.852924707 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.853527051 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.859619184 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.854360524 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.853013099 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.855165902 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.855673587 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.856525079 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.857139668 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.860672162 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.855068914 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.854663357 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.854159014 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.853894052 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.854525683 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.857849934 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.86295793 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.853962144 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.855746181 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.855376493 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.856969513 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.854478584 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.854587268 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.855652298 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.861677033 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.86332488 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.860214802 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.875450624 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.866186288 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.855288702 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.855057262 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.863725121 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.885061031 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.857572263 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.859362631 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.857046165 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.862656829 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.857478065 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.855453138 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.855428195 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.868967407 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.864725434 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.854707909 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.856522088 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.857044764 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.855950118 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.856066558 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.855412731 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.856322323 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.856519774 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.865952495 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.886293638 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.857645001 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.857491139 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.859392324 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.858128676 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.860257861 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.858452029 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.859353916 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.859264749 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.857895345 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.860839381 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.857327495 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.85715263 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.856626222 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.86684622 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.860094538 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.857888152 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.861220871 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.865765778 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.858826405 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.857707951 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.858845892 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.858677159 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.864710149 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.858665741 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.858047629 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.858667299 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.859546337 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.863310501 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.85798334 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.861210732 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.865657021 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.866771371 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.863369535 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.86466336 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.862682913 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.861064839 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.868510602 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.886137611 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.858321829 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.861593633 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.86572598 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.870388424 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.862289797 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.861870276 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.860675312 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.862435274 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.859444161 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.861082162 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.859864164 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.859166903 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.859375078 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.859241229 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.8602985 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.858181643 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.862161006 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.860611735 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.862057839 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.860659947 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.86366993 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.85975205 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.86143457 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.867504315 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.863900711 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.860136262 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.860488411 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.862828278 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.862600872 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.861374323 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.861885754 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.860911087 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.860273486 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.861212734 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.864135955 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.861243508 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.861601283 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.862307603 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.866944228 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.860729598 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.861497359 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.861531347 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.861259124 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.860865908 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.862139586 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.862093202 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.862749403 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.861629743 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.866938369 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.86258905 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.861469749 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.860900588 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.861963641 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.860817284 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.866476518 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.871928831 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.865851967 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.870795005 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.863190054 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.868686738 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.864239395 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.86250031 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.862692016 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.863079187 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.862551283 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.86143072 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.861803151 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.865216296 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.883779039 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.874072108 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.865749552 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.864423476 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.868690401 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.866424715 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.867624701 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.863836742 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.863613876 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.865851008 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.861684002 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.861956392 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.863052831 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.867401789 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.863181 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.863144028 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.86556932 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.86472176 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.862968619 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.863438336 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.863097721 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.865875763 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.86466079 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.862621829 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.864840246 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.865235985 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.87124357 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.868416151 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.865613862 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.862674362 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.86620718 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.865391773 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.864949366 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.865248949 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.867615804 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.866269416 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.866109634 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.873532129 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.867662665 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.866109287 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.864791494 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.866858914 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.865927948 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.866972897 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.866902241 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.872152853 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.866937154 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.867149962 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.869526197 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.867904886 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.867752129 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.8660757 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.865361904 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.864427403 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.865462798 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.865449589 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.86563286 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.87203308 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.86671988 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.865155497 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.864158871 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.868153234 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.866867049 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.868498046 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.865211335 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.868555901 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.874591538 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.873038769 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.86694859 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.870022128 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.869231599 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.867828042 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.871784832 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.867184624 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.879037954 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.877198866 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.866972993 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.867077424 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.865746917 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.869446358 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.86767752 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.866785502 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.87370074 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.870136501 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.86863065 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.873803427 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.867024361 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.865989412 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.872622449 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.870174296 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.870109418 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.870168452 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.867991646 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.868807967 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.869604595 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.868628006 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.870110844 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.869307129 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.872962896 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.867937887 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.868352869 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.869480159 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.876603127 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.870224696 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.868535494 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.875870297 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.871071482 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.869230103 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.870187392 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.869792632 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.869746845 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.869842184 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.868760277 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.870707634 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.869311283 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.8715297 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.879009849 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.872353999 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.879693396 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.869795934 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.877910963 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.870305481 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.86945925 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.868036522 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.87261882 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.875852637 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.869689176 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.868294272 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.877853727 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.871351723 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.871710658 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.873056417 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.870347152 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.869352791 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.869508512 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.87067222 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.875519344 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.871659519 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.872000553 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.869051612 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.870280966 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.869445957 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.871112311 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.873364769 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.871815241 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.871154285 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.870834994 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.870980309 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.869559565 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.869412003 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.869257846 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.869481952 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.870829131 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.877387034 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.871909277 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.871388897 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.874110757 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.871434193 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.878665065 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.871937634 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.871376039 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.873710803 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.872585012 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.872895654 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.871598489 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.870863652 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.872804964 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.871827978 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.872337064 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.883334069 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.880826026 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.876595772 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.872645611 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.872357476 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.87367457 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.881674775 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.899983492 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.87124083 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.874715218 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.877532088 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.87997949 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.87752057 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.879969617 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.875853578 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.880517934 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.874613947 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.872572781 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.876727293 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.885583235 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.872948877 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.87395449 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.873430681 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.878339401 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.876088012 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.873859893 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.875632672 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.87731095 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.874184611 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.886091939 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.877452711 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.874666825 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.873186773 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.872945181 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.872685284 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.873928441 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.873672601 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.874877632 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.873946701 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.873349042 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.876442168 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.879847779 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.873133676 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.876816308 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.88357211 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.873548174 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.874412983 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.876482266 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.874594488 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.875673339 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.874691139 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.874551789 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.876439176 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.874259273 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.874902161 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.879471153 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.883980106 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.875083379 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.875530217 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.874491007 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.878969183 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.876045544 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.874927292 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.876459756 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.883910414 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.880014969 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.88659731 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.886226918 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.875361462 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.877345465 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.88303465 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.883975735 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.875960147 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.875851995 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.87601156 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.87853426 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.877006888 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.877068685 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.876005965 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.878045874 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.8810627 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.87610141 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.876218733 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.876656857 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.877046892 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.87936181 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.879209785 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.882638818 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.877445832 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.877825646 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.875049477 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.877228186 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.877646077 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.878851735 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.875733379 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.877185396 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.877417595 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.878357207 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.881224999 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.877299481 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.877636284 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.878595211 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.877979267 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.87816731 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.878057977 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.879485619 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.877118979 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.880587558 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.885289828 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.877936482 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.877560941 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.877735706 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.880917247 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.877721098 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.877197603 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.877272158 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.878043296 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.885131171 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.881216904 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.877937582 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.878628504 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.878112863 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.883953716 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.879244106 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.88317121 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.879339829 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.87905186 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.87946711 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.881719599 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.887243169 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.882401726 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.881969757 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.888413548 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.884255536 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.882012447 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.878086266 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.880098856 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.878779072 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.880740819 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.884149785 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.880696132 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.882737046 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.87995392 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.880600098 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.879234956 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.881282293 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.880464646 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.880434986 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.883088966 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.889881764 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.889074033 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.881717691 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.88138735 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.879966359 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.882244115 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.891269577 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.880059139 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.880505379 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.880456885 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.880729206 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.881272661 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.888966 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.888921132 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.883857986 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.881784643 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.886599263 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.897556428 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.883960382 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.891967281 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.915671643 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.884044769 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.880742058 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.8821985 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.882186715 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.880470695 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.884454043 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.88178527 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.887253764 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.883351638 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.883351668 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.890573705 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.883605715 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.883634255 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.881743317 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.882421163 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.888329239 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.881406836 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.888812216 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.883439116 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.882308448 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.882282194 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.884720952 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.882121364 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.882693181 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.883373014 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.884074814 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.882398688 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.88245565 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.891095762 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.884336464 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.88348752 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.896939817 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.896188439 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.88241163 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.882616382 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.882867003 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.887384439 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.886718673 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.88412388 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.886376938 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.89151512 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.885821758 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.892209633 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.884766461 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.884447558 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.883593432 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.8836333 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.883806742 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.896434867 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.89583736 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.885234338 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.88509272 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.890281786 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.883972695 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.890748573 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.890675891 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.885664867 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.886143743 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.883366262 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.883676857 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.885897032 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.885601823 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.887334525 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.893410458 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.884151102 seconds)
  done (took 1116.897327958 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.8860247 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.884377741 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.885614256 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.886128244 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.885700221 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.885988644 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.886662846 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.885696674 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.885991585 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.886022819 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.886132366 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.88648753 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.884764236 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.886891374 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.885316581 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.884323635 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.884308401 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.88532737 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.883352759 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.885144851 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.88346661 seconds)
  done (took 41.412330461 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.883805276 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.884268529 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.88488584 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.886857565 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.88251386 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.882863502 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.882147489 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.88279652 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.883676859 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.883383276 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.887611744 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.885432652 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.884785621 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.885321799 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.887332693 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.884453704 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.886715064 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.885948763 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.887644381 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.88243754 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.881619698 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.882463295 seconds)
  done (took 43.275168302 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.882696227 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.878105197 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.881967003 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.884811227 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.884342955 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.880714717 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.886536302 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.882093324 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.886098468 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.878784295 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.887890224 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.894306862 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.885520951 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.888811554 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.8878384 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.881806596 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.034854581 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.873001425 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.873404197 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.874291455 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.873201983 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.879207346 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.877857461 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.874638988 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.873320156 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.873493714 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.875191739 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.875752105 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.87501722 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.873020344 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.878754405 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.874411849 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.876640754 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.875758148 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.874770272 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.874608511 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.878214851 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.873282273 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.875237785 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.874894365 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.883707019 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.902787969 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.874957818 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.875176262 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.882657251 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.877368689 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.875883677 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.877708389 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.882901989 seconds)
  done (took 94.061479259 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.874826659 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.874300057 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.876585995 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.87501257 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.87820313 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.874707886 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.875214733 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.874646944 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.875154238 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.876279604 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.873382251 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.873481562 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.874203596 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.873387438 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.875733922 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.867603551 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.867045365 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.868765461 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.866430571 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.869512884 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.868868666 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.868104097 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.867354582 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.86782821 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.869397856 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.868544319 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.868522444 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.870005031 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.869648727 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.868532099 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.867646806 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.867853327 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.8692699 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.869450864 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.868293558 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.870004146 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.867876386 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.868061002 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.868676242 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.868915763 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.867549463 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.869402191 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.871255362 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.87042334 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.869622734 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.86849862 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.867657767 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.867167898 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.868142731 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.867297925 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.867948731 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.867950237 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.869184254 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.871550699 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.870362526 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.869866588 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.870603636 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.871697438 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.871591381 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.870419489 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.873389022 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.871854574 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.871187869 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.869695167 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.870434267 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.8725534 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.871603769 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.874024649 seconds)
  done (took 129.009675855 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.868828858 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.87012439 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.870074227 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.8674752 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.8737834 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.87386504 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.870872051 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.869686481 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.868759434 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.872740013 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.870032014 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.868312998 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.868524942 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.87257122 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.871594701 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.871782769 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.871434871 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.869346173 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.869980859 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.868808183 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.872022261 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.871919324 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.871762677 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.871384557 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.87153861 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.871273849 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.871965949 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.87035958 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.869634695 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.870957335 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.872381138 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.8708866 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.871104214 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.869896105 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.871434202 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.872313709 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.872949577 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.870138515 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.86985016 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.869125458 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.869375818 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.870588501 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.867843959 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.866196017 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.867219625 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.866228832 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.867071509 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.867546019 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.867239704 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.865132162 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.864250828 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.865186529 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.86682897 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.865841644 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.864678812 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.864077353 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.864987588 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.866134265 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.866062846 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.865225863 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.865846344 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.866007029 seconds)
  done (took 117.694889332 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.866078424 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.864179841 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.863271526 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.863619819 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.864379577 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.866240292 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.861409034 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.864001519 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.862707027 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.862782316 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.86272489 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.863146041 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.863332176 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.862736908 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.863425595 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.863377491 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.863691514 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.862877747 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.862495627 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.862280706 seconds)
  done (took 39.065785201 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.865369706 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.864674135 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.863196952 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.862132936 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.864024278 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.861329545 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.865905702 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.863278055 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.863100183 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.862224983 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.86195653 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.863705915 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.862538561 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.861655618 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.862562983 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.862924225 seconds)
  done (took 31.605890231 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.864751896 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.863365759 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.862037334 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.86322365 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.865119137 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.862286341 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.861573373 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.864523985 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.862200296 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.863664846 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.864884848 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.860546915 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.861037705 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.861933414 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.860914682 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.861151587 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.862676958 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.858453333 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.860640205 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.860955499 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.860002835 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.86193165 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.860001689 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.861533255 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.859184674 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.861073425 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.859267652 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.859199238 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.860529416 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.859146119 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.857698334 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.860229921 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.860771526 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.858863687 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.860310045 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.860812733 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.859368658 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.859981831 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.861639654 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.859024108 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.85906401 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.858981696 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.860425194 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.860984189 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.860347473 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.861042698 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.859511695 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.859583968 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.861882673 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.860487214 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.861669148 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.861023742 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.859867995 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.863453761 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.859322197 seconds)
  done (took 104.151200999 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.861466277 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.860708405 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.8591316 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.861599636 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.860492378 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.859794768 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.86065412 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.861458933 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.862500371 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.859719975 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.859150023 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.857733655 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.858895565 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.862263012 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.862451463 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.858356707 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.860797968 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.860248571 seconds)
  done (took 35.2808721 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.862728843 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.85983415 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.859244789 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.858710088 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.858223026 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.85710301 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.855262056 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.857571474 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.85821549 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.85872452 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.856191704 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.858633263 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.856832478 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.858030758 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.858649591 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.856759347 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.861589426 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.858474713 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.858746821 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.859399006 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.860686321 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.858943999 seconds)
  done (took 42.673586369 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.856347243 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.856250948 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.869511251 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.877438514 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.877543608 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.892541056 seconds)
  done (took 13.018310482 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856771897 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.857054376 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.859376433 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856434572 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.859807599 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.857788381 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.857341018 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.859323657 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.858015061 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.857515778 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.858610715 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.858186676 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.860369147 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.859456852 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.857664582 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.855577485 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.85818249 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.859283584 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.859145755 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.854920026 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.857133173 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.857171006 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.857274841 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856591337 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.859308714 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.856707006 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.857337267 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.856304099 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.858312737 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.858728338 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853653664 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.858325872 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.854941568 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.85891959 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.858349301 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.857884473 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.857975767 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.857659493 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.856229966 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.857743445 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.860423389 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856246485 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.857048826 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856735851 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.856359422 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.8567253 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.853937737 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.855050593 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.858813365 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.857565384 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.856875509 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.859845521 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.858325828 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.856698834 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.859367158 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.858648231 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.859438034 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.857547554 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.858688853 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.858299453 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.859167873 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.857859478 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.859142243 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.858827918 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.860578307 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.858897395 seconds)
  done (took 124.402017082 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.861586804 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.858456239 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.857592858 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.858447239 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.857969342 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.860678498 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.857197207 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.856245477 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.859617019 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.857814848 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.858436987 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.859833525 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.858907693 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.860240593 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.86243822 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.857774151 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.858719227 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.859729597 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.858394595 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.857687276 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.859326828 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.859208312 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.859727962 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.859325014 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.862772502 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.860968668 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.8610698 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.859164138 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.861621164 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.858975611 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85913456 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.860156707 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.860830644 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.859853961 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.858745427 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.859697339 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.860855194 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.860156138 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.861077131 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.859299761 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.859388271 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.862545928 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.859683453 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.863303469 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.86171413 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.860160912 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.859997563 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860975481 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.860802259 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.859061701 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.863232309 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860298855 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.861267331 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.861187916 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.862031416 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.86448372 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.863652469 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.85980569 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.86274703 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.860684028 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.862063589 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.86112661 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.860864932 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.86010036 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.863774298 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.860854274 seconds)
  done (took 124.568128428 seconds)
done (took 2587.494338331 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.882555826 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.9693357 seconds)
  done (took 15.64145806 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.022837173 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.979468795 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.863319645 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.894763189 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.860299203 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.880503002 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.890146829 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.862803908 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.865792613 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.86471911 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.865212264 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.049319383 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.887330151 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.863413699 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.865025639 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.956144481 seconds)
  done (took 52.271241392 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.869379653 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.866847479 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.879881655 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.874628745 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.870160062 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.881624843 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.898527054 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.875321263 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.905206891 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.880149019 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.937292495 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.879065679 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.868743708 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.919039509 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.884835306 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.882652813 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.965826606 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.949663417 seconds)
  done (took 35.884146923 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.944945538 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.873518083 seconds)
  done (took 10.618853889 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.879460819 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.892022994 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.861967335 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.882607616 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.887238723 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.868005183 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.867187206 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.865078495 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.867830863 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.860751195 seconds)
  done (took 70.526163846 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.873549247 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.869164189 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.869373669 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.863631942 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.862487989 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.867477582 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.864986564 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.865361321 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.558419769 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.903137666 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.874864285 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.877331008 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.870758399 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.868716189 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.865705174 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.89123594 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.978592118 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.865414191 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.871297793 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.874453441 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.864385149 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.919007992 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.878586562 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.871060165 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.900669975 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.550608689 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.875292226 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.870194225 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.992571171 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.866976063 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.867101803 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.079642692 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.873709913 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.339191722 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.185188969 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.870624366 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.877755996 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.876749318 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.866268621 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.993740627 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.866867159 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.876011055 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.773465869 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.160293713 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.956431877 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.912244573 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.198992512 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.868399702 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.870079763 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.901817007 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.871816922 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.868141472 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.884883481 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.379190424 seconds)
  done (took 132.843512932 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.865259271 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.214639121 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.031749979 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.869284916 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.14778823 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.069036844 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.868640476 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.911357095 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.873939999 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.095412281 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.116115902 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.968846469 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.869526596 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.863718617 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.864391034 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.866219953 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.008618045 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.934927733 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.872065857 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.863824647 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.893773763 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.106930134 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.986700709 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.870866827 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.892478671 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.074785348 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.987242127 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.969988738 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.640110603 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.865821013 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.929652687 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.868845179 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.869818932 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.865995081 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.022194641 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.96144771 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.948573102 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.870726106 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.868763711 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.867049988 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.609521685 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.065693983 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.962419573 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.992471774 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.118359607 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.071558826 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.647896504 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.866037296 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.616017551 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.030018233 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.095116353 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.102385738 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.985848579 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.870502832 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.1994207 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.866711421 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.869055105 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.113980497 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.085631019 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.964625085 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.871900423 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.869247311 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.868233461 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.154649254 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.871333 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.963123037 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.872709729 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.869107804 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.963164282 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.96529962 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.098342854 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.080107375 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.897667589 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.204643801 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.372962723 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.112837544 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.931821425 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.115258672 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.869980577 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.869066516 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.945503413 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.707379421 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.121424006 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.148509471 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.11196271 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.901694943 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.594053116 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.870615213 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.096118383 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.088356312 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.115950035 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.117023529 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.106745711 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.184473969 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.870185137 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.873543221 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.114849855 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.987989587 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.873651115 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.210719971 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.098621301 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.412448263 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.905119287 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.174695428 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.998650313 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.874071376 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.504903436 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.872405214 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.095333744 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.913436185 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.878618057 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.871361027 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.088859689 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.845182537 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.872748649 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.522052191 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.932227501 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.876649133 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.104404542 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.875209207 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.129012223 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.872228249 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.100314218 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.958195793 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.899983049 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.044977254 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.120023405 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.872050475 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.112188043 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.106237727 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.983406384 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.089492678 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.491342012 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.870546019 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.155525943 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.871757621 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.870973481 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.039608722 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.876378584 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.012053401 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.878314312 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.152629336 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.891476064 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.107145882 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.871242377 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.12695775 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.901540733 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.921519615 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.876107797 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.000872389 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.87659966 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.707688655 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.027223532 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.877344098 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.870479019 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.437736215 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.874100343 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.019561319 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.095577489 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.891124788 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.944649508 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.535717847 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.872696889 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.949775172 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.89532003 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.25987236 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.875359284 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.123935279 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.876079527 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.872492322 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.871645801 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.153696007 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.052124873 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.877037381 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.869581472 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.765656163 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.875094238 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.87255148 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.054836792 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.267834384 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.873555012 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.072400597 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.877529722 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.998321208 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.876008915 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.943191081 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.204546501 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.873781161 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.873078347 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.873201118 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.876968637 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.874124323 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.082595052 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.896173698 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.387002173 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.010604804 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.13995784 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.180112426 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.113383598 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.915219361 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.881319811 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.125558773 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.877537294 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.936260244 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.876944307 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.893943602 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.103640179 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.881622062 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.081612399 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.147208111 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.722470374 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.922286566 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.878762692 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.87553186 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.87545602 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.012701772 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.962394286 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.879388719 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.873961187 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.989328534 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.993796556 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.081793349 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.878558364 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.008925332 seconds)
  done (took 903.514511475 seconds)
done (took 1223.0918931 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.874609028 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.875789008 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.879418387 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.880414474 seconds)
  done (took 29.314952788 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.877969874 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.875917673 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.877525318 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.879888462 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.876449619 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.878556156 seconds)
  done (took 13.070573928 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.894442918 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.877603674 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.882220362 seconds)
  done (took 21.458764531 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.951187647 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.291041801 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.01717968 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.302658501 seconds)
  done (took 10.369095416 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.879456359 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.879625018 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.877433069 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.880203493 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.877656642 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.87828897 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.879369105 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.879502383 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.877012099 seconds)
  done (took 18.7161704 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.929679113 seconds)
done (took 98.665432071 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.908108673 seconds)
    (2/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.879582509 seconds)
    (3/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.2944515 seconds)
    (4/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.958536484 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.944509472 seconds)
    (6/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.959605658 seconds)
    (7/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.387494637 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.085696601 seconds)
    (9/309) benchmarking ("sort", BigInt, false)...
    done (took 6.876837836 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.803282131 seconds)
    (11/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.3055858 seconds)
    (12/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.900340722 seconds)
    (13/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.194669324 seconds)
    (14/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.877907258 seconds)
    (15/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.722010031 seconds)
    (16/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.903244891 seconds)
    (17/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.87935196 seconds)
    (18/309) benchmarking ("perf_sum", Int8, false)...
    done (took 3.608381955 seconds)
    (19/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.689901764 seconds)
    (20/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.983378325 seconds)
    (21/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.878532668 seconds)
    (22/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.084629434 seconds)
    (23/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.253223857 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.184125077 seconds)
    (25/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.713210494 seconds)
    (26/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.062381565 seconds)
    (27/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.034992268 seconds)
    (28/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.352359621 seconds)
    (29/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.105842596 seconds)
    (30/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.943958636 seconds)
    (31/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.17996822 seconds)
    (32/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.122726995 seconds)
    (33/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.906692836 seconds)
    (34/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.061572133 seconds)
    (35/309) benchmarking ("map", abs, BigInt, false)...
    done (took 8.443143814 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.991552048 seconds)
    (37/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.269397868 seconds)
    (38/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.88255957 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.278746965 seconds)
    (40/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.194133775 seconds)
    (41/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.968714273 seconds)
    (42/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.427027881 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.169467327 seconds)
    (44/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.891998604 seconds)
    (45/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.897688259 seconds)
    (46/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.881560061 seconds)
    (47/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.021768819 seconds)
    (48/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.883156905 seconds)
    (49/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 2.045559026 seconds)
    (50/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.189279592 seconds)
    (51/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.88286077 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.029831523 seconds)
    (53/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 1.967655193 seconds)
    (54/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.884722098 seconds)
    (55/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.974246646 seconds)
    (56/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.956955013 seconds)
    (57/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.991151607 seconds)
    (58/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.267617921 seconds)
    (59/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.960599074 seconds)
    (60/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.084633052 seconds)
    (61/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.883180425 seconds)
    (62/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 4.003741177 seconds)
    (63/309) benchmarking ("sort", Bool, false)...
    done (took 2.097956422 seconds)
    (64/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.976487964 seconds)
    (65/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.891565426 seconds)
    (66/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.880008333 seconds)
    (67/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.350263075 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.862792828 seconds)
    (69/309) benchmarking ("sort", Int64, false)...
    done (took 5.504279621 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.019755792 seconds)
    (71/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.133325099 seconds)
    (72/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.904937891 seconds)
    (73/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.051614255 seconds)
    (74/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.760492803 seconds)
    (75/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.047404415 seconds)
    (76/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.900772646 seconds)
    (77/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.982517314 seconds)
    (78/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.273542724 seconds)
    (79/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.942690376 seconds)
    (80/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.64437684 seconds)
    (81/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.996847855 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.189931004 seconds)
    (83/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.965366487 seconds)
    (84/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.880151061 seconds)
    (85/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.806819697 seconds)
    (86/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.15308596 seconds)
    (87/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.025263392 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.13969398 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.995093516 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.850375377 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.011812334 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.214267059 seconds)
    (93/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.904611053 seconds)
    (94/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.972539872 seconds)
    (95/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.576620208 seconds)
    (96/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.102234041 seconds)
    (97/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.278791939 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.98520739 seconds)
    (99/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.395853789 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.008785277 seconds)
    (101/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.065542318 seconds)
    (102/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.353654127 seconds)
    (103/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.249023941 seconds)
    (104/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.88452015 seconds)
    (105/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.961014147 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.283306222 seconds)
    (107/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.107581332 seconds)
    (108/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.896303498 seconds)
    (109/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.991791314 seconds)
    (110/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.276592177 seconds)
    (111/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.203509748 seconds)
    (112/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.02216282 seconds)
    (113/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.187650103 seconds)
    (114/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.90493505 seconds)
    (115/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.137809297 seconds)
    (116/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.88774157 seconds)
    (117/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.260876241 seconds)
    (118/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.889607455 seconds)
    (119/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.883645693 seconds)
    (120/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.04509446 seconds)
    (121/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.629421523 seconds)
    (122/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.884979025 seconds)
    (123/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.312319269 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.890648163 seconds)
    (125/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.968664619 seconds)
    (126/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.964027283 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.931569888 seconds)
    (128/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.183608762 seconds)
    (129/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.908923929 seconds)
    (130/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.018392342 seconds)
    (131/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.052003473 seconds)
    (132/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.532012071 seconds)
    (133/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.170944125 seconds)
    (134/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.273924367 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.010864095 seconds)
    (136/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.189853106 seconds)
    (137/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.992172388 seconds)
    (138/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.279204713 seconds)
    (139/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.349319732 seconds)
    (140/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.915888813 seconds)
    (141/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.888267004 seconds)
    (142/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.95990601 seconds)
    (143/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.140696779 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.246954083 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.291393157 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.203180851 seconds)
    (147/309) benchmarking ("sort", Float32, false)...
    done (took 5.549796505 seconds)
    (148/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.159546051 seconds)
    (149/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.355758557 seconds)
    (150/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.585904089 seconds)
    (151/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.190245571 seconds)
    (152/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.915322938 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.924381616 seconds)
    (154/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.021732401 seconds)
    (155/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.045268385 seconds)
    (156/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.911421697 seconds)
    (157/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.966254839 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.628638456 seconds)
    (159/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.056368149 seconds)
    (160/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.928621802 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.01600187 seconds)
    (162/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.902446445 seconds)
    (163/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.078759658 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.147869039 seconds)
    (165/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.004372476 seconds)
    (166/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.538871661 seconds)
    (167/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.983358937 seconds)
    (168/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.902963885 seconds)
    (169/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.89109078 seconds)
    (170/309) benchmarking ("map", identity, Float64, true)...
    done (took 3.840503957 seconds)
    (171/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.889036653 seconds)
    (172/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.273511578 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.646596571 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.328340135 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.890109535 seconds)
    (176/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.225695736 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.285656246 seconds)
    (178/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.993259745 seconds)
    (179/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.19823285 seconds)
    (180/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.905274791 seconds)
    (181/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.953921037 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.996305846 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.609381753 seconds)
    (184/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.261218132 seconds)
    (185/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.000486512 seconds)
    (186/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.636888715 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.914519275 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.734942306 seconds)
    (189/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.028392931 seconds)
    (190/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.495277768 seconds)
    (191/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.657176534 seconds)
    (192/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.141362889 seconds)
    (193/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.053056247 seconds)
    (194/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.147198512 seconds)
    (195/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.435209232 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.245120604 seconds)
    (197/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.887689738 seconds)
    (198/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 3.808946115 seconds)
    (199/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.146237823 seconds)
    (200/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.893699723 seconds)
    (201/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.021994014 seconds)
    (202/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.019395483 seconds)
    (203/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.292335629 seconds)
    (204/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.103749003 seconds)
    (205/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.04271711 seconds)
    (206/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.047903128 seconds)
    (207/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.004111425 seconds)
    (208/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.91724759 seconds)
    (209/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.071042627 seconds)
    (210/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.106372048 seconds)
    (211/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.160432152 seconds)
    (212/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.915352027 seconds)
    (213/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.197573542 seconds)
    (214/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.892630995 seconds)
    (215/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 3.656742826 seconds)
    (216/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.889462699 seconds)
    (217/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.970561947 seconds)
    (218/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.925344046 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.691566654 seconds)
    (220/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.295632621 seconds)
    (221/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.466594022 seconds)
    (222/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.330733121 seconds)
    (223/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.124675151 seconds)
    (224/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.029596836 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.019008195 seconds)
    (226/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.975837155 seconds)
    (227/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.919360328 seconds)
    (228/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.174328206 seconds)
    (229/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.154491835 seconds)
    (230/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.539743842 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.203643364 seconds)
    (232/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.202660234 seconds)
    (233/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.399655124 seconds)
    (234/309) benchmarking ("sort", Float64, false)...
    done (took 5.611493897 seconds)
    (235/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.200721468 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.895596212 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.892068705 seconds)
    (238/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.593880228 seconds)
    (239/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.304759534 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.239863692 seconds)
    (241/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.515376861 seconds)
    (242/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 2.016581855 seconds)
    (243/309) benchmarking ("sort", Int8, false)...
    done (took 4.853621062 seconds)
    (244/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.995691556 seconds)
    (245/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.562574791 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.29686524 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.900330407 seconds)
    (248/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.347771133 seconds)
    (249/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.146456782 seconds)
    (250/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.892951761 seconds)
    (251/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.981923478 seconds)
    (252/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.035558113 seconds)
    (253/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.158655199 seconds)
    (254/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.541687578 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.785219921 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.562794145 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.756040823 seconds)
    (258/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.200750362 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.033171113 seconds)
    (260/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.893135981 seconds)
    (261/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.220529969 seconds)
    (262/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.999267464 seconds)
    (263/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.518937735 seconds)
    (264/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.892996381 seconds)
    (265/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 4.091595496 seconds)
    (266/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.89367708 seconds)
    (267/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.952911883 seconds)
    (268/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.996568379 seconds)
    (269/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.037003716 seconds)
    (270/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.915541443 seconds)
    (271/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.160776162 seconds)
    (272/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.022695364 seconds)
    (273/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.912397607 seconds)
    (274/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.044832547 seconds)
    (275/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.680281496 seconds)
    (276/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.894839545 seconds)
    (277/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.095567113 seconds)
    (278/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.90702311 seconds)
    (279/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.090399711 seconds)
    (280/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.959757965 seconds)
    (281/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.071009388 seconds)
    (282/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.895369456 seconds)
    (283/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.979780801 seconds)
    (284/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.096670119 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.820625057 seconds)
    (286/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.135677843 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.855698866 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.487913062 seconds)
    (289/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.009566027 seconds)
    (290/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.135502415 seconds)
    (291/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.381225871 seconds)
    (292/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.899411125 seconds)
    (293/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.784716468 seconds)
    (294/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.003832499 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.928425108 seconds)
    (296/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.213227163 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.600549308 seconds)
    (298/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.293328086 seconds)
    (299/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.046152974 seconds)
    (300/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.903376542 seconds)
    (301/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.099038396 seconds)
    (302/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.923606665 seconds)
    (303/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.955696396 seconds)
    (304/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.106223894 seconds)
    (305/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 7.005489399 seconds)
    (306/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.96205324 seconds)
    (307/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.100534083 seconds)
    (308/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.921994425 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.026792029 seconds)
  done (took 1016.817706823 seconds)
done (took 1018.701009125 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.923669269 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.91611001 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.900612217 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.920464185 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.010499176 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.943073774 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.912533417 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.90301448 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.949289537 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.951263588 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.898546865 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.943466645 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.900048025 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.900152224 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.901233934 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.915943979 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.202801828 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.925582358 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.917516261 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.912597404 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.918651329 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.89923451 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.952228148 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.940498522 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.907776637 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.90789509 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.906374175 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.920286189 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.013084309 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.903244781 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.909210109 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.914024959 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.205178986 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.924646338 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.898014485 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.919611381 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.912847305 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.914585294 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.905490393 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.934122823 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.346666676 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.904398967 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.9021968 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.900967446 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.904016589 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.911860924 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.90322308 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.91244709 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.917883398 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.91763093 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.342748031 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.921931487 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.902760849 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.902032527 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.915003988 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.903786553 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.906517323 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.917176261 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.921690688 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.919185756 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.198128208 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.937097262 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.907473741 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.921425457 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.913022534 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.378057979 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.904147772 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.911251084 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.349412402 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.916006226 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.378050973 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.916726628 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.90799341 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.920398592 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.936530142 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.208094822 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.927468648 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.902958498 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.914186546 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.903830577 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.917711555 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.91985674 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.910643602 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.908403269 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.921952324 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.947381166 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.917506572 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.905853146 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.920637135 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.924750231 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.912606824 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.917916198 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.910556451 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.902006069 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.92123557 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.91063937 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.910908946 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.91031712 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.912644325 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.918098891 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.347750618 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.927331275 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.905229067 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.904202066 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.905741149 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.918735973 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.343414155 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.913670799 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.929739372 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.958126884 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.909200039 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.201216615 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.935052493 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.92448081 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.919265165 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.911935285 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.905436519 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.202744851 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.376465996 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.923474081 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.906992718 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.904575979 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.923983887 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.910460113 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.904221258 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.211346215 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.934826934 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.923829479 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.033457008 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.922707276 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.940771466 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.906362809 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.912770967 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.954887243 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.92512726 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.940976484 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.91268025 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.924098612 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.924824014 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.905136684 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.920298647 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.920922733 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.909832118 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.917187655 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.907919843 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.952692915 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.926028311 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.923961097 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.932235622 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.03153867 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.90586094 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.201371593 seconds)
done (took 299.475927833 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.984681572 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.904286437 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.997395949 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.909001833 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.993734447 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.978332556 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.905414571 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.909873747 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.907772821 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.400776826 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.90892569 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.913031142 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.907405972 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.909316816 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.975556889 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.909842421 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.906140777 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.188351478 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.907645689 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.984620759 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.903875444 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.908202901 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.907290786 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.422395599 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.907752259 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.911769477 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.986728403 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.907950656 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.193145019 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.907955319 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.907186026 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.195118853 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.988040558 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.921201728 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.921799497 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.914806596 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.994348917 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.917236027 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.975077892 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.976296941 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.998614257 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.945269356 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.908865235 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.910644236 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.913479868 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.909185488 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.910692365 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.942741838 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.906540659 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.91565858 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.187992542 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.915019531 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.918759824 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.912236401 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.908790308 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.923280516 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.910850866 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.909602283 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.988165274 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.913073252 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.975265495 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.42104679 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.424244838 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.913859092 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.907408306 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.909635391 seconds)
  done (took 187.204641617 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.972901844 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.979669398 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.973921245 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.914312415 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.958274689 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.979473515 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.916573827 seconds)
  done (took 15.529155947 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.917539331 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.912207763 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.96249368 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.960514588 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.910070081 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.088215589 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.920889714 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.916788977 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.938063893 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.910827431 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.572181443 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.959523532 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.919560397 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.9100649 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.920662894 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.97309925 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.91493893 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.914062029 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.021744553 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.058755134 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.917503203 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.92166788 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.937755098 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.923680481 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.913204451 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.912566461 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.911236147 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.91728979 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.91238065 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.913051451 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.913977115 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.961898875 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.913032147 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.912645731 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.91657806 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.913088131 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.912134479 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.916379234 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.912466687 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.914804916 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.912939764 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.913053119 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.911852999 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.915127564 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.911468182 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.935838902 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.913017267 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.912318336 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.913906407 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.914739841 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.940312484 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.912891928 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.913993116 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.921126065 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.961535254 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.920503336 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.91230145 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.912644647 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.914865821 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.914041389 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.915516404 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.061144257 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.963746476 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.913865586 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.962566215 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.067969192 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.915611045 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.915046483 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.915123862 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.00737888 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.915134154 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.964844756 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.916131241 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.031806823 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.915887125 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.093366244 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.936889535 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.916364505 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.918768636 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.913562739 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.921715032 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.916315204 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.916667233 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.920549724 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.922082362 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.913172799 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.916427587 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.917147154 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.922231197 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.91519942 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.965463981 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.914566435 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.914941956 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.055863819 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.915853878 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.025463397 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.941449562 seconds)
  done (took 210.264603514 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.920851427 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.923350722 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.916069185 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.931566155 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.918846616 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.918763861 seconds)
  done (took 13.369414602 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.917171029 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.920478636 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.917863382 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.917217665 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.916930084 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.917686173 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.918123101 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.91553104 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.919074923 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.916255581 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.915138797 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.915268944 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.91558689 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.914825082 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.917322325 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.917057632 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.916886172 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.916988392 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.918820098 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.915086299 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.054319882 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.918166583 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.915658115 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.920424796 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.919959497 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.917037956 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.929731613 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.92058137 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.917753731 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.926682193 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.920875622 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.918590605 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.918668725 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.921226836 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.92024549 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.922152935 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.922040561 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.915866478 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.918069809 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.916677157 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.917057355 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.918053529 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.918172402 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.917941127 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.919029618 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.923806649 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.92235838 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.931020004 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.91925306 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.916424183 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.917171435 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.919879181 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.917570081 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.916672517 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.922510357 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.92367041 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.922926811 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.920967816 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.921958449 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.920660261 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.924312806 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.919324253 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.921092881 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.922910308 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.925458099 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.919981773 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.921862247 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.925697742 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.921194356 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.922862468 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.920304368 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.920857715 seconds)
  done (took 141.190335341 seconds)
done (took 569.409698714 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.306484882 seconds)
  done (took 9.147887673 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.005104339 seconds)
  done (took 8.85382519 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.64669739 seconds)
  done (took 10.494029535 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.927262356 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.944217938 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.926082827 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.930590873 seconds)
  done (took 29.583799004 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.198382237 seconds)
  done (took 9.051020727 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.935457748 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.923639691 seconds)
  done (took 15.784702658 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.931066951 seconds)
  done (took 8.786683929 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.416779007 seconds)
  done (took 9.285527026 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.946099529 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.949242311 seconds)
  done (took 15.769303743 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.92727962 seconds)
  done (took 8.780245612 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.668773723 seconds)
  done (took 9.614872123 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.933552919 seconds)
  done (took 8.806378014 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.951360595 seconds)
  done (took 8.805188053 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.942518668 seconds)
  done (took 8.794664395 seconds)
done (took 163.404558287 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.930601555 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.923598925 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.92460965 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.922471845 seconds)
  done (took 29.554824048 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.961757662 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.962006626 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.970210244 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.961051645 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.951235462 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.952145766 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.961559253 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.961500605 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.951774153 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.960266287 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.959789265 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.958412359 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.960477316 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.970452641 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.969700745 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.95903882 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.960723824 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.961782779 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.950962845 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.969667465 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.958773917 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.961329441 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.927582554 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.926359579 seconds)
  done (took 48.844003387 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.113004493 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.990833455 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.079740031 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.972184363 seconds)
  done (took 10.009503544 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.927748392 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.991022593 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.978481364 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.97341629 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.022117737 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.029267098 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.980837962 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.13630333 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.043803801 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.054374501 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.935697933 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.948942385 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.953822299 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.975113125 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.029563579 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.927532302 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.929560653 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.043660658 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.989050857 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.149200121 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.928157959 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.983067286 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.01209615 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.981017813 seconds)
  done (took 49.780162301 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.927492827 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.937633536 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.935717655 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.926889992 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.929715042 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.930392688 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.934863518 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.932175716 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.949747291 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.932683374 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.928823525 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.930711044 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.935202861 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.927575316 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.929905407 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.942553383 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.946024898 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.929800856 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.933103575 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.936696136 seconds)
  done (took 40.532730853 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.925519425 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.774310103 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.269882135 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.176080338 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.927864036 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.928568095 seconds)
  done (took 31.85764706 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.94102525 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.933523373 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.927894446 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.98566023 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.06723772 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.935192144 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.929174338 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.939121844 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.974670825 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.993522259 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.94679138 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.955920738 seconds)
  done (took 25.387617316 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.928860055 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.92955785 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.929098419 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.941661749 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.937130311 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.936324606 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.934351226 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.927702065 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.94103639 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.946646454 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.937119085 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.94095218 seconds)
  done (took 45.090241297 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.143370789 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.156646469 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.151221634 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.416851638 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.921347636 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.830164143 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.665964182 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.692840557 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.227691445 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.910657429 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.895830785 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.81070784 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.17167355 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.932091972 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.19050983 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.859591905 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.932536885 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.201819527 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.931211237 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.938004981 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.237186032 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.984186155 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.146078737 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.979561662 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.145717333 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.291358434 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.175901068 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.189162293 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.27072636 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 7.00092544 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.006477444 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.975399088 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.939396361 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 1.943854262 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.934545218 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.944865566 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.203687288 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.933851019 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.94644559 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.928628494 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.85904784 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.287740783 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.045290206 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.340792478 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.06404055 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.172693098 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.937218234 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.010887464 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.988839164 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.222271333 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.036889327 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.146035371 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.857552517 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.308462609 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.057279814 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.935413498 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.938742925 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.631986541 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.171999927 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.015082546 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.272375847 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.045367861 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.936602078 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.021708671 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.933370981 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.048284166 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.119371622 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.938063769 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.931876764 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.941337561 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.030481741 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.147731036 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.935448058 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.93462735 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.951021892 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.936793848 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.285039264 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.381650521 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.923432419 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.490709769 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.303449377 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.898845265 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.299457223 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.976306318 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.218400674 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.153887409 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.012564143 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.179975748 seconds)
    (89/481) benchmarking "5d"...
    done (took 3.836060913 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.938787561 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.742259935 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.014691264 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.999398925 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.932873456 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.009972166 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.250105448 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.050766404 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.934843475 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.860884179 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.946027613 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.136515095 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.29599389 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.987067751 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.932315048 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.933653454 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.938725749 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.935300475 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.95090194 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.946743292 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.853270485 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.229674811 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.040131345 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.191993484 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.926648825 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.614733481 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.205656397 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.061711217 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.579354115 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.070485067 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.875181101 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.07707876 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.944663046 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.936631793 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.123083717 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.341029928 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.017941524 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.175460498 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.995932572 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.962957797 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.941596461 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.017751002 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.162392837 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.933887592 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.190445851 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.183385388 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.612598812 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.008304796 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.008041273 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.943621206 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.149846947 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.01517584 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.455944264 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.157109413 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.393374193 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.919453231 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.435813338 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.208522361 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.316387017 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.949964796 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.013043577 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.967221865 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.636932681 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.861372838 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.940084303 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.281073806 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.979713218 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.002891707 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.939848151 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.939437858 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.945814783 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.019773225 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.006853329 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.013949354 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.862202308 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.940567733 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.942506043 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.936401154 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.473622447 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.628015391 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.22700623 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.938235087 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.012397049 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.939280904 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.526100001 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.942189202 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.06278544 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.980270523 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.704220908 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.964867119 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.206248197 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.349645115 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.059193893 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.936014937 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.940720037 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.636638832 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.948691068 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.640789718 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.239930829 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.940388661 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.420496956 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.006747921 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.016880774 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 1.951688181 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.940426909 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.9407333 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.943162577 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.143476767 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.475390105 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.295958382 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.275949165 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.024978313 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.212849543 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.13063913 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.304205162 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.627364788 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.458958785 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.166939125 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.941281949 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.942062652 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.59983497 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.947007166 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.156161984 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.142249534 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.219829428 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.244764913 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.352571352 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.946438323 seconds)
    (218/481) benchmarking "4d"...
    done (took 2.95417522 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.182849373 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.939790285 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.367748917 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.020251303 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.328872479 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.752629023 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.210151247 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 2.006446467 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.952582687 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.594259281 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.075531047 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.895689581 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.068715355 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.866804519 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.701451661 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.233071261 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.219005517 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.923727069 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.282617239 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.236591258 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.240467655 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.568299552 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.899583209 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.993356332 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.023888538 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.949668396 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.378140683 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.981904449 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.991319951 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.947836708 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.944352953 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.943208159 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.619499927 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.016856751 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.07531312 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.70632547 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.344928528 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.850941916 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.217048386 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.999232025 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.393406178 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.987128351 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.157220973 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.949068431 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.403303517 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.990123456 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.220895108 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.902669366 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.157352852 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.150948731 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.965260815 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.950010139 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.870021781 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.806969927 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.948584161 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.029963074 seconds)
    (275/481) benchmarking "3d"...
    done (took 2.827472118 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 1.947606324 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.25284946 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.456078935 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.979328645 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.946512177 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.292238588 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.374533535 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.120015206 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.952453077 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.158005387 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.064259162 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.864027526 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.423660494 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.526312617 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.644466303 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 1.95529607 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.146905709 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.286583712 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.130679107 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.981539593 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.015151568 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.217353234 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.925180875 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.944857114 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.464788834 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.042741965 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.184618939 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.279998634 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.353945854 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.360312454 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.185413153 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.959213236 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.30201874 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.323249877 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.190237623 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.948846313 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.037391372 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.159414487 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.232598777 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.821608013 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.655345055 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.188259254 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.951475197 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.873947589 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.155494757 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.4425904 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.301907337 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.488579635 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.03277263 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.974460745 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.427091102 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.963232451 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.880046274 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.948226318 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.898404814 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.159724651 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.02997032 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.983512803 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.504242559 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.231927382 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.363987075 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.093984529 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.98767392 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.875656645 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.656494114 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.898710177 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.014671565 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.990126415 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.022909212 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.95323489 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.154397061 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.388908717 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.997212233 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.47776948 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.160644478 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.254861816 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.222355797 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.259370852 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.910780929 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.223511702 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.900126636 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.477537859 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.038001679 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.043929279 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.952102593 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.955904754 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.223414377 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.296313432 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.440274535 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.985498319 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.311242043 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.051795198 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.954205775 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.958414544 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.338726682 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.185832402 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.164906916 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.029403831 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 7.150152465 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.024647471 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.466921233 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.958220343 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.955181806 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.088796403 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.902096434 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.67888637 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.252728273 seconds)
    (383/481) benchmarking "6d"...
    done (took 3.736566719 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.15595917 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.473719207 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.851013617 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.042765683 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.996563403 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.954995463 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.982431668 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.9583716 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.194047514 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.223822233 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.713778673 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.959740408 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.953988289 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.843564773 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.599686378 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.190501231 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.959896689 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.993100725 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.957737804 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.073086441 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.955635029 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.214701497 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.002084524 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.954972403 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.961816169 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.167607132 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.46713985 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.971143038 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.654953438 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.159362161 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.961068163 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.435708561 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.424648562 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.103099232 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 1.996807103 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.042474749 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.200541876 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.474404596 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.045302804 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.952574749 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.182262473 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.958185244 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.226530389 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.229282595 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.955959852 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.172217531 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.329055871 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.243599868 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.968726488 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.840328385 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.961468215 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.215863221 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.000127061 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.956712649 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.966585511 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.492336107 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.606577313 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.419378626 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.100742685 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.209015373 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.694233293 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.709458092 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.959134904 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.959697901 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.646337204 seconds)
    (449/481) benchmarking "2d"...
    done (took 2.673965277 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.170675134 seconds)
    (451/481) benchmarking "7d"...
    done (took 2.242346064 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.9049449 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.160075682 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.663504571 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.91710281 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.229551446 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.884735402 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.960081667 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.476841749 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.229259896 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.894626875 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.963158446 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.571854769 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.957159428 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.042044316 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.958707815 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.085075745 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.219677565 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.25679246 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 2.057632067 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.599571272 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.647441195 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.896196267 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.004615723 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.765744632 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.51626274 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.666055576 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.979192733 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.976788197 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.886904841 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.962330064 seconds)
  done (took 1671.32011777 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 7.028550741 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.982909724 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 7.013120896 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.979555603 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.064392683 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.084628467 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.018007012 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.992779304 seconds)
  done (took 58.050930563 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.95840898 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.973861767 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.962658772 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.957848135 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.963562336 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.959169412 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.119842101 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.96748778 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.963646974 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.964289497 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.95845661 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.959436832 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.240074019 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.976547632 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.959541301 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.962398081 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.967998659 seconds)
  done (took 75.708372201 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.961367155 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.078600804 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.014203689 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.963017898 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.422359314 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.960562361 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.843653161 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.023104073 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.987277004 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.188936196 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.259506488 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.969883275 seconds)
  done (took 90.560045539 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.966642235 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.961157635 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.960672832 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.96031342 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.962305136 seconds)
  done (took 11.704392952 seconds)
done (took 2190.31868688 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.237461362 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.017665702 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.058716329 seconds)
  done (took 5.962849178 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.105715455 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.152271905 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.265038566 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.028065555 seconds)
  done (took 10.444334249 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.221395586 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.324699944 seconds)
  done (took 6.434510787 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.312280215 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.972981366 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.32580996 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.963103189 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.966352875 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.966568542 seconds)
  done (took 22.788701802 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.963631877 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.963682407 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.963875368 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.964223761 seconds)
  done (took 9.743251861 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.958999976 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.713331435 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.964840224 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.975927681 seconds)
  done (took 21.499351234 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.103564114 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.072952892 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.101902885 seconds)
  done (took 8.167122941 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.182152005 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.794743368 seconds)
  done (took 6.864601636 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.104434255 seconds)
  done (took 3.992595579 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.990803185 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.234240591 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.437149527 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.464984748 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.537822317 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.692560174 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.267810115 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.195865149 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.3655671 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.380554617 seconds)
  done (took 25.45886385 seconds)
done (took 137.091537872 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.299972666 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.985455455 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.168027662 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.319242745 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.188651024 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.168848299 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.175994882 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.308924809 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.99301698 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.981710971 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.31931505 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.189794605 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.132923019 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.984246025 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.138926103 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.982051021 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.187266803 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.32110243 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.003159234 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.245739476 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.189539741 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.97025657 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.168295307 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.982111632 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.189885113 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.114702466 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.511670747 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.984216523 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.153387733 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.522391953 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.118174313 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.386631336 seconds)
  done (took 171.276359477 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.965096733 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.965562248 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.965918629 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.9641729 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.265155528 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.965659156 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.964534888 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.963815317 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.147582286 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.150076341 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.963910625 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.25103522 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.965400244 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.965251783 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.966550063 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.965512335 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.300876971 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.965847566 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.964544669 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.966706816 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.966698325 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.090529682 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.967324927 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.117204461 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.281033698 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.9653812 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.966407223 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.966118605 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.968670174 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.967083991 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.966935416 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.968282643 seconds)
  done (took 210.680074896 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.94591002 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.965127026 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.966308947 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.966523052 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.968513893 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.966033888 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.966198701 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.968230928 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.680784214 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.668411149 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.966578917 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.967080381 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.972849099 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.967047562 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.973534102 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.96805682 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.975136692 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.968650332 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.967110612 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.968926506 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.96881508 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.666986771 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.966474384 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.67121206 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.967685095 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.969289091 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.970318733 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.968748695 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.972254862 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.97305955 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.969798909 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.969346227 seconds)
  done (took 223.689551971 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.209306163 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.970859504 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.97031033 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 3.02403615 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.972218272 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.971063694 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.975014769 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.217779755 seconds)
  done (took 20.210336124 seconds)
done (took 627.760781887 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.294606467 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.677239107 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.109559832 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.994941177 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.186674843 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.031042645 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.9878919 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.048887 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.812211778 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.061753579 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.392543967 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.995286822 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.754961375 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.011958437 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.111234758 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.045220828 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.344265638 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.659271479 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.12384378 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.612842075 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.148014071 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.910637109 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.064087725 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.855756837 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.409153229 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.936755616 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.991255243 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.350315915 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.994003235 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.149531156 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.596476801 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.24913904 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.000526924 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.989382228 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.041308188 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.024058007 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.187502367 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.997422471 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.109623917 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.701572507 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.608306327 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.69761862 seconds)
  done (took 104.167173678 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.98084534 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.979102427 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.978820876 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.978914235 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.987097388 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.978343348 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.978135438 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.978124143 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.977933045 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.979186413 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.979699472 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.986985152 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.979811428 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.988794935 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.979419602 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.978826687 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.97846298 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.988071597 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.978032402 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.97808037 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.978321568 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.980631801 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.972184439 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.979065294 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.977708509 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.978282829 seconds)
  done (took 53.390136029 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.975973721 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.163859422 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.209335618 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.99190179 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.972711154 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.976778946 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.001367254 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.980407935 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.975955331 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.976924366 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.073012847 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.977863136 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.987797428 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.213273101 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.989468066 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.974111097 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.976198688 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.976333249 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.171785412 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.989717474 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.003736456 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.982470881 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.00423602 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.985879843 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.977731164 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.976894101 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.978682418 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.446451169 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.984611845 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.077581921 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.017699698 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.008619768 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.31598551 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.223264654 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.026525472 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.982810641 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.975763731 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.082130549 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.978400316 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.977018434 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.001506678 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.981792834 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.216408335 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.501761738 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.988394793 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.978101746 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.448730471 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.089760954 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.014458031 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.981624483 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.223055651 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.991654144 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.977077847 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.978991548 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.011737528 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.986761793 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.97563382 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.267218572 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.991771587 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.004129301 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.983973709 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.980766994 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.181946906 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.984574911 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.169471113 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.985550029 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.984192608 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.978857104 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.215913642 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.990772097 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.519750707 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.991371313 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.979733872 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.079430355 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.17215872 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.475945339 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.990145139 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.182682668 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.335439403 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.010526577 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.98683355 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.433830403 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.016059203 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.986313964 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.979544483 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.977139728 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.97592245 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.023860217 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.003345166 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.430102774 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.514778385 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.284520368 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.015554956 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.991246258 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.977911983 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.268814761 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.989505403 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.979940088 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.211223194 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.529219656 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.991566177 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.984046181 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.494450136 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.990913225 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.008680786 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.990395571 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.232979591 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.993770297 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.025960319 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.980778115 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.985175517 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.98098624 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.007939621 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.989839881 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.979577128 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.487591093 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.094749187 seconds)
  done (took 245.066066599 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.979582314 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.978222331 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.977864051 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.97915912 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.978454708 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.978920358 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.979765377 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.978564673 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.979124384 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.978085781 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.978062118 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.977788297 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.98076347 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.979675747 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.495451946 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.997072234 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.485899641 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.991448716 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.993985121 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.996871691 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.596271478 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.999594464 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.993635951 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.996376572 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.995016934 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.997952762 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.002840868 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.050127485 seconds)
  done (took 171.20594167 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.997776682 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.075740275 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.008692671 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.044152774 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.0097716 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.996470433 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.171905938 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.017634026 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.001508869 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.996186006 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.997982104 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.02742853 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.004453903 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.094190343 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.033860292 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.102493333 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.098482167 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.005380337 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.998692417 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.997484197 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.044999243 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.013429823 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.028025462 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.05845505 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.010757329 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.053835787 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.012416745 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.998665237 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.997046567 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.131255193 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.017027388 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.029811842 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.031894317 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.017244039 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.115143966 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.113237496 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.1024919 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.102980439 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.004084673 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.999118047 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.000706347 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.001545471 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.053194907 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.011195709 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.99962881 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.116722377 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.017476322 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.000819353 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.001140821 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.000938248 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.011513352 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.018468911 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.034739031 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.12259385 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.04419402 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.026606121 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.097158013 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.11690996 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.00049419 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.095024508 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.007252388 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.112601591 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.017795017 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.001273501 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.001185408 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.002492905 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.048074921 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.110282011 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.101366509 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.007583986 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.096271508 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.054895201 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.013181544 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.000832349 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.000197028 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.05508553 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.110046063 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.054643116 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.061404126 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.035551569 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.011531578 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.997881287 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.004491167 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.026434668 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.012324157 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.115222343 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.115391141 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.00779937 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.001819733 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.002715569 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.000706786 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.024361601 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.062511125 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.039780026 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.111419918 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.039182418 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.040537468 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.008684579 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.015932175 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.00695192 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.034375507 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.009833702 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.013728165 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.280502314 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.032875127 seconds)
  done (took 216.170963839 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.366493787 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.046785796 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.07554284 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.285999526 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.387685515 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 4.014339322 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.038582146 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.054811193 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.059380161 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.188995526 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.115521676 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.095763407 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.040118129 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.023022952 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.045086649 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.062925404 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.079856243 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.339832739 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.246738841 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.552403874 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.043924688 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.303829211 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.384378852 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.415568868 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.094185424 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.435206126 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.627409935 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.146816043 seconds)
  done (took 66.502558894 seconds)
done (took 858.401260961 seconds)
SAVING RESULT...
DONE!
