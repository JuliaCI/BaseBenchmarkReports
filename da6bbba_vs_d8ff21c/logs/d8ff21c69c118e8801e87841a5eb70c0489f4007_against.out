cset: moving following pidspec: 25004
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.288729426 seconds)
loading group "string"... done (took 0.535681958 seconds)
loading group "linalg"... done (took 6.612846463 seconds)
loading group "parallel"... done (took 0.154307494 seconds)
loading group "find"... done (took 1.188835104 seconds)
loading group "tuple"... done (took 1.699919978 seconds)
loading group "dates"... done (took 1.167114422 seconds)
loading group "micro"... done (took 0.219714069 seconds)
loading group "io"... done (took 0.97813056 seconds)
loading group "scalar"... done (took 37.797277314 seconds)
loading group "sparse"... done (took 12.846183184 seconds)
loading group "broadcast"... done (took 0.976339563 seconds)
loading group "union"... done (took 12.999847892 seconds)
loading group "simd"... done (took 4.536294028 seconds)
loading group "random"... done (took 9.120627199 seconds)
loading group "problem"... done (took 2.002774263 seconds)
loading group "array"... done (took 22.063962525 seconds)
loading group "misc"... done (took 1.851251621 seconds)
loading group "sort"... done (took 3.19734347 seconds)
loading group "collection"... done (took 17.487878956 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.50554253 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.124830618 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.135373572 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.135186588 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.174733883 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.131407442 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.14327193 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.101841911 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.088727522 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.165526177 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.133507448 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.463508431 seconds)
done (took 5.208941129 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.20293363 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083329772 seconds)
    (2/2) benchmarking "String"...
    done (took 0.096859311 seconds)
  done (took 1.016570674 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067057922 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.120490531 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065640282 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.082043031 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066877419 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065211536 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.08487154 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067387436 seconds)
  done (took 1.394543267 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072941344 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067393877 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.084119428 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068359237 seconds)
  done (took 1.135337714 seconds)
done (took 4.663593 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.8349653 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.245364228 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.18291994 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.448787369 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.150762353 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.184254888 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.664844089 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.312336706 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.19801812 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.083204274 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.120181118 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.354375582 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.125711723 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.664891284 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078072247 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.107450356 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.159705034 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.422002047 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081997936 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082473873 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.103438802 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127701796 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.102162008 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090815586 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.157830642 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.08211393 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.144436156 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.081064352 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.082582157 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.224535067 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.18797131 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.669947062 seconds)
  done (took 10.436410755 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095801756 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.112390958 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068124988 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139254062 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.095888566 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.086657616 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071456351 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066890743 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.10367684 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.144281268 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.087869316 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.118105524 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064485309 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.084933962 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084505128 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.223575125 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081368963 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.101020191 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072356188 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.0941231 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.109339576 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.096576633 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.080504183 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.096343285 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.131059222 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.212464337 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.100072958 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.115372939 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069841792 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.100496975 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.131662637 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.130122297 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067144628 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.085745857 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.127124363 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.113457948 seconds)
  done (took 4.618835425 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.027499079 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.154992078 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090829371 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.149403994 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066758479 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.124728771 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.081866776 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084068163 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.231187091 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.066886202 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.451371187 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127722202 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.084192685 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084558511 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068352865 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.100645558 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066514525 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.502067545 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.146722859 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104443173 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.105556578 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.074697786 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.088320889 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.356806207 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067845817 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065881555 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084275559 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.058615263 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.139972751 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067821149 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.136281862 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.106511049 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068022076 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11881558 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.177438608 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091425986 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.151417071 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083599678 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065140502 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.16446036 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.090370238 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.06657662 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.081989162 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120896558 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.119411575 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.068228543 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.083191121 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.17569837 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067436413 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.081304417 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.858562531 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.167382656 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078720848 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066756832 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.288522598 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085752562 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086968917 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.0654733 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.270248029 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.155631954 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069209424 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.0850631 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067873042 seconds)
    (63/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065549035 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.087327943 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.368475101 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.069910169 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.73015033 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.07046329 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076109368 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.085679889 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066949246 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089064942 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072146113 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.100359278 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.06647774 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.067024528 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.085550865 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067589744 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.068556614 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.105052186 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.207745534 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.065042253 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.084754978 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064489837 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.104194929 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09756647 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.08890288 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.067279713 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117534019 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070692969 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.06701774 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.122707821 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06812976 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.110340967 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.065011697 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.104067271 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.071922753 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.131911513 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.085256404 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.125757899 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068406311 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.114330882 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.078745295 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11629396 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.097463551 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069524326 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.155020532 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065566172 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064829187 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.086824001 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.068853883 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.086742343 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.070459161 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.080871267 seconds)
  done (took 20.84432711 seconds)
done (took 37.769825534 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.290901887 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.096055685 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074504927 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.093293419 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.092225132 seconds)
  done (took 1.560853308 seconds)
done (took 2.448002359 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.11742526 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116394366 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063285233 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113620096 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063466285 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.118063531 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.097427429 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.098374622 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11497265 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064676227 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.094147181 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080939772 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063218218 seconds)
  done (took 2.121475771 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082425148 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082032702 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088720202 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08366796 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064595373 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102150426 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081605008 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107128563 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08161502 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071851587 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084044012 seconds)
  done (took 1.81594767 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08187853 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082031486 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088505489 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082951637 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064183825 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101370487 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081711704 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104742129 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081791829 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091042284 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065851299 seconds)
  done (took 1.81191878 seconds)
done (took 6.62729227 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.07746961 seconds)
  done (took 0.958139421 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.68687898 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.014229985 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081809517 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.131523957 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.200005925 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.140108405 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.336109274 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.105771792 seconds)
  done (took 9.749257577 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.100205354 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.09157415 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069070189 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.085753867 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071972516 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070178725 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.089806852 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069459817 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.085414584 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070320753 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.070297819 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.085329023 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068542816 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.087521506 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072166695 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.084317052 seconds)
  done (took 2.21550984 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.090649949 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.111775209 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074087818 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.094634891 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071451165 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.091102483 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073969379 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.09196824 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070752495 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.089046111 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074894545 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.090984314 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.07197605 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.081544124 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074036851 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.092304643 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070703711 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.090105071 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074816017 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.091732267 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075452064 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063605439 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.089660654 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07372064 seconds)
  done (took 2.94722972 seconds)
done (took 16.756563687 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.111992267 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.088626399 seconds)
  done (took 1.087496087 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081504848 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.098220991 seconds)
  done (took 1.071724004 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082579587 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.081408835 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090043575 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.095624472 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.06498898 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.082821182 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.102954329 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066794336 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066005761 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.083726532 seconds)
  done (took 1.710726934 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069511367 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.093713411 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070868721 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.098194245 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07377438 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.081503655 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073240653 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.083632186 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.079521652 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062567445 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.088931069 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.09987988 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072546802 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.101348319 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072926807 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085570354 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071010715 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.084027363 seconds)
  done (took 2.355450495 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066071463 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066353538 seconds)
  done (took 1.025665051 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.06909492 seconds)
    (2/7) benchmarking "second"...
    done (took 0.062778318 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083890959 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065657832 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.080643077 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063943487 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.079299023 seconds)
  done (took 1.401045036 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.405523167 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109244345 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.246891111 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.089366571 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.100002318 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.267686836 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.083715817 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071720178 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070221068 seconds)
  done (took 2.377832727 seconds)
done (took 11.922585544 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080214743 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084715125 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.11061726 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.411124319 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092690158 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.083413185 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.132123906 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.223035557 seconds)
done (took 2.120341002 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.125719581 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.608935803 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.401313846 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.211807776 seconds)
  done (took 2.122427446 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.328873988 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.109126129 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.060367173 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.086760972 seconds)
  done (took 1.489265958 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066513282 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068691737 seconds)
  done (took 1.036191475 seconds)
done (took 5.67261909 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067610432 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065566618 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.103087013 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.06537891 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.081457966 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066204445 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.062740949 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.082373905 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066599224 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.06494881 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.084117017 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.068868743 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065783869 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081000844 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063921325 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064749849 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.080740155 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064180813 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06287751 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080907575 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063290499 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065022431 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.080925048 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063962955 seconds)
  done (took 2.653737444 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.083879649 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.083502201 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072782766 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.07102016 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.087774541 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071204407 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.0896394 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068579436 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.089374272 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068044745 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08727059 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070938778 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067083429 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.087491622 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067268635 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.087439027 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071725973 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083498228 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068719516 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.0869617 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071717698 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06580808 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.087977447 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070356232 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.087695378 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069897222 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.086324158 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066886524 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.087755531 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.07148756 seconds)
  done (took 3.23666489 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069745285 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063304771 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081344117 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070910716 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.06276773 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.083680709 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064666567 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063329639 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.083555868 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062993764 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064119752 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.081643864 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063434442 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.081347243 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065073479 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.06683047 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.096593385 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064164733 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063411372 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.082463187 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066076786 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062750385 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.082238849 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063182196 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.081292496 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065713666 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.066376867 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.083645163 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.0664733 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.064885642 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.087164411 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.069070612 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.06409838 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.090716509 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.069371944 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064565075 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.088445874 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.06526586 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065889764 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.084471873 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.065003726 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.081636785 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.066455076 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071726629 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.083980528 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.067840818 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065455268 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.085584239 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.066253792 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.067610254 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.08402592 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.06559436 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.084643424 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.06749324 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068804369 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.082865886 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.067409359 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064049318 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.084963179 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065793949 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064132876 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.08338574 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067871677 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064983819 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.098534733 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071283458 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.081296292 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.068104122 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.065250913 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.086000636 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067089635 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075647539 seconds)
  done (took 6.147559036 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091111872 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105977652 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064404907 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.084135945 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061838432 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.081437179 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068625517 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063237562 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082977849 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069222375 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081933852 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065498108 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064598128 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.096171668 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065386624 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.083844059 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072040982 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062437813 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.083268261 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068079875 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081457358 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069342951 seconds)
  done (took 2.581236078 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.282950276 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070237342 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.124122653 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091318809 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068521491 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.091667839 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071993008 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070989958 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091941348 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069661128 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089142654 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07153035 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.088301168 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070147423 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088242746 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070807196 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.089425463 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072108651 seconds)
  done (took 2.588397939 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077991322 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.06536122 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.104493536 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065424155 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.084576119 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06861648 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089522889 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075412351 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085129648 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066629331 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073848198 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086258771 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067609612 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083894219 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068662224 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065247421 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.086772106 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065601646 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092616073 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071126749 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089091401 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073804713 seconds)
  done (took 2.624146986 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079653088 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066498665 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.101633207 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067966451 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080294499 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06487649 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.087625936 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066734652 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069896448 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.085755283 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066228596 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.081415818 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.071148132 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065873276 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.089196236 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065613713 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.086271349 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068183796 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068686513 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081909534 seconds)
  done (took 2.433947249 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087394983 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084879628 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068327912 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093619834 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068340244 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.085107447 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077338656 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.084703728 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068752613 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.105054419 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068262588 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066091922 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.093943665 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.089720122 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068397599 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093085351 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076075526 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093482066 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066688433 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08602955 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087877947 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085105293 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075478675 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.085289127 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067478658 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086249411 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068888639 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089815923 seconds)
  done (took 3.188991418 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066567564 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065760576 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.080945571 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064123997 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063604647 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.080803266 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063938577 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062676553 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084421239 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064271063 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066211967 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.085701712 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067579638 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.067021196 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086494719 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.068230849 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066238349 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.084675004 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065808106 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064656362 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.086569972 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067535216 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066825564 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.0848782 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064798924 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.085393351 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066619015 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065251156 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085707143 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066111003 seconds)
  done (took 3.077431343 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076134031 seconds)
    (2/2) benchmarking "in"...
    done (took 0.071751913 seconds)
  done (took 1.069760687 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064588175 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079535171 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.08208515 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069862466 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087686975 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067166714 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073461476 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089413095 seconds)
  done (took 1.534506455 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081784569 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076554846 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085495838 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.077175577 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.095244579 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.081826444 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.155462056 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.085518474 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072948896 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063422162 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.098754393 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066072765 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090784069 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067164802 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071060047 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091428411 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.06481632 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.088704284 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069486358 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064158931 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086158606 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074352993 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086362922 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062597354 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066638427 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093995516 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.077275236 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.08503916 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069769154 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.0913595 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072700469 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060027804 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.084460291 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.067268049 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064153521 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.094406149 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097759029 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069769611 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074325625 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085516551 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075660096 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.080360211 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.071718335 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.089776716 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076816184 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066523854 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.085746913 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062442566 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063458527 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.087727506 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062379072 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084079896 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.06245564 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073032412 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.08835974 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077264608 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.08657343 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068814947 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068689127 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088753964 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073102619 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.08610347 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069421558 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065546691 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094908064 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071087498 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093373654 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062216115 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059403297 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.083034119 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.0756167 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107230765 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.07317746 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.084955344 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068293356 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.064241579 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088297672 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067658447 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090973487 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072361553 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065963379 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.091499053 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07263446 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085217084 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068599742 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.092532493 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.06510389 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.085426671 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065490431 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082156517 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.084090175 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064231426 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.081999052 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077638569 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069160367 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.085568952 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064615357 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089953002 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061190182 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.067336058 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.08632761 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067289168 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.094611841 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071509842 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089704971 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.074871893 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072384137 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085725861 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068801319 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.08099054 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06817381 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064776932 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092602969 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.06061927 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086226622 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.06795565 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.06650962 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.093667435 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064067242 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.084641775 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074394928 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.070921529 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.083746228 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063326263 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.08710817 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066947109 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068731077 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093389296 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064396777 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.079595819 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062328402 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069422895 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.085132526 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069905463 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090178253 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069674974 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.059925965 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.082940455 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.07053228 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.093186733 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067194274 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.083738848 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073481408 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.066669179 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.083983716 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073084284 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086010983 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066577979 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071071991 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.085431813 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061832275 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086822341 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069696324 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065193903 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.089209347 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070458034 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.085955306 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068038808 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064413842 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.089652008 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067567025 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.08374271 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067309986 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064982123 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.095355549 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068643634 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.079074342 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064361378 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.073108546 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.082533443 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.06600002 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064772887 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.088121739 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066755279 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.083433131 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066645984 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067577919 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.096520793 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069365875 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086640436 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071507116 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.095747999 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066559858 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.067788833 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.085511355 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06784115 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.086285068 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075212887 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.089950018 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073058314 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068664896 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.082635892 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072482171 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091631268 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.06690166 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064109069 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.0850139 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069988175 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.090591889 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.071132195 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066961191 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084154161 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067027864 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088790575 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.069471148 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065655612 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.085142752 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071718366 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.083137397 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073581601 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08561125 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076924762 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068543231 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.080945874 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070287386 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082882792 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072845594 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061749786 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.083290966 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065726756 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067235637 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.084952663 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068396881 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.078603254 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073574485 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072561424 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.085644225 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065859509 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.084910219 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073379351 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.067038551 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088904338 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069034713 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.091091352 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076781657 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064941503 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.088951123 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.076400225 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.085415408 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060742751 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.089780529 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066460239 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065370981 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.08457206 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064934961 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068152141 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.094133983 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.072076586 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.079760696 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.0694604 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.082393126 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.06697027 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062067914 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.08970699 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070028484 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066673514 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092403225 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067263544 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.085888176 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071659832 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065258119 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.087218522 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068067783 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088468318 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067712081 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068036478 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.085727818 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069641818 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.084162386 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.06488898 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.06801375 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.086116974 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067102505 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090025575 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.067493418 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06670736 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.087684742 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067884257 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085468818 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068437901 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065636521 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.08827707 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066754563 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.065543175 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.087524497 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061550642 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091438161 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066736295 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073245375 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.085838833 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063532919 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.090051674 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068920213 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.070275067 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.087226919 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067119469 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.086840873 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066570315 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.068384108 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092843845 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.06365217 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.095697246 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073781114 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085567911 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070518178 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.06634182 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.086884562 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065509206 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.065913655 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.086933307 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066471447 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.085120808 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071245817 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068571582 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.086011264 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068583408 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.085671166 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.067414368 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067350028 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.080509348 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066061135 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065822252 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.086359165 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074976252 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.086490371 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066970783 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.08394546 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069222801 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065473762 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.083077949 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074938147 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.09496976 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067285516 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091943564 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066911343 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067695117 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096356946 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060921004 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.083866737 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.065361338 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064034947 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091988536 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.067231282 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.094106357 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.067225558 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065457143 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.082277839 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.067563905 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065316833 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.080346087 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.065178889 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088598773 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.066450482 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065573438 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.085470367 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.069218858 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067029731 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095411238 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065447778 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.086369652 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.066636445 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063120511 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.085631656 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065668474 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.087980272 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.068749765 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064458231 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.083436591 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066330376 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066474429 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.087860087 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.065844645 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.086922957 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073801068 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065848766 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.08862449 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069014543 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.083187156 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070130305 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.065466569 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.085638533 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065647745 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.088684277 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070661522 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066660686 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.094170884 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065696638 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086656883 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067048654 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.063816438 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.086110596 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066485356 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.085512992 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.06675443 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067129815 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094082163 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064749629 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.087817141 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067711108 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066227323 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.093068631 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.06815891 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.088517425 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074059612 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066186954 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.088600981 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.073626165 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.088782508 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069936021 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.08591403 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069269701 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071494211 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.085103158 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072651003 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.08455626 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.06900531 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067381197 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.083524892 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066985304 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065211637 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085032978 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072727673 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.086382305 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066634376 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065629724 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.084381806 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067934162 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088956042 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074784802 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068613031 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08848569 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061853876 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.082122983 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068696842 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064325326 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.087641568 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069182553 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089944944 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.069987055 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066288313 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.085072363 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.07567928 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090832503 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071272786 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063633022 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.08988288 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.06752769 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.087016632 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067940276 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066062093 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087603001 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.07077382 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067350452 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.086133567 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073052903 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.08890213 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068152476 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067112316 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.087376116 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066411946 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.080433468 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067906125 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068533394 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09099146 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068172703 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085513079 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077357116 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064344328 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.08666689 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06985869 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085042195 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072008484 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061651722 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.08770601 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068291213 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086374618 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062884063 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065665487 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.084837919 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.06926959 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065153585 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.081955583 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077316505 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.095096743 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069989557 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084771042 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066356859 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062169883 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.082217416 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066578579 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067885529 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.088880527 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.07652968 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.086021972 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066443903 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.06157149 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086784879 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069284633 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.089111517 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064460093 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061450448 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.08565161 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069995501 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.090430236 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066641608 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066141722 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089066965 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068975216 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.06402293 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089731383 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063175146 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.089198962 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079259321 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.086823808 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067730159 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072190646 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094188319 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.06659864 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.081077537 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.068392218 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069011425 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.086786924 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068072862 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.086814111 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081498384 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08812284 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066476899 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065033568 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.088779665 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066418887 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.09264964 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069140616 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066603934 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.090015794 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068474239 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.093749532 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069536117 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093198237 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070775732 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069476599 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.085235234 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067290989 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.063528468 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.085863119 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067410391 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.086470116 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071207906 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.093644225 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066996882 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.075822475 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.095767532 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067333638 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.08309108 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066856682 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065395618 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.081898323 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067231688 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.083436067 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066105012 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064868639 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.085437374 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068182757 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070692235 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.087334594 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067775029 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.085313564 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061371044 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.067873077 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.08880146 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067371571 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.06235787 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.086455715 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067506998 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.089236136 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070561309 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063761647 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.087584646 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068149069 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086914575 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062809366 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072361788 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08489937 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068549298 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065629239 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086887691 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067187882 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.088362139 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071692451 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086601 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069125274 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.06926503 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.089076002 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064079958 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.082315393 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.072274365 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064612515 seconds)
  done (took 46.272289157 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.098800111 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082575956 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062644996 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061419197 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094211126 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062268601 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.0820043 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063495979 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062250086 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.085592437 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061976805 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081734986 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071431389 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.097570794 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073262038 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.087472846 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061284497 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.082951324 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062735394 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061725355 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.092008016 seconds)
  done (took 2.560322653 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075143849 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.08973419 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074594103 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.096447236 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067844712 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090515631 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073234512 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090772464 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075446799 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087178641 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075644913 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091647881 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066564675 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.087515602 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066412687 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090936676 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076397987 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087861208 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069852733 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.092907107 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070550638 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.093575271 seconds)
  done (took 2.759219739 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067699903 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065208474 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086788833 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061775891 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.064937473 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.081553187 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069486439 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.082153413 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.070632772 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064536685 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.084809971 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065790308 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.074685432 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.081121825 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065863303 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063333525 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.130063149 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.089733654 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065585225 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.086347808 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062441629 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067284117 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.08164606 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063006966 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.0639558 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.089302399 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.067055935 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.082985085 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066342865 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064303869 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.08598734 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064310329 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066882171 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.086784433 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064871123 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.0639113 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.086225372 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.06587834 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.081138356 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064934605 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065619827 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.083090957 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067258723 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067823902 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.085904221 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.064287709 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.086729333 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.06738173 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060658136 seconds)
  done (took 4.581641282 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.0815687 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.13015171 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.06706173 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087696309 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.101722159 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.072433585 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.091064755 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.110424799 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063522407 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.06413662 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.103413691 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.103642607 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066448483 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.09151868 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.073100876 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085232627 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06817189 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064151258 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.090672227 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064764007 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.090185107 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071576945 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.101104757 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.098504257 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069908002 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083798113 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066421156 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069218891 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.099123604 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.090351764 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.071078319 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091856944 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.081373188 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.087062554 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065325197 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.087857379 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.083076076 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.085622531 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068455544 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.082672358 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.069166666 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070276112 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.092821524 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.101312235 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06723751 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.089780716 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067371965 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062240377 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.099799645 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067364786 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.093666422 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.100430647 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070830347 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085475715 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071688465 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.101171164 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066887688 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.082826748 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070900805 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.098098112 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064674848 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069204248 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.100611844 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.087363463 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.074389683 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.101056511 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071274601 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089699926 seconds)
  done (took 6.729417582 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075639992 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.09274275 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082171478 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101408639 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072084952 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.093831353 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.091591672 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073380728 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.091345173 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078804652 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.092491942 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114128113 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.068723594 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.094921686 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073433122 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092588273 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073550088 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.092864177 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073910213 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.09298138 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.07319099 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.101138079 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091603828 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.081532893 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.11857123 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067544823 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.092443687 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071970875 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10140658 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.092179814 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.080024373 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.092571037 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073585411 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.101944153 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078372556 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.093695411 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064651255 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093216319 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071538859 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.093213914 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067394104 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102058407 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.092327678 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.068165025 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.092751961 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073971021 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.100656301 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079102582 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096118989 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097198425 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073315288 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10126452 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072501066 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093499805 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.100560202 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.105813938 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101349506 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099717848 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072928897 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.101346673 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09922858 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.088277948 seconds)
  done (took 6.415010993 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084736591 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095719494 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076802388 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.083171096 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064980363 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09074382 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065275141 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063920054 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.095846269 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074948006 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098563453 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089839767 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074438988 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097421234 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070150148 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093083015 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069168823 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.091461136 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07457557 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091008329 seconds)
  done (took 2.62958653 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074808488 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082247176 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.088349736 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070899312 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.089863471 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072075896 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.089400316 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069480607 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086277372 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070450872 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07545193 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.097257702 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065686514 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093110942 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.095328621 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073640118 seconds)
  done (took 2.279870161 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.076387684 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.092582288 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.07994464 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.086089296 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065354943 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.06212579 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.087187497 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061602522 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062052287 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.099529973 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.06509315 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.089975525 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.066351556 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.084650255 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063983431 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.067871071 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.084410726 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063746278 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.085311302 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079138747 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096099801 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.065897855 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066600126 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087430808 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066459034 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.092065075 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06652926 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.083458995 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.064378581 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065300617 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.087119804 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069553141 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.083119936 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064333528 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063832913 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.084845306 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065799508 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086417031 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.06982907 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065368108 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.085855405 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065862591 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086849716 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067851571 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062168815 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.088374678 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062332643 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.088852589 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064499525 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.086527617 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067362307 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067803387 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.087268744 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072536635 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.090503821 seconds)
  done (took 5.151108021 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079707238 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069032412 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083270049 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064100393 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.06880743 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.08997931 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068761672 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.08912151 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068314084 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083005854 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069235327 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068876523 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087956683 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06969043 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087840247 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070556953 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062168201 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.089045018 seconds)
  done (took 2.357317538 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071685541 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066103106 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093305728 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06620716 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.06448399 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.089886213 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06162382 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.085758856 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065322786 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065859838 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086371022 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068234312 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084277704 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069367811 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065549494 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086582998 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068818711 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06415915 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.087269963 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061836408 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087766664 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065714395 seconds)
  done (took 2.615369497 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.072501228 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.091018897 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.158063454 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.104491731 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.08201205 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.077142593 seconds)
  done (took 1.579341081 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090517769 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100281953 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06692494 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086828092 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096064435 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067025036 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090109234 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067357331 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098249999 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097525119 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068446559 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097361993 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07631382 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097544645 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093226564 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075149883 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087827141 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070045273 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065559919 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106217861 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088747224 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076366432 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088436016 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068185072 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08853968 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075666904 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097782274 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097033749 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068786708 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096861346 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073745235 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088212931 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077132047 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097869516 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069004232 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097816821 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067244065 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106170831 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094027882 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0768377 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.089673564 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074104014 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096554078 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072884649 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097444169 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067837491 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093907362 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066722951 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089545236 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107709783 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074404809 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097122939 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073148873 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097606277 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096782179 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087514248 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098051266 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096350251 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074501267 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098540155 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075589658 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09456697 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095498583 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078366544 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094717686 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076613235 seconds)
  done (took 6.658175792 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08599642 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106750697 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068806781 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097450762 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07524339 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089671787 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067648254 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089031613 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067755432 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088728184 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129641118 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069449121 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096570508 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076677036 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088807848 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067598759 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089047872 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07603006 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089401938 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107303893 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068802352 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096881684 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077114096 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097733856 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097617047 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07429274 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08935972 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068100941 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088481714 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067976517 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09377239 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069252173 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097479034 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067048302 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097385941 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06719236 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08919129 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072703645 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089493107 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073350258 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098141659 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104971842 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068212105 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089076104 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076501965 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089134082 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067639784 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088402859 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068597992 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088878317 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07668847 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097856241 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076120013 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097737887 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088581548 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068620904 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088201411 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069244827 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088361761 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074195701 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096995089 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06737093 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108430269 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067859647 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090121195 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096121875 seconds)
  done (took 6.565017479 seconds)
done (took 131.194371196 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.201110967 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.186933183 seconds)
  done (took 1.383420289 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069019227 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.094311401 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.098632751 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128155606 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.087427034 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100465347 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.097702078 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.099293026 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066202122 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086320675 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.06633812 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.067522131 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.152236619 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.067290037 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.064850874 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.089541842 seconds)
  done (took 2.436570025 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102256612 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.193561698 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108716212 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064968808 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099719028 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.078245097 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064264445 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.096835224 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.073456536 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.085632009 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.078091446 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.094714107 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064831868 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095689372 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.074933659 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.09678117 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.06557422 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076308691 seconds)
  done (took 2.61814391 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.10423238 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.144061165 seconds)
  done (took 1.255208407 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.182744016 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.138836586 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.205461387 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.407462147 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.206129257 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.279121082 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.177964502 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.175293931 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.15865445 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.173748118 seconds)
  done (took 3.10519798 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.09873261 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.169657911 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.307752782 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115943189 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.108140928 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.114499027 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.137852299 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.089323676 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.101235737 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079559859 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.100885641 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076234232 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.118565133 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.09398486 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075792277 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075576903 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121338874 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072998166 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.098030813 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.074037681 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.119717305 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065540425 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.096130942 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072970966 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.098317681 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076834136 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.087406526 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.067185661 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.073722808 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095859341 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077306724 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.113226954 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.097993891 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.12941146 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.080921901 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.131322253 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.098689919 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.071726935 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.095044142 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072767077 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.097487075 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077137963 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.104138855 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076952579 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.086625843 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077577059 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065455412 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.087390346 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.07913377 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.09828252 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078771107 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.099278476 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.130044173 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.096543046 seconds)
  done (took 6.308046869 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.698544348 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.128210051 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070276351 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.777589905 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076182268 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097426578 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.685705317 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.090981261 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.201331507 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.713885304 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.112255064 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071258598 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.193276435 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.2069518 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.886144908 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.248132154 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.609996799 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072808146 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.12852788 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.121610866 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.137201078 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.151615839 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.144278398 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.399414002 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.094698583 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070790354 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.132301369 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.092561312 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.133725762 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.081735145 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.089073995 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.144713736 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.217723439 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.145794718 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.073216111 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091215824 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068947646 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.145042947 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.22436902 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.157871121 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.151840601 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066597323 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090249945 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.136988237 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.128303285 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067511802 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.132665053 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.145874235 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.1408658 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091006425 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.073306594 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.136749269 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.134488526 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.157039537 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078310471 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.279950907 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.249853703 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09040018 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096484895 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.096789065 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.201130763 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.101877935 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.168523078 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.136182003 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.176030522 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069820729 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.742206363 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.141823924 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070417782 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070998 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.116798267 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.091193983 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.135948159 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.14077148 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.358666042 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.157402972 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071562391 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068545256 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.172005151 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.103789155 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06881583 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.134402365 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.095886333 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119733393 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.140818967 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.138171956 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.139870878 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.201347028 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.137927301 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.156777136 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071333347 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.120907412 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.073461977 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.183607806 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.183535408 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.134519718 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.183601051 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.135202031 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.134988705 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.13904304 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.092294132 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.142606924 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.117236948 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075548269 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134231813 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.179930253 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.116038514 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080112312 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069972079 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.156663712 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.098097835 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105375609 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.136154463 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.143569529 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.419992111 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.138762838 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.088657123 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082045404 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135237113 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.134108862 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092063943 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.203290397 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120530822 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.138773674 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117014448 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067223792 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.117829206 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.133740336 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.09533793 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119097194 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.136386432 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072733043 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.20806879 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.179677971 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073238048 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.181584461 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.155874506 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.092439014 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.142492695 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.116013166 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.141390885 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074280251 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.134551784 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093695178 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.716681207 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.140036855 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.11913047 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07005686 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.16118621 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090436792 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08097552 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.101068167 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067776868 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.740148981 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.104685556 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076655024 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102441378 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070908424 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.11920876 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.133291179 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.091787202 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.133823653 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.167697451 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.095472888 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116294244 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.080674912 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.133707625 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.094892436 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.080419276 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.103055763 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.081666951 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120135326 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.091804442 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080777815 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.140282863 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.135049093 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.182851941 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.530527919 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069311721 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.103428488 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.18667732 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070829279 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.22955571 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.154954934 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.167602141 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.135544853 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098142203 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.252192727 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.136277791 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.160301514 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.103242923 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.146386503 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068523618 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.134294026 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.136266619 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090543784 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071082477 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.134757518 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.140536988 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.13742887 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.921621002 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069077996 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.198166879 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.089203562 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.144647595 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.073898422 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093618679 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.228677623 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091328001 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.143717287 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.135871871 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06984137 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.102712893 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.81535924 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.10164817 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.136895628 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07159385 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.182586711 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.136563224 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.133779343 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.135063708 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071318424 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.133664182 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.205322529 seconds)
  done (took 38.962311321 seconds)
done (took 57.068945844 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.256552123 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.174457518 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.241557723 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.116954684 seconds)
  done (took 1.889303092 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.144338088 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.10057614 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.117872938 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064665647 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.124588757 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.086064598 seconds)
  done (took 1.670712016 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.4069659 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.260963794 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.22666458 seconds)
  done (took 1.921215728 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.220786928 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.234533391 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.448726785 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.27452384 seconds)
  done (took 2.310627903 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.167916783 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.112525681 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067272487 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.106068021 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.159788294 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.20777188 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.124113785 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.172184446 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078356114 seconds)
  done (took 2.270687798 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.191476021 seconds)
done (took 11.284001603 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.267917998 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.161138457 seconds)
    (3/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.094599725 seconds)
    (4/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.099823536 seconds)
    (5/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.109427849 seconds)
    (6/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.211356631 seconds)
    (7/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.212883359 seconds)
    (8/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.229832354 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.083383081 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.13435992 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.076761677 seconds)
    (12/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.1693371 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.07418382 seconds)
    (14/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.180113365 seconds)
    (15/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.222314431 seconds)
    (16/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.166949709 seconds)
    (17/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.251323293 seconds)
    (18/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.234832467 seconds)
    (19/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.214223252 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.184857943 seconds)
    (21/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.123830761 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.109307567 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.064118682 seconds)
    (24/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.105247336 seconds)
    (25/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.113769872 seconds)
    (26/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.176943827 seconds)
    (27/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.213236336 seconds)
    (28/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.192810836 seconds)
    (29/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.09043602 seconds)
    (30/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.165237921 seconds)
    (31/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.075799178 seconds)
    (32/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.201546425 seconds)
    (33/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.191158003 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.12007093 seconds)
    (35/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.084787063 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.094489323 seconds)
    (37/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.086626821 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.118581747 seconds)
    (39/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.079284414 seconds)
    (40/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.112714246 seconds)
    (41/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.160714522 seconds)
    (42/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.165584347 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.132291379 seconds)
    (44/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.079377738 seconds)
    (45/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.096536857 seconds)
    (46/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.072828659 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065265938 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.117521589 seconds)
    (49/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.086986044 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.096490298 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.122685171 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.094748378 seconds)
    (53/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.114292006 seconds)
    (54/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.130744195 seconds)
    (55/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.075756443 seconds)
    (56/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065210818 seconds)
    (57/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.073899853 seconds)
    (58/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070931676 seconds)
    (59/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.072265236 seconds)
    (60/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.09807032 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067157278 seconds)
    (62/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.073594045 seconds)
    (63/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.077400821 seconds)
    (64/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.100531976 seconds)
    (65/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.091805755 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.094583579 seconds)
    (67/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.193121057 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.064752754 seconds)
    (69/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.075523511 seconds)
    (70/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.157769106 seconds)
    (71/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.095875536 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.096950425 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.12621928 seconds)
    (74/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.072060039 seconds)
    (75/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.050414688 seconds)
    (76/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.095599352 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.140326609 seconds)
    (78/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.074766649 seconds)
    (79/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.214118785 seconds)
    (80/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.159822595 seconds)
    (81/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.181341627 seconds)
    (82/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.122309153 seconds)
    (83/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.078434368 seconds)
    (84/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068411403 seconds)
    (85/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.093654157 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.08951626 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.119440365 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 0.066365499 seconds)
    (89/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071896408 seconds)
    (90/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.1252471 seconds)
    (91/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.065168946 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.146570329 seconds)
    (93/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.073584445 seconds)
    (94/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.093891577 seconds)
    (95/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.052799312 seconds)
    (96/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.108506502 seconds)
    (97/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.074263463 seconds)
    (98/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.106453847 seconds)
    (99/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.050840039 seconds)
    (100/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.142055058 seconds)
    (101/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.159138967 seconds)
    (102/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.135231751 seconds)
    (103/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.096843806 seconds)
    (104/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.099594882 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065414674 seconds)
    (106/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.102603132 seconds)
    (107/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.068106818 seconds)
    (108/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.050756634 seconds)
    (109/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.100471563 seconds)
    (110/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.146248517 seconds)
    (111/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.073818925 seconds)
    (112/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.070795117 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072028147 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.112218646 seconds)
    (115/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.051436723 seconds)
    (116/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.097206908 seconds)
    (117/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.068638748 seconds)
    (118/309) benchmarking ("sort", Int8, false)...
    done (took 0.380511308 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065937278 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.109926073 seconds)
    (121/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.065846175 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.163272584 seconds)
    (123/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.053357679 seconds)
    (124/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.050786864 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.089649538 seconds)
    (126/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.171082756 seconds)
    (127/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.096022791 seconds)
    (128/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.075992168 seconds)
    (129/309) benchmarking ("sort", Float64, false)...
    done (took 0.14797727 seconds)
    (130/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.065132551 seconds)
    (131/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.101071449 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090822651 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.116646219 seconds)
    (134/309) benchmarking ("sort", Bool, false)...
    done (took 0.156050118 seconds)
    (135/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074404829 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.092412771 seconds)
    (137/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.074915903 seconds)
    (138/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072144926 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.112618529 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.108739221 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.069399599 seconds)
    (142/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.160171337 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071450754 seconds)
    (144/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.178231028 seconds)
    (145/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.089967932 seconds)
    (146/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.053238613 seconds)
    (147/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.07221323 seconds)
    (148/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.095989784 seconds)
    (149/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.166664827 seconds)
    (150/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.087584868 seconds)
    (151/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.166629137 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.109576116 seconds)
    (153/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.062059929 seconds)
    (154/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.050615618 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.14296841 seconds)
    (156/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.0777597 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.088886252 seconds)
    (158/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.073157668 seconds)
    (159/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.05080056 seconds)
    (160/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.095025794 seconds)
    (161/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.133813856 seconds)
    (162/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.090072717 seconds)
    (163/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.155792375 seconds)
    (164/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.076721788 seconds)
    (165/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.074867767 seconds)
    (166/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.052152235 seconds)
    (167/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.096889257 seconds)
    (168/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073050586 seconds)
    (169/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072836107 seconds)
    (170/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.15924983 seconds)
    (171/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052242499 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.131941435 seconds)
    (173/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.111176614 seconds)
    (174/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.068008063 seconds)
    (175/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.050865322 seconds)
    (176/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.172961108 seconds)
    (177/309) benchmarking ("sort", BigInt, false)...
    done (took 0.210038264 seconds)
    (178/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.062163211 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.111114087 seconds)
    (180/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.075312602 seconds)
    (181/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.127186872 seconds)
    (182/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.160399256 seconds)
    (183/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.092132636 seconds)
    (184/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.055527891 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.064315665 seconds)
    (186/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.083654477 seconds)
    (187/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.052770406 seconds)
    (188/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.067503366 seconds)
    (189/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.093240195 seconds)
    (190/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.087763236 seconds)
    (191/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.051510882 seconds)
    (192/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.096501794 seconds)
    (193/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.05277317 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072806039 seconds)
    (195/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.088447507 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.066035432 seconds)
    (197/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.120770317 seconds)
    (198/309) benchmarking ("sort", Float32, false)...
    done (took 0.129225869 seconds)
    (199/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.053101347 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.120678549 seconds)
    (201/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.052042388 seconds)
    (202/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.099122688 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.066603777 seconds)
    (204/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068564395 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.137360255 seconds)
    (206/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072359587 seconds)
    (207/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.100025776 seconds)
    (208/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.07179281 seconds)
    (209/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052292116 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.087421188 seconds)
    (211/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.065544697 seconds)
    (212/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.159573383 seconds)
    (213/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.077608359 seconds)
    (214/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.072149512 seconds)
    (215/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.169423893 seconds)
    (216/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066502336 seconds)
    (217/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.138096188 seconds)
    (218/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.051433041 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.095291502 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075601407 seconds)
    (221/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068056348 seconds)
    (222/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.072552248 seconds)
    (223/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.054890996 seconds)
    (224/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.060716742 seconds)
    (225/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.100048285 seconds)
    (226/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.07180326 seconds)
    (227/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071118591 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.113725978 seconds)
    (229/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.09972077 seconds)
    (230/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.090345236 seconds)
    (231/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.052719187 seconds)
    (232/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051408344 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.088328382 seconds)
    (234/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067827131 seconds)
    (235/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.074563086 seconds)
    (236/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.12244477 seconds)
    (237/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052473621 seconds)
    (238/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.096674319 seconds)
    (239/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.16564242 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.16235088 seconds)
    (241/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.06143226 seconds)
    (242/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.089784389 seconds)
    (243/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.051688775 seconds)
    (244/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.05302925 seconds)
    (245/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.050512693 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.08931767 seconds)
    (247/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.051566952 seconds)
    (248/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.05139967 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.115298294 seconds)
    (250/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.068416602 seconds)
    (251/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.156716727 seconds)
    (252/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.052041072 seconds)
    (253/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.200310698 seconds)
    (254/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051666521 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088093117 seconds)
    (256/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.197204813 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.155755368 seconds)
    (258/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.074650509 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.089628127 seconds)
    (260/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.165837428 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.090409812 seconds)
    (262/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080555388 seconds)
    (263/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.089907588 seconds)
    (264/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.06247175 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072496676 seconds)
    (266/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.159381913 seconds)
    (267/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.054207802 seconds)
    (268/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052911023 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.149665151 seconds)
    (270/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052843853 seconds)
    (271/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.089444321 seconds)
    (272/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.073919096 seconds)
    (273/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.087170854 seconds)
    (274/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.098521815 seconds)
    (275/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.052248381 seconds)
    (276/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.050817519 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.114215495 seconds)
    (278/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.05164078 seconds)
    (279/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.065729953 seconds)
    (280/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.075282066 seconds)
    (281/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.066616769 seconds)
    (282/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052290036 seconds)
    (283/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.091933035 seconds)
    (284/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.087038368 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.095932625 seconds)
    (286/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074067076 seconds)
    (287/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.050875488 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.086857132 seconds)
    (289/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.062574508 seconds)
    (290/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.07189708 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.134559863 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064938135 seconds)
    (293/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.089879822 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088202149 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072531161 seconds)
    (296/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.104669299 seconds)
    (297/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.163241788 seconds)
    (298/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.053982215 seconds)
    (299/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.145019196 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.095613957 seconds)
    (301/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.072403226 seconds)
    (302/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.199065918 seconds)
    (303/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.065895438 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.095581158 seconds)
    (305/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.066108746 seconds)
    (306/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.067210175 seconds)
    (307/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.086706967 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.066289233 seconds)
    (309/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.067023548 seconds)
  done (took 32.92156322 seconds)
done (took 33.956399574 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.081235329 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.113567842 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074926474 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.090597785 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.103963624 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076436441 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.095840501 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077167409 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.103706389 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081351015 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.102328067 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054739606 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.072943479 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.098678766 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073780503 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.11536913 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077959427 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.095131904 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074026549 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.06466498 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.096890438 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.06676684 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067134347 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.079156057 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078006757 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071023488 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.096169832 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.074244309 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.088684006 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.067273919 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069055569 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.096229511 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066048775 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077321622 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.095550509 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073197582 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096700481 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076567624 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067473222 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.089508189 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074553239 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.064986701 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.0963139 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073959327 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.07128915 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.095993493 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073028183 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.101422198 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091615274 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091319657 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075268777 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075819995 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.100604092 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072067678 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.092635153 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074414662 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070358243 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.1155976 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072939969 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09183378 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074241891 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073205778 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.095502175 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072853838 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072333194 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.100358821 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075072808 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.095140719 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074847269 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070163911 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.089361992 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073427165 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068695057 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.089925761 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075664016 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.099577078 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065714973 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070740564 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.095486329 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.072075077 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064327111 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091988181 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068200107 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071034347 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092008064 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.05496537 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068363122 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.095963461 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065622018 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.095638175 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.072667692 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071779422 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.091409648 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076797982 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064555821 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.094789123 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066388026 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065775216 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.091078975 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.07024865 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064624502 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091804883 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074434778 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066345488 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.095713633 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078806993 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.089454009 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072322153 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064395925 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.089188666 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.080418308 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.097630934 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066655095 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067545025 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.088669422 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073510561 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064332561 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.0896415 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066292234 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065333016 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.095948037 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066026366 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068099672 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.09654666 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078502746 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.088223849 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070249755 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068339529 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.089265515 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072014992 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065211689 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.088796869 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.068249915 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.06143587 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091707996 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.06620196 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072673551 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092123957 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073545351 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067163125 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.097629082 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069971111 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.094169667 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072213252 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064544785 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.081364549 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06993566 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067979265 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.090394304 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066488479 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06672004 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.088267627 seconds)
done (took 13.248788872 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067225494 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.168159328 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.122111133 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096294537 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.11052706 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066809477 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075009083 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.126328769 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.091136473 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.103334119 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110438887 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084592123 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.13758278 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064505292 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.090378317 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.07091037 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067034997 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.112507848 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.124707449 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087458981 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.134261141 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065254003 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.119849472 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089787095 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.112460277 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.125229971 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067423302 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069643821 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.092512412 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.092001375 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.109946276 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069700833 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066394152 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.123669767 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.115835985 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.08430618 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.088831551 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.084914458 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.06544727 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.090213332 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.08816641 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.122623237 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.103672989 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081127353 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.071714697 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.093329623 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067722802 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.109054807 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.090152698 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.104450549 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.108987112 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.105506605 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.092779974 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.081218222 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.088206136 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.087187965 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.105017237 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069010753 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066772298 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.092835141 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066859731 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068844178 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.111812863 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.11325118 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071115529 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.104723004 seconds)
  done (took 7.30335838 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084179572 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089684988 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.107891003 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082702503 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.090632927 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067017088 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066466826 seconds)
  done (took 1.688944673 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067627118 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08770839 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.113427416 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088881658 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.108987138 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087060506 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.101184697 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067612165 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.082540342 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.092987297 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087425507 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.126433604 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067930607 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.097776297 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091173647 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066350633 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116340171 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066489269 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.09420076 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091079613 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.092541006 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.08765189 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.068709494 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.091456307 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081489328 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.09002254 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113115281 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09475247 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069091822 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069937795 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.08939638 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.105627182 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105069262 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074179977 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066256831 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.106458099 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080905951 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088898891 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083758002 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071410694 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.106527503 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067090358 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.091942661 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065894255 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070926455 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.102185382 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068145839 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066692766 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.094705446 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087603636 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.091655041 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081301459 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.065923564 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.095177684 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068948209 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096111222 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078448866 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.06791058 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.109791348 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069210019 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.106804692 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084878799 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080098828 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.10895892 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069554908 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.104435068 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.081180556 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068389462 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094189222 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070809378 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.107577542 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.065010968 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067512194 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.102370405 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069108328 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.114292935 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.090755952 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068493686 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.102910022 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066703887 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.091863016 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.068205329 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089026509 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095128775 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066988004 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.094931125 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072152615 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065113404 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.090187235 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.071523579 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065281468 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.092512852 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.070733633 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068083147 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094415533 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.084071051 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.091585866 seconds)
  done (took 9.385403584 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069246161 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067732559 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092967001 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068516949 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067404181 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.093365535 seconds)
  done (took 1.564849432 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.095902069 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.093102726 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081466346 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071504936 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.129611364 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.080500463 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.107339375 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.102165609 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.085123356 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078497902 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.107199817 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.081666059 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.112503503 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073035715 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.106505029 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072332066 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.105878925 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075869785 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.102639596 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074773543 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.111076859 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.074437245 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073137948 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.107350943 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.070083235 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096606497 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.077213277 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102704384 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079188037 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.103751175 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.073590752 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.070139279 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095129796 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079187938 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.10718464 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.07019093 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096821137 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.071780411 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100147538 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.072121437 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.081570451 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.098806102 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074830547 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.097190657 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.079250616 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.095397146 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.071900656 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100316063 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.081599903 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.094696819 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.073554009 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071770758 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.096221978 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.071357662 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.094658463 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079756886 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094801535 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.083020966 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072815424 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.096201191 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069939281 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.095088632 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.079341419 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.095064938 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.080431529 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.095064322 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.072209553 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07288802 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098637252 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.072824599 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.095492863 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069905278 seconds)
  done (took 7.384316216 seconds)
done (took 28.422941183 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.673106221 seconds)
  done (took 1.777303334 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.745120723 seconds)
  done (took 1.850872069 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.949810944 seconds)
  done (took 17.063270811 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.596491747 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.753888869 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.787833176 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131249909 seconds)
  done (took 3.375329009 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.892957887 seconds)
  done (took 2.025214666 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.236061085 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.222663212 seconds)
  done (took 1.570890164 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.770901584 seconds)
  done (took 1.891901899 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.272222268 seconds)
  done (took 2.383731751 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.316823697 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.177687231 seconds)
  done (took 1.618294906 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.48309674 seconds)
  done (took 1.605270064 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.110132047 seconds)
  done (took 8.239522663 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.205318402 seconds)
  done (took 1.344059122 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.265065601 seconds)
  done (took 1.398058854 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.307294824 seconds)
  done (took 4.4336318 seconds)
done (took 51.692601041 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079081774 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081236774 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.106163633 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078418308 seconds)
  done (took 1.467375456 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.07882194 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072141498 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101698302 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072346327 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.102133742 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072806768 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073349305 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.102648618 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071775365 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097637922 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072910167 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.07198343 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.100652936 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074333579 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.095691592 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075794087 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.09855922 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073548582 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075608109 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.097582499 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071620879 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073792712 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.101652788 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071211249 seconds)
  done (took 3.135340553 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077946099 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072069288 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.098654269 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072389584 seconds)
  done (took 1.452240123 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078696079 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.090635406 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.114332704 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076030928 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.118449991 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.111628016 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069926785 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068232879 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.095055197 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077603776 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067190565 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.122398987 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.11194697 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077590761 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.077806788 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.09190524 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068291351 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.111483645 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077595843 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077364792 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.095846759 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.079485616 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.091995544 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090951799 seconds)
  done (took 3.274657153 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.07872954 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.101746495 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.103829452 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.086181582 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.116380411 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064812878 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.100034585 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088872129 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.149357643 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065282469 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.094812792 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066150553 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071534161 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.08993485 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076761463 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.129305367 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.109595971 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067621204 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.120976429 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065220469 seconds)
  done (took 2.985802843 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073816109 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069540029 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.089843406 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069818416 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077523728 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.097655303 seconds)
  done (took 1.620790925 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069252499 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067267868 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.091224204 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067426113 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.07134167 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.091687712 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.0671462 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067063405 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.092097753 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068119525 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066172753 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.091684569 seconds)
  done (took 2.044275251 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.397586434 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.095487736 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068341025 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.09102915 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070425474 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.090903908 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081054102 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067778992 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.116907005 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066361461 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.091028382 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069417559 seconds)
  done (took 2.440813855 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261110478 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078733669 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.291296035 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163175399 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139050832 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142414701 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130299466 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139724861 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.1711411 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129453527 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22137532 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194656577 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132951711 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165154605 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114568341 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.09754283 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21044872 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190381675 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130977149 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218604861 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172372088 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151457431 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17379284 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127888272 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132724761 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149821743 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070865497 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105930958 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22470187 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158733967 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173490597 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137372133 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120335575 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229941345 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224966069 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170105469 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161758096 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08405118 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.154634377 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.161213882 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255979529 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113892505 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192982925 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13487333 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106302919 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16770523 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146263953 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.146022809 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.132715159 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090029203 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199169966 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209107309 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.192297607 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087349597 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137391069 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141219888 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.142422945 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128763816 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236211883 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188266987 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153199171 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.095828237 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099184444 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204657422 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157185976 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.134823455 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.1528561 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117255841 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161194096 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181853723 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145501984 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170194418 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.183118923 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088086504 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144620142 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191130364 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155905745 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196997434 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150763057 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.098434476 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151905508 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129737946 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081349437 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.1657166 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074984936 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228429205 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12224147 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.1068248 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139904529 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134744398 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134904482 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19090853 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198355315 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128059277 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065534143 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128912288 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.145046759 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175715896 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112856997 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107008252 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142223951 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.104302483 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165200077 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.099208158 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149615108 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075809882 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151127279 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156077541 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.101421087 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150573358 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100752878 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.125424155 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160479632 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213743217 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088837312 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109482546 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193632676 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148454696 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.130683593 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196062683 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.18466858 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.124440699 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10323726 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205549733 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23534976 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088944703 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219181208 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135352502 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083730261 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.113422087 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151221492 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139941978 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.148529237 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081840862 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.145799576 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223439984 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074372532 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12208713 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160775205 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105830546 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081067856 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130539092 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12817867 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094553767 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.126688091 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.13264754 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168062364 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151076995 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132427992 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152351587 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126199939 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225639033 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114191072 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100421355 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130192691 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.068761958 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.190188916 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186053516 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104853857 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193674749 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.149578197 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131837975 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145100747 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082153924 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165318707 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105814007 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069708317 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199788048 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136179793 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109167133 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.204660116 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104000549 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.180426246 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.146477779 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163160866 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158799891 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.155784371 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132544961 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.086668128 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137655586 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180391028 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073921774 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.1179971 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081025633 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130980231 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122441757 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084012506 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196101089 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154413081 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100375845 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138263806 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123537235 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172962131 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.103113123 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157538098 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.1455065 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118412051 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.181052308 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179251553 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157887117 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126562973 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199683308 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071298837 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073847305 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.117271863 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150149553 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10917918 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084072852 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1448059 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.200464782 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157159328 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166952935 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137000318 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148908826 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1820156 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.068812786 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.142074749 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17492392 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148128713 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.153033945 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116695247 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099774759 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169336557 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136018735 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236360475 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141268829 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150609952 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208457314 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099373914 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107439357 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132504903 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165173593 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13369054 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173050058 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126679872 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113639752 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136731993 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.07582908 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128713328 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155723107 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149066192 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16341525 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.141724883 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187530816 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078067927 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145140897 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147464888 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150882713 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.06350029 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146524446 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22298112 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120872737 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14661601 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18188978 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107227556 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.15163016 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205773409 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201522879 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08415375 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137203048 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146378872 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154858881 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147048533 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.193537845 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139673168 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162938058 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110077993 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.112090682 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087010404 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124386658 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131985223 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.121006897 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.13610004 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.141792616 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095352759 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157674048 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130226507 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137076579 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145652689 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.121655523 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.090333968 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123571398 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202644114 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147301511 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227378694 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.126052223 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.173409398 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220927727 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074253926 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107176776 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078623354 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167012943 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1109521 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159819736 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.124699208 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104733214 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177469241 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17338376 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09437533 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.096756466 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135944332 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163618263 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138339872 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097853845 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.132149892 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219322602 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.101457906 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107520247 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141263896 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104154257 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13038312 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230098276 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.060954913 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125989359 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075406752 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108752556 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154884093 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208307298 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081855625 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.150272553 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120137105 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138402389 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182208808 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103451598 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126753163 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141813395 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178783426 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156445372 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.116937541 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139081624 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157611228 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211727593 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132867335 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096273312 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229589138 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180372358 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.217213177 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.114971953 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114105396 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141688169 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135363498 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196585446 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082801003 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219657404 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082052211 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194118806 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132121192 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090324487 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184889134 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.100008298 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115535013 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176601216 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145813598 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109863742 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078100589 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161934195 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148638971 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13535228 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.102899807 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168961049 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072201834 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188228776 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197442671 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108560515 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105284336 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123176812 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106923471 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136043544 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102297069 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115113213 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.14481507 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203403144 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.11605673 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20565824 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171507539 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141828021 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166141966 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127970377 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.663814471 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.07728463 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210104837 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148011182 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231828431 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096566844 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145306951 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136938584 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151928489 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201916124 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132209957 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.175231358 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18550268 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.143276666 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081519076 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130168029 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131572533 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089689327 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131932517 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141485866 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144800501 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.121107649 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.144086526 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152654584 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081323465 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123915795 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184534956 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145213334 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202041075 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169227212 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084368019 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146431219 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195644356 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07984627 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.150184885 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211007528 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134981429 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126478106 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081503761 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.129948449 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227554151 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074504408 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219464414 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148668377 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109100969 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141264518 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.170034159 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161095629 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136520417 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149933474 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093975656 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.137381942 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140373252 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109142754 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076304034 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132825352 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141530935 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.124628431 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126222387 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.122838091 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181796482 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.099124531 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09600806 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13118227 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201419963 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20438959 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.115825139 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082752287 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148421085 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14101057 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.142152793 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149545025 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.107204028 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081572331 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.109825065 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.10351717 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.136202552 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140478739 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132723533 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139976473 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193567477 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.110251622 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.223273471 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123851094 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132037424 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070040207 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.105554628 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096046243 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12590134 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136785557 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128164081 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200857204 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.123229669 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.116885914 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095184971 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.100858855 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084525746 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155022146 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139326633 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148002738 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125782777 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062021645 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137892179 seconds)
  done (took 69.741949126 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.133357845 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.107717715 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.122440572 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.175316717 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.149289932 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.23951323 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.182680311 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.226308175 seconds)
  done (took 2.547939773 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069721863 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.11936707 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099906258 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.108478291 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067544156 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.095684042 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.275414037 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081706941 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.093922951 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088508335 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.10583325 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094460824 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.476260355 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067983127 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.093713286 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.063543023 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.093311793 seconds)
  done (took 3.304795899 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.421485919 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.657071436 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.424736998 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.101349579 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.957720769 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089338339 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.589150391 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.167413149 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.071211407 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.449877839 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.752381701 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.133953325 seconds)
  done (took 18.027433999 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076041965 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.068499719 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.110956412 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083518151 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071099771 seconds)
  done (took 1.631714093 seconds)
done (took 114.797117304 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080416159 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.344526776 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053421136 seconds)
  done (took 1.648642083 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.083165417 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.083023999 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.111228572 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.081596282 seconds)
  done (took 1.586855406 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.074787641 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075025229 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.110817435 seconds)
  done (took 1.486356059 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.281581639 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.138306702 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.115325906 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082779248 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076781887 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.104099632 seconds)
  done (took 1.488897145 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072506865 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074085756 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.099389458 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075800487 seconds)
  done (took 1.542532194 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.075837608 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052140783 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054062702 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.082498654 seconds)
  done (took 1.491905444 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086612338 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.077217724 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.105212634 seconds)
  done (took 1.491166326 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106610213 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.110498422 seconds)
  done (took 1.441406992 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081846238 seconds)
  done (took 1.302438674 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098814671 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.140081484 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.156261192 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.13619136 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.164890028 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.136436762 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085680108 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.115618786 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.10396937 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086874955 seconds)
  done (took 2.450882352 seconds)
done (took 17.768449944 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078678959 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.480721918 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361059963 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088970511 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.695453282 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.354710754 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.003468131 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090905288 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.148118519 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094406876 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084594707 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.64832018 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.030720986 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.412705284 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.017725676 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.318216724 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.673800338 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06910272 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067578131 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094673437 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.961029688 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.065852864 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094551822 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067557745 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.673226728 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371875885 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067195336 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.345658288 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067055782 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09391139 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355930707 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067514003 seconds)
  done (took 16.261488583 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071388022 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.142462262 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07406717 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082506539 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.097984264 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069048508 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.097970049 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.0697011 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.151291158 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067906316 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110240475 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068343324 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.07086845 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.09604363 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087320724 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.093044282 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069310473 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067651852 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.09441174 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069407983 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08522072 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095290795 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067785618 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09381075 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069430437 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079387169 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095796719 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067858747 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067860396 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097723541 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.069855175 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094844987 seconds)
  done (took 3.968472924 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114615275 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.151495557 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074094978 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.129357063 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11172099 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.098274467 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.141938225 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.120496523 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.154716995 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068230534 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112347097 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068117251 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126645863 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069782825 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086229553 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.095848013 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069274522 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.094593243 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069344018 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067984592 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.114273053 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06783398 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.093576608 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070063594 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067461798 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107605033 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068487542 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067056086 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096476038 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069849331 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.097579387 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068612232 seconds)
  done (took 4.242403774 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073252841 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.073891647 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109417497 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083245745 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068523436 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.100119044 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.071690538 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.095266529 seconds)
  done (took 1.911809626 seconds)
done (took 27.611720031 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079031455 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.067866726 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.098638937 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080268366 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072311179 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.105564423 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066775242 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.101148305 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073237495 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.071906049 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.101946126 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067647555 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070381285 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.095005849 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073033541 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.06663654 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.107413142 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071189208 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.10578934 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079376785 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.06832781 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.101353752 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074211576 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.106470123 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079093757 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.10454777 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.078675909 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.071786926 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.096858538 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070126931 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.074959549 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.11067535 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.067945111 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105629812 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068413774 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.066799564 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.099437738 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.0678042 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.104509934 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077918213 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.068470549 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.104049802 seconds)
  done (took 4.748990495 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087840038 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089351512 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.11225306 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061201445 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.065413427 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.093805475 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087543822 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.08667679 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060149883 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086815027 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.082783041 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060386339 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.061637478 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.052640748 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.087640363 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056829537 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.060433722 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.082718008 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059839638 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.058559515 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057249764 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.081531278 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.06006654 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.061541747 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.083194788 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.06255556 seconds)
  done (took 3.136079519 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075210421 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.082297966 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.114985384 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.125061999 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.141467088 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.075897793 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.106595226 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.087039176 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.112560167 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067629067 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070423185 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.121958068 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087292303 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.101719464 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070706456 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.082073755 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.109918312 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068720265 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.100497121 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091343774 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.083190152 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.105911846 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.090485778 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.107700521 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067067984 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.067840689 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.099485816 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080714496 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.098769433 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076774727 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070613482 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.098912811 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068713943 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105140558 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.07216172 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068228015 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.118323363 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076618115 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.105645154 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068548792 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070030758 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.096923883 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089221513 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.140022668 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067248125 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.072675261 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.103860866 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.075466915 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.094915893 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086910504 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077443186 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.095604668 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070544846 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066028563 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.095712567 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079810322 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.09583278 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.07178284 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.075302007 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.098678804 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.079265016 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070803993 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109920961 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066593249 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.103243791 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067177104 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067050774 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.094869282 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092554135 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.095551212 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.107255091 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070213446 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.098264112 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075650899 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.102756382 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074323187 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.06757164 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.110390091 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077046912 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.098118375 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077479095 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070879378 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.098540306 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087905647 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069422754 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.097569858 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068275732 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100763407 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071553538 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.067769328 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108144432 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068245333 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.069623861 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.111670942 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066360775 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.096073526 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.07440718 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.070988627 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.094831239 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078198359 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.099953721 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068844571 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.075614865 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.095886847 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070058177 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.104122722 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.07443011 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066652886 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.099549541 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073922367 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067764235 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.097085595 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071437846 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.095263155 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.077823627 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073414704 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.100284441 seconds)
  done (took 11.386781049 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.18513272 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.151896208 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.09949671 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.172932067 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077292279 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.07793656 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.175703667 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.123821032 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067501522 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.066982097 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.098120292 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.114747388 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.134765556 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.149700463 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079163895 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.096998543 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.08359108 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.145991689 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.178794181 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142830851 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.113480954 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076165089 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.099409655 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069674806 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.07363124 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.112193585 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.08992468 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.105447942 seconds)
  done (took 4.411697177 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081777404 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.128494554 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074657146 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088723068 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.12055639 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067330803 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.099037925 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070226063 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.079474052 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.108590962 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067909314 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.102168599 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074925228 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.10016387 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.06987195 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.073590604 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.102950935 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069094674 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.069664837 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.101949433 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.076053945 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.108343799 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071323628 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.065931756 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.10260558 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066040745 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.093243271 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084812597 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.095800309 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.089495413 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.064353618 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.102974146 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.080369536 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.096100952 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.06817379 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.066510348 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.095610276 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067774709 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068621199 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.094355791 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066596632 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057314116 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.094882091 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080092582 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.101001205 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.060288948 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071471138 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.101225246 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072970542 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.06461457 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.099453237 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070345726 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.069458501 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.105140123 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.071854526 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.099400362 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069851317 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.064869708 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.102817165 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068160285 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.063518124 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.093997116 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.0731185 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065380514 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.104953513 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072344459 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.09335986 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068765269 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069366788 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.101296558 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068469643 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070144752 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.094292072 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070255623 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.07124914 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.100852111 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.06872601 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065456791 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.096640432 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068346178 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.054810936 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.096409059 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053948208 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070183645 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.094200016 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066583173 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.066763623 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.101693978 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079056794 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.097707463 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072933899 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.095516268 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068131258 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070502273 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.088245532 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070760267 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.08137123 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.112162461 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067219719 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.094063684 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081734293 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.099413076 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068434163 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056423124 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.101647017 seconds)
  done (took 9.851724148 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.093899662 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.086179539 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.097916651 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.082617028 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.118091085 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087180906 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.073823342 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.102392708 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069549585 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.107135073 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.06908774 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075469186 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.095817522 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077608759 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.093326414 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.104429867 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069289055 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.10408455 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073220243 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.099735908 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112097155 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081895663 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.108678644 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.069285073 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.071662063 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.109226366 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090429434 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.108140103 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.0794914 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.083817848 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108804023 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089902465 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.112582794 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.072676011 seconds)
  done (took 4.338907473 seconds)
done (took 39.104215643 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.329365785 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.545676094 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.309805992 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.327201583 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.36131391 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.332732682 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.321890211 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.308401251 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.763690447 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.311739516 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.536359166 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.080604099 seconds)
done (took 60.783450876 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.354145932 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.45703318 seconds)
    (2/2) benchmarking "String"...
    done (took 1.582375432 seconds)
  done (took 4.291847716 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.674294579 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.236103565 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.573738149 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.310627922 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.312886979 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.632471084 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.024162757 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.190214951 seconds)
  done (took 28.531419094 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.312059968 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.695233845 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.849130921 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.854099801 seconds)
  done (took 18.964304126 seconds)
done (took 62.067549279 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.295086086 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.328697842 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.317373511 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.295875187 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.441197039 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.345489303 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.610583036 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.549228399 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.314214504 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.299993083 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.310709905 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.311102048 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.317974385 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.5731339 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.316870576 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.317139959 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.351928819 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.779164258 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.719698101 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.314749925 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.34771874 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.336196358 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.333881857 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.315515676 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.3563533 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.312613903 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.311995943 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.322546964 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.741594365 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.316377814 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.414932501 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.771828949 seconds)
  done (took 195.246320747 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.312602469 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.369307684 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.504752057 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.368102111 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.774762344 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.510450447 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.450992112 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.840300739 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.33138163 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.336385037 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.532208219 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.314437359 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.608651903 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.284009108 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.321670771 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.321349051 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.481479477 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.632305814 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.333809252 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.586649209 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.325324196 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.497028169 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.440550754 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.516744146 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.334362283 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.363805298 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.327484438 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.318700121 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.505638804 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.416840498 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.355216633 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.322887506 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.916542603 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.173418974 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.33774108 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.338761323 seconds)
  done (took 153.960104019 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.597385595 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.313629087 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.312867353 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.313362341 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.344496646 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.312928564 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.869693525 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.87282421 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.814032864 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.71199422 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.376120923 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.534929188 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.314700314 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.407330166 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.326885407 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.316084504 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.314210936 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.329807513 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.338803744 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.316507586 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.314650595 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.87293548 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.330376842 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.444681129 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.321465433 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.314338622 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.345240081 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.708814686 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.313967742 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.345082255 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.635083208 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.36294535 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.314508189 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.641430471 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.203882528 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.422835157 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.317140191 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.34735384 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.315038698 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.585051433 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.315741252 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.31579923 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.318958194 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.925958203 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.318807932 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.873650287 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.319196256 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.222707389 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.315641228 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.314965363 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.719802436 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.849627588 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.317771819 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.315025124 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.317131967 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.314953628 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.314947968 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.347183183 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.724272651 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.414785967 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.316090678 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.319884246 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.346379644 seconds)
    (63/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.316089178 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.315810363 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.403529059 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.316129126 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.725849652 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.374610327 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.435857017 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.875531486 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.318409598 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.409361323 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.435886966 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.316285478 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.316581066 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.316715042 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.31630313 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.423959599 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.317579511 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.722159863 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.322308153 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.317661113 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.376126562 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.410422057 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.3169676 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.632949464 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.318940766 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.317080409 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.028049736 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.409966108 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.317154868 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.316981329 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.317331841 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.316730879 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.316651914 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.725377558 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.87588738 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.510852412 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.32108124 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.636627027 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.320259422 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.735732302 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.855192484 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.942221398 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.320667143 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.42582841 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.322134881 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.319149692 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.317967948 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.346448606 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.318642397 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.37572598 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.321062697 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.714474585 seconds)
  done (took 358.416483761 seconds)
done (took 710.472895032 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.008797138 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.998135423 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.112020715 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.995117466 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.954884207 seconds)
  done (took 11.329085925 seconds)
done (took 12.589449765 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.515210693 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.51490021 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.38122804 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.514555143 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.349992266 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.5323255 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.493889798 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.34148005 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.42544905 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.403310971 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.42538285 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.376197555 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.3484976 seconds)
  done (took 19.883620619 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.643443581 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.644831379 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.385133538 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.643514693 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.362030498 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.638248922 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.517546504 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.526939505 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.508351053 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.332733819 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.332632996 seconds)
  done (took 17.798925649 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.647530388 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.653182823 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.387705944 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.647170583 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.362167718 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.643858841 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.516182216 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.527348295 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.511171702 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.3339131 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.333608451 seconds)
  done (took 17.826667761 seconds)
done (took 56.77068964 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.329311415 seconds)
  done (took 2.592649094 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.361660827 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.533352145 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.348625096 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.333742601 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.33121809 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.330863111 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.333727394 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.331267669 seconds)
  done (took 12.169407662 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.328962816 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.329393065 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.327059435 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.326855585 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.329465237 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.329459063 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.329371112 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.327324788 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.326736128 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.326432436 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.329830544 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.327102713 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.326602471 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.328677513 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.329891296 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.326098075 seconds)
  done (took 22.514035902 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.328946977 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.326466654 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.326310181 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.326781443 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.326351198 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.327382822 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.327230907 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.3272592 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.326647208 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.326851302 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.32800584 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.327082294 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.32759589 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.32713939 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.327356201 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.328426886 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.327507177 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.327854551 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.331667445 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.327773842 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.327995139 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.327161195 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.327997423 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.328019756 seconds)
  done (took 33.128747878 seconds)
done (took 71.667256399 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.461494548 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.979902992 seconds)
  done (took 9.706774126 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.330928709 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.330457197 seconds)
  done (took 3.927707189 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.330948505 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.330629078 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.330956338 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.331531823 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.331308064 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.332038648 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.330326912 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.330998255 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.331489267 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.331550135 seconds)
  done (took 14.57775055 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.331803635 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.331246891 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.329564572 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.331004421 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.331736334 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.329644748 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.331260473 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.331696688 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.33178718 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.329040585 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.331517573 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.329489098 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.331616786 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.329148426 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.33147583 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.329334451 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.32988621 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.328864491 seconds)
  done (took 25.217411773 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.332845751 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.331566974 seconds)
  done (took 3.931033853 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.329546772 seconds)
    (2/7) benchmarking "second"...
    done (took 1.329803532 seconds)
    (3/7) benchmarking "month"...
    done (took 1.329336874 seconds)
    (4/7) benchmarking "year"...
    done (took 1.330390706 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.329396902 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.3303027 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.329656188 seconds)
  done (took 10.575711165 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.334484918 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.512871908 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.591999081 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.026923085 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.334525142 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.336094763 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.281291575 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.336797635 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.337554892 seconds)
  done (took 15.3597462 seconds)
done (took 84.561550188 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.363993852 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.327703079 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.248124546 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.333460483 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.344070621 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.670296139 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.354164926 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.455492069 seconds)
done (took 38.365132721 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.343950076 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.027442268 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.073751714 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.329015969 seconds)
  done (took 11.70018078 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.325571789 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.274531307 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.322091362 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.371254403 seconds)
  done (took 18.562276106 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.978177919 seconds)
    (2/2) benchmarking "read"...
    done (took 1.664252251 seconds)
  done (took 4.910763894 seconds)
done (took 42.785677612 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.333764685 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.334239677 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.333244607 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.334180229 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.331652447 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.334419192 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.332617457 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.332103129 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.334959614 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.334870454 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.335101605 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.334612163 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.334393382 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.33166229 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.332303357 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.334923062 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.332429526 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.331988328 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.332005602 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.33261567 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.331828518 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.334981325 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.331813071 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.332039557 seconds)
  done (took 33.267601097 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.335544938 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.334114004 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.334947058 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.335685459 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.332202873 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.335230304 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.335509643 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.332490418 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.335017585 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.336898733 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.332827388 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.33235676 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.336160227 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.3335937 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.335188614 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.333199008 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.336527638 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.33355864 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.335906929 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.33437731 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.336639229 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.333888149 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.334729821 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.335719064 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.335219603 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.334488501 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.337564193 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.335290904 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.337211023 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.334080961 seconds)
  done (took 41.316437608 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.343573024 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.343888287 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.336874685 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.336865234 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.337022187 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.33821804 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.337130477 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.337038738 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.338540885 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.33728752 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.336850995 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.337291936 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.337724288 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.336891767 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.337236163 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.339389289 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.337791806 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.338188949 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.336923643 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.337283281 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.338395204 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.337770434 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.337207324 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.3375945 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.338485164 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.33792645 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.337592395 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.338370062 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.337860061 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.337388498 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.338062295 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.338069324 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.338101117 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.338124964 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.338444497 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.338616147 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.342751951 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.345906631 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.338533765 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.338307576 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.338265262 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.338874338 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.338678598 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.339772613 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.338409151 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.338335782 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.338515352 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.338855621 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.339189989 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.339712148 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.339526054 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.339040457 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.339751374 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.338519331 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.339262462 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.340477137 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.338801426 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.339981799 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.339685205 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.339060306 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.339867083 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.339953744 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.340393568 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.339641348 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.340385012 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.339771282 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.339993087 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.340747752 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.339294009 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.340507549 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.339897323 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.340476855 seconds)
  done (took 97.672636528 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.341076417 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.338927964 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.338080087 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.338419359 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.339574832 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.341843274 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.339568118 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.34170483 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.337825397 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.342316146 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.340906748 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.338814783 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.338584138 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.341577012 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.340646639 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.338749056 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.341115321 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.339061716 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.340526898 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.342145016 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.342173026 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.33941012 seconds)
  done (took 30.758607815 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.343040816 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.342674196 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.339362319 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.342012945 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.339148747 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.34229914 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.342459076 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.342271571 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.342622484 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.340235073 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.339105666 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.342312769 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.339703733 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.339304739 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.339928558 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.339950231 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.342807943 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.340658499 seconds)
  done (took 25.417210119 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.340960765 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.34088737 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.342721247 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.340101291 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.339797508 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.344047369 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.340373258 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.343523479 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.343481348 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.340654908 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.343525556 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.342835917 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.344408422 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.34050087 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.344309886 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.341610226 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.342824658 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.340896437 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.343118443 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.340969778 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.342481317 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.344483173 seconds)
  done (took 30.806878677 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.344486117 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.344633823 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.342045895 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.341472506 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.342111744 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.344885722 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.344358743 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.341969658 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.344687089 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.344791947 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.34089951 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.343992307 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.342448991 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.34225148 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.341649227 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.341991409 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.344160638 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.342147687 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.344917026 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.342499798 seconds)
  done (took 28.141933859 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.346157278 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.346568852 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.345980057 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.34730556 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.34598106 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.346910847 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.346302087 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.346169349 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.347165967 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.34671279 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.347276886 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.346366598 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.347559232 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.347988259 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.347369029 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.34647211 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.346917741 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.346818019 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.346967196 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.347185067 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.349391924 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.346981538 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.34787763 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.348358361 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.347555013 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.347487579 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.348037225 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.347644782 seconds)
  done (took 38.999348283 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.347342844 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.346431322 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.343121534 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.343807472 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.344221641 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.343962489 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.344809099 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.34473225 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.346676715 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.343086037 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.346863481 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.346325644 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.347364339 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.346338867 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.34737045 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.34732247 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.347023739 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.34433522 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.344531091 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.344000629 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.347633211 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.348563794 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.347725475 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.345189234 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.345213622 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.347706598 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.34587931 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.34549187 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.347427017 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.34464734 seconds)
  done (took 41.65708697 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.367646759 seconds)
    (2/2) benchmarking "in"...
    done (took 1.365682627 seconds)
  done (took 4.015533651 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.345923107 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.348465329 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.348624223 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.345943348 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.346208731 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.347803189 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.34843898 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.346101009 seconds)
  done (took 12.059850516 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.34967003 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.348034519 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.346919643 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.348345808 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.349184309 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.349959484 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.357687323 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.365751182 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.351269691 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.349444714 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.355057322 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.356493796 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.352540208 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.349184158 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.348469977 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.35068368 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.348331815 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.348938768 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.34964541 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.34828972 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.349129211 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.351688592 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.351378456 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.347834 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.350778159 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.363246421 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.356905882 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.348481281 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.349902528 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.355531584 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.350850607 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.346385816 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.349584444 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.350117975 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.349164489 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.349796376 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.361110233 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.372485044 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.358209693 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.350250517 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.349911308 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.347192001 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.351328093 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.353469965 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.351720941 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.351592299 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.349415926 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.347417121 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.349034254 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.352764388 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.355685005 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.349510718 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.348649899 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.356848133 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.352219292 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.358716706 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.368957538 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.35441931 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.359363519 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.363773929 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.368190492 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.359352837 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.353665575 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.351815737 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.361658702 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.374887229 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.36071507 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.367019992 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.349222796 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.351957668 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.360735703 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.366711991 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.361688837 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.352491517 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.352859736 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.351518471 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.351806093 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.351602655 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.361382939 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.372620212 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.353029423 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.352574321 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.362059588 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.373741622 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.351286545 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.352272896 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.353039553 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.352242092 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.354086956 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.364191048 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.371105061 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.352580572 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.351896291 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.352733367 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.356221339 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.352897894 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.351634494 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.354972452 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.351176592 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.352871232 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.353017994 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.35640851 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.361647537 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.353433949 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.35306316 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.362361834 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.353787299 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.352519564 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.364696136 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.353957225 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.354058854 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.354316988 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.362622047 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.351061411 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.355952535 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.362237792 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.354384776 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.353718599 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.354166616 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.353659205 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.364761005 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.380151384 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.355053286 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.353413696 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.358831206 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.366547272 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.354734897 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.358231053 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.35527022 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.353430964 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.355029294 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.358424928 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.355720275 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.356937055 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.354938751 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.357660575 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.352037861 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.355153927 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.355007907 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.35676978 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.35783713 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.356676244 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.357442178 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.35909123 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.356322272 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.357610078 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.365064263 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.356439657 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.357439766 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.357598459 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.35289533 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.355051174 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.357967537 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.356911395 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.356599597 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.356338487 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.355527844 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.355515754 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.356722267 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.355560917 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.356007649 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.356886647 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.360515334 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.356740145 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.361389702 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.355367853 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.353924792 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.355430972 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.356139212 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.356818572 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.357187577 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.355178095 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.359939576 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.364417054 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.356095288 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.358205651 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.361327324 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.356715482 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.356920404 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.35767336 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.360520673 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.365879176 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.357834067 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.366577635 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.358016846 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.357824247 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.357022289 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.358089138 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.357576118 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.357960562 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.360986195 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.364853042 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.372297173 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.368189859 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.359558358 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.361561201 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.359222268 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.363752307 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.364943154 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.358670847 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.359023187 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.358339864 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.358068199 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.359855925 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.36103402 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.359436544 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.359199362 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.358407867 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.358221447 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.359347014 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.358914921 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.360923154 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.361630004 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.35671151 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.35931554 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.359376477 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.35864803 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.356286447 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.358671414 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.358565407 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.359130165 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.359449112 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.369611398 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.356162996 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.360709329 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.360614877 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.359690032 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.358147865 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.359398731 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.361405965 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.360713452 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.368295721 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.378747895 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.36088304 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.367776398 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.377469266 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.359081394 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.363201142 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.359988003 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.357903215 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.363032301 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.367614719 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.360358368 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.360958539 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.361108738 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.360320704 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.360947253 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.368870314 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.358665972 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.359367491 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.361121631 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.363476076 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.358006096 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.361556029 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.362233901 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.361660737 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.364093386 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.360484096 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.361553678 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.362725853 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.360741212 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.3619629 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.362295288 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.363656785 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.369103085 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.368694223 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.362462471 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.365457842 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.361647647 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.365419745 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.362764148 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.361614883 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.361440423 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.376014715 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.371040237 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.371218538 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.365552399 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.362009032 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.369471824 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.363157609 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.36743904 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.362233341 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.363683413 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.363406746 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.362100309 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.36073171 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.36420339 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.363400249 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.364375705 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.364295393 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.366395419 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.363972567 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.362996357 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.363577644 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.363553224 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.362752505 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.363852137 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.364085085 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.367556287 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.365199855 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.363563932 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.362970268 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.373302086 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.381348208 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.365742137 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.363972046 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.365129784 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.364079009 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.365429567 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.363822999 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.366980699 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.370958254 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.366691005 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.374354488 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.365209683 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.375434683 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.364589104 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.367220452 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.372662521 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.36194851 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.362694286 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.364904847 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.364131077 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.372745503 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.382619519 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.364223428 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.369491462 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.365205222 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.365824403 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.365149063 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.364351961 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.365607457 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.364887249 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.374564478 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.387047471 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.368869062 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.367521294 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.362294904 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.365212282 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.364306008 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.36474055 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.371580561 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.365836728 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.367132583 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.365274461 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.367154304 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.365483156 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.366483403 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.366334478 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.362095264 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.365675542 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.375442096 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.385538615 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.370981785 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.366378648 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.377833397 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.367482058 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.376393587 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.385547989 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.368125901 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.365976021 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.36599241 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.369521608 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.366634887 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.369423246 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.367382212 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.368666904 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.371026545 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.367143696 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.370878717 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.368688911 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.366858502 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.367971601 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.377810159 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.38997989 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.369136732 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.370693505 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.364454883 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.369574426 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.37166448 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.368689393 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.366999694 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.370542772 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.377789476 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.374561857 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.370395236 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.36772636 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.369376749 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.367692515 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.368881937 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.367414346 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.36741027 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.36835174 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.370234724 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.369183005 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.37482952 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.367916704 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.368563561 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.370679013 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.369924349 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.380993045 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.36802492 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.371561418 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.36881224 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.367724406 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.369600179 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.368951135 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.369544121 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.37094856 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.369062504 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.371075165 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.376341673 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.376242877 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.372730123 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.369458009 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.369653221 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.370462958 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.372363 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.369618147 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.369286239 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.369274174 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.371227509 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.370251501 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.373050729 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.368907228 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.369522489 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.371025238 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.370047363 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.373159856 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.377854083 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.370749642 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.367748285 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.370593423 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.370326371 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.369983492 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.371719653 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.382370892 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.374684356 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.380866446 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.379965055 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.374966109 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.371720597 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.374494043 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.379142404 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.369446665 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.373468807 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.370560318 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.373853211 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.371531489 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.37464496 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.371142773 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.380731914 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.372341138 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.372096475 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.382294972 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.395312401 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.371138245 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.373266265 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.376373676 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.371861912 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.368383265 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.371789434 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.371579291 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.381573859 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.392871505 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.371550245 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.374493076 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.370680121 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.373502937 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.376955092 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.371340103 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.373116933 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.369938997 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.372611411 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.372712292 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.371931947 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.369356891 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.372521508 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.373940598 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.375303449 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.38021363 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.370715728 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.374800404 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.374221082 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.374245569 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.374235943 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.372195543 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.370304221 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.370261727 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.374128743 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.374138521 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.375142779 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.377299332 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.374167749 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.375003292 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.373872188 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.374881736 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.377164122 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.384093011 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.381079725 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.371090473 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.373891747 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.374842601 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.378465628 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.375111007 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.374677155 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.375169799 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.377431563 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.373860503 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.374122023 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.374256139 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.377497703 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.392960052 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.395733917 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.376132869 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.375481953 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.380950533 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.37697813 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.370643669 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.374124901 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.378115973 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.377661129 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.381469353 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.375702764 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.382143006 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.39312784 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.37645526 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.378017789 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.378414442 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.38329272 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.37860397 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.375618442 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.375393369 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.380365298 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.393451888 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.375537319 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.386047289 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.406826213 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.394842113 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.377365122 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.375218537 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.375443025 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.375790359 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.379599666 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.375761941 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.375261237 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.375642511 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.375931928 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.377904944 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.382365101 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.377356461 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.375402803 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.375312068 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.376610866 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.379551413 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.373205146 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.376376314 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.376361659 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.37637775 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.376900208 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.377369568 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.37772749 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.391535906 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.388591277 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.376262867 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.376836354 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.374439425 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.381991237 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.380461834 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.388906181 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.384981382 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.377829334 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.377469534 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.379673878 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.377301246 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.375280581 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.378742507 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.378350747 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.376802938 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.375038197 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.39231298 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.386611446 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.384542272 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.379227104 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.378371997 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.378730281 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.381078402 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.378495011 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.379003963 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.381203955 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.379320833 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.382514342 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.378173112 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.377412661 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.381290387 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.38490405 seconds)
  done (took 815.522858505 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.376529899 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.376332783 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.37604217 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.376251527 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.376589757 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.376080281 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.376193893 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.376446339 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.376062873 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.375941991 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.376057663 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.376076209 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.376289161 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.377606178 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.376018371 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.376109308 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.376372574 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.37581908 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.377018686 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.376399478 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.376535114 seconds)
  done (took 30.2157536 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.378824756 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.376294547 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.376496914 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.379270265 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.376470123 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.379907103 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.377061604 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.379174882 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.379538636 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.376945663 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.378988647 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.378789463 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.376246172 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.376589266 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.376529569 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.379550076 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.378717103 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.37718719 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.37994215 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.377561783 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.379925811 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.377328272 seconds)
  done (took 31.631275764 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.381560028 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.380872569 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.38058932 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.377621953 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.380050051 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.378908044 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.380250026 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.381914742 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.381058624 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.382892096 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.380435232 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.382970926 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.388220968 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.386680586 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.384470125 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.381680154 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.525074394 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.382060909 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.381969468 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.38094896 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.378465508 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.38850398 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.378595058 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.379077877 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.380428506 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.38145826 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.38259844 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.381853645 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.382243604 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.383994746 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.386089428 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.380900605 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.382019848 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.383819523 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.381678401 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.383508607 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.386078012 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.382409776 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.380001296 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.381940528 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.392724144 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.403659706 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.383157606 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.391339537 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.382675927 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.382142081 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.386590877 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.390827787 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.381626729 seconds)
  done (took 69.236493458 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.383058102 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.382604699 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.381110889 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.382331538 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.382664419 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.382687307 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.382819483 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.383936927 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.380779405 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.380880238 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.383539198 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.381347444 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.38079092 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.382969997 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.38441144 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.380675762 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.380623647 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.381153478 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.380986399 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.380998045 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.381868015 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.384571542 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.384312138 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.382061976 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.383877582 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.381976719 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.381947228 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.383774532 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.381955168 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.381782514 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.384762293 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.384556721 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.385416204 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.383612274 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.381738507 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.38488074 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.385347283 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.382677673 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.384811301 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.382877372 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.385208531 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.385260872 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.385506318 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.385456005 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.383593688 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.382184378 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.382874221 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.382299456 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.382943819 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.38559417 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.385224466 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.383798144 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.385346095 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.383119759 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.385277862 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.38562982 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.382209406 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.383339239 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.385424961 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.383635541 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.383237282 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.385737069 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.383556698 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.385764712 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.386283356 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.383485766 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.384474315 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.386325817 seconds)
  done (took 95.391655014 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.386219689 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.387389808 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.386489989 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.386526671 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.387732824 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.387192946 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.387441829 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.388098265 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.387080112 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.386568975 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.386586233 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.387180104 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.387704389 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.388158653 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.38705783 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.387279824 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.387661917 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.386930747 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.386589943 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.387015241 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.386945785 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.387836672 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.386791814 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.387264974 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.388149038 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.387648335 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.388182656 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.387974424 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.388580743 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.388260658 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.389200827 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.388681721 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.388702178 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.388893654 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.389120101 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.38760511 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.388872519 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.388166037 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.389098675 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.38879154 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.388686552 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.389234076 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.389017352 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.388795713 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.388471328 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.38954693 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.389069525 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.390795677 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.388811852 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.389769113 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.389045743 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.389095315 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.389215537 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.389188209 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.388715893 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.389838293 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.389457756 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.38959508 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.38987601 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.389730114 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.389620307 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.389433995 seconds)
  done (took 87.394837502 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.389329004 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.387630509 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.386681465 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.386844431 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.388807798 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.38647369 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.390158501 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.389631415 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.389462244 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.389618908 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.389620389 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.38652891 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.387565919 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.389931942 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.387661415 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.387649181 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.386755167 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.387838444 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.39005899 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.387750511 seconds)
  done (took 29.089587075 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.38762122 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.390784143 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.387707413 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.387523858 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.389774061 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.38746326 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.390016129 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.390988061 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.387799733 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.391002564 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.390780363 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.391039157 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.387609934 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.388382741 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.391175987 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.38939848 seconds)
  done (took 23.553157674 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.390062794 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.391776173 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.391389724 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.392478796 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.388507833 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.389263633 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.391331324 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.388315978 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.389117624 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.392218568 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.391740853 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.392484422 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.391612498 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.392745324 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.389540893 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.391501661 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.389297107 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.389084258 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.39255873 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.392552691 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.39060126 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.389815654 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.392327662 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.391217826 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.38894604 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.391314954 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.38981971 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.3900196 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.389909059 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.392638251 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.390103009 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.390366938 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.389201112 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.389964418 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.393060103 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.390104516 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.392631873 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.393002625 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.392390632 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.39217744 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.392727368 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.390063716 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.393089196 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.392317008 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.39107101 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.394154751 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.39083358 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.391232819 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.390772784 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.390161629 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.392840023 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.39342845 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.392862827 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.393348135 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.393785214 seconds)
  done (took 77.846305732 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.39329188 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.393387218 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.390239089 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.393586413 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.394278691 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.3919294 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.393681761 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.390792268 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.391729037 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.393319448 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.39214407 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.39412619 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.391766072 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.394533436 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.392927458 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.394488785 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.391427399 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.392763164 seconds)
  done (took 26.397740733 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.392865907 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.392295488 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.395203303 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.392349992 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.392562342 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.3951705 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.392593327 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.394883643 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.395298199 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.393099502 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.3928641 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.3954377 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.395008462 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.395317384 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.393579722 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.392814704 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.395051227 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.396521506 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.392727558 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.392326782 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.395927032 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.395845256 seconds)
  done (took 31.998458476 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.396231703 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.396181556 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.413630522 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.439639432 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.426594208 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.395131586 seconds)
  done (took 9.797145197 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.394843195 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.395182006 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.393646669 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.396222913 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.395948655 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.39430082 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.393582793 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.393499943 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.396208438 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.393809281 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.393793176 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.396413151 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.396859711 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.392966003 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.396456773 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.396798786 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.393575368 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.394527786 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.394955594 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.397896259 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.393855934 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.397286483 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.3947003 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.394870585 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.394074544 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.393991156 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.396745275 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.395893408 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.394728375 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.397595364 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.397362346 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.395289163 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.397006962 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.394779529 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.398990202 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.398334802 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.395349881 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.398255861 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.397992553 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.395515575 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.398144136 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.398137515 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.398171605 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.396211495 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.398339933 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.395710611 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.395773904 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.395709439 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.395466338 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.397950857 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.398733413 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.396230736 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.397927126 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.399064242 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.398918856 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.398513597 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.396964713 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.396448189 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.399314647 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.397210864 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.395895619 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.399146067 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.395288151 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.397231147 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.398787952 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.396223117 seconds)
  done (took 93.486887231 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.396434856 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.396147522 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.396228143 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.397679374 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.396576292 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.396322372 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.396400031 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.39666404 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.396791007 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.396778965 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.399407937 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.396682256 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.396995907 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.397502308 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.397365117 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.397447677 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.397551597 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.397522295 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.396809051 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.400725811 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.397029406 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.397580812 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.398089889 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.397984988 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.397880481 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.40027543 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.397798364 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.398680907 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.398257202 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.398123275 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.397203721 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.397826736 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.397956113 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.398176044 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.398565518 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.399078955 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.39770286 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.398625294 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.398701722 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.401140881 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.398445568 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.401787815 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.398650325 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.399208186 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.399146593 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.398270399 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.398520143 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.399628865 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.399072495 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.398947981 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.40007426 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.399457661 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.400198697 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.39852693 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.399889828 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.399298612 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.400051213 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.399559612 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.399664644 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.403194676 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.399377288 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.398832462 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.402624972 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.39936948 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.399743619 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.399129265 seconds)
  done (took 93.636301053 seconds)
done (took 1900.580431755 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.485085806 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.396350405 seconds)
  done (took 14.217443451 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.562824409 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.517478126 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.400576818 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.401957499 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.400767974 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.411266697 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.403756849 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.400365227 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.400919064 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.400510706 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.402096219 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.589389994 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.418684777 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.401179329 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.401644939 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.493216949 seconds)
  done (took 44.343032496 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.428614209 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.4074531 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.522968908 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.420874416 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.429485227 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.600224656 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.46390711 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.406232923 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.585160536 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.444742548 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.013468899 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.428342667 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.405051636 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.549278907 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.426067532 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.599374188 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.661930638 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.0179433 seconds)
  done (took 32.147003176 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.882789576 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.403224266 seconds)
  done (took 9.621724234 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.404802608 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.425952448 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.424248364 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.400268578 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.445323195 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.409571953 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.468903688 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.466251482 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.403594034 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.405396073 seconds)
  done (took 65.59140922 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.427159802 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.405576563 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.40405609 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.402976208 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.396914445 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.412243274 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.405046478 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.406296087 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.219917725 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.541827131 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.427561116 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.410118495 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.405154027 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.407765388 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.405189591 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.441836107 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.533154694 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.403538691 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.400004848 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.409507691 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.405312868 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.497308945 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.448619615 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.404701009 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.538721789 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.249560434 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.409718151 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.410723065 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.544405239 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.400196338 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.405426737 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.404598883 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.407555184 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.990406001 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.883531107 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.41579987 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.433057338 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.41516307 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.402977242 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.554227916 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.406619876 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.412121398 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.398569609 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.879082342 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.568050011 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.528429639 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.759040461 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.409965639 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.408749116 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.469589337 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.407947357 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.408759598 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.438926161 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.219950027 seconds)
  done (took 115.943558843 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.430937231 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.896115414 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.571057887 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.422020702 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.212114835 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.123855485 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.400484193 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.708644728 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.468788935 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.401511826 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.694955497 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.929661096 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.408997009 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.40432125 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.46115003 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.481508318 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.40143183 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.228561379 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.402741275 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.407044197 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.836623272 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.417824389 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.420434226 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.567152748 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.442028759 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.878389552 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.970326256 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.903344205 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.406620903 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.40117938 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.889119727 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.409109344 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.451245323 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.403860343 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.687742833 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.787940636 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.765134113 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.410688287 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.430764471 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.405384906 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.432663681 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.894370729 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.776968604 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.404164389 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.404344345 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.912138173 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.403280383 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.403391285 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.410250274 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.605196998 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.348145967 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.402273994 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.977181623 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.403927212 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.644914566 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.460954977 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.449207096 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.915813041 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.403291833 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.539321767 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.423070643 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.404449782 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.408811295 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.408812907 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.404747815 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.781343576 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.541914307 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.407918279 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.783184364 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.886103988 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.405583155 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.948771787 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.347681288 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.406630662 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.480184441 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.403020679 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.018830922 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.925857459 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.425999754 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.403048315 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.766351237 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.409674762 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.694214452 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.420120049 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.419990852 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.846695801 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.429314381 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.470683391 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.404382224 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.410867858 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.035264629 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.405025263 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.687359808 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.437037752 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.405577221 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.403699643 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.412835019 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.405084544 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.408201254 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.411346183 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.951869244 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.407093526 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.544501251 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.427186331 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.407230564 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.408969968 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.406675226 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.405061936 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.625261608 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.996723092 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.407577236 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.40464201 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.406604205 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.431530912 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.547321262 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.409726601 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.741601606 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.409308819 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.408785733 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.415258193 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.17238226 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.455992588 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.406847547 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.412333242 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.250380482 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.628363913 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.431909989 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.408404837 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.408415551 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.422721355 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.818376176 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.408503547 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.439260126 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.411227743 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.132228072 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.419453091 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.431994617 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.019547864 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.408908486 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.423890511 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.413187605 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.408999932 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.722843795 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.689244144 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.46297758 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.410870083 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.407658938 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.106382925 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.422875395 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.558587809 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.427337239 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.414374824 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.608495057 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.770780839 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.408877823 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.970540683 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.408467597 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.624531159 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.409793802 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.736280217 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.909354826 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.410094668 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.411655873 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.125648917 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.066615902 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.200050435 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.409325941 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.693077192 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.424767348 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.868995386 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.410145116 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.409743853 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.859759681 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.410408088 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.413456462 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.41049904 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.41004499 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.482244052 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.588124918 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.889132488 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.417191702 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.888843556 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.477962637 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.411605354 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.417964034 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.41483716 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.762791514 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.466653232 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.414904507 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.456026709 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.412384413 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.416922817 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.896030661 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.410549505 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.4128886 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.567240357 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.067442611 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.41448132 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.412795422 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.15149937 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.626825354 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.976735676 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.424482672 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.735153433 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.413791807 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.453143398 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.154315641 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.482795299 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.943832266 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.415904499 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.412429887 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.03275746 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.411691844 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.757842898 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.411554738 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.413300586 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.968907668 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.412094603 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.417126285 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.831600986 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.421919069 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.663180633 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.412969869 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.449779178 seconds)
  done (took 1129.576586135 seconds)
done (took 1412.775843131 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.414671694 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.417270282 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.401223328 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.423052012 seconds)
  done (took 27.007861535 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.428505278 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.42617152 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.427236237 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.42597072 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.427601733 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.426803443 seconds)
  done (took 9.92067471 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.483598664 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.422130858 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.423933991 seconds)
  done (took 19.688541477 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.656103765 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.76256683 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.81836056 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.731862872 seconds)
  done (took 11.328107633 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.427840404 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.426651866 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.429202278 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.428580735 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.42930589 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.430078405 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.428631034 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.429107161 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.430787923 seconds)
  done (took 14.218009269 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.479209946 seconds)
done (took 88.993197702 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.11288007 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.366902821 seconds)
    (3/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.438402572 seconds)
    (4/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.523665095 seconds)
    (5/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.419865004 seconds)
    (6/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.300573582 seconds)
    (7/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.405448161 seconds)
    (8/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.230571162 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.68011469 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.148719295 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.460420812 seconds)
    (12/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.734195353 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.448917333 seconds)
    (14/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.035221859 seconds)
    (15/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.426158562 seconds)
    (16/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.411154483 seconds)
    (17/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.659716115 seconds)
    (18/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.341456601 seconds)
    (19/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.730744342 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.530074569 seconds)
    (21/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.823220878 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.403988484 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.125053182 seconds)
    (24/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.421466455 seconds)
    (25/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.43310006 seconds)
    (26/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.287383072 seconds)
    (27/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.403071986 seconds)
    (28/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.723775403 seconds)
    (29/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.41407327 seconds)
    (30/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.828593904 seconds)
    (31/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.426113143 seconds)
    (32/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.409791486 seconds)
    (33/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.806920732 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.343994248 seconds)
    (35/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.848124554 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.516855293 seconds)
    (37/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.430008757 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.827516945 seconds)
    (39/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.535356636 seconds)
    (40/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.441825848 seconds)
    (41/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.304130356 seconds)
    (42/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.700165619 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.801642526 seconds)
    (44/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.578856241 seconds)
    (45/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.541040981 seconds)
    (46/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.843533955 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.032758232 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.274533178 seconds)
    (49/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.565585387 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.524917042 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.517480419 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.695454863 seconds)
    (53/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.918002385 seconds)
    (54/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.900518275 seconds)
    (55/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.434002716 seconds)
    (56/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.435079442 seconds)
    (57/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.975552405 seconds)
    (58/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.45276205 seconds)
    (59/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.525916237 seconds)
    (60/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.437573226 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.474699138 seconds)
    (62/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.402701938 seconds)
    (63/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.53010855 seconds)
    (64/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.402445863 seconds)
    (65/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.588049772 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.06726393 seconds)
    (67/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.103110651 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.771777875 seconds)
    (69/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.304658922 seconds)
    (70/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.918859797 seconds)
    (71/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.268717134 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.464316117 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.489061426 seconds)
    (74/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.665646753 seconds)
    (75/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.246018098 seconds)
    (76/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.165947477 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.437986759 seconds)
    (78/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.409346807 seconds)
    (79/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.420370375 seconds)
    (80/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.282923473 seconds)
    (81/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.619405328 seconds)
    (82/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.605666687 seconds)
    (83/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.426363498 seconds)
    (84/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.415827534 seconds)
    (85/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.555424511 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.934980586 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.464966694 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 5.640724836 seconds)
    (89/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.442261989 seconds)
    (90/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.654046441 seconds)
    (91/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.841318419 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.495623174 seconds)
    (93/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.604663925 seconds)
    (94/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.203630885 seconds)
    (95/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.244376399 seconds)
    (96/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.720560004 seconds)
    (97/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.648590273 seconds)
    (98/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.798935331 seconds)
    (99/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.805808942 seconds)
    (100/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.420162049 seconds)
    (101/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.409637753 seconds)
    (102/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.583893691 seconds)
    (103/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.442991098 seconds)
    (104/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.058881289 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.836995385 seconds)
    (106/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.71893784 seconds)
    (107/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.415396757 seconds)
    (108/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.377147162 seconds)
    (109/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.059992039 seconds)
    (110/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.734963482 seconds)
    (111/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.718499499 seconds)
    (112/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.501943505 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.630418105 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.434440092 seconds)
    (115/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.759528245 seconds)
    (116/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.543493963 seconds)
    (117/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.475056726 seconds)
    (118/309) benchmarking ("sort", Int8, false)...
    done (took 4.512295918 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.019814641 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.921760719 seconds)
    (121/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.632393241 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.433182582 seconds)
    (123/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.401169227 seconds)
    (124/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.57547699 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.337941628 seconds)
    (126/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.702107672 seconds)
    (127/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.46173094 seconds)
    (128/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.500544151 seconds)
    (129/309) benchmarking ("sort", Float64, false)...
    done (took 5.699165125 seconds)
    (130/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.195654722 seconds)
    (131/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.140509928 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.080163704 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.827746981 seconds)
    (134/309) benchmarking ("sort", Bool, false)...
    done (took 1.940213753 seconds)
    (135/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.440843608 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.273165452 seconds)
    (137/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.844286385 seconds)
    (138/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.695988365 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.52941972 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.43567536 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.174856657 seconds)
    (142/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.998313163 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.672734825 seconds)
    (144/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.009147914 seconds)
    (145/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.417355769 seconds)
    (146/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.052100283 seconds)
    (147/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.442805677 seconds)
    (148/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.51817926 seconds)
    (149/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.418911615 seconds)
    (150/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.215593063 seconds)
    (151/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.247464657 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.822136837 seconds)
    (153/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.205639351 seconds)
    (154/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.828589358 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.442978076 seconds)
    (156/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.653850546 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.193658824 seconds)
    (158/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.443488333 seconds)
    (159/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.794933747 seconds)
    (160/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.463898979 seconds)
    (161/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.418852682 seconds)
    (162/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.437132973 seconds)
    (163/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.478354634 seconds)
    (164/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.401938988 seconds)
    (165/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.443753701 seconds)
    (166/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.017542348 seconds)
    (167/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.427106909 seconds)
    (168/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.442701208 seconds)
    (169/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.439605152 seconds)
    (170/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.716620063 seconds)
    (171/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.412321087 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.403189811 seconds)
    (173/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.500400481 seconds)
    (174/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.437791243 seconds)
    (175/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.731774497 seconds)
    (176/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.962789139 seconds)
    (177/309) benchmarking ("sort", BigInt, false)...
    done (took 6.420537413 seconds)
    (178/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.417756795 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.972102384 seconds)
    (180/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.502978663 seconds)
    (181/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.773139874 seconds)
    (182/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.786351574 seconds)
    (183/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.482264222 seconds)
    (184/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.005348108 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.7764053 seconds)
    (186/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.791033942 seconds)
    (187/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.046302704 seconds)
    (188/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.538930595 seconds)
    (189/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.927692353 seconds)
    (190/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.431782566 seconds)
    (191/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.628552625 seconds)
    (192/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.442000428 seconds)
    (193/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.887318568 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.476800804 seconds)
    (195/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.24058666 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.828329492 seconds)
    (197/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.075486789 seconds)
    (198/309) benchmarking ("sort", Float32, false)...
    done (took 5.425018099 seconds)
    (199/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.400011814 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.544954571 seconds)
    (201/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.603712157 seconds)
    (202/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.424994823 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.343321013 seconds)
    (204/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.477746524 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.488024282 seconds)
    (206/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.440492166 seconds)
    (207/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.499112855 seconds)
    (208/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.440161156 seconds)
    (209/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.035594454 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.475658123 seconds)
    (211/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.496502827 seconds)
    (212/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.074891344 seconds)
    (213/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.45630671 seconds)
    (214/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.522319269 seconds)
    (215/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.415721899 seconds)
    (216/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.500989014 seconds)
    (217/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.40010215 seconds)
    (218/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.712695707 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.617280605 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.016583462 seconds)
    (221/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.479810841 seconds)
    (222/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.000228135 seconds)
    (223/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.403814474 seconds)
    (224/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.786963319 seconds)
    (225/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.138497109 seconds)
    (226/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.513227562 seconds)
    (227/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.438401338 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.461337088 seconds)
    (229/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.416099864 seconds)
    (230/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.427880724 seconds)
    (231/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.407142364 seconds)
    (232/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.866737645 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.460712534 seconds)
    (234/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.517974269 seconds)
    (235/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.521435538 seconds)
    (236/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.796765685 seconds)
    (237/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.330081129 seconds)
    (238/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.462755786 seconds)
    (239/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.419539037 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.434781354 seconds)
    (241/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.730927909 seconds)
    (242/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.543376006 seconds)
    (243/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.613958542 seconds)
    (244/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.315782847 seconds)
    (245/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.729239505 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.334401237 seconds)
    (247/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.573988374 seconds)
    (248/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.926800147 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.930733264 seconds)
    (250/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.50526648 seconds)
    (251/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.328353606 seconds)
    (252/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.997996336 seconds)
    (253/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.4383857 seconds)
    (254/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.083658669 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.389680363 seconds)
    (256/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.418675133 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.519056828 seconds)
    (258/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.417052631 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.628879512 seconds)
    (260/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.508264287 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.096058567 seconds)
    (262/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.830985703 seconds)
    (263/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.44413187 seconds)
    (264/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.861200991 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.463503859 seconds)
    (266/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.420446593 seconds)
    (267/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.019234888 seconds)
    (268/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.713313754 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.525832471 seconds)
    (270/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.986045254 seconds)
    (271/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.458849215 seconds)
    (272/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.429271168 seconds)
    (273/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.417874463 seconds)
    (274/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.802785333 seconds)
    (275/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.784909861 seconds)
    (276/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.647846417 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.787534901 seconds)
    (278/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.313344707 seconds)
    (279/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.420850889 seconds)
    (280/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.020965085 seconds)
    (281/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.43481593 seconds)
    (282/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.405004484 seconds)
    (283/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.499319402 seconds)
    (284/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.803370979 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.519364574 seconds)
    (286/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.442728436 seconds)
    (287/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.793674156 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.501730376 seconds)
    (289/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.753077644 seconds)
    (290/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.442722449 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.449716905 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.536747152 seconds)
    (293/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.882762183 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.907193822 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.575586592 seconds)
    (296/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.517360504 seconds)
    (297/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.418730177 seconds)
    (298/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.50839686 seconds)
    (299/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.420773885 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.461090999 seconds)
    (301/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.555567472 seconds)
    (302/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.417794096 seconds)
    (303/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.439940027 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.441345884 seconds)
    (305/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.217495519 seconds)
    (306/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.446782783 seconds)
    (307/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.205367291 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.290295793 seconds)
    (309/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.467459859 seconds)
  done (took 954.335542119 seconds)
done (took 955.695843861 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.449888623 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.443164995 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.42777942 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.449164043 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.539645616 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.45588569 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.437609769 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.429736473 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.475928404 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.4775527 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.42638701 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.4549353 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.429761873 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.42896067 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.428521161 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.443036424 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.476218434 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.432872322 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.446227685 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.437817681 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.445454745 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.427284161 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.477374198 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.455660371 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.432184485 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.432026097 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.432193607 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.448893936 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.541662602 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.433195461 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.43318306 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.441094835 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.443465466 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.428627522 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.425351224 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.450334297 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.441035144 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.439368337 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.433175297 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.462178289 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.897556743 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.432088761 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.431585469 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.430905969 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.431130257 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.434913928 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.430793908 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.43739905 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.443624586 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.44505137 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.907794843 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.448362215 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.433928446 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.431770871 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.441575013 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.431787475 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.433577261 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.446364232 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.45068847 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.447005187 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.439499068 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.436780784 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.433309048 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.447339897 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.439574685 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.953906343 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.430052554 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.435904655 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.906340962 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.439757274 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.957722324 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.443975885 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.432863873 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.446250302 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.463394708 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.450687729 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.427064201 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.430118126 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.439649625 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.430729293 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.442215631 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.445066266 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.438310985 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.432526255 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.44658932 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.460746969 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.443659938 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.433836715 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.442401293 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.452517945 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.440866757 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.444523791 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.437173445 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.429148486 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.442681591 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.436615974 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.436353238 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.437001818 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.437318087 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.443782466 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.907782388 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.453941465 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.429747053 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.430527515 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.432876401 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.447541656 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.907986706 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.437244617 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.455518267 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.48143486 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.435217703 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.46928637 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.439702845 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.449817485 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.442792552 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.437194316 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.429121863 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.475583327 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.921922851 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.452480957 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.43615035 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.432741516 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.451028402 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.436467483 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.430958684 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.456361901 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.436947375 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.448750356 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.555746249 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.446209025 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.46734336 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.433508636 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.438770754 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.462667762 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.450745402 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.468194187 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.438810844 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.451539113 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.451464872 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.43206384 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.446410473 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.445567644 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.436425909 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.442629482 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.429865054 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.464353647 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.449877013 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.449488885 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.457361483 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.55685079 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.43460382 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.44894637 seconds)
done (took 240.901832174 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.496198068 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.430460847 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.534437506 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.432945959 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.533355363 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.533095859 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.429854541 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.429518991 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.4298402 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.809224153 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.431201714 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.430275687 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.426306351 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.430567203 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.515768322 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.433743543 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.430212882 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.772243225 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.434404995 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.504797121 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.432825988 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.432051671 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.434266326 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.815629181 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.425517999 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.431617534 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.505565707 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.434104654 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.779096122 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.428088109 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.431800235 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.779475989 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.523872316 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.450841981 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.443582602 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.441179488 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.534998271 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.450945867 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.514488662 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.515190259 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.536052942 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.47335514 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.428860665 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.432533016 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.436735151 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.436789677 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.432600195 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.462776894 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.431586516 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.433626081 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.775202027 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.444746417 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.432409325 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.433480408 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.43336454 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.465276403 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.433219503 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.436131594 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.525776941 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.436988695 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.498159774 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.81699433 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.813484494 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.43546188 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.433118996 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.433571994 seconds)
  done (took 155.19284175 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.502825151 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.509156199 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.549630927 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.438366391 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.486242427 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.554743704 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.438531649 seconds)
  done (took 11.847243745 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.443201071 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.437856025 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.486681821 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.487585828 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.436524047 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.5863491 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.437539458 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.449023158 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.434791414 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.490795283 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.438402292 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.438972648 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.444545863 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.435442704 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.487170747 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.449906917 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.553063618 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.439619639 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.43874942 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.594137179 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.434999851 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.445544617 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.49034611 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.449608548 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.439544794 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.444906745 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.012609831 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.438776112 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.436230954 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.43860036 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.436444827 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.475251238 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.439519058 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.433191364 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.435957625 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.555489504 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.438585502 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.436553753 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.438674622 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.433149344 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.439402202 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.439378374 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.440048964 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.436966814 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.439183522 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.462605781 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.439914989 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.439072916 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.439855211 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.440276615 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.490103853 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.439941809 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.437277499 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.43703944 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.495574613 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.446976509 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.440570829 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.437763395 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.439762584 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.437922167 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.597851512 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.488565269 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.440944755 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.487836564 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.44114009 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.441231319 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.44049293 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.440377244 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.49506339 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.441326033 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.489932106 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.437942743 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.595618934 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.464607253 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.442188789 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.443478885 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.444024089 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.441423494 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.434898436 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.447368445 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.439671998 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.442875691 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.448156723 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.438957747 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.439202126 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.544257039 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.550432611 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.438725914 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.454725632 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.44879984 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.438361068 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.494923393 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.441201159 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.439254297 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.494129799 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.556944911 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.495140839 seconds)
  done (took 163.616836162 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.447161052 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.44976433 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.443449766 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.458547183 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.441425717 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.4421675 seconds)
  done (took 10.055451952 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.444585316 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.443628297 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.442056042 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.441605329 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.442021713 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.442722639 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.443681264 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.445584233 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.447410436 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.443007271 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.893776477 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.445610038 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.444103765 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.443748375 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.444175625 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.442723075 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.443415578 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.440899267 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.442829027 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.443348689 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.547515942 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.443761414 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.442991806 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.445358658 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.448040477 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.444693702 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.452300398 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.444204858 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.444861318 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.453798487 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.446615736 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.444740475 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.44609167 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.451842242 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.447861663 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.446247416 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.448448584 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.446310121 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.440979958 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.444837713 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.445820041 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.443986859 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.444411119 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.446172645 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.446577624 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.450266944 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.449490361 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.452984751 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.44683998 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.449234374 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.448093262 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.444014639 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.445742104 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.446484053 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.45051422 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.449458034 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.449311036 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.445476349 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.44517637 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.446394812 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.444883444 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.445963713 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.446852639 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.449443468 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.442725311 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.447338552 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.446934115 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.449712584 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.446406761 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.446503338 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.447555457 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.443309342 seconds)
  done (took 107.032075925 seconds)
done (took 449.108552542 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.586958558 seconds)
  done (took 7.962607122 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.645817879 seconds)
  done (took 8.022682585 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.925116531 seconds)
  done (took 22.310098962 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.447761577 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.471115564 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.460486636 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.445006976 seconds)
  done (took 27.20084979 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.81947263 seconds)
  done (took 8.196481679 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.438748651 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.438635744 seconds)
  done (took 14.255305715 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.670144274 seconds)
  done (took 8.047509895 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.006334479 seconds)
  done (took 8.391999843 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.457419088 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.439227368 seconds)
  done (took 14.544952986 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.439036543 seconds)
  done (took 7.816310864 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.821483605 seconds)
  done (took 9.199021681 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.451218611 seconds)
  done (took 7.827794402 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.489732185 seconds)
  done (took 7.866726999 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.377597878 seconds)
  done (took 9.754462449 seconds)
done (took 162.772707842 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.439392265 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.442377901 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.44292912 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.441930161 seconds)
  done (took 27.143521714 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.479236556 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.479169587 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.480797968 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.489729424 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.48244386 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.479183419 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.471823455 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.47212583 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.489875339 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.483342669 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.48140887 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.482066514 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.479993672 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.472256737 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.482003511 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.482275388 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.490485433 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.48176181 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.47145909 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.483274141 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.448331804 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.491256516 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.483632021 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.447563143 seconds)
  done (took 36.863555885 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.644849244 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.518572166 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.600919101 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.501847764 seconds)
  done (took 7.643481457 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.498590369 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.500292454 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.512038935 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.55118604 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.577166178 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.510438245 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.473885231 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.468583819 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.455443738 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.501145473 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.576631804 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.517573949 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.583790207 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.448632846 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.72914372 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.448215437 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.448471815 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.499802576 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.551616023 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.56510755 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.448536538 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.500496005 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.502922246 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.517873486 seconds)
  done (took 37.76637761 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.447738967 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.455597353 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.454390832 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.447672047 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.447098336 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.448445797 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.453264009 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.448657105 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.468635695 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.449675877 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.44683449 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.447439808 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.447082711 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.448179466 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.44749935 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.460107707 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.461810257 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.448389821 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.451280893 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.455643167 seconds)
  done (took 30.415656896 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.442285101 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.296781666 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.795205783 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.699236803 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.443823618 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.445384782 seconds)
  done (took 28.50328532 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.521253736 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.652726926 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.450366579 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.819908459 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.902812737 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.454056125 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.450043577 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.687747982 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.010071855 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.014647089 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.511628772 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.51841271 seconds)
  done (took 21.374965957 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.457000697 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.448282894 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.457606307 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.463615885 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.507468639 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.454782198 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.458127833 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.443386502 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.509243028 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.511188002 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.455228657 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.508284836 seconds)
  done (took 39.05771676 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.532883464 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.489441931 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.390782259 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.270934227 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.824973067 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.656402288 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.241771095 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.924824085 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.45089692 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.718727337 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.447605132 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.538284876 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.699721118 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.459540879 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.448881673 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.492135094 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.670972134 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966780095 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.446425249 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.556668755 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.474449001 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.454372544 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.729991651 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.479626239 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.657317167 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.580916406 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.707949768 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.446198773 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.736526002 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.461660671 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.456949424 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.446157072 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.720698466 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.127860766 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.542188946 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.457770412 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.240656975 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.159252009 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.432369696 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.625494817 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.461003611 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.45184601 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.457785882 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.446615632 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.382054567 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.454794791 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.940294306 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.455892197 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.160036808 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.44734891 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.458076661 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.542654106 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.451753103 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.262908929 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.554872347 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.449494808 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.445109235 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.454878871 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021163265 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.089723954 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.453884788 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.385596033 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.557943539 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.643462327 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.138503253 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.552190028 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.452229985 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.451643095 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.383313466 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.64046829 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.470876869 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.596521142 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.469645818 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.099169662 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.191737963 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.456423545 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.383937095 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028935856 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.44796848 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.388006067 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.677756542 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.450070122 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.384450716 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.395812053 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.382782646 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.17653832 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.459367298 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.866513369 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459334537 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.926170469 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.462804141 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.469431587 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.473288231 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.673013774 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.336682818 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.450281275 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.459254666 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.597742752 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.471928276 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.932748017 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.386744723 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.453842188 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.704504165 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.662549391 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.463803039 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.500789667 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.676877091 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.468338421 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.46965124 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.453177567 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.464015924 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.104340357 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.464633821 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.113961219 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.471003211 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.451748686 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.223724649 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.465201766 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.555095478 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.467137416 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.707996783 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.264741217 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.452308039 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.53354592 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.4506801 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.452114248 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.66279184 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.97084077 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.451757477 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.453441535 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.458705524 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.46431877 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.45282413 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.397184811 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.464488769 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.464372068 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.45834724 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.675575885 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.452325629 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.732101538 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.387345296 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.599784661 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.541857522 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.674681432 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.705438705 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.4551314 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.710385909 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.461347841 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.4618799 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.466796324 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.471740346 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.552030237 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.475237476 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.453239966 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.710565642 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.45785725 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.457366307 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.660775359 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.45920885 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.462091018 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.459169509 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.381256166 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.102860364 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.433273541 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.461552359 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.344219162 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.467784384 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.518346469 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.459567405 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.464631406 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.323799264 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.365678993 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.461316807 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.454618769 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.681195787 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.46432837 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.573512357 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.535944376 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.676041653 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.108588945 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.470425337 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.389483042 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.166218427 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.147785494 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.455193541 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.390639479 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.454397717 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.464035386 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.465704544 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.685009487 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.112294478 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.458529419 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.585598099 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.464312383 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.466675709 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.459870897 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.45536978 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.300573844 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.141454108 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.462187365 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.470983557 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.598980474 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.469602088 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.39018576 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.459968286 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.460936697 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.456081441 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.456038041 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.489316871 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.602043367 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.000821572 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.715354087 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.2356314 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.469423619 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.68937556 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.491674158 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.456853328 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.458085358 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.461557886 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.466879002 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.468995012 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.467328825 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.681984249 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.166427564 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027733505 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.223531885 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.053739251 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.452655548 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.460120145 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.460712918 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.94261981 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.394608106 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.015469362 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.652275045 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.942831196 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.404397572 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.682998778 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.686373597 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.246537821 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.469914809 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.684784716 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.452541834 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.469202962 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.473478394 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.668793982 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.491734656 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.47214872 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.389632999 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.981977454 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.738150733 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.462070423 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.543133518 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.941932861 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.460173277 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.484205988 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.458641126 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.843454713 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.643699166 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.170470438 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.631753423 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.458450729 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.466456513 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.989905505 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.466550152 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.685093648 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.157964306 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.467135281 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.686462041 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.398134473 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.470473511 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.470718301 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.461195646 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.826946592 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.469207825 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.7135032 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.470582337 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.393998891 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.460066993 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.073136882 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.316156319 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.465842824 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.459815567 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.228999361 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.468870344 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.7579188 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.465202513 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.306916326 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.468515767 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.395511516 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.394929313 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.153887567 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.462302881 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.436294346 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965116786 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.548054481 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.581771657 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.491032577 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.309413565 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.715119478 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.475107067 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.114158685 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.6884502 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.343274172 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.485600421 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.560713218 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.462640077 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.451907868 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.461429823 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.696473707 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.390058945 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.684383798 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.446373761 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.369760498 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.461236766 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.675447414 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.461532152 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.475936356 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.714729916 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.172554769 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.464211415 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.236604876 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.485159194 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.470096208 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.38043589 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.571689074 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469865447 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.541621339 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.473151499 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.472853833 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.472814246 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.646716503 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.475667933 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.467988352 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.476168258 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.556204605 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.181042386 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.299272385 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.468640199 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.122674081 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.235719657 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.125444607 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.47746671 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.462233137 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.470221644 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.398075059 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.612350785 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.689228098 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.737003606 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.59462519 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.612521054 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.486007782 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.472416896 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.475880959 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.677989285 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.738765395 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.359062378 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.478943282 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.479054564 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.463570628 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.474709196 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.675012021 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.976920084 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039267449 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.579547076 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.465322623 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.95377354 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.741803696 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.464191738 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.465254402 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.055314074 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.478170122 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.86426288 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.471614858 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.471078248 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.616733206 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.474796642 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.144658335 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.477903862 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.626058946 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.23822313 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.712193042 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.721932407 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.945207407 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.475511748 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.123578477 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.253416223 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.730354606 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.532329095 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.475751903 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.571793521 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.612194207 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.462545936 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.468989858 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.465083911 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310242789 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.178416193 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.47883514 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.131727021 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.733422737 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.463787218 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.464571864 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.492726546 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.476477826 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.689325627 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.214608154 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.692067038 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.475765691 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.469249797 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.282504678 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.130272937 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.48111554 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.401699981 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.471221652 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.716055461 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.701734882 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.489893449 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.920523931 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.179029503 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040345346 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.437969971 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.489605272 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.473552903 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.263824371 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.132931496 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.327243264 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.992677567 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.024948695 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.474810112 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.744715257 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.472845855 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.477594602 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.747836223 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.471957225 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.467961726 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.49978203 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.124247478 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.270269255 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.474214927 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.666351511 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.408838697 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.809161599 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.198919831 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.40755936 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.477843168 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.669360107 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.471101795 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.599298871 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.480838636 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.466324973 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.497859803 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.204725404 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.745871852 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.474389102 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.469711299 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.453956198 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.503974622 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.479684137 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.763937839 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.47180278 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.160594709 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.820998856 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.723463501 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.469779048 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.458930257 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.473591615 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.469877582 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.456705024 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.666141365 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.698307098 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.043172284 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.470727957 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.483056085 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.473451238 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.685965156 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.682831812 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.48156248 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.485467888 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.477818573 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.489895463 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.377112097 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.979899269 seconds)
  done (took 1660.481909668 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.5219096 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.482649468 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.519711487 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.51314481 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.491891863 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.509723244 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.530098098 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.53625532 seconds)
  done (took 53.513316341 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.48606544 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.685640811 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.502054816 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.476907698 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.484023642 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.475928162 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.935620897 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.487577911 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.484367727 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.480807327 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.48538504 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.481036749 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.138856383 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.484374562 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.479626886 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.474642439 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.483671692 seconds)
  done (took 67.940982437 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.486655777 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.615729401 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.580112936 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.474469347 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.802362876 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.471715502 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.684598546 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.534727958 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.490221927 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.574486774 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.142680563 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.516498625 seconds)
  done (took 81.784412032 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.480321491 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.479948397 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.479961532 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.478930036 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.480261258 seconds)
  done (took 8.809122599 seconds)
done (took 2102.675764769 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.735054597 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.227661443 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.160019271 seconds)
  done (took 5.796575555 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.622856522 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.670230735 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.803497845 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.813370639 seconds)
  done (took 8.319477047 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.775657656 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.843883043 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.677774056 seconds)
  done (took 6.706972176 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.932058369 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.486104143 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.548578707 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.471648056 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.476489799 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.474573884 seconds)
  done (took 20.833488137 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.477197527 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.479859631 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.476752337 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.480071044 seconds)
  done (took 7.32354713 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.459194344 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.223719932 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.460124585 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.475519852 seconds)
  done (took 19.028468769 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.224154951 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.23734455 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.22180822 seconds)
  done (took 8.093671055 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.494997739 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.325117529 seconds)
  done (took 10.230863606 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.802801725 seconds)
  done (took 3.218511471 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.614248918 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.746840858 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.662375537 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.513323773 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.679710866 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.437193035 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.191510863 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.738832354 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.488380725 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.749348428 seconds)
  done (took 30.237672831 seconds)
done (took 133.900316775 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.365541153 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.872536533 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.684004543 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.337702527 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.707188378 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.684118098 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.744960008 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.305149847 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.011806191 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.843412032 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.386091097 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.70298641 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.922136659 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.868641599 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.922456339 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.487735825 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.703797462 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.410142589 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.035641113 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.271001907 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.744700491 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.983599728 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.216243509 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.004449986 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.709311713 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.637164805 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.561805134 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.496125173 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.210202502 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.581925794 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.639241957 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.448607333 seconds)
  done (took 196.917420544 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.479524042 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.481005631 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.480781873 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.481051855 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.482166751 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.481718145 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.481760328 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.481343386 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.480956543 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.480965012 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.481621891 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.495350075 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.496014265 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.496263625 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.482884869 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.491261931 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.481662838 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.481953683 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.482365756 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.484874195 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.481819579 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.481683584 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.481140326 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.497544855 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.484489931 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.482226029 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.486354764 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.48223144 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.48323998 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.495684786 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.483824021 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.481734582 seconds)
  done (took 208.925887599 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.496846424 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.482588437 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.481763349 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.482019343 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.482183948 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.497610139 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.484131669 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.491227567 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.487283769 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.49111843 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.495085207 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.490354583 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.483480229 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.494652491 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.485815654 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.481811298 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.482344125 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.496122007 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.486293035 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.483079374 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.488682968 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.482977599 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.497262786 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.48287384 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.484160224 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.505411598 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.491473031 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.483920898 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.500527378 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.483230829 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.501327579 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.497561347 seconds)
  done (took 209.075416566 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.687771443 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.490384097 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.491472853 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.446661077 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.492023803 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.490391777 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.4848878 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.683512955 seconds)
  done (took 15.687888165 seconds)
done (took 632.020837979 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.860733048 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.572863958 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.692090732 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.512304485 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.314024019 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.515478605 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.511638495 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.684286406 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 3.083812664 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.674283351 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.759172367 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.510357397 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.899633597 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.509518699 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.767125282 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.611740224 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.371507972 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.502696434 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.831951105 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.067988871 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.776081047 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.075730548 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.68384104 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 3.122983882 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.904433896 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.091870422 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.26328956 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.370292789 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.511066462 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.832520479 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.223978699 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.501853556 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.576475843 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.553396298 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.607817886 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.590696 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.514270664 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.553556815 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.693187467 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.831392257 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.079761751 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.868332477 seconds)
  done (took 100.902395977 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.481828881 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.48293103 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.481062246 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.481722916 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.484017358 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.482065754 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.481999695 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.481080806 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.482032102 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.482667826 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.48296062 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.48315558 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.482028018 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.485178791 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.48153804 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.481972165 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.482717226 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.48530331 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.482607807 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.481940546 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.483142772 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.483162876 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.484883661 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.482851757 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.483739439 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.483673516 seconds)
  done (took 39.976219155 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.495971214 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.731300407 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.91726918 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.503789993 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.504856782 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.499762691 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.577673806 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.496944501 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.499689795 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.498997775 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.649467589 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.498654703 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.531151355 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.947129833 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.502064234 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.496181007 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.496522932 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.496526177 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.737286627 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.506235248 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.596089918 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.500343652 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.578353911 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.5091865 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.517422479 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.496980724 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.500864093 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.99217574 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.501975853 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.652182765 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.329031836 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.578457099 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.950716695 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.93747476 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.333057258 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.500870626 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.498103467 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.656665381 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.501898377 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.496550081 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.578828509 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.500105277 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.936227046 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.141452943 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.519601906 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.497360504 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.016069701 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.658901582 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.758305235 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.510149555 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.956466243 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.504398603 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.499371656 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.500242623 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.75496099 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.510076428 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.498716776 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.040734054 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.522549331 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.577682536 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.50201917 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.498361652 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.752029823 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.502641675 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.740663516 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.504514311 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.506257422 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.499808769 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.9337372 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.504708388 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.162305163 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.517065579 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.495541273 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.651771559 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.742578945 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.05290346 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.503755241 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.754343716 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.964416275 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.579203464 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.503381064 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.980226486 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.58310579 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.503963359 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.498557208 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.497185769 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.496486766 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.541401963 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.576308697 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.08689786 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.149672066 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.052142332 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.596750116 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.513436856 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.497275411 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.037744616 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.516934358 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.498233589 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.929084612 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.163741151 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.518490502 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.504610066 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.140349593 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.521483723 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.57871088 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.506785136 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.938389494 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.501414978 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.542491059 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.497994238 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.504524628 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.501793644 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.580118761 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.505079774 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.498295407 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.128533403 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.679008989 seconds)
  done (took 195.367680659 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.495410833 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.491631043 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.49575439 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.492527094 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.491884171 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.498040321 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.491984633 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.491466526 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.498171683 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.490962972 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.491483921 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.496220704 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.495102971 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.509039557 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.501748036 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.499041151 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.105326781 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.495827985 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.492168317 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.509145133 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.302167875 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.499775139 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.494126534 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.509318793 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.492286992 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.497466949 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.50219575 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.494647504 seconds)
  done (took 156.754118874 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.50022442 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.098168859 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.505854089 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.635466392 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.525965382 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.497860243 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.63617957 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.563618882 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.504119427 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.497406991 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.498442681 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.817516842 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.505139774 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.024882862 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.696686384 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.641970937 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.027432251 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.501753675 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.498121427 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.498381835 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.638750232 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.512904771 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.809638454 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.076695524 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.50305402 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.077195198 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.490690351 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.500862628 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.500633408 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.079276171 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.500592408 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.812709071 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.581235613 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.565005515 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.081243118 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.040835706 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.035320824 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.657297916 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.505051069 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.500337768 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.499630069 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.48991466 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.104876334 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.506202126 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.503030604 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.099019722 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.523200576 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.502175606 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.510759981 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.500236391 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.563543154 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.563654531 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.815871587 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.107890338 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.585064689 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.525829679 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.639758962 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.874897036 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.507014837 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.027255257 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.490473754 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.10576205 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.508560862 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.491630666 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.50329066 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.507372365 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.657663751 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.642676795 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.033132428 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.504788072 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.044182329 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.662786508 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.505260845 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.502028246 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.50469431 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.084600077 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.031433306 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.659329157 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.644765376 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.708656375 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.492652231 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.503024508 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.492105886 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.584466023 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.505590824 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.086709741 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.031920972 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.505329857 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.506059821 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.506378426 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.505394721 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.685328503 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.08781582 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.584868375 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.027821325 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.832350849 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.817322252 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.506141384 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.566312414 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.504210868 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.819275958 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.507788549 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.564346503 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.938381259 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.822139702 seconds)
  done (took 177.805215421 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.752219513 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.740704941 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.601377932 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.620290876 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.058262319 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.095280441 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.703280258 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.647903256 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.618391253 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.758380708 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.716272765 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.599054363 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.691985177 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.581968708 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.209139866 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.578879738 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.601056504 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.647042106 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.617564682 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.567894862 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.125806994 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.805584143 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.679965785 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.609830266 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.604189065 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.290603418 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.281813133 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.026872563 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.679344795 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.798581055 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.023335697 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.686632488 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.479569836 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.19235028 seconds)
  done (took 71.12821933 seconds)
done (took 743.354082972 seconds)
SAVING RESULT...
DONE!
