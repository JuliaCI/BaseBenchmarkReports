cset: moving following pidspec: 3819
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.254397668 seconds)
loading group "string"... done (took 0.523680696 seconds)
loading group "linalg"... done (took 6.5095558 seconds)
loading group "parallel"... done (took 0.154309843 seconds)
loading group "find"... done (took 1.172534578 seconds)
loading group "tuple"... done (took 1.658023352 seconds)
loading group "dates"... done (took 1.160111925 seconds)
loading group "micro"... done (took 0.217728632 seconds)
loading group "io"... done (took 0.971977752 seconds)
loading group "scalar"... done (took 36.123031635 seconds)
loading group "sparse"... done (took 12.18185623 seconds)
loading group "broadcast"... done (took 0.924477771 seconds)
loading group "union"... done (took 12.077395728 seconds)
loading group "simd"... done (took 4.137854185 seconds)
loading group "random"... done (took 8.347416419 seconds)
loading group "problem"... done (took 1.943742261 seconds)
loading group "array"... done (took 20.114345267 seconds)
loading group "misc"... done (took 1.732778458 seconds)
loading group "sort"... done (took 3.144794833 seconds)
loading group "collection"... done (took 16.64502121 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.503388844 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.121401916 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.131586021 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.13311276 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.169843258 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.12844716 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.13919982 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.099311237 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.069268841 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.156134252 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.132976611 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.460051597 seconds)
done (took 5.151900307 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.202854291 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082559036 seconds)
    (2/2) benchmarking "String"...
    done (took 0.094818738 seconds)
  done (took 1.013061078 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065839751 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.12047829 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065359813 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.082238252 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066170379 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065158387 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.082595527 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065824409 seconds)
  done (took 1.38953578 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073212862 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.066950765 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.084006697 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067824959 seconds)
  done (took 1.13454225 seconds)
done (took 4.656461119 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.830077566 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.240152222 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.181938649 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.446992905 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.145890886 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.181166232 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.664907876 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.331648956 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.197275938 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.082370147 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.12000913 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.354226093 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.123466979 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.669441155 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074657114 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.105008497 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.161829637 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.42742242 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081723798 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082046595 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.102657484 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.129199562 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.100663544 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.091377488 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.159618051 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081535583 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.145631989 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.081020096 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.083242144 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.224254154 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.187186273 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.682653566 seconds)
  done (took 10.450145132 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096070642 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.112755012 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068551762 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139112949 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.095660277 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.086575102 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070529537 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066495776 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.102951429 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.143899779 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088799245 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.116951706 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.06451333 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.084904697 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.08460593 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.22136725 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080819703 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.097704197 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070085562 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.090992497 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.105388953 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.093443623 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.078684965 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093728474 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128708296 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.208717995 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098114798 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.112194546 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067873161 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.096249713 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.129264955 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127008787 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064970761 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082544407 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.12335388 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.110915832 seconds)
  done (took 4.559150257 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.025913929 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.154191945 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090098857 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.14886879 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067165714 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.08367003 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.123172508 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065612597 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101025566 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.230916955 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.0860821 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.449454736 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127371776 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.085430883 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083744166 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068374078 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.082404425 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.481971525 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.14305206 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.120072231 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08350396 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.088997839 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069025201 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.357569053 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066921337 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.06546073 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084057611 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.058948969 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.139974976 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067494034 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.131152606 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.106378278 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068187461 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118402324 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.178269922 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.093436073 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104248314 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.153054314 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06503177 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.082888013 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.163810042 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074407905 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065230452 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.100327499 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118220722 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.102937055 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.083275865 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067014058 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.176246471 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066915268 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.102795989 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.832229279 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.16593026 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.077961801 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065280266 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.281639357 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.083438038 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084260692 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.068115951 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.243706333 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.15036253 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.066909899 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.082018658 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.065926503 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.067055673 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.367196165 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082974625 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.008213006 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.068107505 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075774207 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.085469191 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06711785 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089586072 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071853448 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.100276533 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065921998 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.067182355 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.08271809 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.06539624 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066926061 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.101054096 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.06366007 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.205150886 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.083873634 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.065814759 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.081018549 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085920387 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111204381 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.071252876 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064382431 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116455269 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067928495 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.084497504 seconds)
    (93/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063946348 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.118494671 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067258422 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.100748905 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069445659 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.129969547 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082900781 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.125096536 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067938321 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.111076989 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.075972693 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115451915 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.093774231 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067555569 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.152248076 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064023537 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.063110978 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084161847 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066953079 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.084280289 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068310124 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.077737365 seconds)
  done (took 20.963621361 seconds)
done (took 37.840782578 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.28311288 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.091730043 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074111113 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.092506698 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.09131645 seconds)
  done (took 1.550895251 seconds)
done (took 2.443251631 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.117057888 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117021577 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063845237 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112770541 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063702779 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.118362291 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.096873084 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.09818322 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.114876738 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064032125 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.093905052 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081164362 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062667074 seconds)
  done (took 2.121913532 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081596707 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.081351732 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086358941 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080639941 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062262144 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.097888973 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.07941369 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104349056 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080527079 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.070765834 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.080385601 seconds)
  done (took 1.791851268 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081090773 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.081337672 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085690263 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080413713 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.061644332 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098444913 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079490996 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101468093 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080161467 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089323995 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064378066 seconds)
  done (took 1.791225896 seconds)
done (took 6.585583375 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077510568 seconds)
  done (took 0.960759978 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.682485103 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.05056065 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081112692 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.130229361 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.198818719 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.137740293 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.335199516 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.10837504 seconds)
  done (took 9.780180705 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.087240296 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.099945697 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067759961 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.086105829 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071049787 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.069828789 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.090394986 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.067836481 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.085387705 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068025234 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.067621131 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.087857371 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070548127 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.085760326 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070185149 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.087287713 seconds)
  done (took 2.209430203 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091036823 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.108502975 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.071671792 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.093271939 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.070727052 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.090602042 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.07284906 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.092205222 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070030351 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.089841948 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.07356856 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.090446608 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071350853 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.081333461 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073473641 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.092148746 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070853212 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.090276669 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074927968 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090476605 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075375014 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06354611 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088933332 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.072390492 seconds)
  done (took 2.933329877 seconds)
done (took 16.773354193 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.111269835 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.08837482 seconds)
  done (took 1.08991141 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081230634 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.09811283 seconds)
  done (took 1.073512124 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083462543 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.081167655 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.088330144 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.094989948 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.064664064 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.082147219 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.103290397 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066162856 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.064803638 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.084247127 seconds)
  done (took 1.710137169 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068173398 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.09296195 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070757592 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.097817974 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073039165 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.080829168 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.07338143 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.083790667 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078708451 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062022928 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.089632259 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.097960267 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.07145257 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.100370975 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073047018 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085155947 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.069758783 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.084178494 seconds)
  done (took 2.348819153 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065703671 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.065040586 seconds)
  done (took 1.028671887 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067835674 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063040273 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083381988 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066392619 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.07997518 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062649887 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.079382833 seconds)
  done (took 1.403365971 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.402499004 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109318538 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.246526005 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.089080934 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.099508333 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.26655818 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.084034263 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.0712989 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070038711 seconds)
  done (took 2.378048337 seconds)
done (took 11.929143723 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080126072 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.08372534 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.110929054 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.409030254 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091982593 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.083482417 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.132506007 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.225672598 seconds)
done (took 2.122213032 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.124816899 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.608731614 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.39963761 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.208278778 seconds)
  done (took 2.12341519 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.328472697 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.107334071 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058662121 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.083665049 seconds)
  done (took 1.485127648 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065984438 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068143048 seconds)
  done (took 1.038460515 seconds)
done (took 5.677187314 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066644502 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.080800292 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.085111386 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.062767988 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.083121779 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.06344772 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.062800751 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.084059823 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065935191 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.066838922 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.082474799 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.066774874 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.064888 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083027049 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063385551 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062130281 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082311737 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063665114 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.064654685 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081294975 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062874973 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064048509 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.080685265 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062706832 seconds)
  done (took 2.648190863 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082860768 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.082215884 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072735697 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.069140681 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.087966365 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.069798604 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.089368922 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068723864 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.089112991 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067371412 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085979489 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070496841 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.066600098 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.087957344 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067009091 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.087779782 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070077869 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083322312 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068054106 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.086696616 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071434278 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064781357 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.087395927 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07049098 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.087028761 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068814206 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.086271874 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066268178 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.087396745 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069756846 seconds)
  done (took 3.223566235 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069764579 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.06237152 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.08064969 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070499122 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062343745 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.082354244 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063226653 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063139107 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.082285254 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063715467 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.063509003 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.081844765 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063515364 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.081520815 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064416335 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066391003 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.096528553 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063810516 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062580501 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.082221729 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066365112 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062260781 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.081983823 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062591507 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.080446194 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064426393 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063396482 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.079973566 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064877133 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062733774 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.08412488 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067101025 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.06263769 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.087811718 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067378063 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062311588 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.085404111 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063209595 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063361634 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.081243458 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062303154 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.078930338 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063947414 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069402539 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.081111046 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.06595709 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063457578 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.08227485 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.064154879 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065646826 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.081376404 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063959514 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.081610242 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.065306273 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066842678 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.080267416 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064497552 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062453156 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.082036688 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063915779 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.061957092 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.080455975 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065426964 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.062989708 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.096209608 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069674121 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.080021684 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064942917 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063795175 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.083358154 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.06471987 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075535565 seconds)
  done (took 6.032137989 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.0904403 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104907185 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064151457 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.083358644 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061375213 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.081026057 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068270488 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063260668 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083297774 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.068985347 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081160055 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065064934 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064406006 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093857691 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064224686 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.082504734 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070495764 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061571865 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.081616101 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067088831 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080844199 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067588281 seconds)
  done (took 2.563355261 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.28216058 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069843851 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.124388828 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091306592 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068186249 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.09066963 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070767934 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068889249 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088288028 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067193348 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08601679 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069775309 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085116553 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067530476 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08499727 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068113609 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086758406 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068620529 seconds)
  done (took 2.554032871 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077826304 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065382964 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.10421675 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065486558 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.084248591 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068326504 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088388015 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074699322 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085233991 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066460596 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073669902 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087064676 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.06728403 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083797719 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06848392 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065505315 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.086921448 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065654189 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092563472 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070048101 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089150224 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073887648 seconds)
  done (took 2.620901602 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07973289 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066562898 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.100830711 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067738525 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080000842 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064368729 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.087189079 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.0667563 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069387485 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.085428163 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065898621 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.081182904 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070326272 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064942082 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.087455661 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065938329 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.085380647 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066358798 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066891669 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080286922 seconds)
  done (took 2.421755761 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086570792 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084774125 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068445997 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093172809 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067818914 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084471748 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076486823 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.084668257 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06765807 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.10473222 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068363675 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066690866 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.094686401 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.09022386 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068320171 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093142213 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075221869 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09364586 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066881774 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084838809 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.08706553 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085136721 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074527392 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.08491557 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066797205 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.085250012 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067405278 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090473927 seconds)
  done (took 3.182197324 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066430515 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065397107 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.080890202 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063850289 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062830117 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.080861313 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064264409 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062379558 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083372775 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064197619 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.064864537 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.083377743 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065393439 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.064843925 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083265716 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065475862 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064875615 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.081319087 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063137596 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062411748 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.083631776 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065491629 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.064535276 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.081979315 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063346454 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.082824758 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06455276 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062974738 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082906535 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064066191 seconds)
  done (took 3.031243734 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.07596525 seconds)
    (2/2) benchmarking "in"...
    done (took 0.071717484 seconds)
  done (took 1.072667816 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063961666 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079031926 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.081874309 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069614743 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.08808636 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066924376 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07214885 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088917963 seconds)
  done (took 1.536228617 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081464926 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076199401 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085808734 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.077236187 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.094706695 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.081337426 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.153934085 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.085402158 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073151939 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063377031 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.098475124 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065308728 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090197985 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066518565 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071482037 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091166227 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064022878 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.089535182 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069392592 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.063731133 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085740929 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074359441 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086493413 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061942439 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.06648757 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094102532 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076106798 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.084969205 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.06922531 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.09218394 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072179392 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059652779 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.084670688 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.067120635 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.062873747 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.094509803 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09769442 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069711404 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074681904 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085430949 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075968897 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.080266466 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.071421137 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.0899135 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077791257 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065663439 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.085229802 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061709596 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063380316 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.087018596 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062083905 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084126265 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061888696 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072565482 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.088680373 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076871475 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.086096364 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068406816 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.06810087 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088247692 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072276098 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.085781983 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069574104 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065076838 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094783776 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070332986 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093219752 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061575233 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059529382 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.08288261 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075552284 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106734931 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.07212967 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.08585297 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067281873 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063601886 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088414083 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066603065 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090309866 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072824321 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065195295 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.090837541 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072512622 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085148056 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068475599 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.091514283 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.0646978 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.085399649 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065188994 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080921733 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.083658322 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063963041 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.081331533 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.07699082 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068495498 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.085178399 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.06387958 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090447604 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060837534 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065751296 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086324582 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067186232 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.094488324 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070938459 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089893071 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.075373116 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072555584 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085713172 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068461862 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.081046166 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06810578 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064207502 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.091911071 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.06010893 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086075489 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.067897284 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065755959 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.093310374 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.06387725 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.084270467 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074354367 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.070617275 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.084057529 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062383456 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.086195489 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.067150733 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068886022 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093059224 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064548212 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.079335853 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062450886 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.068428747 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.084649486 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069402635 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088705432 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069696839 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060105322 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.083256206 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.069537082 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092634899 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066629258 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.08348683 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073447135 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.066777036 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.084140726 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073522978 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.085712033 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066560645 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071044512 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.085692491 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061828904 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087018391 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069747506 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064507246 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088270756 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069453163 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.086209452 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067722794 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064771896 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.089713512 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066342726 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.083236076 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067315002 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064057653 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.094492625 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067835038 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.078582144 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.06390921 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.072474451 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.083382754 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066091117 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064820334 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.087297414 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.065829439 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.08265592 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.06652767 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067468524 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.095405492 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069143012 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085440278 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071140736 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.096282515 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066631593 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.067648098 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.08549963 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067221895 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.085630702 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074803945 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.089378857 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072436934 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068093742 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.0816341 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072376225 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091673592 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.06595407 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064231172 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.08494629 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069787211 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.089890751 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070449133 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066017764 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084182473 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066401681 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088569322 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.069109663 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.064984028 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084827747 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.070508372 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.08291973 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073109616 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084864111 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076785358 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.06853906 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.080539139 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069593726 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082378966 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072300928 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061183458 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.083560393 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065739758 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066843656 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.084551895 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068129242 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.078936555 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073681077 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072634985 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.085650735 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065186476 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.084912315 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073327265 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066602366 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089181835 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069478857 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.090885095 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075923356 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064629007 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.089139728 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.07545929 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.084544687 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060953769 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.089342776 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066087672 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.064769509 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.084388806 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064449911 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.06861192 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.093658087 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.072027303 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.079512688 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068400029 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.082138324 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066623677 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061650257 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.089655701 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069793141 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066443407 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091265396 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.0664912 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.085067551 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070386785 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.064754098 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.086691103 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067304053 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088410232 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067329764 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.06726474 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.085521626 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069283092 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.083612413 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064488886 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067228995 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.084826005 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067025914 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090144399 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066136615 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065751766 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.088000443 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.066765609 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085172058 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067238375 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06512066 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087936964 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067037313 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.065616921 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.087470128 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061363938 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091370664 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066146489 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072660752 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.085626944 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062645368 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.089209411 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069397667 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.069985532 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086661249 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066454145 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.086102118 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066286428 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.067890725 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092363825 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064138299 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.095714166 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073728647 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085591155 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069791396 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.065823827 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.087138816 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065339445 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066620277 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.086427711 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066444919 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.08504212 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071591508 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068141965 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.086382617 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067340876 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.086516382 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.067801205 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066990181 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.07985368 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066335983 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.06488669 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.086238805 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074567289 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.086304031 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066408715 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.08343665 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068253274 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065282928 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.081863406 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073783884 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.093874908 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067211277 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091784723 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066508125 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067605763 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095971428 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060778337 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.08319293 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.066067994 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064137805 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092687788 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.068063174 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.093161453 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.067545978 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065038797 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.082558668 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.06797291 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064177581 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.080698148 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.064848073 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088540987 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.066554839 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065457196 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.085285659 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.069653769 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066973519 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096061833 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064707761 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.086305734 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.067148033 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062390634 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.08530506 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065270431 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.087467602 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.06773867 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063556922 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.083323376 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065432027 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066634551 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.087281298 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.065874414 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.086259116 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073322127 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065444447 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.088622864 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069276127 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.082444773 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069843578 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.064868114 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.085117287 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065794397 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.089182243 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070527461 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066898753 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.094811689 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065773439 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085950921 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066517207 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.063373835 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.086263072 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065720088 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.085025817 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066573649 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067309678 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093623228 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064150837 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.088116157 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067254913 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.065723454 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.092518276 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.066981699 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.087570447 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072967095 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.065761878 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.087560958 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.073612415 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.089468874 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069245602 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085559124 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068520049 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071561937 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.085440209 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073059626 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.085012866 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.06836593 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.06734608 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.083316543 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06591208 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065095177 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085385321 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.071746847 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.086615699 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066062197 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065330641 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.084024036 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067046239 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088881995 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074038431 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.066966603 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088813906 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061948052 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.081903054 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068332602 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063914864 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.087492657 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069158065 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.08927227 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.06972153 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066249577 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.084056321 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075639568 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090416901 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070966742 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063614472 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088838729 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066946744 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.087056711 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.06820773 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066404281 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087198232 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070893363 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067493819 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.086076242 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072734458 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.089255263 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067611998 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.066805091 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.087048389 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066273984 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.080141741 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067439982 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067767464 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091022389 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068910687 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085289278 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077525328 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063676704 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.085971841 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06901123 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084928967 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071121589 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061000064 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.087914655 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067319176 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086851195 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062649594 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065145903 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.084509476 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.069403163 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064690913 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.081901502 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075934872 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.095354279 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069424826 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084275544 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06685251 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061534949 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.081187359 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.06646927 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066366957 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.088325064 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.075276556 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.085171007 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065733255 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.06159334 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08654711 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068719699 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.088129465 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.065165269 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061818522 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.085298236 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069315164 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.089277984 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066296633 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065553433 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089208478 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068832933 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.063830967 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08909449 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062857467 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.088880551 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078297938 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.085551423 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067740364 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072063084 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093246523 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066667078 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.080710421 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067625972 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.06879129 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.086321828 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067024564 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.086197507 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081595137 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088093809 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065780684 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064825635 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.088082336 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066423465 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.092562868 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068331349 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066617422 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.090607602 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.067548785 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.09304806 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069950574 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092290341 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070277021 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068268462 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.085465424 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066440571 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.063666647 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.085635267 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067632233 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.086446164 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071322491 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.092617339 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066341778 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07603511 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.095221931 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067665827 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.082577458 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065937191 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065240204 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.081620406 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067353739 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.08302352 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.06519417 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.0637545 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.084023743 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067880243 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070324825 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.087342459 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067585765 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.085233326 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061444308 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068256617 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.089109972 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067661823 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062209633 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.086832283 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066907712 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.089367387 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070237845 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.062771071 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.088161311 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067570147 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086276104 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062389318 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072637405 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085224452 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068788583 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.064465481 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086664946 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066993837 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089074265 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071161202 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086518892 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069413091 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069097097 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088832167 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.06428303 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.081949149 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.072951548 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063885397 seconds)
  done (took 46.096696559 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.09916765 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082549764 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062495778 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06111297 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093376553 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062380796 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082623689 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063177131 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.061851004 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.085159401 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061747249 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081740198 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07083589 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.097364336 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072959673 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.086486351 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061354872 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.082816399 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062095531 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062089231 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090543799 seconds)
  done (took 2.557057926 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074337566 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.089292442 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073144922 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.095468913 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067506557 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.091037248 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072994711 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090344729 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07550771 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087511358 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075392886 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091236643 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066684983 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.087445909 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066165274 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090867313 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075867147 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088536451 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070292137 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.093860756 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069893146 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.093871277 seconds)
  done (took 2.758649432 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067885142 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065546396 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086829168 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061775042 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.06499086 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.081235011 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069534981 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.082132609 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.0709609 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.063908636 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.084463178 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065341934 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.074612604 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.081271848 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066085352 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.062199872 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.128553105 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.089577016 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065426099 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.086255481 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062152673 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067134907 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.081958091 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062431827 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.06359186 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.088847709 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066353128 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.083429905 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066140615 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.063398091 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.085819791 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064386227 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066626682 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.08636 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064527883 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064085735 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.086322692 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064595655 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.080188898 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063944242 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066078592 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.081384273 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065937701 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.06549916 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.084549636 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063605932 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.085988608 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.066137276 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060727175 seconds)
  done (took 4.565099 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079996029 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.128020713 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066214431 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087326984 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.101269978 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.072413456 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.090698653 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109342665 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063626675 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064163772 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.104051828 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.103711428 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066339837 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.091295941 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.069546113 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.083801641 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06754929 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064223611 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.089953675 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064016861 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.089928346 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.07219948 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.100495591 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.098039843 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069988572 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083707633 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065494784 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069754714 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.09902673 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.089188935 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070790575 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089936532 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080687085 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.087277346 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065882284 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.086549252 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.082620408 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.085322714 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068557556 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062924448 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.088866571 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069046247 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.092603868 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.099985289 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067709314 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070741684 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085938672 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062660423 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.0982886 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067449003 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.093738341 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.09850771 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070696253 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.064823801 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.090806428 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.099136458 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066819186 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063244333 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.089590719 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.096746296 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064565727 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068588949 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.099553719 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067454231 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.093418198 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.099608494 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071167359 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089134453 seconds)
  done (took 6.697306153 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075373517 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.091997849 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080293942 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101200952 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071254417 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.093986628 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.091419297 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072620622 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.091097155 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078047172 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.092514424 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113235816 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.068056677 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.094301108 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073462113 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092168949 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.07305997 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09236254 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073168651 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.092484971 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071635481 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.099748754 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.092015067 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.08113335 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.117974865 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067307681 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.09265639 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072141438 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101228884 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.09070908 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.081047712 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091830178 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072296482 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.100609975 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078273307 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.092885538 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064409526 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092419501 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071597349 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.092744852 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067148359 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101170061 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.091540241 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.068109125 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091348085 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.072651635 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.100096728 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078529139 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.095779318 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.095743327 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072781506 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.100436179 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071379939 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092693219 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.100468008 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.10473644 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100967143 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.100517383 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07253465 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.10072119 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.099939414 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.086339239 seconds)
  done (took 6.385445144 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083410064 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.094499856 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.074782681 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.082877393 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063933849 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090388389 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063602227 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063382793 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.095115026 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073344993 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097968394 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088904008 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07385875 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097607884 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069448605 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093490632 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068915259 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090485393 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074348018 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.090904746 seconds)
  done (took 2.6196137 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075015252 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.081697262 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.087831378 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071021314 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.08960933 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071450033 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.089144288 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069542763 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085763968 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070405537 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074546675 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.097164009 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065702074 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092750504 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.094842131 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.0724335 seconds)
  done (took 2.277133887 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.07492587 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.091778244 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079845644 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.085620017 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065904512 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062541202 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.087799007 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.0615337 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062256989 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.099335162 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.064651827 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.089840461 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065423175 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.084025989 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064081141 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068201244 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.082865766 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062928559 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.085060197 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078071708 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095837989 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064938008 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066678358 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.086582273 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066119336 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.09155476 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066123856 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.083780582 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.064745291 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065893451 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.087298433 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068987504 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.083276975 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06476424 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064307961 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.084382746 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065458356 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086721345 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069432668 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065883789 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.085982032 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.06508579 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086048508 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066469741 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061457252 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.08772181 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062158884 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.088921654 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.0642522 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085391846 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066549727 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068099354 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.087293088 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072063163 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089525985 seconds)
  done (took 5.13773228 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079860682 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068105151 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.082971863 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063884863 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.067566312 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.088809181 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069284853 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088451508 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067598306 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083534211 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069350579 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068266023 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087760177 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069096916 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087373379 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070040103 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061192581 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.088237225 seconds)
  done (took 2.352228157 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072040853 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064877226 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093714465 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065580795 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.064605507 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.089919765 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061944911 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.085325809 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064893818 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.064636148 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086053968 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.06854221 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084052512 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068523795 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065728587 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086209584 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067992596 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063848202 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.087029554 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062412312 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087641678 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065614877 seconds)
  done (took 2.612523098 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.072843643 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.09101738 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.156987296 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.104084615 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.081812868 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.077930387 seconds)
  done (took 1.580497255 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090212548 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099384818 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067057745 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085990093 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096119621 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06642586 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089249385 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066668304 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098090977 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096617675 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06828087 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096645074 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075605007 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097261638 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092992885 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075359774 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087086027 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068837665 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065350599 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105781529 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088208816 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075572772 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088568408 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067870425 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088585164 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075599744 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097401706 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096939775 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068106767 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096939635 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073791112 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087546168 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076621982 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097209561 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068598162 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096967257 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066950973 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105696229 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092925034 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075982309 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.08904824 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074201939 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096088142 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07270368 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096503028 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067323356 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093775128 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066604636 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088887512 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106829226 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073767428 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095835668 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07380413 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097526234 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095697862 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086962883 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097894469 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095235557 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07389901 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097398163 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075541608 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094051029 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094779873 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076913891 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094075353 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074643534 seconds)
  done (took 6.625920605 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085094741 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106568069 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067837817 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097595557 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075110861 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089002958 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067075626 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088862501 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066857575 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08833959 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128419087 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06880013 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09698357 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075851252 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0887548 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067873656 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088757475 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07490676 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088674422 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106888465 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068352038 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096041963 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075204768 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09673311 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097522439 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073940693 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088919482 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068749191 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088291767 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068506084 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093117216 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068447806 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096315715 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067047328 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096622577 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067420347 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08952878 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071856898 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089016573 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072188623 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09794643 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105509041 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066838566 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088720622 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07623076 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088687645 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066434233 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089326029 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068392905 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088092098 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075927955 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097589169 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0754073 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097882535 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089085075 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068391694 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087820297 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068591308 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08859158 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074052875 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096638049 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068172254 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107819368 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066613247 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088782346 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096048582 seconds)
  done (took 6.539028086 seconds)
done (took 130.599511203 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.200288635 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.187050658 seconds)
  done (took 1.383359517 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068142064 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.093910512 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.098701845 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.1272785 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.087149393 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099992582 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.097655343 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.099099523 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065501412 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086210382 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066476359 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.066105431 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.152550614 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066327323 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.064643148 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.090123993 seconds)
  done (took 2.432649621 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.100944334 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.193064825 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108964783 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064448865 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098642586 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077529312 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064522282 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.097038566 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.072682051 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.085823935 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077776394 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095267441 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064649484 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.094198373 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.073826497 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.096770409 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065163853 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.07628988 seconds)
  done (took 2.611646944 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103700967 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.143622998 seconds)
  done (took 1.253688147 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.181420916 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.137620795 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.203453896 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.402436714 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.202794836 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.277268832 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.177220141 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.17558309 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.159423697 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.172986516 seconds)
  done (took 3.088707372 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.09778045 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.168614874 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.304783715 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114260396 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.106663107 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.114386258 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.136506343 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.089173549 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.101097356 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079366764 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.099874073 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075703379 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.118090299 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.093618376 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.07475342 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075513791 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121352576 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.070737415 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.097380203 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.074033367 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117420163 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065066647 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.096227648 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072322344 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.097789524 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.075914829 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.086920473 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.066470875 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.073084218 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095285259 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076272366 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.112466639 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.097166724 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.129297425 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.080190085 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.1283428 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.09800673 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.07091463 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.094370731 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.071364571 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.096477266 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.076284141 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.103700499 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076471123 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.085559856 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077048763 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.064623636 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.086937031 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077953548 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.097811296 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.07788176 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.099188279 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.127851589 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.095779861 seconds)
  done (took 6.266712731 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.704094184 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.127823979 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06980386 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.777601286 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07547117 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096948867 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.684217568 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.090630509 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.200835561 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.712344127 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.111804951 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071908399 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.192687034 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.209313089 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.891136347 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.248114067 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.60610182 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072614765 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.127337349 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.121631175 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.135698306 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.148844799 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.143588892 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.399059264 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.094390574 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07052563 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.13333562 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.092546202 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.132428591 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.080963696 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.089631782 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.143902143 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.217496972 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.14343271 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.073135879 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090876497 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068964408 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.139159258 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.224048833 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.156777614 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.150968869 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06648504 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090139045 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.134768541 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.127446523 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067035302 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.133255626 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.14470619 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.139533243 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091364881 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071778923 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.135942658 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.1329463 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.156729411 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.079129041 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.279446086 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.249428587 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09069795 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095436151 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.095600776 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.199523427 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.101508798 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.165261174 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.135949133 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.175424194 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069079391 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.744412529 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.14068014 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070136842 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070332752 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.116030242 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.090232126 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.133902517 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.139583394 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.358605167 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.136279782 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.091335565 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06843611 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.170026289 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102757032 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068594016 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.132865595 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.095868344 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118135655 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.140589921 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.136915397 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.137776023 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.198852274 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.137417296 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.155946491 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071210746 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.120749362 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.07232352 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.183845091 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.181298567 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.133697079 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.183163507 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.134958693 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.132758241 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.139556553 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09270311 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.142614074 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.116114851 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075077193 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.133692518 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.178419636 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.095088601 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.101291845 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069043199 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.15537655 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.097767272 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104822257 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.134900351 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.141713396 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.418674699 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.138954979 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.088794649 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082902003 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134307389 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.133661115 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09183817 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.201686613 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119400413 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.139200056 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118363423 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.06608646 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.117494784 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.132617134 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.095052817 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.11796043 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.134187786 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07198655 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.206171402 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.177488273 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073394031 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.181147263 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.154600179 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.091633183 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.141800832 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.095169108 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.159828178 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074128662 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.135203086 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094059891 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.717888091 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.13862745 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.118324047 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069327394 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.160699848 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.088382816 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08097829 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.101149449 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068559719 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.733725809 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.104642474 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076322738 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101057229 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069743345 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118552607 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.131379557 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.091614474 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.131447405 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.165606322 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09315078 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.115613891 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.080657354 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.132622398 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.094744111 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079570441 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.10148374 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.080209868 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119194799 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.089894853 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081109363 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.140423084 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.13296301 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.178584885 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.528491317 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068030084 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.10170054 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.185207252 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069945926 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.228671041 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.154439377 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.165159788 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.135283319 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098205978 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.251610794 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.135823222 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.160760563 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.102670581 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.143393254 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067497687 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.132187955 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.13379837 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090313047 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070917105 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.133909438 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.137970272 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.136900667 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.928076547 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068855442 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.198664105 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.088740372 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.143717431 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.073488444 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091973938 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.226670818 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090371558 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.141693493 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.136227528 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068703036 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.101450741 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.804501124 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.101072885 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.135360487 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071530063 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.181071393 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.13661273 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.133977532 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.134257379 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070888818 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.13182803 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.180711113 seconds)
  done (took 38.7687142 seconds)
done (took 56.807009296 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.253964835 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.172271909 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.247977142 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.138847618 seconds)
  done (took 1.91631859 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.143909915 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.10029178 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.116990168 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.063736463 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.125450388 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.086433862 seconds)
  done (took 1.665144252 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.405770818 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.259493346 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.224874155 seconds)
  done (took 1.92002162 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.21897386 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.232277005 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.448117638 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.275502688 seconds)
  done (took 2.308606223 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.165290812 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.11294731 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067447661 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.105171723 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.157888071 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.207038152 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.12453505 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.171419862 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078215045 seconds)
  done (took 2.266029002 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.166088501 seconds)
done (took 11.278034462 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.117822233 seconds)
    (2/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.093235516 seconds)
    (3/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.213694074 seconds)
    (4/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.193313169 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.185014525 seconds)
    (6/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.190704923 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.147145721 seconds)
    (8/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.108135855 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.096516088 seconds)
    (10/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.074121382 seconds)
    (11/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.24234845 seconds)
    (12/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.190847565 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.100965905 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091791575 seconds)
    (15/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.225887286 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073309271 seconds)
    (17/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.182794953 seconds)
    (18/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.220678421 seconds)
    (19/309) benchmarking ("sort", Float32, false)...
    done (took 0.125757894 seconds)
    (20/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.100753859 seconds)
    (21/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.198951676 seconds)
    (22/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.147566056 seconds)
    (23/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.130593864 seconds)
    (24/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.194654912 seconds)
    (25/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.147520137 seconds)
    (26/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.128960322 seconds)
    (27/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.188968456 seconds)
    (28/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.053570815 seconds)
    (29/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.209466709 seconds)
    (30/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.052864942 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.150359808 seconds)
    (32/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.236764416 seconds)
    (33/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.099470434 seconds)
    (34/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.088483039 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.147694605 seconds)
    (36/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.229167276 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071656657 seconds)
    (38/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.167848485 seconds)
    (39/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072143494 seconds)
    (40/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.157866028 seconds)
    (41/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075743574 seconds)
    (42/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.20618002 seconds)
    (43/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.098739499 seconds)
    (44/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.159021224 seconds)
    (45/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.220368518 seconds)
    (46/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.160791581 seconds)
    (47/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069144918 seconds)
    (48/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.17965845 seconds)
    (49/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.134205256 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.158792871 seconds)
    (51/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.096692363 seconds)
    (52/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.051421427 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.118551165 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072817287 seconds)
    (55/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051036087 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.114245335 seconds)
    (57/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068476509 seconds)
    (58/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.094655233 seconds)
    (59/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.072688822 seconds)
    (60/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.178113772 seconds)
    (61/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.070984579 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.089611397 seconds)
    (63/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.078467155 seconds)
    (64/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.06871746 seconds)
    (65/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.088907109 seconds)
    (66/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.123313389 seconds)
    (67/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.066908861 seconds)
    (68/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.071586831 seconds)
    (69/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.095658785 seconds)
    (70/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.052170794 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.10993318 seconds)
    (72/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.079024544 seconds)
    (73/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.072191406 seconds)
    (74/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.095510048 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.076045876 seconds)
    (76/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.061269677 seconds)
    (77/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.158182137 seconds)
    (78/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.156871874 seconds)
    (79/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.054635244 seconds)
    (80/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.075285611 seconds)
    (81/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.169091525 seconds)
    (82/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.120019971 seconds)
    (83/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051428098 seconds)
    (84/309) benchmarking ("sort", Int64, false)...
    done (took 0.065831493 seconds)
    (85/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.193524928 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.09914264 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.121053192 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.098033854 seconds)
    (89/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.157729147 seconds)
    (90/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.193732361 seconds)
    (91/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.07253233 seconds)
    (92/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.092671814 seconds)
    (93/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.148565919 seconds)
    (94/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.190033373 seconds)
    (95/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073067193 seconds)
    (96/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.133156489 seconds)
    (97/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072733692 seconds)
    (98/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.098588435 seconds)
    (99/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.077218111 seconds)
    (100/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.087813106 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.108843353 seconds)
    (102/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.074332218 seconds)
    (103/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.091125197 seconds)
    (104/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.051047346 seconds)
    (105/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.122759861 seconds)
    (106/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.065604527 seconds)
    (107/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.114479825 seconds)
    (108/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.053701239 seconds)
    (109/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.073439996 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.100758839 seconds)
    (111/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.144396286 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.11123226 seconds)
    (113/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.07569938 seconds)
    (114/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.100998175 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086854427 seconds)
    (116/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.406090473 seconds)
    (117/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.107135585 seconds)
    (118/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.160355154 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.116477539 seconds)
    (120/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.137603067 seconds)
    (121/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.051841199 seconds)
    (122/309) benchmarking ("sort", Bool, false)...
    done (took 0.156202283 seconds)
    (123/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.096899039 seconds)
    (124/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.144840409 seconds)
    (125/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.114148613 seconds)
    (126/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.09701746 seconds)
    (127/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.086115978 seconds)
    (128/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.052579859 seconds)
    (129/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.184423533 seconds)
    (130/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.06920082 seconds)
    (131/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.051052731 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.133885127 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.069843386 seconds)
    (134/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.100390551 seconds)
    (135/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.062260524 seconds)
    (136/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.070891529 seconds)
    (137/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.078905547 seconds)
    (138/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.051200171 seconds)
    (139/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.051553042 seconds)
    (140/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.095747914 seconds)
    (141/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072683079 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.14230727 seconds)
    (143/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.0766124 seconds)
    (144/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.065180601 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.118164282 seconds)
    (146/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.087685769 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.088522229 seconds)
    (148/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072288153 seconds)
    (149/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.12282161 seconds)
    (150/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.136845157 seconds)
    (151/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.075894509 seconds)
    (152/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.112431303 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.087999156 seconds)
    (154/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.067118639 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.112515899 seconds)
    (156/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087572847 seconds)
    (157/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067720539 seconds)
    (158/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.0970112 seconds)
    (159/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.07140468 seconds)
    (160/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.069813897 seconds)
    (161/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.076237567 seconds)
    (162/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.16812287 seconds)
    (163/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.096712351 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.087374949 seconds)
    (165/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.156089734 seconds)
    (166/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.068679444 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.115061415 seconds)
    (168/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078853123 seconds)
    (169/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.132778739 seconds)
    (170/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.066623681 seconds)
    (171/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.201054496 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.112279341 seconds)
    (173/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.051660217 seconds)
    (174/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.128444752 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088063648 seconds)
    (176/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.096743822 seconds)
    (177/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.051036322 seconds)
    (178/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.051834871 seconds)
    (179/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.093759694 seconds)
    (180/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.118112577 seconds)
    (181/309) benchmarking ("sort", Int8, false)...
    done (took 0.163614469 seconds)
    (182/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.05025448 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.098911316 seconds)
    (184/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.082200036 seconds)
    (185/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.071618886 seconds)
    (186/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.087475336 seconds)
    (187/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.071325073 seconds)
    (188/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.065569701 seconds)
    (189/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.113291778 seconds)
    (190/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.188673563 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072361458 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.154745918 seconds)
    (193/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.05156074 seconds)
    (194/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.075044155 seconds)
    (195/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.20326012 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.111748093 seconds)
    (197/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081248388 seconds)
    (198/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073098377 seconds)
    (199/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.09311028 seconds)
    (200/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.052011313 seconds)
    (201/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.170146536 seconds)
    (202/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.068042528 seconds)
    (203/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071861415 seconds)
    (204/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.157369139 seconds)
    (205/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065360772 seconds)
    (206/309) benchmarking ("sort", BigInt, false)...
    done (took 0.207489386 seconds)
    (207/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.076585283 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.066074379 seconds)
    (209/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.050816183 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.088062897 seconds)
    (211/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.052459749 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065170052 seconds)
    (213/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.08939576 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.066067184 seconds)
    (215/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.06640201 seconds)
    (216/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.091520993 seconds)
    (217/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.051140807 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.064899559 seconds)
    (219/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.088608485 seconds)
    (220/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.054118712 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.073224462 seconds)
    (222/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.096042911 seconds)
    (223/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.167685087 seconds)
    (224/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.096374683 seconds)
    (225/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.0674412 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.064681255 seconds)
    (227/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.110610964 seconds)
    (228/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.064772315 seconds)
    (229/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.075019956 seconds)
    (230/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.135398526 seconds)
    (231/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.061280287 seconds)
    (232/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.095612844 seconds)
    (233/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.051985974 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.064788262 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.089759265 seconds)
    (236/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.050947042 seconds)
    (237/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.050540367 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.087177635 seconds)
    (239/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051697876 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089030348 seconds)
    (241/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.089694471 seconds)
    (242/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.108271705 seconds)
    (243/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.076274533 seconds)
    (244/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.07191673 seconds)
    (245/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052508354 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.162617908 seconds)
    (247/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.07919207 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.116181207 seconds)
    (249/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051596029 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.088751389 seconds)
    (251/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.08526315 seconds)
    (252/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051605579 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.111495375 seconds)
    (254/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.075247678 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065282058 seconds)
    (256/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.193324589 seconds)
    (257/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.050976465 seconds)
    (258/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.091633702 seconds)
    (259/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.053053543 seconds)
    (260/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.050573687 seconds)
    (261/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.088426505 seconds)
    (262/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.069756343 seconds)
    (263/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052363488 seconds)
    (264/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.066241088 seconds)
    (265/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.076798305 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071222449 seconds)
    (267/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.052941969 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.09003011 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073294095 seconds)
    (270/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.050221934 seconds)
    (271/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.112947412 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.06591044 seconds)
    (273/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.0958613 seconds)
    (274/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.051692634 seconds)
    (275/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.052248101 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.124310912 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.137855298 seconds)
    (278/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052466232 seconds)
    (279/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.10583926 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.089375494 seconds)
    (281/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.075839981 seconds)
    (282/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.053338942 seconds)
    (283/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.050888333 seconds)
    (284/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.112844504 seconds)
    (285/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.068029575 seconds)
    (286/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.050835096 seconds)
    (287/309) benchmarking ("sort", Float64, false)...
    done (took 0.149863278 seconds)
    (288/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066301508 seconds)
    (289/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.08856332 seconds)
    (290/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.067224698 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072683161 seconds)
    (292/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.094075283 seconds)
    (293/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064281493 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.14843097 seconds)
    (295/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064624769 seconds)
    (296/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.050938057 seconds)
    (297/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.091927431 seconds)
    (298/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073385347 seconds)
    (299/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.051230738 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.098705182 seconds)
    (301/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.174196941 seconds)
    (302/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.075849978 seconds)
    (303/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.071899201 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.064943054 seconds)
    (305/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.103663919 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.071179204 seconds)
    (307/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.101820745 seconds)
    (308/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.052669058 seconds)
    (309/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.065123478 seconds)
  done (took 32.820935106 seconds)
done (took 33.858296747 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.081180165 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.113815132 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074704513 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.090520395 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.104517448 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075349827 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.095764784 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077422618 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.103623884 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.08180853 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.102203155 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055134612 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073712906 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.097612885 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.07352852 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.115053242 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077786169 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094660551 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073306302 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.063938628 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.096668625 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065958165 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.06643234 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.078806085 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078095242 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071166118 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.09649528 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073182618 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.088453039 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066371112 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.06831991 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.096589491 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066017434 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.076956082 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.095327143 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072568493 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096882407 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077322733 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066562267 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.089188409 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074005191 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.064285568 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.096473902 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073850841 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070625417 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.094665795 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072323774 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.101329769 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091182911 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091567378 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075003408 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075398728 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.100528062 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071738544 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091971965 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073425326 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070640465 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115160036 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072261796 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091544227 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074787864 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.072664171 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.095470148 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073364542 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.07168973 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.099022114 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074997663 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.093930716 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075118207 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070381996 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.089741729 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072899871 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.067680235 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.089499733 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075104809 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.099188633 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065490585 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070792487 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.096584333 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071938638 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064641329 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092005929 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066981103 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071026475 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091670746 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054515479 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068760622 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.095557355 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064591985 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096129055 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.072075315 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071739907 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.090088986 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076244042 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064371886 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.094214124 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066003258 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065484723 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.0909895 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.06931484 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065053166 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092128326 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074329583 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066734368 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.096685668 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078338961 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.089471226 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072438595 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064077233 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.088932278 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079535332 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.09787768 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.06660003 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067779556 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.088222698 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072504807 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064234479 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.089419695 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065773182 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064633259 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.095184027 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065880123 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066666287 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.096629125 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077932175 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.088405989 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069470033 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06682191 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.088431976 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.071501963 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065722875 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.088960106 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.068001071 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061883058 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091570466 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066334542 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071616055 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091614362 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073470975 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.065921954 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.096871675 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069573529 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.093921248 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071813599 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064232657 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.080444866 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069529674 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066974543 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.089753279 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066924056 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066634399 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.088778793 seconds)
done (took 13.210708347 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067733753 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.167967216 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.121142795 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096012875 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.10979521 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067076037 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075423129 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.125802652 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.090973254 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102775857 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110195759 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085311185 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.136186768 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064544822 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.089555304 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070221386 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066151793 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.111547278 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.124162045 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.08719594 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.134735764 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064444847 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.118932884 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089645493 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.111765229 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.115614718 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067779914 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068949442 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.092576973 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.101491297 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.109971316 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069929141 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065614716 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.122618423 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.11602583 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.084137305 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.088905392 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083937572 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065283978 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.09004186 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.087680612 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.123322297 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.104088937 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081899652 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.071028167 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.093764872 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066918647 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.107380651 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.087863791 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.104249088 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.1091123 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.105453753 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.092796621 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.081074744 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.088036804 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.086282901 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.104790447 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068375933 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065898833 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.092472068 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065616576 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068676147 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.11073621 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.113127388 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070936107 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.104361285 seconds)
  done (took 7.28234358 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084013764 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.088443473 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.108195181 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082753752 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.090073004 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067143658 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065768238 seconds)
  done (took 1.686947246 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067546409 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08785664 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.11337013 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.087954392 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.108415602 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.086582923 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.099814521 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067467668 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.081810142 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.092884489 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086401326 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.125835779 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067424598 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.097120631 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.09050574 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066071017 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.115198293 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.065798182 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.093963079 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090705038 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.092257967 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.086866996 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.067715433 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.091724942 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080753593 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.090383112 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113889814 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095051989 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068667825 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069543927 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.088474343 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.103983018 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.104600191 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.07416574 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065644565 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.106151135 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080573524 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.08956912 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082473375 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.070845097 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.105614 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067168423 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.092116999 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065672551 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071024635 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.101963919 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068224241 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067055631 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.094493819 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086132739 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.092028734 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080876156 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.065801944 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.094913218 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068313182 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095187275 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077594207 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066862161 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.110590081 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068318047 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.107380613 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084265243 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.07958458 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.108133977 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068617408 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.104382596 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080196304 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068764434 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093733722 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069964365 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.107416007 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.065022786 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067744391 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.102829516 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069009879 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.11396196 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.090099162 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067738773 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.102900467 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067111448 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.091141762 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.068308646 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088069736 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095567053 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066901426 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.094271008 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070991013 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064762587 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.090146716 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072023913 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06427117 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.092605662 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.070497316 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.066750302 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.093852112 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083721317 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.091342804 seconds)
  done (took 9.349114081 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069191042 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068288915 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.093027258 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.06881177 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.066907734 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.092406913 seconds)
  done (took 1.568555869 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.094438891 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.092850355 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081566234 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071475337 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.129254445 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.080480747 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.107311836 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.10322244 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084407984 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.077847454 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.106606159 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.081070203 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.112675337 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072349796 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.105566605 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071749191 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.105978443 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076496451 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.102737423 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074046694 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.111054358 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.074140069 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072962872 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.106251588 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.070747258 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.097226211 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.076742306 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102830142 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079175678 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.103072752 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.07351958 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.070136552 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095253478 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078449835 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.106154841 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070380429 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097376231 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.071566732 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100061943 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.071344993 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.080801923 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.098245971 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073959939 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.096127209 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078297165 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.095111877 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.071492501 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.10005246 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.08120721 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.094217091 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.072553478 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071005648 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.095645923 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.070947394 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.094366385 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07925633 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.095254779 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.082143161 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072047667 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.096295464 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069318349 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.094532704 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.079110313 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.094376947 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.08026055 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.094481235 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.071608766 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072691602 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098344189 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.07218516 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.095442174 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.070122872 seconds)
  done (took 7.365116314 seconds)
done (took 28.34930567 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.67517606 seconds)
  done (took 1.784730276 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.748878469 seconds)
  done (took 1.859555332 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.945626118 seconds)
  done (took 17.064040791 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.59442944 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.751059555 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.782132968 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131136416 seconds)
  done (took 3.369930446 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.899384588 seconds)
  done (took 2.035272359 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.233661847 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.222392882 seconds)
  done (took 1.571543071 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.809153204 seconds)
  done (took 1.934491427 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.275664182 seconds)
  done (took 2.392195014 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.314740989 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.176939546 seconds)
  done (took 1.614336537 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.475324745 seconds)
  done (took 1.596463502 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.817186693 seconds)
  done (took 7.946000785 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.204079941 seconds)
  done (took 1.344821629 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.264846314 seconds)
  done (took 1.397842316 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.338646792 seconds)
  done (took 4.468013543 seconds)
done (took 51.499054448 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078621043 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080475569 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.105489682 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.07776642 seconds)
  done (took 1.466746161 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077787341 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071790883 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101239973 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.07253281 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.101030239 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073250726 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073529389 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.103090256 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07149007 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097241279 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072674304 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071060647 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.100596372 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073820561 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.095676377 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.07595426 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098769997 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073595766 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074514821 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.097716432 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071066002 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073744669 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.100335773 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071036679 seconds)
  done (took 3.130952953 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.07788673 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.071252127 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.098478531 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071592134 seconds)
  done (took 1.457150642 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077781328 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.090124501 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.11513889 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.075663959 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.117395665 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.111569316 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069672489 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068280619 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.095377356 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076955619 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.066574143 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.121108801 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.112242524 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077722653 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.077773549 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.091553818 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068769414 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.112109881 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077132377 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.076566984 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.095752738 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.079674123 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.091870589 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088993753 seconds)
  done (took 3.275183824 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078022564 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.100491039 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.103072896 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.086670372 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.115327769 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065464881 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.099945146 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088309168 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.147900163 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065421713 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.094944884 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066910185 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.0717171 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.090109754 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076407268 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.129270105 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.109846454 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067446447 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.120957626 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.06508021 seconds)
  done (took 2.98453848 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073168003 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069242001 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088938019 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069359746 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077239604 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.096659233 seconds)
  done (took 1.618997868 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069883801 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066907788 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090907121 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068133944 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.07165247 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.091437276 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.06664686 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066469964 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.091941192 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067572603 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066664532 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.090963951 seconds)
  done (took 2.047920788 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.397277702 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.095362497 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.06874843 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.091132328 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070458085 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.090816029 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080804357 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067106743 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.116437997 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065983447 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.091115704 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070184026 seconds)
  done (took 2.445309451 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258262661 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076634228 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.289582869 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162434353 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137578935 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141520251 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130867836 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139637487 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.171148635 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128401327 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221184929 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194849997 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132906106 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16399652 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113626035 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.098007364 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209187687 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188514189 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129853179 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217110471 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172509712 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1519171 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174756473 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127183416 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132365568 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149743221 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070583551 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105619424 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224676818 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159127281 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172659804 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136796984 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11964017 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229971551 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224405798 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169864884 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160261088 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083430559 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.153901614 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.161837225 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253939933 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114101526 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192253145 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133103248 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104549089 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168055945 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146788955 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.144177357 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.132823614 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088712027 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19700786 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208989256 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.190606307 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08662847 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136932091 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140792153 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.140894868 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128605823 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236298629 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186926193 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152169169 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.09516687 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098923195 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204882825 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157640375 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.13443342 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.152520288 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092004714 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185341503 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182412164 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145274231 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1684711 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.184176424 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08762457 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144300286 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191266059 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155514261 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195749208 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150494901 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.098243382 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152048725 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128750051 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081441219 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.166272812 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07458813 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227513476 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121958672 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.106074529 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139212517 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133745686 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134533252 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18931405 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199209747 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128052217 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065354599 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127436681 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.144704152 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1745699 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112778717 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106681741 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140685573 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.103422183 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165685336 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.09943029 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148766745 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.074946722 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150627101 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155527438 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.101566833 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150408096 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100360825 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.125603756 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158792232 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213399188 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088557162 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108514355 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192618708 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148687591 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.13071345 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.192886811 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.184494766 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.122940167 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10351326 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205378924 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232628455 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089224851 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217286952 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13421341 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083223872 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.113004432 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150337285 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138764829 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.148274915 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081958598 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.145341655 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222995502 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.073779314 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121358322 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160211036 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104795199 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08088023 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130644877 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126952769 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094601143 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.126691475 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.132167579 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166991634 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150561118 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131811856 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151702729 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124093336 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224270317 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113893395 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100089704 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129683933 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.06905387 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.188803863 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185154067 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078080177 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219503082 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.149701815 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130450982 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14458305 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081845412 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165731148 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105951585 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069238501 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197780878 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135494827 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109819266 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.204601525 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103671335 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.179311321 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.146510653 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163414393 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158252338 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.155557739 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132051681 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.086476408 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137125804 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177981644 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.074415683 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.117540024 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081283088 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130221916 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121967088 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083354195 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16803996 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17952299 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099514484 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137367282 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124096849 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173312144 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.102304339 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156987259 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.1451948 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093590503 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.207174091 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179110539 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157741952 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125894881 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198390141 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071219062 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073163816 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.118399386 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148925317 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108792226 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083980029 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144611787 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.199539992 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157273765 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165678004 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137454557 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148904847 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182028216 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.068880821 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.141832209 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174493749 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148209276 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.152099394 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091214197 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.12521975 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168416569 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135593996 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235730681 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141266915 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150374942 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209344667 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.098829791 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107366877 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131863829 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16419267 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132563006 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172183308 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126489172 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113633341 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109640988 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.101618918 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12736278 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156162427 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148124928 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163049028 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.141009669 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158370452 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103852093 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144120663 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14731063 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150346824 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063343299 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145613596 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221307054 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120264903 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145303482 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182210437 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10563894 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.150174689 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205565093 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200689417 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082971574 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136396238 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144982763 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153656638 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146463123 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.193304803 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110850169 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187797775 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109143572 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.112303113 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085604851 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124021086 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131883126 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.119997226 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.135621386 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.140757617 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.09503337 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159252096 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130185825 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136806275 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145005163 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.095630764 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.117043387 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122971616 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20203427 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146779782 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227386946 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.12472703 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.173833267 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220436949 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074289599 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106456661 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078560621 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165267158 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111456857 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159132492 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.123856024 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105081714 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17573028 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171126072 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093293265 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.095602352 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135062319 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164438601 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13780766 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098237086 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.13213494 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217696363 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.101096176 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107449889 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140809942 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103847775 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12980085 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229233922 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.060939088 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125590772 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074732493 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107789357 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154346493 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206283964 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081153115 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.12674789 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142512538 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137649233 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179776007 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103133737 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126440045 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141335209 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177797459 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155255083 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.116897236 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139362167 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156719322 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212427533 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133257912 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096316048 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227123642 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179917835 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.215988765 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.114247971 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113782813 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141360399 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135251446 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19521002 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082566604 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22002914 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081485294 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19289983 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131798622 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0907515 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183701536 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.0992487 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115406101 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175772587 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145254124 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109473903 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077415241 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162482617 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148043427 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13433241 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.101629186 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168787177 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.071573268 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187877782 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198533313 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107658637 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103973605 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123357077 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105726962 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134567844 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101444725 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114145556 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.121202415 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226175667 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.114768719 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204275662 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171210894 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140279223 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165553477 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127782021 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.663302731 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077020559 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20809572 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146556535 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228888557 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096299606 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144621569 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135313686 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151983174 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200457445 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13159565 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.175264012 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158005866 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.143476688 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107268651 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129809473 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129767478 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089088693 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131839356 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14117881 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14465377 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.120197046 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.143019353 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152883646 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081137458 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122793873 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182390797 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144306452 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199785171 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168011138 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084016032 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145695 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195439479 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079503722 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.149544717 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209328774 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133762014 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125077138 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.08172284 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.128997193 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224842946 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.075120932 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218368398 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148074369 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109197246 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140739864 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.16846142 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161764726 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136325595 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14962392 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093608112 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.137646597 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139539616 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109928895 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076684875 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132344306 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140106878 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.123533545 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124680913 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.122150332 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180447961 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.098871938 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096539721 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131023972 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200792188 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204872037 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.115501337 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082032962 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146282219 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14078587 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.142185563 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148391574 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.107037889 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081858359 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.109689114 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.103051384 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.135756392 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140592234 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131007374 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139005257 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193589976 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.109904818 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.221723631 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12392006 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131590898 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069897623 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.105659842 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095099552 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126434142 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137004367 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127644291 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198792968 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.123251057 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.116520726 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09414112 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.100628321 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083322229 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154753082 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138393369 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146162325 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125984579 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062005374 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13678432 seconds)
  done (took 69.468692624 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.136406649 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.109673169 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.123444225 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.176591198 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.151199351 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.240895578 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.183910325 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.227632428 seconds)
  done (took 2.562345534 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069400474 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.119530503 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.098980777 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.109044923 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067689342 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.095054452 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.275697834 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081196061 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.094018312 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.08866831 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.106687958 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094045472 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.473876276 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066356976 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.093024245 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.063725033 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.093449194 seconds)
  done (took 3.301044279 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.421877699 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.657241353 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.423246717 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.100865375 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.99088238 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088983215 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.621273535 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.167611625 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.070804281 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.449425559 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.754179445 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.135348999 seconds)
  done (took 18.095043036 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.074888353 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.068063646 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.110693458 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.082788082 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.070764022 seconds)
  done (took 1.631865306 seconds)
done (took 114.61059184 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080611934 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.34270645 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053543488 seconds)
  done (took 1.650536702 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.083123485 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.083030657 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.110976047 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08093179 seconds)
  done (took 1.586297944 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.075425534 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075219113 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109904134 seconds)
  done (took 1.487161366 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.282266463 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.137689064 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.115537607 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082612887 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.07673824 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103784433 seconds)
  done (took 1.489609369 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.07276278 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.07299927 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.099430296 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075372051 seconds)
  done (took 1.542516109 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076400593 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052475652 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054338624 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.082244263 seconds)
  done (took 1.494408866 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.08628099 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.077403447 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.105658333 seconds)
  done (took 1.493228039 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106159132 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.111631466 seconds)
  done (took 1.444239075 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081833158 seconds)
  done (took 1.305853091 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098882503 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.139642075 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.155448861 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.135895219 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.164140489 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.137575801 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.112839788 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.088587704 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.104514818 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086815637 seconds)
  done (took 2.454065549 seconds)
done (took 17.789606937 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078968128 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.480684919 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360690178 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089276109 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.696824833 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355172642 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.022537009 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090402725 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.147710161 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094453606 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083918252 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649682739 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.012598886 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.413044918 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.999674066 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.319210807 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.673639392 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069013456 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06662068 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094073723 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.980383696 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.065980928 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095700263 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067311548 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.672553686 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370828303 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.066485167 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.34586876 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067139213 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.094401002 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355665132 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067468036 seconds)
  done (took 16.268180809 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071370915 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.142001108 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074385877 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082461615 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.098053427 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069683612 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.097948443 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069536923 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.150520816 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067618249 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110646972 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068753564 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.070642007 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095955044 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087093605 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.093456796 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069498158 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067650618 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094557132 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068619622 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085306063 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094932538 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067973793 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094531735 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069379731 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.078461737 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095390252 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068343167 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068068568 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097890231 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.0701628 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09556457 seconds)
  done (took 3.972200017 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115139622 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.151343931 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073973121 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.128834626 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111638142 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.097939242 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.140947379 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.12109758 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.154171131 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067659821 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111611176 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067805338 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126618022 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069543236 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.0866896 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.096882328 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068232915 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093920275 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069383504 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068240587 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.113809533 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067563235 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.093311626 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069869485 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067147635 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107962987 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068393825 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.066949756 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095772025 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069717482 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.098483175 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068761166 seconds)
  done (took 4.240789006 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.07237828 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.073607693 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.10944183 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083410022 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.067800928 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.09915226 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.07248116 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.095457943 seconds)
  done (took 1.915124732 seconds)
done (took 27.627424736 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078774729 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068451216 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.098530222 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080732797 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.071327025 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.105742383 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.065924214 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.100809812 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072605483 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.071738868 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.102072808 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067896879 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.069650152 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.095101741 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073530266 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.066674893 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.106404462 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.070393039 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.105700034 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.078720143 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.068626049 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.100878112 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073704652 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.105904593 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079269343 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.104836206 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.078016867 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.071656191 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.096788322 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070019646 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.075361922 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.111074401 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.067881146 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.106599505 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068502551 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.06681704 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.099360652 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067953778 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.104758595 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077436556 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.068107125 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.103826513 seconds)
  done (took 4.747678794 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087546828 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089617359 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.111843704 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.06088673 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.065592139 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.092589863 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087512869 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.086768978 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059874221 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086826494 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.083110357 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059266365 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.061953303 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.052853102 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.087802802 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056487123 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.060378424 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.083252559 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059608462 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059052455 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.056881743 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.081354695 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.06052689 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.061373286 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.083292932 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062465558 seconds)
  done (took 3.136592582 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075450417 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.082297974 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.114948224 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.124617827 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.132268708 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076041083 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.106591765 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.086938994 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.112130668 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067656737 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070346989 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.12108469 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086700033 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.100721276 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070675084 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.082485671 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.109553273 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068904511 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.100375893 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091356051 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.083411545 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.105411842 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.090764548 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.107360539 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067841619 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069032459 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.098978009 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080589373 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.0983621 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077160034 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070498524 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.099095992 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069477451 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104465308 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072539962 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.06867684 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.116932142 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076598407 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.104071522 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068620331 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.07044186 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.09582406 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.099204121 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.139059484 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066970515 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.072600676 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.10417047 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076352465 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.094494501 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086402662 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077201102 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.095342462 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070545985 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.065013299 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.096018546 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079948499 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.096206308 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070868311 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.075215715 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.098489456 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.079141437 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.069798352 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.111010818 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066272415 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.102506019 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066597872 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067040596 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.09410255 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.091829952 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.095324289 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.107148237 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.067578825 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.096960009 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075119904 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.102626005 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073533911 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.066284632 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109932139 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077277058 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.09822684 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076222808 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.069813352 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.098502982 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087464181 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069111418 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.097266697 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068409119 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100264458 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071221521 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068818051 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108406619 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068468518 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.069458704 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.112051305 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066560721 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.096624189 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074164935 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.07070367 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.095076013 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078070343 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.099764917 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068537336 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.075461534 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.095716578 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070730899 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.104368448 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074262735 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066109182 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.099620567 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073418441 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067084634 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.097038328 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070264354 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.09591689 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.077830849 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073723306 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.101021724 seconds)
  done (took 11.36695713 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.184672269 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.151608886 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.098996891 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.173009934 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076293788 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.077314389 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.175140193 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.122633379 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067859714 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.066955996 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.098318706 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.113555859 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.134968789 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.149954712 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078238785 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.097144365 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.08279979 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.145258196 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.175971028 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.141755787 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.111969947 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.07567648 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.098194947 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069330206 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.07401159 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.110806068 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.089556766 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.104616748 seconds)
  done (took 4.399722829 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.080901887 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.127938581 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.07416138 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.08708161 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.119727269 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067040023 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.09867983 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069978527 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.078331612 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.108238087 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066088324 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.101951983 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074482358 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.100560224 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069049492 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.073474498 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.103244369 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068929442 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.069710353 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.101188116 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.076199464 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.108214968 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071570263 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.06555239 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.102587656 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066616304 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.092336296 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.08423702 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.095875304 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.088715445 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.064536948 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.102471068 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.079925095 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.096185606 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.06736933 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.066705231 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.095251348 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067535168 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068512163 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.095026977 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066577926 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.056769069 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.094992104 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.078958533 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.100659761 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.059570641 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071041972 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.100904456 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073454372 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064524664 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.098780935 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070511133 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070054141 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.104730722 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.071716693 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.100213659 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069928264 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.06506476 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.10363827 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.06828563 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064043099 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.094451906 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.07295162 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.064649766 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.104605256 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.07229799 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.093694663 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068642233 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069481126 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.101274322 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068292574 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.069336485 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.09299695 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069342103 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071019598 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.100546365 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068345173 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065390098 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.096843828 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067849307 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.05484857 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.096893434 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053425554 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.069473933 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.093994634 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065321394 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.065948953 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.100787749 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079089955 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.097869808 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.07276646 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.095336511 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067072042 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070486125 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.088324711 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.07100442 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.081901511 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.110998194 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066787805 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.09358085 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081530728 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.097920551 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068049342 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055564168 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.101114799 seconds)
  done (took 9.823875909 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.093641647 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.08644868 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.098062731 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.082122548 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.117917169 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087087803 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.073688442 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.102569681 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069238426 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.106939605 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.069064424 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.07510626 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.095150076 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077216956 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.093077735 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103588061 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.068672472 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.104463583 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072708023 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.099532502 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111532207 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081294603 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.108148403 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068937403 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.072199558 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.109057571 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089473595 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107314835 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.078799715 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.084244784 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108158628 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089906376 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.113696991 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.073082469 seconds)
  done (took 4.337114333 seconds)
done (took 39.046408544 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.3323378 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.548517585 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.313993267 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.301795432 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.324485034 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.340447063 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.327665907 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.317245017 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.673211159 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.317107619 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.575451618 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.055773656 seconds)
done (took 60.690981772 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.484394813 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.462112993 seconds)
    (2/2) benchmarking "String"...
    done (took 1.592294874 seconds)
  done (took 4.325530437 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.690286849 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.236095812 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.581392987 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.318018889 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.32215834 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.641006905 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.040337312 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.180175446 seconds)
  done (took 28.578496715 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.321898651 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.698577389 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.955194754 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.865535867 seconds)
  done (took 19.102566104 seconds)
done (took 62.441113219 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.313372819 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.405073183 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.368218828 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.304198993 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.43265128 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.346739182 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.338656967 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.441826698 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.320222214 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.306328821 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.320901471 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.325373403 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.327302356 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.449173606 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.338202188 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.321170763 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.349513871 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.024034865 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.730273703 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.331312172 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.351816981 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.362457361 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.322686191 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.321559845 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.325799284 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.321205169 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.31971116 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.340270713 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.749081158 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.322513111 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.425494389 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.759854867 seconds)
  done (took 194.278569496 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.320451652 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.292062818 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.393561195 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.374956844 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.843521312 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.52169929 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.459407347 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.903639155 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.339770002 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.336202658 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.557090344 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.322249643 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.621509293 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.291565215 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.330265871 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.430223422 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.55807737 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.664075046 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.338452285 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.595361885 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.330873832 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.481029045 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.394734509 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.52645716 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.32963756 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.392529019 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.331118776 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.331965535 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.513374752 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.479826043 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.350817505 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.370969508 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.923668308 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.183592235 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.330253784 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.361988726 seconds)
  done (took 154.393383882 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.614359341 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.323319595 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.321586549 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.322523465 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.354062281 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.322557842 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.321401889 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.880265618 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.883623231 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.855618653 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.744184446 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.38419543 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.551389787 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.322528121 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.415782651 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.336025421 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.323749276 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.337603217 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.348109787 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.322998568 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.323374398 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.879145206 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.337359969 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.348340621 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.331408153 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.32415027 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.354980579 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.717885749 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.323373315 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.355328218 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.645217626 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.371418704 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.323528192 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.659023438 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.319309274 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.324899059 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.433347161 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.325779838 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.355442271 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.324915024 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.594828515 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.324017072 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.324525078 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.327260447 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.941706691 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.326340349 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.882311274 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.326160073 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.280015179 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.326573148 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.324310626 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.834720575 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.912678711 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.326948267 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.323500399 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.327454346 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.324272305 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.324359017 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.35653334 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.828107665 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.426719508 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.326107743 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.328050787 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.356495454 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.32542463 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.749763671 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.327136235 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.51928135 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.383755427 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.442023774 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.885150883 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.326972774 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.418362837 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.444873554 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.325362745 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.325269522 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.32513555 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.326059265 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.432660761 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.326305991 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.74159127 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.326559604 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.332526621 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.327123605 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.385893561 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.421331271 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.326331767 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.678244348 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.328570312 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.327346093 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.046553668 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.420352844 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.327523277 seconds)
    (93/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.326364772 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.326750882 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.326280065 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.737642083 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.888290897 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.553848374 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.329529543 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.848566675 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.331212834 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.750538308 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.870655615 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.983149504 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.329023941 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.434891587 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.330350414 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.328809182 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.327227037 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.35564643 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.32699129 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.385759665 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.329021928 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.724740913 seconds)
  done (took 360.312230427 seconds)
done (took 711.859101371 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.010308673 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.998567538 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.116891623 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.997591708 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.976369625 seconds)
  done (took 11.368794905 seconds)
done (took 12.637077872 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.522380005 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.522737858 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.390655455 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.525297592 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.358368416 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.542708275 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.502753816 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.348814676 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.434883615 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.412495506 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.435244014 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.384294183 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.357786906 seconds)
  done (took 20.00834243 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.650441544 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.647234808 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.391962062 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.648882391 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.367943399 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.644752482 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.522928674 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.535947536 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.521672201 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.342324011 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.341480532 seconds)
  done (took 17.887184424 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.653760516 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.65702362 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.395636127 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.653471857 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.369299463 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.650691045 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.523458627 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.542872375 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.524523749 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.34374946 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.341061681 seconds)
  done (took 17.926163741 seconds)
done (took 57.090862662 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.338625929 seconds)
  done (took 2.60964379 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.36995874 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.540535979 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.357299217 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.342034574 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.339893387 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.338193557 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.342862159 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.339416657 seconds)
  done (took 12.242563164 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.336209285 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.338036474 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.335274715 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.335232373 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.337171351 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.337716883 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.337996924 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.334296087 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.336138614 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.334928328 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.335724833 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.338298882 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.338419459 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.33515294 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.338421958 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.338352876 seconds)
  done (took 22.658888398 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.336515325 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.336223368 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.335697753 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.336231882 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.336138222 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.336930064 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.337324718 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.336224838 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.336198676 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.336129804 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.337331696 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.336044563 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.337693466 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.335959795 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.337252909 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.338464852 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.337636467 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.336804523 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.341804789 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.336923693 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.337534242 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.33732644 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.337999641 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.337090659 seconds)
  done (took 33.364438541 seconds)
done (took 72.146065645 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.457059712 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.02267221 seconds)
  done (took 9.753542137 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.340133003 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.339961499 seconds)
  done (took 3.954884571 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.340324486 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.339373634 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.339684165 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.34038858 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.339898995 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.33994097 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.340369709 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.340045227 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.339951954 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.339768454 seconds)
  done (took 14.673283934 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.339909164 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.339492086 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.337072817 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.339868041 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.339968729 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.337298149 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.340055915 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.340425777 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.33990647 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.337582905 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.340183437 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.339047855 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.340236639 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.338426307 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.341090342 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.339495366 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.338096385 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.338478772 seconds)
  done (took 25.380909366 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.341240246 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.341588312 seconds)
  done (took 3.957602245 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.338026094 seconds)
    (2/7) benchmarking "second"...
    done (took 1.338158096 seconds)
    (3/7) benchmarking "month"...
    done (took 1.338664802 seconds)
    (4/7) benchmarking "year"...
    done (took 1.338397104 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.338629918 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.338229514 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.339025876 seconds)
  done (took 10.643132589 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.342726006 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.513932417 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.590740048 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.030011991 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.343549053 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.345240162 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.291457806 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.345324352 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.347957091 seconds)
  done (took 15.426129229 seconds)
done (took 85.062196425 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.364988804 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.334817047 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.259670734 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.349276575 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.353231424 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.678709689 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.38022789 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.460952979 seconds)
done (took 38.45818241 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.336705685 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.054431465 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.076474895 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.353679765 seconds)
  done (took 11.761079828 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.327436737 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.270038098 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.326898836 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.405206331 seconds)
  done (took 18.607689911 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.971515449 seconds)
    (2/2) benchmarking "read"...
    done (took 1.669889301 seconds)
  done (took 4.917950696 seconds)
done (took 42.899104157 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.342434723 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.340678369 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.342803447 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.341114297 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.342395798 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.340105293 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.340023877 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.343414225 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.343415318 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.344295946 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.342882408 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.339898471 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.343487389 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.342553187 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.340312575 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.342199157 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.342711183 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.340662821 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.344027422 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.340507853 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.342030002 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.343680939 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.340745563 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.341872639 seconds)
  done (took 33.486113639 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.344765904 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.342455232 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.344832193 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.343621766 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.341320101 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.344621684 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.344123793 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.341588418 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.344784339 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.344024378 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.341818873 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.341680233 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.343731386 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.342518701 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.344156976 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.342287547 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.344081301 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.34219945 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.34459178 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.342224648 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.344324985 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.3423328 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.342140508 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.344740306 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.342036759 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.341630481 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.345346132 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.342664631 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.345203865 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.342281962 seconds)
  done (took 41.576999249 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.35015036 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.352621988 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.344942298 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.345993004 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.345971713 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.345697041 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.346160185 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.345765574 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.345892672 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.345437914 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.345706754 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.346181255 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.345084127 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.345459816 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.346028223 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.346133066 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.34659162 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.345855432 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.346218627 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.346393245 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.34668945 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.345738145 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.34585251 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.347869134 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.345548707 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.346587837 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.346089124 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.345958958 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.3465243 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.347117285 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.346437845 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.34756524 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.347440155 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.346552564 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.347651068 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.347338944 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.351540471 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.354145468 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.346710885 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.346863339 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.347557944 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.347731691 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.346787698 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.347037814 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.347507016 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.347060072 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.348315763 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.34739684 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.347125713 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.347774617 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.347919826 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.347620103 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.3484055 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.348023955 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.34796136 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.347487703 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.347432061 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.348062046 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.347950829 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.348028779 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.348468493 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.348451971 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.347330864 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.348468426 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.348811322 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.34830371 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.348557035 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.349046566 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.348934055 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.348914538 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.348699789 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.348900658 seconds)
  done (took 98.292590189 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.348727962 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.346013826 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.346499654 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.346138522 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.346686542 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.348635266 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.345915456 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.348896742 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.346063641 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.348461892 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.348813811 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.347549243 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.347138173 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.34875398 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.348840285 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.346386719 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.348815315 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.346890714 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.349700953 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.349245826 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.349253812 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.346900076 seconds)
  done (took 30.933528333 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.350097814 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.349488205 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.347976107 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.349831613 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.347712492 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.349804331 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.351739307 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.3501071 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.350309545 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.348088435 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.348871254 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.350409224 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.348763625 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.347788719 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.348322438 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.347664185 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.35066359 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.34843325 seconds)
  done (took 25.569811555 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.349619698 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.348110823 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.351104231 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.349234556 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.348943894 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.351322402 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.348206939 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.350829413 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.351993917 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.349406543 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.351597543 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.351487621 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.35187936 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.348492346 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.35134908 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.34888364 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.351308027 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.350287534 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.351279026 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.348452988 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.349795416 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.351224559 seconds)
  done (took 30.990397603 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.351595 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.351082916 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.348339716 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.349055293 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.350146283 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.351946378 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.351178096 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.349314495 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.351947294 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.352162084 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.349350274 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.352271664 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.34942442 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.350513595 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.349726874 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.349164908 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.352381892 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.350293684 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.352571713 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.349938343 seconds)
  done (took 28.298095142 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.354229228 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.355121406 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.355018254 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.355407844 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.354775714 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.355438669 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.353796108 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.354429216 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.355189006 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.355981859 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.35508615 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.354235125 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.355331103 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.355159949 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.355734344 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.355015914 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.355252237 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.355953688 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.354793794 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.355852475 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.356242072 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.355451498 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.3559112 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.356381557 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.356071141 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.356255782 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.35554408 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.356109052 seconds)
  done (took 39.237416182 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.35480725 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.354208607 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.351547666 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.352304889 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.351978484 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.351438187 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.351925993 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.353370794 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.354279083 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.352063274 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.353879652 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.353823582 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.354543187 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.35426758 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.354345184 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.355356794 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.355166581 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.352285407 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.352632159 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.351945226 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.354910202 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.355512453 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.355030051 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.353381749 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.352669495 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.355784784 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.352952568 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.35302483 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.355749229 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.352672371 seconds)
  done (took 41.896775054 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.375502615 seconds)
    (2/2) benchmarking "in"...
    done (took 1.373388401 seconds)
  done (took 4.037920719 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.353398464 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.35543213 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.355596146 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.353037671 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.354566189 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.35596927 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.356122147 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.354029351 seconds)
  done (took 12.12761978 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.357391713 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.355935605 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.355825389 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.355551781 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.357646899 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.35796514 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.366791871 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.374265803 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.359558668 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.358138198 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.363689263 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.365983319 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.362978624 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.3579056 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.357785751 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.360221892 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.357461108 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.358483257 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.358468035 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.357470343 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.358828091 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.360849444 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.36074541 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.355502078 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.360143597 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.373010706 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.366099748 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.35873419 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.359103547 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.365810396 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.359369926 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.355431958 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.359940594 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.359074775 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.358601281 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.360073047 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.371308166 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.38099754 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.368543709 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.360187957 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.359017688 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.357003228 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.360485762 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.362871459 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.361378429 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.360155039 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.359448606 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.356117279 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.3593578 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.362729149 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.364513447 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.359047855 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.357104642 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.365716697 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.361330827 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.368667209 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.378733938 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.362958603 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.368536373 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.374104829 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.37600385 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.368863554 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.362569575 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.361397376 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.370565629 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.384039844 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.370410785 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.375028152 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.357680921 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.359713073 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.370634033 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.376001927 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.371205365 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.361875986 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.361363298 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.360938015 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.362057445 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.361201736 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.372166459 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.382488399 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.362503652 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.362387947 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.372556053 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.383318505 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.361166486 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.361705029 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.361843826 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.361998795 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.363252826 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.374755092 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.380312602 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.361173376 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.360977696 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.362182094 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.365326882 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.362721835 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.361608501 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.36476563 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.359360723 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.362048694 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.362830099 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.36600345 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.372236183 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.363949528 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.363533268 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.372044232 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.362352531 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.36273212 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.374969521 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.362848038 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.363470191 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.364187228 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.37204999 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.359259286 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.367263937 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.372196108 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.363143157 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.365820207 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.364084013 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.363708987 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.374373481 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.390348856 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.363349834 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.363141662 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.368727756 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.375987505 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.364385736 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.368220935 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.36376508 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.360088525 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.360708366 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.366071745 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.363408045 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.365619371 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.3639876 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.366816549 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.361720355 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.363804288 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.36477297 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.366062718 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.366791664 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.366188633 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.366451108 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.367960535 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.365131086 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.367739397 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.374886136 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.366046658 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.366291067 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.367423893 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.362051295 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.36561949 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.367808632 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.365631229 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.36718024 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.365543168 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.36473946 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.365890416 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.364999624 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.365515809 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.366041044 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.366236217 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.369126325 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.365732429 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.37252033 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.365145307 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.363555342 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.365717468 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.366181532 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.366538625 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.366218923 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.365110575 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.369504348 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.373706879 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.36653751 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.366822587 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.37149806 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.366865149 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.366638513 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.36788446 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.369951616 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.37522815 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.367467289 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.375363503 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.368149609 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.367306003 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.366739102 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.368349438 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.366574143 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.367254499 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.370890176 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.374699137 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.382695423 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.378460995 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.368428748 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.370924755 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.36860234 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.37066954 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.374348371 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.367660388 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.367439376 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.367253477 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.367392613 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.366806193 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.372463021 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.368275098 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.366839119 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.367274023 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.367544109 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.368586335 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.368167513 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.369437274 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.370845042 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.365392314 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.367609815 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.368362434 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.367611127 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.365653068 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.36703544 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.36806948 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.367928407 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.368617211 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.379864566 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.365993772 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.370233828 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.370089686 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.369410145 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.367796518 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.368647692 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.372192722 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.370812365 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.379238818 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.388731697 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.371218367 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.378377093 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.38674354 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.369204473 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.373932902 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.36877905 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.366428482 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.372338755 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.377036126 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.369762156 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.370553168 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.371048851 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.370435618 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.37078477 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.379821181 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.367531594 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.370110338 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.370028449 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.373492131 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.367238243 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.371516722 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.371574518 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.37118915 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.373408443 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.370896061 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.370436453 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.37331623 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.372197684 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.371220658 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.37110495 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.374245106 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.378171736 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.378504328 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.372538085 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.374826332 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.372700264 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.374588026 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.37188454 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.371649479 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.371739546 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.386754935 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.380433573 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.38094365 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.375605126 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.371243198 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.380438378 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.373277377 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.376553035 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.372774789 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.372877605 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.372349793 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.371728206 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.368608519 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.37398007 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.371127076 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.374105974 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.372967398 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.376339741 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.371312798 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.372275124 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.372165784 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.372016976 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.371772983 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.37307505 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.372061234 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.378238963 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.373649365 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.372831271 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.373077386 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.381945473 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.391431157 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.375414615 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.372543903 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.373464173 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.373024284 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.374476499 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.372838141 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.376891261 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.381980426 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.376931087 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.384671464 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.374463021 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.38540739 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.373807805 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.377185275 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.381994969 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.371998391 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.373406517 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.374400777 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.374603663 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.382964469 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.392864222 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.374647899 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.377851376 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.374270383 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.373874311 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.374746749 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.374125091 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.374037636 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.375625824 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.385992383 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.397662422 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.378875004 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.377012861 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.372417188 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.375269097 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.374248048 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.375086257 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.38112586 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.376079781 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.376616738 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.375354096 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.376068475 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.374056897 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.374753636 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.374947702 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.371750404 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.374132857 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.384173379 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.393980478 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.379308005 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.375141679 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.387956676 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.376083379 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.384956813 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.39417598 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.377309968 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.375860387 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.375104234 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.379571704 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.376252931 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.379246333 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.37619988 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.377059203 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.379606753 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.376276596 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.380053649 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.376288244 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.376751813 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.377993844 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.386514511 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.3986964 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.378692703 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.380641674 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.373957297 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.37839445 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.381352776 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.377286292 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.376127456 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.380752257 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.388323406 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.385532628 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.377394785 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.376999448 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.379351361 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.377832838 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.377063459 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.377501363 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.377848675 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.377996193 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.380803429 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.378381714 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.383864851 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.37764505 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.378768816 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.38128396 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.379393171 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.390816294 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.378493985 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.37963744 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.379240632 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.377021827 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.380030719 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.378234764 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.378214972 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.380880969 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.377759523 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.380258876 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.385922916 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.384829029 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.381895098 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.378298992 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.378566832 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.37944878 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.380870449 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.379597084 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.379632404 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.379859185 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.380413642 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.378740503 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.382015486 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.378038665 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.378025698 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.380007343 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.379378032 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.383151456 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.386748726 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.380013431 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.376150652 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.379351604 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.37917899 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.378383803 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.380982051 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.39178616 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.383311242 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.390321984 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.389413654 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.38435084 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.380698595 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.384165115 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.389987242 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.378720224 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.381787009 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.380750913 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.383730844 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.381844117 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.38464597 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.380802604 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.389620621 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.38255793 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.381808065 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.392782765 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.403963967 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.381212337 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.383324514 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.385280177 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.381997481 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.377721156 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.381100101 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.380719558 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.391481259 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.402651923 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.381071795 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.383646126 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.38057661 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.383522643 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.385940164 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.382105956 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.383300749 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.378851485 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.381850235 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.382342271 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.381956096 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.379260007 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.382595849 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.382288561 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.385916001 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.389299174 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.379849797 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.385677226 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.38350279 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.383276902 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.383181038 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.382753366 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.379530638 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.379367627 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.383270808 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.382896615 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.384094075 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.385707347 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.382954641 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.383778767 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.383698603 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.383261326 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.386362991 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.392914888 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.390562819 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.380009469 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.383149128 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.383613299 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.38628069 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.383332777 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.383759382 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.384917258 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.386665368 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.383733187 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.383565587 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.38372173 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.38673979 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.403123382 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.405474093 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.385223933 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.384549164 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.389874524 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.383607594 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.381652499 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.383082118 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.388406802 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.387829799 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.392837299 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.384984329 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.391777195 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.40265939 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.385810927 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.387578182 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.38744318 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.393673751 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.388745552 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.384937401 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.384426663 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.389299739 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.404404366 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.384006163 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.394940732 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.417235727 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.404329883 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.386516598 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.385543431 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.385513807 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.385854423 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.389630892 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.386476062 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.385256807 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.385817022 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.385644149 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.386931705 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.393068799 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.387632211 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.385261852 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.385667637 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.38675692 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.389732633 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.383326118 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.386533903 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.38729289 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.38647686 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.388369905 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.386758311 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.387971668 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.401145223 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.399209411 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.385844717 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.387312459 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.3832886 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.391815329 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.389624257 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.397868211 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.3947963 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.386679567 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.387161305 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.389072141 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.38694995 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.384761927 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.387865577 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.387367036 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.386807446 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.384374929 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.403770866 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.396219509 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.394372368 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.388684196 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.388289945 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.386774105 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.390405887 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.387762161 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.388512018 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.391500003 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.389461118 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.39216373 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.387793625 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.387687322 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.391611396 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.396539528 seconds)
  done (took 821.168172661 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.385443939 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.384870378 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.385056085 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.384739522 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.384915195 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.386003773 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.385613891 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.385264308 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.386366161 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.385598767 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.385408358 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.386115695 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.385821094 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.386641435 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.38623478 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.386561692 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.386247604 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.385724372 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.385955908 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.386710299 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.386697175 seconds)
  done (took 30.423171448 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.389245612 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.386679538 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.386965302 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.389833897 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.386349274 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.389510938 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.386409333 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.388820046 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.389038125 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.387195145 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.389901059 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.389721212 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.386806285 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.386796305 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.386182165 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.38901847 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.388851798 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.387445042 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.389506754 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.387171571 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.38947374 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.387816104 seconds)
  done (took 31.860992814 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.390745554 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.390914994 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.390201257 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.386950921 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.390050695 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.387345511 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.390555485 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.390420692 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.390783579 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.393206371 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.389766612 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.391961763 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.398226035 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.396738417 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.39485901 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.390197999 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.534473915 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.391258016 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.390626536 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.391090194 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.388711112 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.399289231 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.388081701 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.388306651 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.389489037 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.391889011 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.391366193 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.390500647 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.391319316 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.392650129 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.395707823 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.391859499 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.391859813 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.394211597 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.391480431 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.393313172 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.39577251 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.391635443 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.389433128 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.392203637 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.402316292 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.413388353 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.392974525 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.401658803 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.392786488 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.39147393 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.396114149 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.399957465 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.390527527 seconds)
  done (took 69.714782184 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.392206419 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.39393024 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.389933425 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.392843703 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.392482103 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.393092777 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.392566332 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.39285776 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.390495286 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.390786806 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.393312925 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.3913682 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.390892277 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.393372275 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.392974657 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.389709875 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.389843852 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.390690104 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.391177426 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.390852672 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.390797503 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.393593693 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.392908322 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.390437017 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.392990304 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.391188599 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.389802662 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.393386168 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.391424053 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.391721978 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.393672642 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.393375907 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.39451185 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.392140473 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.39185953 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.394213664 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.393517969 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.391394246 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.394215197 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.392724606 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.394115682 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.394731858 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.393729912 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.394786781 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.39163279 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.392167972 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.391666835 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.391644051 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.392249381 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.394360374 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.394381925 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.392308628 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.394887887 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.392377454 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.395219387 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.395340576 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.392752296 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.392340674 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.395189298 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.391621359 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.391931482 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.394749827 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.393721494 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.39545694 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.396157336 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.393051631 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.393088297 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.396072982 seconds)
  done (took 96.034631497 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.395782072 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.396193439 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.3965957 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.39634984 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.396763332 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.396501824 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.396845337 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.396493267 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.397208906 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.397600911 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.39617113 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.397657759 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.396426043 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.397134876 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.396456837 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.397318783 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.397182312 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.396327577 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.397439646 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.396432104 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.396639846 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.396447555 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.39663591 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.396780075 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.398327577 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.397354113 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.39767088 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.3966297 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.396733429 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.396948757 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.398104133 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.397066702 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.397293476 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.397226118 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.39714909 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.398324192 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.398225904 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.398005346 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.397580958 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.398197085 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.398244185 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.39858651 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.397975557 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.398089282 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.397609258 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.398330412 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.398564249 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.399132583 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.397924908 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.398226815 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.398363687 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.398671657 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.398822967 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.397941319 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.397516568 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.398768288 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.398993387 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.398127395 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.398432855 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.398761426 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.398248232 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.399573221 seconds)
  done (took 87.978340083 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.399414718 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.399786324 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.395705219 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.396771777 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.399561471 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.396093019 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.399309288 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.398772463 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.399678842 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.399822187 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.399401453 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.396830997 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.397632325 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.399300376 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.396890527 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.396960796 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.39766279 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.396737924 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.400258005 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.397043942 seconds)
  done (took 29.294731626 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.397893678 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.400359391 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.397060294 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.397907251 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.399963212 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.397054394 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.39963703 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.400078875 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.397556953 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.399490321 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.400680225 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.400514337 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.397876658 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.398562138 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.40071959 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.397332066 seconds)
  done (took 23.714967897 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.398556068 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.401229828 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.400995547 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.400737282 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.398965718 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.398040548 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.400440975 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.398765944 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.398605081 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.401951532 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.401796074 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.401324878 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.401040927 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.401222642 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.398685187 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.401188094 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.3989194 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.398988008 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.401999573 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.401249418 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.400368618 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.398681434 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.401181233 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.40163667 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.39971859 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.400006823 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.399793756 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.399582857 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.399769255 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.401236672 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.399643657 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.399255574 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.399379667 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.39980537 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.40220861 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.400402852 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.402862951 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.402299858 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.403236147 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.402409969 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.403122127 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.400263594 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.403111005 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.403114143 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.40049275 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.403224409 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.400474794 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.401121474 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.401386079 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.401064339 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.402509143 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.403844008 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.402772892 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.404320246 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.403509541 seconds)
  done (took 78.387166605 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.403136778 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.403650982 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.400549233 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.403966951 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.403889192 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.400923385 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.403288611 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.4011733 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.401209335 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.403500078 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.402363795 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.403868496 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.401684067 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.404324295 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.403067386 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.40455435 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.401267388 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.401295889 seconds)
  done (took 26.583844572 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.402989572 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.402565235 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.404527853 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.402600415 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.401907757 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.405151168 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.401542151 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.40456864 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.404596927 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.403352194 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.402167661 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.404524745 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.404223704 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.405305711 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.402982316 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.402276701 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.405314241 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.404548904 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.402853735 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.402298518 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.405514193 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.405288226 seconds)
  done (took 32.216869741 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.404889536 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.403765039 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.423846895 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.450296217 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.435973657 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.404445288 seconds)
  done (took 9.860665574 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.403958802 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.405847129 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.40351237 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.406596618 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.405042529 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.403403094 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.402568612 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.40336134 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.405640342 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.403601767 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.40318707 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.405711238 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.406450257 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.404277927 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.406373713 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.406833347 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.403999124 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.404313234 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.405189858 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.406675202 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.403268284 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.406390752 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.403474839 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.404099617 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.405394645 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.40445107 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.407255914 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.404445189 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.404995867 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.406352944 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.406477862 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.405382539 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.407428661 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.40523803 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.407925472 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.406911941 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.404378359 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.407057695 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.407519551 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.404767582 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.407612689 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.406811043 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.407282778 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.405058614 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.40785216 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.405208888 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.405502649 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.404959001 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.404974088 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.40819091 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.407447574 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.40537736 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.408548706 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.408193712 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.407799453 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.409510622 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.405733075 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.405939441 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.407859111 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.406575825 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.405453154 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.408443492 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.405628847 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.405916031 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.408976805 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.406578592 seconds)
  done (took 94.127333532 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.406721319 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.405960064 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.407119496 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.407046552 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.406061514 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.40675977 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.416175899 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.40666603 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.406073963 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.406342861 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.408911363 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.406693989 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.407236554 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.407052557 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.40662347 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.407165835 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.406668351 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.407411298 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.407001098 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.409801277 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.407760461 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.407433463 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.408517827 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.407921539 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.40803366 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.410589851 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.407369249 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.408040035 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.407542653 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.407992394 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.408101826 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.407760293 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.407399537 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.407558993 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.407412837 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.408201404 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.408462638 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.408027049 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.407050865 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.411117751 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.408528904 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.410705373 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.408113745 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.408131208 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.408283962 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.408519772 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.408242214 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.408676347 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.408435694 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.408593565 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.408777014 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.409496493 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.408327988 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.408677954 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.408675213 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.408294848 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.40878833 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.408520809 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.408594348 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.411481845 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.408696361 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.409399135 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.412313022 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.40986316 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.409213742 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.408648448 seconds)
  done (took 94.288941349 seconds)
done (took 1913.378954974 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.453564337 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.525688396 seconds)
  done (took 14.322704188 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.575055425 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.529880569 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.412040744 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.428604252 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.411983086 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.42211149 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.41212238 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.412379579 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.412020124 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.411156986 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.411564834 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.602428276 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.434044395 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.412023095 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.41203104 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.504797807 seconds)
  done (took 44.555962123 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.438406935 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.416496382 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.536313477 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.433917781 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.438334126 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.609045883 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.471604447 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.415911675 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.598259464 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.456657349 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.038540317 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.439473977 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.414259362 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.568514079 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.435219094 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.609315469 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.678692583 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.04410686 seconds)
  done (took 32.388368998 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.890843453 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.426292117 seconds)
  done (took 9.663626185 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.435005838 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.472360568 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.444611315 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.448469834 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.449317945 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.422474497 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.485971741 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.485637454 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.43921486 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.424474671 seconds)
  done (took 65.859539228 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.43767188 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.416817146 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.416838913 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.414483143 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.408085218 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.406865682 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.415384716 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.423012299 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.251147568 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.552452038 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.43774511 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.42206283 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.416562307 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.418312575 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.41414726 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.453436943 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.547150576 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.413017538 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.413153639 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.422147478 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.416923159 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.51375244 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.464242691 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.415673302 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.550510196 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.274583777 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.420569031 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.422959415 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.554298508 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.41454569 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.417205565 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.418411408 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.418818149 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.99709419 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.885707634 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.428019077 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.441406106 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.426451959 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.413627254 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.567641577 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.417560054 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.423377545 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.409590085 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.863471287 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.579884151 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.537420357 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.735753799 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.419766523 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.419324026 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.481433503 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.420413645 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.419045282 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.447741987 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.21402611 seconds)
  done (took 116.501736417 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.437708769 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.89985851 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.582129757 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.43038909 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.22000214 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.032518069 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.41190248 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.714608944 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.417026252 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.41224089 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.69648562 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.931922356 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.416214229 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.447226428 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 7.125249044 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.504136929 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.428364627 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.22492516 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.41513703 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.415708776 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.848717471 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.431239169 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.413240992 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.591351603 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.452726521 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.891362453 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.956682971 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.881657253 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.415279161 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.412176989 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.90018582 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.421936306 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.414026085 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.413361548 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.696955944 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.787554042 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.759554347 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.416705949 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.414117627 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.414288574 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.445889439 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.888768923 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.772157054 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.413730344 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.429282145 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.894122954 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.413928021 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.418295733 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.418188243 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.619763973 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.377830784 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.415108295 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.958102422 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.41493282 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.695859988 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.481763526 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.445890016 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.920247304 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.4152384 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.512296101 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.437583094 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.414048567 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.422303501 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.414204132 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.42000288 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.776073358 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.54853288 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.419427143 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.778498967 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.894204337 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.415410672 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.958598378 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.298389391 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.42097137 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.488962398 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.420695945 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.027528277 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.923757679 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.418183557 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.415074506 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.762864022 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.414763146 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.700502851 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.429455455 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.430191714 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.859614405 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.440183608 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.454188547 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.415322433 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.422850158 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.06379071 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.419718184 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.694361069 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.444291761 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.415811652 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.416328117 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.431970222 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.431999738 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.416309478 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.416484588 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.960121161 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.42278709 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.56101628 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.438808303 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.429399621 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.415955396 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.418779197 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.418249998 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.63899945 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.968448861 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.422405752 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.416494792 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.41751509 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.421760295 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.555496485 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.421899433 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.738879872 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.418276255 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.418129167 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.422757773 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.0748312 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.469708177 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.417914642 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.419685026 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.262864215 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.627118191 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.436674745 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.419077196 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.418249738 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.433329119 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.84992896 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.418403466 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.472891754 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.42081567 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.144922227 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.42572235 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.434048979 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.040955023 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.420974401 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.426612574 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.420149664 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.419675414 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.737072457 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.702284302 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.471533276 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.4207524 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.434924761 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.11338127 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.462326401 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.569736762 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.439625314 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.424806504 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.619192971 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.750792255 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.420602703 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.978142388 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.419745019 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.636712341 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.420588579 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.751021784 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.930695317 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.42145666 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.42372373 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.142047394 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.07855094 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.223517642 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.422050632 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.709091275 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.433604431 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.885437853 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.419709179 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.419584866 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.875072096 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.421365627 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.427608505 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.419577819 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.420502294 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.483770683 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.597077408 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.67772336 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.420246586 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.897771759 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.447098512 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.422801844 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.424323435 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.42306912 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.772807095 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.476621443 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.420653956 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.452582593 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.422721503 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.426753637 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.907093435 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.408923962 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.42344903 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.576649167 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.072882031 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.422028483 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.421651919 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.119984785 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.70547996 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.987474951 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.440206688 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.745976152 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.421812799 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.462198124 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.166944768 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.453506037 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.957368547 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.42300352 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.422710167 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.031361459 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.42315376 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.776727241 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.421507926 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.423282494 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.982018996 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.422276876 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.425890306 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.89224692 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.424020259 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.678685005 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.423462242 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.422673673 seconds)
  done (took 1131.701280433 seconds)
done (took 1416.337383669 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.423981811 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.422684579 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.419228035 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.423295579 seconds)
  done (took 27.049925175 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.430507241 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.42816463 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.429302609 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.42743926 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.429109068 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.42884787 seconds)
  done (took 9.933522329 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.625502147 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.421831836 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.423601932 seconds)
  done (took 19.830206819 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.659914481 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.761475888 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.817342423 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.75234752 seconds)
  done (took 11.35095348 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.429668543 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.429619458 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.429072136 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.431004573 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.431384458 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.431943756 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.429831149 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.429689506 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.432250541 seconds)
  done (took 14.232388428 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.606448864 seconds)
done (took 89.363069615 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.107554182 seconds)
    (2/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.505216155 seconds)
    (3/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.799933996 seconds)
    (4/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.83808232 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.531464304 seconds)
    (6/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.809683536 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.413933132 seconds)
    (8/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.449881654 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.693515498 seconds)
    (10/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.472088365 seconds)
    (11/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.35095852 seconds)
    (12/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.414142239 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.470460828 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.962856348 seconds)
    (15/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.385479475 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.468617876 seconds)
    (17/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.430288802 seconds)
    (18/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.411592632 seconds)
    (19/309) benchmarking ("sort", Float32, false)...
    done (took 5.487733524 seconds)
    (20/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.512879213 seconds)
    (21/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.132027372 seconds)
    (22/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.01636667 seconds)
    (23/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.863418081 seconds)
    (24/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.256412995 seconds)
    (25/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.02263321 seconds)
    (26/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.83405733 seconds)
    (27/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.592144834 seconds)
    (28/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.743181011 seconds)
    (29/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.423796663 seconds)
    (30/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.428561778 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.563516658 seconds)
    (32/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.408802769 seconds)
    (33/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.469950654 seconds)
    (34/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.434579298 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.502275737 seconds)
    (36/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.867515935 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.554801343 seconds)
    (38/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.278203566 seconds)
    (39/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.452359612 seconds)
    (40/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.049215158 seconds)
    (41/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.435937213 seconds)
    (42/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.128393986 seconds)
    (43/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.5594022 seconds)
    (44/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.939033325 seconds)
    (45/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.415427235 seconds)
    (46/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.428526503 seconds)
    (47/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.489690637 seconds)
    (48/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.863927411 seconds)
    (49/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.825782209 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.261986973 seconds)
    (51/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.332202473 seconds)
    (52/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.105968337 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.426012203 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.536323262 seconds)
    (55/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.513852289 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.697293048 seconds)
    (57/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.488566205 seconds)
    (58/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.451392717 seconds)
    (59/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.425042096 seconds)
    (60/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.187779671 seconds)
    (61/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.24827344 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.484140255 seconds)
    (63/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.425226735 seconds)
    (64/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.532505101 seconds)
    (65/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.428307153 seconds)
    (66/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.881737999 seconds)
    (67/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.427286036 seconds)
    (68/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.571999895 seconds)
    (69/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.45213928 seconds)
    (70/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.643345801 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.876295169 seconds)
    (72/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.557445066 seconds)
    (73/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.87741147 seconds)
    (74/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.474267249 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.853872658 seconds)
    (76/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.763298497 seconds)
    (77/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.06438493 seconds)
    (78/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.706608208 seconds)
    (79/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.412857016 seconds)
    (80/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.431198139 seconds)
    (81/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.429314489 seconds)
    (82/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.43248228 seconds)
    (83/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.868635242 seconds)
    (84/309) benchmarking ("sort", Int64, false)...
    done (took 5.691477781 seconds)
    (85/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 3.090185087 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.320323418 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.905120894 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.477809526 seconds)
    (89/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.426550676 seconds)
    (90/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.45146048 seconds)
    (91/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.444089545 seconds)
    (92/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.445054813 seconds)
    (93/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.34645341 seconds)
    (94/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.514641442 seconds)
    (95/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.454867774 seconds)
    (96/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.994192142 seconds)
    (97/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.475949339 seconds)
    (98/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.527756686 seconds)
    (99/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.439745597 seconds)
    (100/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.434673216 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.448061059 seconds)
    (102/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.434662868 seconds)
    (103/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.439339535 seconds)
    (104/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.87567228 seconds)
    (105/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.08385802 seconds)
    (106/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.553570974 seconds)
    (107/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.644354005 seconds)
    (108/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.162049466 seconds)
    (109/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.480605309 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.107904839 seconds)
    (111/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.42916008 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.883517872 seconds)
    (113/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.508024367 seconds)
    (114/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.837152902 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.07945397 seconds)
    (116/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.627829102 seconds)
    (117/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.855995808 seconds)
    (118/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.855984059 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.858169079 seconds)
    (120/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.773795553 seconds)
    (121/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.070107624 seconds)
    (122/309) benchmarking ("sort", Bool, false)...
    done (took 1.934914755 seconds)
    (123/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.452047366 seconds)
    (124/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.759539483 seconds)
    (125/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.712991326 seconds)
    (126/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.342636956 seconds)
    (127/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.425580337 seconds)
    (128/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.980224977 seconds)
    (129/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.357848489 seconds)
    (130/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.494320941 seconds)
    (131/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.570220265 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.414112599 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.324943875 seconds)
    (134/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.466502022 seconds)
    (135/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.624770876 seconds)
    (136/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.68908206 seconds)
    (137/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.082719002 seconds)
    (138/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 3.099203509 seconds)
    (139/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.436547564 seconds)
    (140/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.484310929 seconds)
    (141/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.559066686 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.453052071 seconds)
    (143/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.455292522 seconds)
    (144/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.28446704 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.43483631 seconds)
    (146/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.515189753 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.266691461 seconds)
    (148/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.457338794 seconds)
    (149/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.429867427 seconds)
    (150/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.077961092 seconds)
    (151/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.831307099 seconds)
    (152/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.167564172 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.090207729 seconds)
    (154/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.433332436 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.307343134 seconds)
    (156/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.465112363 seconds)
    (157/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.494756258 seconds)
    (158/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.451820354 seconds)
    (159/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.987853272 seconds)
    (160/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.457894902 seconds)
    (161/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.979775399 seconds)
    (162/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.453419085 seconds)
    (163/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.456483552 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.081246492 seconds)
    (165/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.443386463 seconds)
    (166/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.239187337 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.481438964 seconds)
    (168/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.870716338 seconds)
    (169/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.420868848 seconds)
    (170/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.241277811 seconds)
    (171/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.416172889 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.506128151 seconds)
    (173/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.54429384 seconds)
    (174/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.827184208 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.609132242 seconds)
    (176/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.552286444 seconds)
    (177/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.790342237 seconds)
    (178/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.683851053 seconds)
    (179/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.672968693 seconds)
    (180/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.446161376 seconds)
    (181/309) benchmarking ("sort", Int8, false)...
    done (took 4.447374709 seconds)
    (182/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.714541364 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.423317738 seconds)
    (184/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.585438017 seconds)
    (185/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.319476202 seconds)
    (186/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.366530965 seconds)
    (187/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.523482941 seconds)
    (188/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.436740271 seconds)
    (189/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.462936882 seconds)
    (190/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.418484312 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.504186283 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.53258185 seconds)
    (193/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.061166769 seconds)
    (194/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.546591098 seconds)
    (195/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.431991304 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.099581093 seconds)
    (197/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.03110005 seconds)
    (198/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.476665181 seconds)
    (199/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.485718382 seconds)
    (200/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.289663786 seconds)
    (201/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.433219571 seconds)
    (202/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.521537154 seconds)
    (203/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.459252072 seconds)
    (204/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.437471637 seconds)
    (205/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.303188515 seconds)
    (206/309) benchmarking ("sort", BigInt, false)...
    done (took 6.43664165 seconds)
    (207/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.37043649 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.113482577 seconds)
    (209/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.374535493 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.492049724 seconds)
    (211/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.624975056 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.797249575 seconds)
    (213/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.460157972 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.181059327 seconds)
    (215/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.557357215 seconds)
    (216/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.43725487 seconds)
    (217/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.062936768 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.857866107 seconds)
    (219/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.532199342 seconds)
    (220/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.436146646 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.126073034 seconds)
    (222/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.649040072 seconds)
    (223/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.418244422 seconds)
    (224/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.460645019 seconds)
    (225/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.566085092 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.800074905 seconds)
    (227/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.465076529 seconds)
    (228/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.990216973 seconds)
    (229/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.444800448 seconds)
    (230/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.696076951 seconds)
    (231/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.872813281 seconds)
    (232/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.458031371 seconds)
    (233/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.774394061 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.397347011 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.345044125 seconds)
    (236/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.28852729 seconds)
    (237/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.971935198 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.47786891 seconds)
    (239/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.669114781 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.649055444 seconds)
    (241/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.541543061 seconds)
    (242/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.256886491 seconds)
    (243/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.421456982 seconds)
    (244/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.931457702 seconds)
    (245/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.421678524 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.437663703 seconds)
    (247/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.68085759 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 3.075024451 seconds)
    (249/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.947346062 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.481684359 seconds)
    (251/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 3.025033826 seconds)
    (252/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.973962442 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.451635937 seconds)
    (254/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.494304528 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.11799937 seconds)
    (256/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.437957007 seconds)
    (257/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.944811275 seconds)
    (258/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.544128943 seconds)
    (259/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.097634644 seconds)
    (260/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.264982356 seconds)
    (261/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.66221112 seconds)
    (262/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.581022325 seconds)
    (263/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.42181805 seconds)
    (264/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.565986263 seconds)
    (265/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.628595119 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.462192603 seconds)
    (267/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.423088233 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.907177644 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.84231429 seconds)
    (270/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.309927054 seconds)
    (271/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.449491615 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.410545477 seconds)
    (273/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.461777732 seconds)
    (274/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.760390263 seconds)
    (275/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.537666177 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.508942029 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.459078084 seconds)
    (278/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.424042306 seconds)
    (279/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.028584727 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.986892227 seconds)
    (281/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.842216104 seconds)
    (282/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.217767971 seconds)
    (283/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.95077939 seconds)
    (284/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.637310734 seconds)
    (285/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.459748569 seconds)
    (286/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.635392117 seconds)
    (287/309) benchmarking ("sort", Float64, false)...
    done (took 5.806286262 seconds)
    (288/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.520455713 seconds)
    (289/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.729427415 seconds)
    (290/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.454647004 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.539051307 seconds)
    (292/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.520442037 seconds)
    (293/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.517946912 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.557481525 seconds)
    (295/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.546874173 seconds)
    (296/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.72134426 seconds)
    (297/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.526804582 seconds)
    (298/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.612168509 seconds)
    (299/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.871093055 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.480533732 seconds)
    (301/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.437462082 seconds)
    (302/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.857323094 seconds)
    (303/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.527679611 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.363331686 seconds)
    (305/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.176909455 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.480344626 seconds)
    (307/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.183617066 seconds)
    (308/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.426673648 seconds)
    (309/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.934534106 seconds)
  done (took 969.077849167 seconds)
done (took 970.437474224 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.470058756 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.46427796 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.446652364 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.468810656 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.559278832 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.475564823 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.466476683 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.450788116 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.495745471 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.497410227 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.445492317 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.474191501 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.449891913 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.447956867 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.447206102 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.461980548 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.515391936 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.449539567 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.464873534 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.458025538 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.465511801 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.446651501 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.497879677 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.473987621 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.452631923 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.450966581 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.452456847 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.46874425 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.560431525 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.452226243 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.452187339 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.459716788 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.54587017 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.449856859 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.442737978 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.468903782 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.460945578 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.45889545 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.452494203 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.481389881 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.997045894 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.450213254 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.451697833 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.451342203 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.450712369 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.454163769 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.450921763 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.457197528 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.463919451 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.464375841 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.942563089 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.465550387 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.454641872 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.450894468 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.461457215 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.450726447 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.454585307 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.466914089 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.47018574 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.466985566 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.539919756 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.457869738 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.453731135 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.467727177 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.459168719 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.980382512 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.446804944 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.45579023 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.998629646 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.457656661 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.979051635 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.459946461 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.452225669 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.466203342 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.483826405 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.536502183 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.447603582 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.451187925 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.460002032 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.450510506 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.461552986 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.465667399 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.456796469 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.452837362 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.466556602 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.479915732 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.462121774 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.453628597 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.461486503 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.472521873 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.459753847 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.463460181 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.456127332 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.447590354 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.462375455 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.456262541 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.455451529 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.456123875 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.458040361 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.464305113 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.952715184 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.469043283 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.450602289 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.450257766 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.452974848 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.46756641 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.956554083 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.454981878 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.475708217 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.50070356 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.455132726 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.562630407 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.45823834 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.469156258 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.462675815 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.457685593 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.449553016 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.563419755 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 3.028372526 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.470434002 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.456039984 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.451724964 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.469893036 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.456140999 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.45022139 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.569158953 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.456628364 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.467679871 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.575030315 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.465768398 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.48606419 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.453809837 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.458564598 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.481801957 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.471185958 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.487891526 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.457384942 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.470887472 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.471155111 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.451406301 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.465725601 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.465207951 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.455594356 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.461400503 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.44916639 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.48230408 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.468048394 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.467942564 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.476254865 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.576156781 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.452682173 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.55917528 seconds)
done (took 244.777713807 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.515265503 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.453713483 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.555004786 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.453155931 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.554077146 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.552687463 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.450065961 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.451160742 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.450666019 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.831424424 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.450802782 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.450983604 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.452838167 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.451558572 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.535793122 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.453701028 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.451200209 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.793608759 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.454446781 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.525064801 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.454100878 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.451594828 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.453785822 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.833105307 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.4475867 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.452303849 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.524531568 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.45364538 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.7990577 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.447355743 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.453425486 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.799530293 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.544367121 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.471838625 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.463696197 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.460992181 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.556111907 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.472829351 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.533675564 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.534675072 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.556161143 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.493185759 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.447829188 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.454183204 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.456804534 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.45588319 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.452761248 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.482587407 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.453587847 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.452994726 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.797244009 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.464742814 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.453451875 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.45359117 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.453503972 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.485308633 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.453105106 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.456292637 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.545495055 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.456776485 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.518738714 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.836596823 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.833184894 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.456093909 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.457697803 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.453828432 seconds)
  done (took 156.562030125 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.522180874 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.53031485 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.572527921 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.456641755 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.506496688 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.576110333 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.457677323 seconds)
  done (took 12.007954719 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.463214726 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.457683827 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.505404434 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.506771182 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.456350375 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.604913804 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.457573565 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.468243194 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.455247922 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.510036855 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.45737115 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.456796031 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.463117117 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.458013369 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.506504861 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.468643682 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.572985553 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.458127819 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.4580806 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.615185601 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.455254557 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.464357483 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.509706725 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.469298627 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.458715753 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.464648069 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.035370792 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.458268866 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.454735121 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.457644149 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.455397468 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.496563154 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.458929608 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.453956652 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.455609527 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.574591201 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.458610311 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.455842622 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.459326112 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.457130585 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.45893958 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.45843466 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.459481584 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.456115824 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.458465427 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.483478013 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.459518203 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.459079048 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.459079522 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.459595959 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.508980901 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.459629093 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.456461 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.456484867 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.515533537 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.466341293 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.459813657 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.457119998 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.460054192 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.458215214 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.618407411 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.507531491 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.460454957 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.507822771 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.460169625 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.460499099 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.460167014 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.459823172 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.516240593 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.460334329 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.509807295 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.457111177 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.615234157 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.484444659 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.46116356 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.46350556 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.463430119 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.459806768 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.452976796 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.466682763 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.458612384 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.462236347 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.468090095 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.458044412 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.458126023 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.563499003 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.570361847 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.458734041 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.474494734 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.468796991 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.458126081 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.514841803 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.461649913 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.459128591 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.514423064 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.577761114 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.515785107 seconds)
  done (took 165.542900328 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.467333148 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.470241288 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.462809414 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.478016892 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.462560348 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.46145041 seconds)
  done (took 10.193744377 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.464713 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.463074467 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.462563153 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.462264998 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.4628587 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.461575771 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.462432638 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.465072386 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.466345007 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.463010269 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.929770317 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.463023494 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.462900892 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.463031345 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.462397913 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.462921448 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.462850466 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.461202904 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.46175203 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.463007628 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.568454256 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.463391202 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.463006086 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.465244269 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.467334236 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.462990465 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.471510579 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.4631728 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.462771965 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.472633416 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.467113448 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.463407705 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.465171154 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.470910886 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.468085035 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.465131976 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.46827163 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.465160615 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.460865458 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.464542198 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.46486194 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.46385348 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.464123045 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.464561522 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.467161974 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.470197523 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.469049328 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.47245429 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.464705453 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.465041101 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.465669799 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.464579061 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.464894379 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.46546625 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.467728754 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.470074904 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.470265389 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.465518261 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.465332118 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.468257868 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.46705868 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.466720674 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.468553191 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.470803517 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.463176322 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.466449358 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.467935516 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.469847059 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.466154077 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.465634541 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.466005633 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.462492438 seconds)
  done (took 108.47516769 seconds)
done (took 454.163801642 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.761043207 seconds)
  done (took 8.15585393 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.61700466 seconds)
  done (took 8.014130445 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.397651994 seconds)
  done (took 22.797237445 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.463626409 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.553533532 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.472414117 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.461206561 seconds)
  done (took 27.347204583 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.590912041 seconds)
  done (took 7.986398102 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.458536579 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.462330574 seconds)
  done (took 14.317573194 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.740481336 seconds)
  done (took 8.135260998 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.19051479 seconds)
  done (took 8.585603882 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.480648002 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.475097734 seconds)
  done (took 14.623148745 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.453957285 seconds)
  done (took 7.848011127 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.777802621 seconds)
  done (took 9.171315267 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.457946067 seconds)
  done (took 7.852070231 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.47432583 seconds)
  done (took 7.867025271 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.659526474 seconds)
  done (took 10.052785012 seconds)
done (took 164.148957906 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.456060206 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.458007092 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.457099476 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.455679286 seconds)
  done (took 27.220529023 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.497978724 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.497003736 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.498727902 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.507704802 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.500325784 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.497820443 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.489393686 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.489118662 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.507458291 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.499412416 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.499813443 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.500288584 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.497679709 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.489034694 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.499118378 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.498876095 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.50732869 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.498601005 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.490227106 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.500467394 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.463650544 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.507404576 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.500458289 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.464767364 seconds)
  done (took 37.297338351 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.664040594 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.535124747 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.617517173 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.515742183 seconds)
  done (took 7.725845672 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.515563355 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.517508928 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.528186157 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.566674676 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.592292407 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.526334918 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.489876543 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.484168852 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.471014082 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.516274663 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.591820614 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.531955479 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.60027414 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.461995149 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.745013776 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.462142318 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.462207352 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.514117165 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.566165366 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.581197845 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.463073189 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.515030194 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.517933981 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.531605269 seconds)
  done (took 38.147507868 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.461732311 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.470556719 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.468235144 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.460342883 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.460167868 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.461403602 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.466891677 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.461619048 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.482355506 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.461851526 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.459764077 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.46132063 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.460875769 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.461298495 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.460239134 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.472800613 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.474156888 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.461418203 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.463026542 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.466694532 seconds)
  done (took 30.689838298 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.455311848 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.309062789 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.807800481 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.711428368 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.454386814 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.454344377 seconds)
  done (took 28.584556456 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.535170837 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.669172407 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.463468884 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.841659957 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.919402438 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.465664513 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.461477252 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.70641719 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.032055233 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.032103177 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.523375606 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.534953772 seconds)
  done (took 21.57809729 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.459555294 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.456969081 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.471831192 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.474647549 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.519710703 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.468210389 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.470047263 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.455868355 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.520535391 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.524487316 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.469322837 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.520201538 seconds)
  done (took 39.206032101 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.544738382 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.500770934 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.444504301 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.280987468 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.834413071 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.668589475 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.251177989 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.937658716 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.46214058 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.731127481 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.462242009 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.547525264 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.710636244 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.456061231 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.459255504 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.539595589 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.684186528 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.985492821 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.458939516 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.566614103 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.48240192 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.466719991 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.715252484 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.485703241 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.669289501 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.589284197 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.71991308 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.456764629 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.743120671 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.468615124 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.465745144 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.455116846 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.729680124 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.125316408 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.554047262 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.464767623 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.23793196 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.166968076 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.443060973 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.5873722 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.460127839 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.458066299 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.466459094 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.454372031 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.390406746 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.453921983 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.938268612 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.458252659 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.165544656 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.458240431 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.465422545 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.548851774 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.459094814 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.269315372 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.548508291 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.458113054 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.450588754 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.462131142 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027075817 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.976313694 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.470371781 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.390464456 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.559805448 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.526916392 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.121492919 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.557453859 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.457114417 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.456649223 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.388678566 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.521921796 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.472718991 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.600343865 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.47441438 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.103565255 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.259136655 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.468228576 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.388298816 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.02085229 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.468506319 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.39075731 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.680886479 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.45347142 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.390385233 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.412690955 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.389317275 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.157857743 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.462593652 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.844762811 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462787726 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.912844949 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.463361028 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.473939867 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.477079366 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.676408596 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.345300831 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.453837022 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.456106705 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.599563024 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.474820684 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.919679524 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.387686454 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.457325467 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.708493276 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.664872895 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.462163024 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.491988221 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.673781223 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.461282897 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.471883271 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.458754559 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.466106419 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.077424147 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.466727471 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.959439742 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.473735879 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.454326876 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.191742825 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.459178215 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.557590834 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.464598509 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.701000312 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.238656063 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.455821123 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.537250806 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.463923206 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.453795098 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.521372738 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.9722732 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.455409873 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.458135617 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.462602604 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.46820707 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.454953016 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.400079341 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.454897966 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.464399236 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.460195453 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.679545425 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.463742068 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.733122348 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.391528661 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.602880949 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.546353609 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.678539496 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.675205567 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.456982591 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.714791727 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.463395886 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.46078931 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.468358117 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.474487759 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.555141798 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.477671915 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.463829885 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.713840175 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.459992257 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.460908166 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.529874937 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.461320941 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.465061777 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.462582337 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.370257233 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.077236886 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.436117863 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.464305023 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.346197294 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.471733393 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.521845136 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.462746205 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.468854135 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.238973773 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.361022175 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.462627539 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.454567925 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.698739361 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.468522122 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.446331174 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.537809851 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.671832906 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.083588857 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.471966534 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.392136953 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.169635368 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.150644795 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.458011084 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.393690023 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.457432663 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.467066736 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.468730406 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.688439458 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.085650217 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.460020885 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.45384551 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.466777949 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.46933636 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.463521601 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.459033035 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.219963447 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.969101988 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.462940602 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.472912367 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.602627629 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.473094132 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.393453229 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.462194599 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.464837785 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.459099529 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.459658519 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.493612986 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.451281724 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.953564746 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.716821626 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.230586506 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.472091769 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.562308571 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.493713014 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.457249684 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.464940319 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.468101502 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.460684932 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.470727242 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.470569421 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.54389576 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.13368975 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031080641 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.210518097 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.033096782 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.461268929 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.466907456 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.462562931 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.929495294 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.39484165 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.017371987 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.647753109 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.933555707 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.406076413 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.676805234 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.669238503 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.214743874 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.473235272 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.68881568 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.460806992 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.465678865 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.475597292 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.672884849 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.494398311 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.462141327 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.391831127 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.985845734 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.734558191 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.461054979 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.544574702 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.92965662 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.476119189 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.465272577 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.4613224 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.803204214 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.637685161 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.174284799 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.634568606 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.467648656 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.477220356 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.953255446 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.469117891 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.690163865 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.132534712 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.466167185 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.681801553 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.400287385 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.472916197 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.47374754 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.464589489 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.737539313 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.464253674 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.72037808 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.473421381 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.396720777 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.462492041 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.043817996 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.318779012 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.468615814 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.463088714 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.203621516 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.4640989 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.746314627 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.476009929 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.21397783 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.471410712 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.399908684 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.397885337 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.159273945 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.469582593 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.440041969 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960651403 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.554059944 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.56934305 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.485563572 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313431031 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.719393157 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.478205986 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.090552585 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.690273365 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.33752043 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.488090285 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.564621754 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.470884374 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.454162358 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.465113273 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.700644202 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.381517605 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.688034868 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.375460215 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.373238024 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.464637032 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.679516834 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.466706795 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.471263713 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.713091733 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.178246 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.488832272 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.292517064 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.490717586 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.465934254 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.385332884 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.57474539 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475855303 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.544866737 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.476332482 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.475629084 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.475949922 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.644321992 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.46699891 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.471000991 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.4802192 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.559426022 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.005953905 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.221544123 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.471479756 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.097682379 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307107176 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.100594411 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.479692723 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.466473399 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.474231907 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.401478658 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.616099459 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.693733772 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.740622929 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.598637201 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.616750277 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.490659581 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.466620701 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.47913082 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.68114254 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.741383514 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.36236338 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.470477699 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.481355681 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.467046117 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.477964038 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.678734744 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.972194868 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035078928 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.583800887 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.467148932 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.935022251 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.741201176 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.467827033 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.467470149 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.060673192 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.476912727 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.812561243 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.476205774 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.475209681 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.618517786 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.478376237 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.148432374 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.479534252 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.627907997 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.242100601 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.572336616 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.724625235 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.937046647 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.479122714 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.09853284 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.225630247 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.732626376 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.535629758 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.479150874 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.571901225 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.615023861 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.4717319 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.471192188 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.469403037 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.314489906 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.184657568 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.480818651 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.104424568 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.733569466 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.467177324 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.474511235 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.49533159 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.480775322 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.693259427 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.179184749 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.69330588 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.479743252 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.476864516 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.288118219 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.103993111 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.483955994 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.403529493 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.473716295 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.714822724 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.708995395 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.49370833 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.922901027 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.181963065 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042294284 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.443074278 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.492376867 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.469981626 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.232969186 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.103038343 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.235164216 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.984252814 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.030208569 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.470753373 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.74760249 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.477272366 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.474801545 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.748663011 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.476118192 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.484219496 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.484921325 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.097954224 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.234562344 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.495604355 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.528310006 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.410214514 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.812758558 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.193007987 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.409546861 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.480690356 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.664400466 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.476363108 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.6027223 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.482632113 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.472148784 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.479000713 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.208026396 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.750216275 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.47813106 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.475431181 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.462255282 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.489711832 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.482198947 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.747552345 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.472729171 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.163968772 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.822525735 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.727508263 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.47674292 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.461316004 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.477443543 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.474406044 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.460527205 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.670952279 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.704638962 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045908683 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.480760542 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.4868029 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.477938998 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.691890962 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.686633376 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.474827131 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.485760456 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.476455607 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.495518787 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.38155475 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.982430079 seconds)
  done (took 1658.315804436 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.500624352 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.499916898 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.499238919 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.523881512 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.474669979 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.559387486 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.537509817 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.555884776 seconds)
  done (took 53.561170742 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.484593895 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.685549822 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.507168823 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.479578347 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.480703887 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.479388312 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.916003376 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.473936294 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.485756268 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.484447953 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.475776838 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.482126378 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.115440589 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.486184678 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.475844698 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.465613297 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.482369082 seconds)
  done (took 67.87113285 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.47053564 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.059773299 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.579460989 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.475675288 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.515268548 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.494189518 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.316408913 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.480749725 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.478146364 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.783097537 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.123776026 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.495581159 seconds)
  done (took 86.680784268 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.48029007 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.479310224 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.477635153 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.48141385 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.481808903 seconds)
  done (took 8.809585295 seconds)
done (took 2107.082689015 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.773804467 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.184899464 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.11386346 seconds)
  done (took 5.711623365 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.626573591 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.672582017 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.79267397 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.798800486 seconds)
  done (took 8.301440146 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.775683594 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.846534188 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.680425481 seconds)
  done (took 6.711874554 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.844027591 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.478220944 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.563628174 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.473378478 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.475130602 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.47484904 seconds)
  done (took 20.836992393 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.477760465 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.480710182 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.480751012 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.482987459 seconds)
  done (took 7.332585776 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.459973373 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.247110824 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.461485257 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.477027608 seconds)
  done (took 19.057759065 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.226493087 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.237768423 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.224348921 seconds)
  done (took 8.09707212 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.476066836 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.32013909 seconds)
  done (took 10.207708218 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.801739092 seconds)
  done (took 3.212780354 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.61164413 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.74287888 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.608284709 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.456888277 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.607183644 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.194114295 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.060785077 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.658796481 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.433678802 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.580228471 seconds)
  done (took 29.365351363 seconds)
done (took 132.906485327 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.213528873 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.843590688 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.684994157 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.186719457 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.713323242 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.684396344 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.697729108 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.157066025 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.765391489 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.689290615 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.22876793 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.712076259 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.651544518 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.846099284 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.651088027 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.720162996 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.704550046 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.263693821 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.870338388 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.067013294 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.702944214 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.826883184 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.060654084 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.918910373 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.703955908 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.634602473 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.404611314 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.716721486 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.044417045 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.496092337 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.638592437 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.259060419 seconds)
  done (took 196.167536402 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.483880502 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.485256295 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.504273929 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.494718813 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.481002512 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.486583906 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.484604649 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.491108401 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.483540148 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.51317618 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.483788696 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.487799783 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.482859179 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.485483678 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.485643485 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.483131361 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.495622462 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.485753387 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.504691986 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.483499529 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.486616426 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.486434542 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.484250518 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.499684241 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.485554777 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.485904817 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.486770737 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.485938224 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.485975303 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.514797219 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.487283612 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.486837905 seconds)
  done (took 209.081127041 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.489184595 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.486484469 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.485833536 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.485623138 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.502597293 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.486146922 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.489284588 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.48687932 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.491034169 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.486077867 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.485515597 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.496797238 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.488152121 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.485994133 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.487800083 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.48514935 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.501858857 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.485541539 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.486114376 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.487377548 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.485928318 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.48771835 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.483930832 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.485924708 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.500024328 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.488762089 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.48735233 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.484395101 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.487172355 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.485927943 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.501348605 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.487215869 seconds)
  done (took 209.067211286 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.690033473 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.494397112 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.493079984 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.44822652 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.496106146 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.493068221 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.485932329 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.684572045 seconds)
  done (took 15.707243685 seconds)
done (took 631.437794803 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.759662175 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.494825975 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.693538915 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.516237431 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.237653779 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.51367361 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.515501638 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.682928914 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 3.028703562 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.664593926 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.754668176 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.513552896 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.891246535 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.512567775 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.763598968 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.61042055 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.354846187 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.47085132 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.82441072 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.025468819 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.770709159 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.053491185 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.680854627 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 3.069080729 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.894672075 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.072351102 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.245675381 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.358852263 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.515858979 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.822542552 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.16243095 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.47044913 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.573738552 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.553416215 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.605815913 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.591252049 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.488489187 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.552910046 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.695207339 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.813558451 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.028014531 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.814283803 seconds)
  done (took 100.085060463 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.485602372 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.485187328 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.483966118 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.483156707 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.487492113 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.483727664 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.484123873 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.484435978 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.484948802 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.48519925 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.483419252 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.485018204 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.484350887 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.486729719 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.486743818 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.485681976 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.486646489 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.487764712 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.486886727 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.485827516 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.486520486 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.485596311 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.486304008 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.485691858 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.486714057 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.486948829 seconds)
  done (took 40.047142558 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.499910956 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.730483887 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.908792182 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.505732356 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.499175291 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.503046035 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.574127631 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.501446335 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.503101296 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.503097892 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.653176468 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.503694704 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.532006942 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.930016736 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.502558154 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.500159306 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.499701074 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.499616619 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.738390719 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.51119832 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.593644851 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.500967741 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.574195958 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.510885417 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.5200871 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.501518869 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.506066477 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.994481117 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.503463857 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.654871779 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.278239602 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.573668057 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.947336649 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.918041348 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.280424631 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.502239556 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.499981243 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.658442621 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.502664373 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.503784606 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.575289019 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.502175456 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.929265168 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.128051772 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.517789079 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.501168414 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.017814825 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.657972893 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.741969482 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.508484762 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.938356585 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.506559997 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.502674659 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.504753209 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.740572824 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.510997277 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.502660522 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.031407951 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.526801896 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.57608536 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.502828902 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.502242328 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.747189522 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.502193642 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.744331054 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.503490755 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.512203585 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.503344626 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.917493814 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.504214047 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.140675248 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.518844129 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.501913756 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.655421678 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.746677726 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.047627356 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.507039477 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.750790481 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.961582737 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.576912138 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.508341776 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.987417693 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.581203497 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.507394802 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.505691406 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.504913382 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.503997631 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.547387768 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.57746281 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.077221545 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.136766614 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.047561741 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.597800672 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.516793831 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.503723577 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.031584263 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.521478873 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.503554208 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.911209872 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.143373403 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.520333199 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.509080236 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.136799428 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.522612562 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.578747672 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.508903337 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.920916454 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.506139726 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.548540743 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.502234547 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.51191699 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.508041397 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.579161749 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.50855701 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.50539255 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.115631278 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.677932142 seconds)
  done (took 195.19824768 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.496352971 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.495584442 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.495852944 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.496838213 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.497892079 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.503507096 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.496935046 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.497613759 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.5034349 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.497966969 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.497547984 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.497606662 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.498460456 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.511901968 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.507965079 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.505797237 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.11278981 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.502584371 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.49937001 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.516616965 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.289569985 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.497839677 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.501340446 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.500532059 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.500085637 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.499624725 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.501324127 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.499532479 seconds)
  done (took 156.853618513 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.506133074 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.059202448 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.507574847 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.632667869 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.529060899 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.50320265 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.63189622 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.560461434 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.507824701 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.503050139 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.503258471 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.802169761 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.506694301 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.015594531 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.688904523 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.633509303 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.012790876 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.508075539 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.504472827 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.502789479 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.634851667 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.515027278 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.80463946 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.062540185 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.507635432 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.063005506 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.497141414 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.505293269 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.504559458 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.064252786 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.504519076 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.80647984 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.580876959 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.565409662 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.066736393 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.015734932 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.005857518 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.646172298 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.506816593 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.504227133 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.504988403 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.495572709 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.066540001 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.507356304 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.509038762 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.059357832 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.523553996 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.508588324 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.515497508 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.505311657 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.564063052 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.565953318 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.808169878 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.072574388 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.58184043 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.52872011 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.636978821 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.868239056 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.509745914 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.007454835 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.493836455 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.067291187 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.51036005 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.495264703 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.50684873 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.511398632 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.650216384 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.635804454 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.010418001 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.507582859 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.007454645 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.651144609 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.506286629 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.507322431 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.508768353 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.067609034 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.009527261 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.65032163 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.639954555 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.696516463 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.497482315 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.507779227 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.497631093 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.584532464 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.507595039 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.071599136 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.012603566 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.506725679 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.508433846 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.509927312 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.510577121 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.677392999 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.071547411 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.585574231 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.006591876 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.821551817 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.811281153 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.510918292 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.566727315 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.508971669 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.812795871 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.513198203 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.563481674 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.928787366 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.811212521 seconds)
  done (took 177.296848059 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.745716846 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.667449067 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.599579168 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.619120922 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.043380395 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.08967752 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.708816886 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.646156989 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.615097167 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.749197115 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.652733419 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.600802075 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.689879272 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.58256252 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.191019538 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.574225581 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.598119869 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.645719874 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.616048949 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.499643463 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.109682519 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.802200969 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.67561118 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.555775371 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.600026278 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.242751303 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.263115981 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.017977868 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.672730161 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.733466217 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.00087362 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.644531974 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.42846683 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.176975018 seconds)
  done (took 70.495965406 seconds)
done (took 741.397906821 seconds)
SAVING RESULT...
DONE!
